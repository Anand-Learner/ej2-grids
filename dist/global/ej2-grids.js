/*!
*  filename: ej2-grids.js
*  version : 1.0.21
*  Copyright Syncfusion Inc. 2001 - 2017. All rights reserved.
*  Use of this code is subject to the terms of our license.
*  A copy of the current license can be obtained at any time by e-mailing
*  licensing@syncfusion.com. Any infringement will be prosecuted under
*  applicable laws. 
*/

this["ej"] = this["ej"] || {}; this["ej"]["gridModule"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 271);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ajax__ = __webpack_require__(76);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Ajax", function() { return __WEBPACK_IMPORTED_MODULE_0__ajax__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__animation__ = __webpack_require__(77);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Animation", function() { return __WEBPACK_IMPORTED_MODULE_1__animation__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "rippleEffect", function() { return __WEBPACK_IMPORTED_MODULE_1__animation__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "isRippleEnabled", function() { return __WEBPACK_IMPORTED_MODULE_1__animation__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "enableRipple", function() { return __WEBPACK_IMPORTED_MODULE_1__animation__["d"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__base__ = __webpack_require__(8);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Base", function() { return __WEBPACK_IMPORTED_MODULE_2__base__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__browser__ = __webpack_require__(19);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Browser", function() { return __WEBPACK_IMPORTED_MODULE_3__browser__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__canvas_renderer__ = __webpack_require__(78);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "CanvasRenderer", function() { return __WEBPACK_IMPORTED_MODULE_4__canvas_renderer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__component__ = __webpack_require__(79);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Component", function() { return __WEBPACK_IMPORTED_MODULE_5__component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__child_property__ = __webpack_require__(23);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ChildProperty", function() { return __WEBPACK_IMPORTED_MODULE_6__child_property__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__draggable__ = __webpack_require__(80);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Position", function() { return __WEBPACK_IMPORTED_MODULE_7__draggable__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Draggable", function() { return __WEBPACK_IMPORTED_MODULE_7__draggable__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__droppable__ = __webpack_require__(81);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Droppable", function() { return __WEBPACK_IMPORTED_MODULE_8__droppable__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__event_handler__ = __webpack_require__(16);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "EventHandler", function() { return __WEBPACK_IMPORTED_MODULE_9__event_handler__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__internationalization__ = __webpack_require__(24);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "onIntlChange", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "rightToLeft", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "cldrData", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "defaultCulture", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "defaultCurrencyCode", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Internationalization", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "setCulture", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "setCurrencyCode", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "loadCldr", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["i"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "enableRtl", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["j"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getNumericObject", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["k"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getDefaultDateObject", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["l"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__keyboard__ = __webpack_require__(84);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "KeyboardEvents", function() { return __WEBPACK_IMPORTED_MODULE_11__keyboard__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__l10n__ = __webpack_require__(85);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "L10n", function() { return __WEBPACK_IMPORTED_MODULE_12__l10n__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__module_loader__ = __webpack_require__(45);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ModuleLoader", function() { return __WEBPACK_IMPORTED_MODULE_13__module_loader__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__notify_property_change__ = __webpack_require__(12);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Property", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Complex", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ComplexFactory", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Collection", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "CollectionFactory", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Event", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "NotifyPropertyChanges", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "CreateBuilder", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["h"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__svg_renderer__ = __webpack_require__(86);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "SvgRenderer", function() { return __WEBPACK_IMPORTED_MODULE_15__svg_renderer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__touch__ = __webpack_require__(89);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "SwipeSettings", function() { return __WEBPACK_IMPORTED_MODULE_16__touch__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Touch", function() { return __WEBPACK_IMPORTED_MODULE_16__touch__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__template_engine__ = __webpack_require__(87);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return __WEBPACK_IMPORTED_MODULE_17__template_engine__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "setTemplateEngine", function() { return __WEBPACK_IMPORTED_MODULE_17__template_engine__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getTemplateEngine", function() { return __WEBPACK_IMPORTED_MODULE_17__template_engine__["c"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__util__ = __webpack_require__(1);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "createInstance", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "setImmediate", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getValue", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "setValue", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "deleteObject", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getEnumValue", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["i"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "isNullOrUndefined", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["j"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["k"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getUniqueID", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["l"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["m"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "queryParams", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["n"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "isObjectArray", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["o"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "compareElementParent", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["p"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["q"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "print", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["r"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "formatUnit", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["s"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getInstance", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["t"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "addInstance", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["u"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__dom__ = __webpack_require__(11);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "createElement", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "addClass", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "removeClass", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "isVisible", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "prepend", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "append", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "detach", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "attributes", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["i"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "select", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["j"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "selectAll", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["k"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "closest", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["l"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "siblings", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["m"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getAttributeOrDefault", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["n"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "setStyleAttribute", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["o"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "classList", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["p"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "matches", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["q"]; });






















/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = createInstance;
/* harmony export (immutable) */ __webpack_exports__["b"] = setImmediate;
/* harmony export (immutable) */ __webpack_exports__["c"] = getValue;
/* harmony export (immutable) */ __webpack_exports__["d"] = setValue;
/* harmony export (immutable) */ __webpack_exports__["e"] = deleteObject;
/* harmony export (immutable) */ __webpack_exports__["f"] = isObject;
/* harmony export (immutable) */ __webpack_exports__["g"] = getEnumValue;
/* harmony export (immutable) */ __webpack_exports__["h"] = merge;
/* harmony export (immutable) */ __webpack_exports__["i"] = extend;
/* harmony export (immutable) */ __webpack_exports__["j"] = isNullOrUndefined;
/* harmony export (immutable) */ __webpack_exports__["k"] = isUndefined;
/* harmony export (immutable) */ __webpack_exports__["l"] = getUniqueID;
/* harmony export (immutable) */ __webpack_exports__["m"] = debounce;
/* harmony export (immutable) */ __webpack_exports__["n"] = queryParams;
/* harmony export (immutable) */ __webpack_exports__["o"] = isObjectArray;
/* harmony export (immutable) */ __webpack_exports__["p"] = compareElementParent;
/* harmony export (immutable) */ __webpack_exports__["q"] = throwError;
/* harmony export (immutable) */ __webpack_exports__["r"] = print;
/* harmony export (immutable) */ __webpack_exports__["s"] = formatUnit;
/* harmony export (immutable) */ __webpack_exports__["t"] = getInstance;
/* harmony export (immutable) */ __webpack_exports__["u"] = addInstance;
var instances = 'ej2_instances';
var uid = 0;
function createInstance(classFunction, params) {
    var arrayParam = params;
    arrayParam.unshift(undefined);
    return new (Function.prototype.bind.apply(classFunction, arrayParam));
}
function setImmediate(handler) {
    var unbind;
    var num = new Uint16Array(5);
    var intCrypto = window.msCrypto || window.crypto;
    intCrypto.getRandomValues(num);
    var secret = 'ej2' + combineArray(num);
    var messageHandler = function (event) {
        if (event.source === window && typeof event.data === 'string' && event.data.length <= 32 && event.data === secret) {
            handler();
            unbind();
        }
    };
    window.addEventListener('message', messageHandler, false);
    window.postMessage(secret, '*');
    return unbind = function () {
        window.removeEventListener('message', messageHandler);
    };
}
function getValue(nameSpace, obj) {
    var value = obj;
    var splits = nameSpace.split('.');
    for (var i = 0; i < splits.length && !isUndefined(value); i++) {
        value = value[splits[i]];
    }
    return value;
}
function setValue(nameSpace, value, obj) {
    var keys = nameSpace.split('.');
    var start = obj || {};
    var fromObj = start;
    var i;
    var length = keys.length;
    var key;
    for (i = 0; i < length; i++) {
        key = keys[i];
        if (i + 1 === length) {
            fromObj[key] = value === undefined ? {} : value;
        }
        else if (isNullOrUndefined(fromObj[key])) {
            fromObj[key] = {};
        }
        fromObj = fromObj[key];
    }
    return start;
}
function deleteObject(obj, key) {
    delete obj[key];
}
function isObject(obj) {
    var objCon = {};
    return (!isNullOrUndefined(obj) && obj.constructor === objCon.constructor);
}
function getEnumValue(enumObject, enumValue) {
    return enumObject[enumValue];
}
function merge(source, destination) {
    if (!isNullOrUndefined(destination)) {
        var temrObj = source;
        var tempProp = destination;
        var keys = Object.keys(destination);
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var key = keys_1[_i];
            temrObj[key] = tempProp[key];
        }
    }
}
function extend(copied, first, second, deep) {
    var result = copied || {};
    var length = arguments.length;
    if (deep) {
        length = length - 1;
    }
    var _loop_1 = function (i) {
        if (!arguments_1[i]) {
            return "continue";
        }
        var obj1 = arguments_1[i];
        Object.keys(obj1).forEach(function (key) {
            var src = result[key];
            var copy = obj1[key];
            var clone;
            if (deep && isObject(copy)) {
                clone = isObject(src) ? src : {};
                result[key] = extend({}, clone, copy, true);
            }
            else {
                result[key] = copy;
            }
        });
    };
    var arguments_1 = arguments;
    for (var i = 1; i < length; i++) {
        _loop_1(i);
    }
    return result;
}
function isNullOrUndefined(value) {
    return value === undefined || value === null;
}
function isUndefined(value) {
    return ('undefined' === typeof value);
}
function getUniqueID(definedName) {
    return definedName + '_' + uid++;
}
function debounce(eventFunction, delay) {
    var out;
    return function () {
        var _this = this;
        var args = arguments;
        var later = function () {
            out = null;
            return eventFunction.apply(_this, args);
        };
        clearTimeout(out);
        out = setTimeout(later, delay);
    };
}
function queryParams(data) {
    var array = [];
    var keys = Object.keys(data);
    for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
        var key = keys_2[_i];
        array.push(encodeURIComponent(key) + '=' + encodeURIComponent('' + data[key]));
    }
    return array.join('&');
}
function isObjectArray(value) {
    var parser = Object.prototype.toString;
    if (parser.call(value) === '[object Array]') {
        if (parser.call(value[0]) === '[object Object]') {
            return true;
        }
    }
    return false;
}
function compareElementParent(child, parent) {
    var node = child;
    if (node === parent) {
        return true;
    }
    else if (node === document || !node) {
        return false;
    }
    else {
        return compareElementParent(node.parentNode, parent);
    }
}
function throwError(message) {
    try {
        throw new Error(message);
    }
    catch (e) {
        throw e.message + '\n' + e.stack;
    }
}
function print(element, printWindow) {
    var div = document.createElement('div');
    var links = [].slice.call(document.getElementsByTagName('head')[0].querySelectorAll('link, style'));
    var reference = '';
    if (isNullOrUndefined(printWindow)) {
        printWindow = window.open('', 'print', 'height=452,width=1024,tabbar=no');
    }
    div.appendChild(element.cloneNode(true));
    for (var i = 0, len = links.length; i < len; i++) {
        reference += links[i].outerHTML;
    }
    printWindow.document.write('<!DOCTYPE html> <html><head>' + reference + '</head><body>' + div.innerHTML +
        '<script> (function() { window.ready = true; })(); </script>' + '</body></html>');
    printWindow.document.close();
    printWindow.focus();
    var interval = setInterval(function () {
        if (printWindow.ready) {
            printWindow.print();
            printWindow.close();
            clearInterval(interval);
        }
    }, 500);
    return printWindow;
}
function formatUnit(value) {
    var result = value + '';
    if (result === 'auto' || result.indexOf('%') !== -1 || result.indexOf('px') !== -1) {
        return result;
    }
    return result + 'px';
}
function getInstance(element, component) {
    var elem = (typeof (element) === 'string') ? document.querySelector(element) : element;
    if (elem[instances]) {
        for (var _i = 0, _a = elem[instances]; _i < _a.length; _i++) {
            var inst = _a[_i];
            if (inst instanceof component) {
                return inst;
            }
        }
    }
    return null;
}
function addInstance(element, instance) {
    var elem = (typeof (element) === 'string') ? document.querySelector(element) : element;
    if (elem[instances]) {
        elem[instances].push(instance);
    }
    else {
        elem[instances] = [instance];
    }
}
function combineArray(num) {
    var ret = '';
    for (var i = 0; i < 5; i++) {
        ret += (i ? ',' : '') + num[i];
    }
    return ret;
}


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(14), __webpack_require__(70)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, ej2_data_1, column_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function doesImplementInterface(target, checkFor) {
        return target.prototype && checkFor in target.prototype;
    }
    exports.doesImplementInterface = doesImplementInterface;
    function valueAccessor(field, data, column) {
        field = ej2_base_2.isNullOrUndefined(field) ? '' : field;
        return ej2_base_2.getValue(field, data);
    }
    exports.valueAccessor = valueAccessor;
    function getUpdateUsingRaf(updateFunction, callBack) {
        requestAnimationFrame(function () {
            try {
                callBack(null, updateFunction());
            }
            catch (e) {
                callBack(e);
            }
        });
    }
    exports.getUpdateUsingRaf = getUpdateUsingRaf;
    function iterateArrayOrObject(collection, predicate) {
        var result = [];
        for (var i = 0, len = collection.length; i < len; i++) {
            var pred = predicate(collection[i], i);
            if (!ej2_base_2.isNullOrUndefined(pred)) {
                result.push(pred);
            }
        }
        return result;
    }
    exports.iterateArrayOrObject = iterateArrayOrObject;
    function templateCompiler(template) {
        if (template) {
            var e = void 0;
            try {
                if (document.querySelectorAll(template).length) {
                    return ej2_base_1.compile(document.querySelector(template).innerHTML.trim());
                }
            }
            catch (e) {
                return ej2_base_1.compile(template);
            }
        }
        return undefined;
    }
    exports.templateCompiler = templateCompiler;
    function setStyleAndAttributes(node, customAttributes) {
        var copyAttr = {};
        var literals = ['style', 'class'];
        ej2_base_2.extend(copyAttr, customAttributes, {});
        if ('style' in copyAttr) {
            ej2_base_3.setStyleAttribute(node, copyAttr[literals[0]]);
            delete copyAttr[literals[0]];
        }
        if ('class' in copyAttr) {
            ej2_base_3.addClass([node], copyAttr[literals[1]]);
            delete copyAttr[literals[1]];
        }
        ej2_base_3.attributes(node, copyAttr);
    }
    exports.setStyleAndAttributes = setStyleAndAttributes;
    function extend(copied, first, second, exclude) {
        var moved = ej2_base_2.extend(copied, first, second);
        Object.keys(moved).forEach(function (value, index) {
            if (exclude.indexOf(value) !== -1) {
                delete moved[value];
            }
        });
        return moved;
    }
    exports.extend = extend;
    function prepareColumns(columns, autoWidth) {
        for (var c = 0, len = columns.length; c < len; c++) {
            var column = void 0;
            if (typeof columns[c] === 'string') {
                column = new column_1.Column({ field: columns[c] });
            }
            else if (!(columns[c] instanceof column_1.Column)) {
                if (!columns[c].columns) {
                    column = new column_1.Column(columns[c]);
                }
                else {
                    column = new column_1.Column(columns[c]);
                    columns[c].columns = prepareColumns(columns[c].columns);
                }
            }
            else {
                column = columns[c];
            }
            column.headerText = ej2_base_2.isNullOrUndefined(column.headerText) ? column.field || '' : column.headerText;
            column.valueAccessor = column.valueAccessor || valueAccessor;
            column.width = autoWidth && ej2_base_2.isNullOrUndefined(column.width) ? 200 : column.width;
            if (ej2_base_2.isNullOrUndefined(column.visible)) {
                column.visible = true;
            }
            columns[c] = column;
        }
        return columns;
    }
    exports.prepareColumns = prepareColumns;
    function setCssInGridPopUp(popUp, e, className) {
        var popUpSpan = popUp.querySelector('span');
        var position = popUp.parentElement.getBoundingClientRect();
        var targetPosition = e.target.getBoundingClientRect();
        var isBottomTail;
        popUpSpan.className = className;
        popUp.style.display = '';
        isBottomTail = (ej2_base_2.isNullOrUndefined(e.clientY) ? e.changedTouches[0].clientY :
            e.clientY) > popUp.offsetHeight + 10;
        popUp.style.top = targetPosition.top - position.top +
            (isBottomTail ? -(popUp.offsetHeight + 10) : popUp.offsetHeight + 10) + 'px';
        popUp.style.left = getPopupLeftPosition(popUp, e, targetPosition, position.left) + 'px';
        if (isBottomTail) {
            popUp.querySelector('.e-downtail').style.display = '';
            popUp.querySelector('.e-uptail').style.display = 'none';
        }
        else {
            popUp.querySelector('.e-downtail').style.display = 'none';
            popUp.querySelector('.e-uptail').style.display = '';
        }
    }
    exports.setCssInGridPopUp = setCssInGridPopUp;
    function getPopupLeftPosition(popup, e, targetPosition, left) {
        var width = popup.offsetWidth / 2;
        var x = getPosition(e).x;
        if (x - targetPosition.left < width) {
            return targetPosition.left - left;
        }
        else if (targetPosition.right - x < width) {
            return targetPosition.right - left - width * 2;
        }
        else {
            return x - left - width;
        }
    }
    function getActualProperties(obj) {
        if (obj instanceof ej2_base_1.ChildProperty) {
            return ej2_base_2.getValue('properties', obj);
        }
        else {
            return obj;
        }
    }
    exports.getActualProperties = getActualProperties;
    function parentsUntil(elem, selector, isID) {
        var parent = elem;
        while (parent) {
            if (isID ? parent.id === selector : parent.classList.contains(selector)) {
                break;
            }
            parent = parent.parentElement;
        }
        return parent;
    }
    exports.parentsUntil = parentsUntil;
    function getElementIndex(element, elements) {
        var index = -1;
        for (var i = 0, len = elements.length; i < len; i++) {
            if (elements[i].isEqualNode(element)) {
                index = i;
                break;
            }
        }
        return index;
    }
    exports.getElementIndex = getElementIndex;
    function inArray(value, collection) {
        for (var i = 0, len = collection.length; i < len; i++) {
            if (collection[i] === value) {
                return i;
            }
        }
        return -1;
    }
    exports.inArray = inArray;
    function getActualPropFromColl(collection) {
        var coll = [];
        for (var i = 0, len = collection.length; i < len; i++) {
            if (collection[i].hasOwnProperty('properties')) {
                coll.push(collection[i].properties);
            }
            else {
                coll.push(collection[i]);
            }
        }
        return coll;
    }
    exports.getActualPropFromColl = getActualPropFromColl;
    function removeElement(target, selector) {
        var elements = [].slice.call(target.querySelectorAll(selector));
        for (var i = 0; i < elements.length; i++) {
            ej2_base_3.remove(elements[i]);
        }
    }
    exports.removeElement = removeElement;
    function getPosition(e) {
        var position = {};
        position.x = (ej2_base_2.isNullOrUndefined(e.clientX) ? e.changedTouches[0].clientX :
            e.clientX);
        position.y = (ej2_base_2.isNullOrUndefined(e.clientY) ? e.changedTouches[0].clientY :
            e.clientY);
        return position;
    }
    exports.getPosition = getPosition;
    var uid = 0;
    function getUid(prefix) {
        return prefix + uid++;
    }
    exports.getUid = getUid;
    function appendChildren(elem, children) {
        for (var i = 0, len = children.length; i < len; i++) {
            if (len === children.length) {
                elem.appendChild(children[i]);
            }
            else {
                elem.appendChild(children[0]);
            }
        }
        return elem;
    }
    exports.appendChildren = appendChildren;
    function parents(elem, selector, isID) {
        var parent = elem;
        var parents = [];
        while (parent) {
            if (isID ? parent.id === selector : parent.classList.contains(selector)) {
                parents.push(parent);
            }
            parent = parent.parentElement;
        }
        return parents;
    }
    exports.parents = parents;
    function calculateAggregate(type, data, column, context) {
        if (type === 'custom') {
            return column.customAggregate ? column.customAggregate.call(context, data, column) : '';
        }
        return ej2_data_1.DataUtil.aggregates[type](data, column.field);
    }
    exports.calculateAggregate = calculateAggregate;
    var scrollWidth = null;
    function getScrollBarWidth() {
        if (scrollWidth !== null) {
            return scrollWidth;
        }
        var divNode = document.createElement('div');
        var value = 0;
        divNode.style.cssText = 'width:100px;height: 100px;overflow: scroll;position: absolute;top: -9999px;';
        document.body.appendChild(divNode);
        value = (divNode.offsetWidth - divNode.clientWidth) | 0;
        document.body.removeChild(divNode);
        return scrollWidth = value;
    }
    exports.getScrollBarWidth = getScrollBarWidth;
    var rowHeight;
    function getRowHeight(element) {
        if (rowHeight !== undefined) {
            return rowHeight;
        }
        var table = ej2_base_3.createElement('table', { className: 'e-table', styles: 'visibility: hidden' });
        table.innerHTML = '<tr><td class="e-rowcell">A<td></tr>';
        element.appendChild(table);
        var rect = table.querySelector('td').getBoundingClientRect();
        element.removeChild(table);
        rowHeight = Math.ceil(rect.height);
        return rowHeight;
    }
    exports.getRowHeight = getRowHeight;
    function isEditable(col, type, elem) {
        var row = parentsUntil(elem, 'e-row');
        var isOldRow = !row ? true : row && !row.classList.contains('e-insertedrow');
        if (type === 'beginEdit' && isOldRow) {
            if (col.isIdentity || col.isPrimaryKey || !col.allowEditing) {
                return false;
            }
            return true;
        }
        else {
            if (isOldRow && !col.allowEditing && !col.isIdentity && !col.isPrimaryKey) {
                return false;
            }
            return true;
        }
    }
    exports.isEditable = isEditable;
    function isActionPrevent(inst) {
        var dlg = inst.element.querySelector('#' + inst.element.id + 'EditConfirm');
        return inst.editSettings.mode === 'batch' &&
            (inst.element.querySelectorAll('.e-updatedtd').length) &&
            (dlg ? dlg.classList.contains('e-popup-close') : true);
    }
    exports.isActionPrevent = isActionPrevent;
    function wrap(elem, action) {
        var clName = 'e-wrap';
        elem = elem instanceof Array ? elem : [elem];
        for (var i = 0; i < elem.length; i++) {
            action ? elem[i].classList.add(clName) : elem[i].classList.remove(clName);
        }
    }
    exports.wrap = wrap;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.created = 'create';
    exports.destroyed = 'destroy';
    exports.load = 'load';
    exports.rowDataBound = 'rowDataBound';
    exports.queryCellInfo = 'queryCellInfo';
    exports.actionBegin = 'actionBegin';
    exports.actionComplete = 'actionComplete';
    exports.actionFailure = 'actionFailure';
    exports.dataBound = 'dataBound';
    exports.rowSelecting = 'rowSelecting';
    exports.rowSelected = 'rowSelected';
    exports.rowDeselecting = 'rowDeselecting';
    exports.rowDeselected = 'rowDeselected';
    exports.cellSelecting = 'cellSelecting';
    exports.cellSelected = 'cellSelected';
    exports.cellDeselecting = 'cellDeselecting';
    exports.cellDeselected = 'cellDeselected';
    exports.columnDragStart = 'columnDragStart';
    exports.columnDrag = 'columnDrag';
    exports.columnDrop = 'columnDrop';
    exports.rowDragStart = 'rowDragStart';
    exports.rowDrag = 'rowDrag';
    exports.rowDrop = 'rowDrop';
    exports.beforePrint = 'beforePrint';
    exports.printComplete = 'printComplete';
    exports.detailDataBound = 'detailDataBound';
    exports.toolbarClick = 'toolbarClick';
    exports.batchAdd = 'batchAdd';
    exports.batchDelete = 'batchDelete';
    exports.beforeBatchAdd = 'beforeBatchAdd';
    exports.beforeBatchDelete = 'beforeBatchDelete';
    exports.beforeBatchSave = 'beforeBatchSave';
    exports.beginEdit = 'beginEdit';
    exports.cellEdit = 'cellEdit';
    exports.cellSave = 'cellSave';
    exports.endAdd = 'endAdd';
    exports.endDelete = 'endDelete';
    exports.endEdit = 'endEdit';
    exports.recordDoubleClick = 'recordDoubleClick';
    exports.recordClick = 'recordClick';
    exports.beforeDataBound = 'beforeDataBound';
    exports.beforeOpenColumnChooser = 'beforeOpenColumnChooser';
    exports.resizeStart = 'resizeStart';
    exports.onResize = 'onResize';
    exports.resizeStop = 'resizeStop';
    exports.initialLoad = 'initial-load';
    exports.initialEnd = 'initial-end';
    exports.dataReady = 'data-ready';
    exports.contentReady = 'content-ready';
    exports.uiUpdate = 'ui-update';
    exports.inBoundModelChanged = 'inbound-model-changed';
    exports.modelChanged = 'model-changed';
    exports.colGroupRefresh = 'colgroup-refresh';
    exports.headerRefreshed = 'header-refreshed';
    exports.pageBegin = 'paging-begin';
    exports.pageComplete = 'paging-complete';
    exports.sortBegin = 'sorting-begin';
    exports.sortComplete = 'sorting-complete';
    exports.filterBegin = 'filtering-begin';
    exports.filterComplete = 'filtering-complete';
    exports.searchBegin = 'searching-begin';
    exports.searchComplete = 'searching-complete';
    exports.reorderBegin = 'reorder-begin';
    exports.reorderComplete = 'reorder-complete';
    exports.rowDragAndDropBegin = 'rowdraganddrop-begin';
    exports.rowDragAndDropComplete = 'rowdraganddrop-complete';
    exports.groupBegin = 'grouping-begin';
    exports.groupComplete = 'grouping-complete';
    exports.ungroupBegin = 'ungrouping-begin';
    exports.ungroupComplete = 'ungrouping-complete';
    exports.rowSelectionBegin = 'rowselecting';
    exports.rowSelectionComplete = 'rowselected';
    exports.columnSelectionBegin = 'columnselecting';
    exports.columnSelectionComplete = 'columnselected';
    exports.cellSelectionBegin = 'cellselecting';
    exports.cellSelectionComplete = 'cellselected';
    exports.keyPressed = 'key-pressed';
    exports.click = 'click';
    exports.destroy = 'destroy';
    exports.columnVisibilityChanged = 'column-visible-changed';
    exports.scroll = 'scroll';
    exports.columnWidthChanged = 'column-width-changed';
    exports.columnPositionChanged = 'column-position-changed';
    exports.rowDragAndDrop = 'row-drag-and-drop';
    exports.rowsAdded = 'rows-added';
    exports.rowsRemoved = 'rows-removed';
    exports.columnDragStop = 'column-drag-stop';
    exports.headerDrop = 'header-drop';
    exports.dataSourceModified = 'datasource-modified';
    exports.refreshComplete = 'refresh-complete';
    exports.refreshVirtualBlock = 'refresh-virtual-block';
    exports.dblclick = 'dblclick';
    exports.toolbarRefresh = 'toolbar-refresh';
    exports.bulkSave = 'bulk-save';
    exports.autoCol = 'auto-col';
    exports.tooltipDestroy = 'tooltip-destroy';
    exports.updateData = 'update-data';
    exports.editBegin = 'edit-begin';
    exports.editComplete = 'edit-complete';
    exports.addBegin = 'add-begin';
    exports.addComplete = 'add-complete';
    exports.saveComplete = 'save-complete';
    exports.deleteBegin = 'delete-begin';
    exports.deleteComplete = 'delete-complete';
    exports.preventBatch = 'prevent-batch';
    exports.dialogDestroy = 'dialog-destroy';
    exports.crudAction = 'crud-Action';
    exports.addDeleteAction = 'add-delete-Action';
    exports.destroyForm = 'destroy-form';
    exports.doubleTap = 'double-tap';
    exports.beforeExcelExport = 'beforeExcelExport';
    exports.excelExportComplete = 'excelExportComplete';
    exports.excelQueryCellInfo = 'excelQueryCellInfo';
    exports.beforePdfExport = 'beforePdfExport';
    exports.pdfExportComplete = 'pdfExportComplete';
    exports.pdfQueryCellInfo = 'pdfQueryCellInfo';
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PointF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return SizeF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return RectangleF; });
var PointF = (function () {
    function PointF(x, y) {
        if (typeof x === 'undefined') {
            this.x = 0;
            this.y = 0;
        }
        else {
            if (x !== null) {
                this.x = x;
            }
            else {
                this.x = 0;
            }
            if (y !== null) {
                this.y = y;
            }
            else {
                this.y = 0;
            }
        }
    }
    return PointF;
}());

var SizeF = (function () {
    function SizeF(width, height) {
        if (typeof height === 'undefined') {
            this.height = 0;
            this.width = 0;
        }
        else {
            if (height !== null) {
                this.height = height;
            }
            else {
                this.height = 0;
            }
            if (width !== null) {
                this.width = width;
            }
            else {
                this.width = 0;
            }
        }
    }
    return SizeF;
}());

var RectangleF = (function () {
    function RectangleF(arg1, arg2, arg3, arg4) {
        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {
            this.x = 0;
            this.y = 0;
            this.height = 0;
            this.width = 0;
        }
        else {
            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {
                var pointf = arg1;
                this.x = pointf.x;
                this.y = pointf.y;
                var sizef = arg2;
                this.height = sizef.height;
                this.width = sizef.width;
            }
            else {
                var x = arg1;
                var y = arg2;
                var width = arg3;
                var height = arg4;
                this.x = x;
                this.y = y;
                this.height = height;
                this.width = width;
            }
        }
    }
    return RectangleF;
}());



/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfName; });
var PdfName = (function () {
    function PdfName(value) {
        this.stringStartMark = '/';
        this.internalValue = '';
        this.isSaving6 = false;
        this.position6 = -1;
        this.internalValue = this.normalizeValue(value);
    }
    Object.defineProperty(PdfName.prototype, "status", {
        get: function () {
            return this.status6;
        },
        set: function (value) {
            this.status6 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfName.prototype, "isSaving", {
        get: function () {
            return this.isSaving6;
        },
        set: function (value) {
            this.isSaving6 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfName.prototype, "objectCollectionIndex", {
        get: function () {
            return this.index6;
        },
        set: function (value) {
            this.index6 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfName.prototype, "position", {
        get: function () {
            return this.position6;
        },
        set: function (value) {
            this.position6 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfName.prototype, "clonedObject", {
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfName.prototype, "value", {
        get: function () {
            return this.internalValue;
        },
        set: function (value) {
            var val = value;
            if (value !== null && value.length > 0) {
                val = value;
                this.internalValue = this.normalizeValue(val);
            }
            else {
                this.internalValue = val;
            }
        },
        enumerable: true,
        configurable: true
    });
    PdfName.prototype.save = function (writer) {
        writer.write(this.toString());
    };
    PdfName.prototype.toString = function () {
        return (this.stringStartMark + this.escapeString(this.value));
    };
    PdfName.prototype.clone = function (crossTable) {
        var newName = new PdfName();
        newName.value = this.internalValue;
        return newName;
    };
    PdfName.prototype.escapeString = function (stringValue) {
        var result = '';
        var len = 0;
        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {
            var ch = stringValue[i];
            var index = PdfName.delimiters.indexOf(ch);
            result = result + ch;
        }
        return result;
    };
    PdfName.prototype.normalizeValue = function (value, c) {
        var strFormat = '#{0:X}';
        return value;
    };
    return PdfName;
}());

PdfName.delimiters = '()<>[]{}/%}';
PdfName.replacements = [' ', '\t', '\n', '\r'];


/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DictionaryProperties; });
var DictionaryProperties = (function () {
    function DictionaryProperties() {
        this.pages = 'Pages';
        this.kids = 'Kids';
        this.count = 'Count';
        this.resources = 'Resources';
        this.type = 'Type';
        this.size = 'Size';
        this.mediaBox = 'MediaBox';
        this.parent = 'Parent';
        this.root = 'Root';
        this.decodeParms = 'DecodeParms';
        this.filter = 'Filter';
        this.font = 'Font';
        this.type1 = 'Type1';
        this.baseFont = 'BaseFont';
        this.encoding = 'Encoding';
        this.subtype = 'Subtype';
        this.contents = 'Contents';
        this.procset = 'ProcSet';
        this.colorSpace = 'ColorSpace';
        this.extGState = 'ExtGState';
        this.pattern = 'Pattern';
        this.xObject = 'XObject';
        this.length = 'Length';
        this.width = 'Width';
        this.height = 'Height';
        this.bitsPerComponent = 'BitsPerComponent';
        this.image = 'Image';
        this.dctdecode = 'DCTDecode';
        this.columns = 'Columns';
        this.blackIs1 = 'BlackIs1';
        this.k = 'K';
        this.s = 'S';
        this.predictor = 'Predictor';
        this.deviceRgb = 'DeviceRGB';
        this.next = 'Next';
        this.action = 'Action';
        this.link = 'Link';
        this.a = 'A';
        this.annot = 'Annot';
        this.p = 'P';
        this.c = 'C';
        this.rect = 'Rect';
        this.uri = 'URI';
        this.annots = 'Annots';
        this.ca = 'ca';
        this.CA = 'CA';
        this.xyz = 'XYZ';
        this.fit = 'Fit';
        this.dest = 'Dest';
        this.BM = 'BM';
        this.flatedecode = 'FlateDecode';
        this.rotate = 'Rotate';
        this.bBox = 'BBox';
        this.form = 'Form';
    }
    return DictionaryProperties;
}());



/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var CellType;
    (function (CellType) {
        CellType[CellType["Data"] = 0] = "Data";
        CellType[CellType["Header"] = 1] = "Header";
        CellType[CellType["Summary"] = 2] = "Summary";
        CellType[CellType["GroupSummary"] = 3] = "GroupSummary";
        CellType[CellType["CaptionSummary"] = 4] = "CaptionSummary";
        CellType[CellType["Filter"] = 5] = "Filter";
        CellType[CellType["Indent"] = 6] = "Indent";
        CellType[CellType["GroupCaption"] = 7] = "GroupCaption";
        CellType[CellType["GroupCaptionEmpty"] = 8] = "GroupCaptionEmpty";
        CellType[CellType["Expand"] = 9] = "Expand";
        CellType[CellType["HeaderIndent"] = 10] = "HeaderIndent";
        CellType[CellType["StackedHeader"] = 11] = "StackedHeader";
        CellType[CellType["DetailHeader"] = 12] = "DetailHeader";
        CellType[CellType["DetailExpand"] = 13] = "DetailExpand";
    })(CellType = exports.CellType || (exports.CellType = {}));
    var RenderType;
    (function (RenderType) {
        RenderType[RenderType["Header"] = 0] = "Header";
        RenderType[RenderType["Content"] = 1] = "Content";
        RenderType[RenderType["Summary"] = 2] = "Summary";
    })(RenderType = exports.RenderType || (exports.RenderType = {}));
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Base; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dom__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__observer__ = __webpack_require__(30);



var Base = (function () {
    function Base(options, element) {
        this.isProtectedOnChange = true;
        this.properties = {};
        this.changedProperties = {};
        this.oldProperties = {};
        this.refreshing = false;
        this.finalUpdate = function () { };
        this.childChangedProperties = {};
        this.modelObserver = new __WEBPACK_IMPORTED_MODULE_2__observer__["a" /* Observer */](this);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(element)) {
            if ('string' === typeof (element)) {
                this.element = document.querySelector(element);
            }
            else {
                this.element = element;
            }
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.element)) {
                this.isProtectedOnChange = false;
                this.addInstance();
            }
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(options)) {
            this.setProperties(options, true);
        }
        this.isDestroyed = false;
    }
    Base.prototype.setProperties = function (prop, muteOnChange) {
        var prevDetection = this.isProtectedOnChange;
        this.isProtectedOnChange = !!muteOnChange;
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["h" /* merge */])(this, prop);
        if (muteOnChange !== true) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["h" /* merge */])(this.changedProperties, prop);
            this.dataBind();
        }
        this.finalUpdate();
        this.changedProperties = {};
        this.oldProperties = {};
        this.isProtectedOnChange = prevDetection;
    };
    ;
    Base.callChildDataBind = function (obj, parent) {
        var keys = Object.keys(obj);
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var key = keys_1[_i];
            if (parent[key] instanceof Array) {
                for (var _a = 0, _b = parent[key]; _a < _b.length; _a++) {
                    var obj_1 = _b[_a];
                    if (obj_1.dataBind !== undefined) {
                        obj_1.dataBind();
                    }
                }
            }
            else {
                parent[key].dataBind();
            }
        }
    };
    Base.prototype.clearChanges = function () {
        this.finalUpdate();
        this.changedProperties = {};
        this.oldProperties = {};
        this.childChangedProperties = {};
    };
    Base.prototype.dataBind = function () {
        Base.callChildDataBind(this.childChangedProperties, this);
        if (Object.getOwnPropertyNames(this.changedProperties).length) {
            var prevDetection = this.isProtectedOnChange;
            var newChanges = this.changedProperties;
            var oldChanges = this.oldProperties;
            this.clearChanges();
            this.isProtectedOnChange = true;
            this.onPropertyChanged(newChanges, oldChanges);
            this.isProtectedOnChange = prevDetection;
        }
    };
    ;
    Base.prototype.saveChanges = function (key, newValue, oldValue) {
        if (this.isProtectedOnChange) {
            return;
        }
        this.oldProperties[key] = oldValue;
        this.changedProperties[key] = newValue;
        this.finalUpdate();
        this.finalUpdate = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["b" /* setImmediate */])(this.dataBind.bind(this));
    };
    ;
    Base.prototype.addEventListener = function (eventName, handler) {
        this.modelObserver.on(eventName, handler);
    };
    Base.prototype.removeEventListener = function (eventName, handler) {
        this.modelObserver.off(eventName, handler);
    };
    Base.prototype.trigger = function (eventName, eventProp) {
        if (this.isDestroyed !== true) {
            var prevDetection = this.isProtectedOnChange;
            this.isProtectedOnChange = false;
            this.modelObserver.notify(eventName, eventProp);
            this.isProtectedOnChange = prevDetection;
        }
    };
    Base.prototype.addInstance = function () {
        var moduleClass = 'e-' + this.getModuleName().toLowerCase();
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__dom__["b" /* addClass */])([this.element], ['e-control', moduleClass]);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.element.ej2_instances)) {
            this.element.ej2_instances.push(this);
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["d" /* setValue */])('ej2_instances', [this], this.element);
        }
    };
    Base.prototype.destroy = function () {
        var _this = this;
        this.element.ej2_instances =
            this.element.ej2_instances.filter(function (i) { return i !== _this; });
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__dom__["c" /* removeClass */])([this.element], ['e-' + this.getModuleName()]);
        if (this.element.ej2_instances.length === 0) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__dom__["c" /* removeClass */])([this.element], ['e-control']);
        }
        this.clearChanges();
        this.modelObserver.destroy();
        this.isDestroyed = true;
    };
    return Base;
}());



/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfHorizontalAlignment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PdfVerticalAlignment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return PdfTextAlignment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return TextRenderingMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return PdfLineJoin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return PdfLineCap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return PdfDashStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return PdfFillMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return PdfColorSpace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return PdfBlendMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return PdfGraphicsUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return PdfGridImagePosition; });
var PdfHorizontalAlignment;
(function (PdfHorizontalAlignment) {
    PdfHorizontalAlignment[PdfHorizontalAlignment["Left"] = 0] = "Left";
    PdfHorizontalAlignment[PdfHorizontalAlignment["Center"] = 1] = "Center";
    PdfHorizontalAlignment[PdfHorizontalAlignment["Right"] = 2] = "Right";
})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));
var PdfVerticalAlignment;
(function (PdfVerticalAlignment) {
    PdfVerticalAlignment[PdfVerticalAlignment["Top"] = 0] = "Top";
    PdfVerticalAlignment[PdfVerticalAlignment["Middle"] = 1] = "Middle";
    PdfVerticalAlignment[PdfVerticalAlignment["Bottom"] = 2] = "Bottom";
})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));
var PdfTextAlignment;
(function (PdfTextAlignment) {
    PdfTextAlignment[PdfTextAlignment["Left"] = 0] = "Left";
    PdfTextAlignment[PdfTextAlignment["Center"] = 1] = "Center";
    PdfTextAlignment[PdfTextAlignment["Right"] = 2] = "Right";
    PdfTextAlignment[PdfTextAlignment["Justify"] = 3] = "Justify";
})(PdfTextAlignment || (PdfTextAlignment = {}));
var TextRenderingMode;
(function (TextRenderingMode) {
    TextRenderingMode[TextRenderingMode["Fill"] = 0] = "Fill";
    TextRenderingMode[TextRenderingMode["Stroke"] = 1] = "Stroke";
    TextRenderingMode[TextRenderingMode["FillStroke"] = 2] = "FillStroke";
    TextRenderingMode[TextRenderingMode["None"] = 3] = "None";
    TextRenderingMode[TextRenderingMode["ClipFlag"] = 4] = "ClipFlag";
    TextRenderingMode[TextRenderingMode["ClipFill"] = 4] = "ClipFill";
    TextRenderingMode[TextRenderingMode["ClipStroke"] = 5] = "ClipStroke";
    TextRenderingMode[TextRenderingMode["ClipFillStroke"] = 6] = "ClipFillStroke";
    TextRenderingMode[TextRenderingMode["Clip"] = 7] = "Clip";
})(TextRenderingMode || (TextRenderingMode = {}));
var PdfLineJoin;
(function (PdfLineJoin) {
    PdfLineJoin[PdfLineJoin["Miter"] = 0] = "Miter";
    PdfLineJoin[PdfLineJoin["Round"] = 1] = "Round";
    PdfLineJoin[PdfLineJoin["Bevel"] = 2] = "Bevel";
})(PdfLineJoin || (PdfLineJoin = {}));
var PdfLineCap;
(function (PdfLineCap) {
    PdfLineCap[PdfLineCap["Flat"] = 0] = "Flat";
    PdfLineCap[PdfLineCap["Round"] = 1] = "Round";
    PdfLineCap[PdfLineCap["Square"] = 2] = "Square";
})(PdfLineCap || (PdfLineCap = {}));
var PdfDashStyle;
(function (PdfDashStyle) {
    PdfDashStyle[PdfDashStyle["Solid"] = 0] = "Solid";
    PdfDashStyle[PdfDashStyle["Dash"] = 1] = "Dash";
    PdfDashStyle[PdfDashStyle["Dot"] = 2] = "Dot";
    PdfDashStyle[PdfDashStyle["DashDot"] = 3] = "DashDot";
    PdfDashStyle[PdfDashStyle["DashDotDot"] = 4] = "DashDotDot";
    PdfDashStyle[PdfDashStyle["Custom"] = 5] = "Custom";
})(PdfDashStyle || (PdfDashStyle = {}));
var PdfFillMode;
(function (PdfFillMode) {
    PdfFillMode[PdfFillMode["Winding"] = 0] = "Winding";
    PdfFillMode[PdfFillMode["Alternate"] = 1] = "Alternate";
})(PdfFillMode || (PdfFillMode = {}));
var PdfColorSpace;
(function (PdfColorSpace) {
    PdfColorSpace[PdfColorSpace["Rgb"] = 0] = "Rgb";
    PdfColorSpace[PdfColorSpace["Cmyk"] = 1] = "Cmyk";
    PdfColorSpace[PdfColorSpace["GrayScale"] = 2] = "GrayScale";
    PdfColorSpace[PdfColorSpace["Indexed"] = 3] = "Indexed";
})(PdfColorSpace || (PdfColorSpace = {}));
var PdfBlendMode;
(function (PdfBlendMode) {
    PdfBlendMode[PdfBlendMode["Normal"] = 0] = "Normal";
    PdfBlendMode[PdfBlendMode["Multiply"] = 1] = "Multiply";
    PdfBlendMode[PdfBlendMode["Screen"] = 2] = "Screen";
    PdfBlendMode[PdfBlendMode["Overlay"] = 3] = "Overlay";
    PdfBlendMode[PdfBlendMode["Darken"] = 4] = "Darken";
    PdfBlendMode[PdfBlendMode["Lighten"] = 5] = "Lighten";
    PdfBlendMode[PdfBlendMode["ColorDodge"] = 6] = "ColorDodge";
    PdfBlendMode[PdfBlendMode["ColorBurn"] = 7] = "ColorBurn";
    PdfBlendMode[PdfBlendMode["HardLight"] = 8] = "HardLight";
    PdfBlendMode[PdfBlendMode["SoftLight"] = 9] = "SoftLight";
    PdfBlendMode[PdfBlendMode["Difference"] = 10] = "Difference";
    PdfBlendMode[PdfBlendMode["Exclusion"] = 11] = "Exclusion";
    PdfBlendMode[PdfBlendMode["Hue"] = 12] = "Hue";
    PdfBlendMode[PdfBlendMode["Saturation"] = 13] = "Saturation";
    PdfBlendMode[PdfBlendMode["Color"] = 14] = "Color";
    PdfBlendMode[PdfBlendMode["Luminosity"] = 15] = "Luminosity";
})(PdfBlendMode || (PdfBlendMode = {}));
var PdfGraphicsUnit;
(function (PdfGraphicsUnit) {
    PdfGraphicsUnit[PdfGraphicsUnit["Centimeter"] = 0] = "Centimeter";
    PdfGraphicsUnit[PdfGraphicsUnit["Pica"] = 1] = "Pica";
    PdfGraphicsUnit[PdfGraphicsUnit["Pixel"] = 2] = "Pixel";
    PdfGraphicsUnit[PdfGraphicsUnit["Point"] = 3] = "Point";
    PdfGraphicsUnit[PdfGraphicsUnit["Inch"] = 4] = "Inch";
    PdfGraphicsUnit[PdfGraphicsUnit["Document"] = 5] = "Document";
    PdfGraphicsUnit[PdfGraphicsUnit["Millimeter"] = 6] = "Millimeter";
})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));
var PdfGridImagePosition;
(function (PdfGridImagePosition) {
    PdfGridImagePosition[PdfGridImagePosition["Fit"] = 0] = "Fit";
    PdfGridImagePosition[PdfGridImagePosition["Center"] = 1] = "Center";
    PdfGridImagePosition[PdfGridImagePosition["Stretch"] = 2] = "Stretch";
    PdfGridImagePosition[PdfGridImagePosition["Tile"] = 3] = "Tile";
})(PdfGridImagePosition || (PdfGridImagePosition = {}));


/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfDictionary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return SaveSectionCollectionEventHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return SaveAnnotationEventHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return SaveSectionEventHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return SaveTemplateEventHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__collections_dictionary__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__input_output_pdf_operators__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__input_output_pdf_dictionary_properties__ = __webpack_require__(6);




var PdfDictionary = (function () {
    function PdfDictionary(dictionary) {
        this.position7 = -1;
        this.primitiveItems = new __WEBPACK_IMPORTED_MODULE_0__collections_dictionary__["a" /* Dictionary */]();
        this.prefix = '<<';
        this.suffix = '>>';
        this.resources = [];
        this.object = null;
        this.archive = true;
        if (typeof dictionary === 'undefined') {
            this.primitiveItems = new __WEBPACK_IMPORTED_MODULE_0__collections_dictionary__["a" /* Dictionary */]();
            this.encrypt = true;
            this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_3__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        }
        else {
            this.primitiveItems = new __WEBPACK_IMPORTED_MODULE_0__collections_dictionary__["a" /* Dictionary */]();
            var keys = dictionary.items.keys();
            var values = dictionary.items.values();
            for (var index = 0; index < dictionary.items.size(); index++) {
                this.primitiveItems.setValue(keys[index], values[index]);
            }
            this.status = dictionary.status;
            this.freezeChanges(this);
            this.encrypt = true;
            this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_3__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        }
    }
    Object.defineProperty(PdfDictionary.prototype, "items", {
        get: function () {
            return this.primitiveItems;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDictionary.prototype, "status", {
        get: function () {
            return this.status7;
        },
        set: function (value) {
            this.status7 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDictionary.prototype, "isSaving", {
        get: function () {
            return this.isSaving7;
        },
        set: function (value) {
            this.isSaving7 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDictionary.prototype, "objectCollectionIndex", {
        get: function () {
            return this.index7;
        },
        set: function (value) {
            this.index7 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDictionary.prototype, "clonedObject", {
        get: function () {
            return this.object;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDictionary.prototype, "position", {
        get: function () {
            return this.position7;
        },
        set: function (value) {
            this.position7 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDictionary.prototype, "Count", {
        get: function () {
            return this.primitiveItems.size();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDictionary.prototype, "Dictionary", {
        get: function () {
            return this;
        },
        enumerable: true,
        configurable: true
    });
    PdfDictionary.prototype.getArchive = function () {
        return this.archive;
    };
    PdfDictionary.prototype.setArchive = function (value) {
        this.archive = value;
    };
    PdfDictionary.prototype.setEncrypt = function (value) {
        this.encrypt = value;
        this.modify();
    };
    PdfDictionary.prototype.getEncrypt = function () {
        return this.encrypt;
    };
    PdfDictionary.prototype.freezeChanges = function (freezer) {
        this.bChanged = false;
    };
    PdfDictionary.prototype.clone = function (crossTable) {
        var newDict = new PdfDictionary();
        return newDict;
    };
    PdfDictionary.prototype.modify = function () {
        this.bChanged = true;
    };
    PdfDictionary.prototype.remove = function (key) {
        if (typeof key !== 'string') {
            this.primitiveItems.remove(key.value);
            this.modify();
        }
        else {
            this.remove(new __WEBPACK_IMPORTED_MODULE_1__pdf_name__["a" /* PdfName */](key));
        }
    };
    PdfDictionary.prototype.containsKey = function (key) {
        var returnValue = false;
        returnValue = this.primitiveItems.containsKey(key.toString());
        return returnValue;
    };
    PdfDictionary.prototype.onBeginSave = function () {
        this.beginSave.sender.beginSave();
    };
    PdfDictionary.prototype.onTemplateBeginSave = function () {
        this.pageBeginDrawTemplate.sender.pageBeginSave();
    };
    PdfDictionary.prototype.onBeginAnnotationSave = function () {
        this.annotationBeginSave.sender.beginSave();
    };
    PdfDictionary.prototype.onSectionBeginSave = function (writer) {
        var saveEvent = this.sectionBeginSave;
        saveEvent.sender.beginSave(saveEvent.state, writer);
    };
    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {
        if (typeof bRaiseEvent === 'undefined') {
            this.save(writer, true);
        }
        else {
            writer.write(this.prefix);
            if (typeof this.beginSave !== 'undefined') {
                this.onBeginSave();
            }
            if (typeof this.annotationBeginSave !== 'undefined') {
                this.onBeginAnnotationSave();
            }
            if (typeof this.sectionBeginSave !== 'undefined') {
                this.onSectionBeginSave(writer);
            }
            if (typeof this.pageBeginDrawTemplate !== 'undefined') {
                this.onTemplateBeginSave();
            }
            if (this.Count > 0) {
                this.saveItems(writer);
            }
            writer.write(this.suffix);
            writer.write(__WEBPACK_IMPORTED_MODULE_2__input_output_pdf_operators__["a" /* Operators */].newLine);
        }
    };
    PdfDictionary.prototype.saveItems = function (writer) {
        writer.write(__WEBPACK_IMPORTED_MODULE_2__input_output_pdf_operators__["a" /* Operators */].newLine);
        var keys = this.primitiveItems.keys();
        var values = this.primitiveItems.values();
        for (var index = 0; index < keys.length; index++) {
            var key = keys[index];
            var name_1 = new __WEBPACK_IMPORTED_MODULE_1__pdf_name__["a" /* PdfName */](key);
            name_1.save(writer);
            writer.write(__WEBPACK_IMPORTED_MODULE_2__input_output_pdf_operators__["a" /* Operators */].whiteSpace);
            var resources = values[index];
            resources.save(writer);
            writer.write(__WEBPACK_IMPORTED_MODULE_2__input_output_pdf_operators__["a" /* Operators */].newLine);
        }
    };
    return PdfDictionary;
}());

var SaveSectionCollectionEventHandler = (function () {
    function SaveSectionCollectionEventHandler(sender) {
        this.sender = sender;
    }
    return SaveSectionCollectionEventHandler;
}());

var SaveAnnotationEventHandler = (function () {
    function SaveAnnotationEventHandler(sender) {
        this.sender = sender;
    }
    return SaveAnnotationEventHandler;
}());

var SaveSectionEventHandler = (function () {
    function SaveSectionEventHandler(sender, state) {
        this.sender = sender;
        this.state = state;
    }
    return SaveSectionEventHandler;
}());

var SaveTemplateEventHandler = (function () {
    function SaveTemplateEventHandler(sender) {
        this.sender = sender;
    }
    return SaveTemplateEventHandler;
}());



/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = createElement;
/* harmony export (immutable) */ __webpack_exports__["b"] = addClass;
/* harmony export (immutable) */ __webpack_exports__["c"] = removeClass;
/* harmony export (immutable) */ __webpack_exports__["d"] = isVisible;
/* harmony export (immutable) */ __webpack_exports__["e"] = prepend;
/* harmony export (immutable) */ __webpack_exports__["f"] = append;
/* harmony export (immutable) */ __webpack_exports__["g"] = detach;
/* harmony export (immutable) */ __webpack_exports__["h"] = remove;
/* harmony export (immutable) */ __webpack_exports__["i"] = attributes;
/* harmony export (immutable) */ __webpack_exports__["j"] = select;
/* harmony export (immutable) */ __webpack_exports__["k"] = selectAll;
/* harmony export (immutable) */ __webpack_exports__["l"] = closest;
/* harmony export (immutable) */ __webpack_exports__["m"] = siblings;
/* harmony export (immutable) */ __webpack_exports__["n"] = getAttributeOrDefault;
/* harmony export (immutable) */ __webpack_exports__["o"] = setStyleAttribute;
/* harmony export (immutable) */ __webpack_exports__["p"] = classList;
/* harmony export (immutable) */ __webpack_exports__["q"] = matches;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__event_handler__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(1);


function createElement(tagName, properties) {
    var element = document.createElement(tagName);
    if (typeof (properties) === 'undefined') {
        return element;
    }
    element.innerHTML = (properties.innerHTML ? properties.innerHTML : '');
    if (properties.className !== undefined) {
        element.className = properties.className;
    }
    if (properties.id !== undefined) {
        element.id = properties.id;
    }
    if (properties.styles !== undefined) {
        element.setAttribute('style', properties.styles);
    }
    if (properties.attrs !== undefined) {
        attributes(element, properties.attrs);
    }
    return element;
}
function addClass(elements, classes) {
    var classList = getClassList(classes);
    for (var _i = 0, _a = elements; _i < _a.length; _i++) {
        var ele = _a[_i];
        for (var _b = 0, classList_1 = classList; _b < classList_1.length; _b++) {
            var className = classList_1[_b];
            if (!ele.classList.contains(className)) {
                ele.classList.add(className);
            }
        }
    }
    return elements;
}
function removeClass(elements, classes) {
    var classList = getClassList(classes);
    for (var _i = 0, _a = elements; _i < _a.length; _i++) {
        var ele = _a[_i];
        if (ele.className !== '') {
            for (var _b = 0, classList_2 = classList; _b < classList_2.length; _b++) {
                var className = classList_2[_b];
                ele.classList.remove(className);
            }
        }
    }
    return elements;
}
function getClassList(classes) {
    var classList = [];
    if (typeof classes === 'string') {
        classList.push(classes);
    }
    else {
        classList = classes;
    }
    return classList;
}
function isVisible(element) {
    var ele = element;
    return (ele.style.visibility === '' && ele.offsetWidth > 0);
}
function prepend(fromElements, toElement) {
    var docFrag = document.createDocumentFragment();
    for (var _i = 0, _a = fromElements; _i < _a.length; _i++) {
        var ele = _a[_i];
        docFrag.appendChild(ele);
    }
    toElement.insertBefore(docFrag, toElement.firstElementChild);
    return fromElements;
}
function append(fromElements, toElement) {
    var docFrag = document.createDocumentFragment();
    for (var _i = 0, _a = fromElements; _i < _a.length; _i++) {
        var ele = _a[_i];
        docFrag.appendChild(ele);
    }
    toElement.appendChild(docFrag);
    return fromElements;
}
function detach(element) {
    var parentNode = element.parentNode;
    return parentNode.removeChild(element);
}
function remove(element) {
    var parentNode = element.parentNode;
    __WEBPACK_IMPORTED_MODULE_0__event_handler__["a" /* EventHandler */].clearEvents(element);
    parentNode.removeChild(element);
}
function attributes(element, attributes) {
    var keys = Object.keys(attributes);
    var ele = element;
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var key = keys_1[_i];
        ele.setAttribute(key, attributes[key]);
    }
    return ele;
}
function select(selector, context) {
    if (context === void 0) { context = document; }
    return context.querySelector(selector);
}
function selectAll(selector, context) {
    if (context === void 0) { context = document; }
    var nodeList = context.querySelectorAll(selector);
    return nodeList;
}
function closest(element, selector) {
    var el = element;
    if (typeof el.closest === 'function') {
        return el.closest(selector);
    }
    while (el && el.nodeType === 1) {
        if (matches(el, selector)) {
            return el;
        }
        el = el.parentNode;
    }
    return null;
}
function siblings(element) {
    var siblings = [];
    var childNodes = Array.prototype.slice.call(element.parentNode.childNodes);
    for (var _i = 0, childNodes_1 = childNodes; _i < childNodes_1.length; _i++) {
        var curNode = childNodes_1[_i];
        if (curNode.nodeType === Node.ELEMENT_NODE && element !== curNode) {
            siblings.push(curNode);
        }
    }
    return siblings;
}
function getAttributeOrDefault(element, property, value) {
    var attrVal = element.getAttribute(property);
    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__["j" /* isNullOrUndefined */])(attrVal)) {
        element.setAttribute(property, value.toString());
        attrVal = value;
    }
    return attrVal;
}
function setStyleAttribute(element, attrs) {
    if (attrs !== undefined) {
        Object.keys(attrs).forEach(function (key) {
            element.style[key] = attrs[key];
        });
    }
}
function classList(element, addClasses, removeClasses) {
    addClass([element], addClasses);
    removeClass([element], removeClasses);
}
function matches(element, selector) {
    var matches = element.matches || element.msMatchesSelector || element.webkitMatchesSelector;
    if (matches) {
        return matches.call(element, selector);
    }
    else {
        return [].indexOf.call(document.querySelectorAll(selector), element) !== -1;
    }
}


/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = Property;
/* harmony export (immutable) */ __webpack_exports__["b"] = Complex;
/* harmony export (immutable) */ __webpack_exports__["c"] = ComplexFactory;
/* harmony export (immutable) */ __webpack_exports__["d"] = Collection;
/* harmony export (immutable) */ __webpack_exports__["e"] = CollectionFactory;
/* harmony export (immutable) */ __webpack_exports__["f"] = Event;
/* harmony export (immutable) */ __webpack_exports__["g"] = NotifyPropertyChanges;
/* harmony export (immutable) */ __webpack_exports__["h"] = CreateBuilder;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

function getObject(instance, curKey, defaultValue, type) {
    if (!instance.properties.hasOwnProperty(curKey)) {
        instance.properties[curKey] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["a" /* createInstance */])(type, [instance, curKey, defaultValue]);
    }
    return instance.properties[curKey];
}
function getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {
    var result = [];
    var len = defaultValue.length;
    for (var i = 0; i < len; i++) {
        var curType = type;
        if (isFactory) {
            curType = type(defaultValue[i]);
        }
        if (isSetter) {
            var inst = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["a" /* createInstance */])(curType, [instance, curKey, {}, true]);
            inst.setProperties(defaultValue[i], true);
            result.push(inst);
        }
        else {
            result.push(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["a" /* createInstance */])(curType, [instance, curKey, defaultValue[i], true]));
        }
    }
    return result;
}
function propertyGetter(defaultValue, curKey) {
    return function () {
        if (!this.properties.hasOwnProperty(curKey)) {
            this.properties[curKey] = defaultValue;
        }
        return this.properties[curKey];
    };
}
function propertySetter(defaultValue, curKey) {
    return function (newValue) {
        if (this.properties[curKey] !== newValue) {
            var oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;
            this.saveChanges(curKey, newValue, oldVal);
            this.properties[curKey] = newValue;
        }
    };
}
function complexGetter(defaultValue, curKey, type) {
    return function () {
        return getObject(this, curKey, defaultValue, type);
    };
}
function complexSetter(defaultValue, curKey, type) {
    return function (newValue) {
        getObject(this, curKey, defaultValue, type).setProperties(newValue);
    };
}
function complexFactoryGetter(defaultValue, curKey, type) {
    return function () {
        var curType = type({});
        return getObject(this, curKey, defaultValue, curType);
    };
}
function complexFactorySetter(defaultValue, curKey, type) {
    return function (newValue) {
        var curType = type(newValue);
        getObject(this, curKey, defaultValue, curType).setProperties(newValue);
    };
}
function complexArrayGetter(defaultValue, curKey, type) {
    return function () {
        if (!this.properties.hasOwnProperty(curKey)) {
            var defCollection = getObjectArray(this, curKey, defaultValue, type, false);
            this.properties[curKey] = defCollection;
        }
        return this.properties[curKey];
    };
}
function complexArraySetter(defaultValue, curKey, type) {
    return function (newValue) {
        var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);
        var newValCollection = getObjectArray(this, curKey, newValue, type, true);
        this.saveChanges(curKey, newValCollection, oldValueCollection);
        this.properties[curKey] = newValCollection;
    };
}
function complexArrayFactorySetter(defaultValue, curKey, type) {
    return function (newValue) {
        var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false, true);
        var newValCollection = getObjectArray(this, curKey, newValue, type, true, true);
        this.saveChanges(curKey, newValCollection, oldValueCollection);
        this.properties[curKey] = newValCollection;
    };
}
function complexArrayFactoryGetter(defaultValue, curKey, type) {
    return function () {
        var curType = type({});
        if (!this.properties.hasOwnProperty(curKey)) {
            var defCollection = getObjectArray(this, curKey, defaultValue, curType, false);
            this.properties[curKey] = defCollection;
        }
        return this.properties[curKey];
    };
}
function Property(defaultValue) {
    return function (target, key) {
        var propertyDescriptor = {
            set: propertySetter(defaultValue, key),
            get: propertyGetter(defaultValue, key),
            enumerable: true,
            configurable: true
        };
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'prop', defaultValue);
    };
}
function Complex(defaultValue, type) {
    return function (target, key) {
        var propertyDescriptor = {
            set: complexSetter(defaultValue, key, type),
            get: complexGetter(defaultValue, key, type),
            enumerable: true,
            configurable: true
        };
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'complexProp', defaultValue, type);
    };
}
function ComplexFactory(type) {
    return function (target, key) {
        var propertyDescriptor = {
            set: complexFactorySetter({}, key, type),
            get: complexFactoryGetter({}, key, type),
            enumerable: true,
            configurable: true
        };
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'complexProp', {}, type);
    };
}
function Collection(defaultValue, type) {
    return function (target, key) {
        var propertyDescriptor = {
            set: complexArraySetter(defaultValue, key, type),
            get: complexArrayGetter(defaultValue, key, type),
            enumerable: true,
            configurable: true
        };
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'colProp', defaultValue, type);
    };
}
function CollectionFactory(type) {
    return function (target, key) {
        var propertyDescriptor = {
            set: complexArrayFactorySetter([], key, type),
            get: complexArrayFactoryGetter([], key, type),
            enumerable: true,
            configurable: true
        };
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'colProp', {}, type);
    };
}
function Event() {
    return function (target, key) {
        var eventDescriptor = {
            set: function (newValue) {
                var oldValue = this.properties[key];
                if (oldValue !== newValue) {
                    var finalContext = getParentContext(this, key);
                    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(oldValue) === false) {
                        finalContext.context.removeEventListener(finalContext.prefix, oldValue);
                    }
                    finalContext.context.addEventListener(finalContext.prefix, newValue);
                    this.properties[key] = newValue;
                }
            },
            get: propertyGetter(undefined, key),
            enumerable: true,
            configurable: true
        };
        Object.defineProperty(target, key, eventDescriptor);
        addPropertyCollection(target, key, 'event');
    };
}
function NotifyPropertyChanges(classConstructor) {
}
function addPropertyCollection(target, key, propertyType, defaultValue, type) {
    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(target.propList)) {
        target.propList = {
            props: [],
            complexProps: [],
            colProps: [],
            events: [],
            propNames: [],
            complexPropNames: [],
            colPropNames: [],
            eventNames: []
        };
    }
    target.propList[propertyType + 's'].push({
        propertyName: key,
        defaultValue: defaultValue,
        type: type
    });
    target.propList[propertyType + 'Names'].push(key);
}
function getBuilderProperties(component) {
    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(component.prototype.builderObject)) {
        component.prototype.builderObject = {
            properties: {}, propCollections: [], add: function () {
                this.isPropertyArray = true;
                this.propCollections.push(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])({}, this.properties, {}));
            }
        };
        var rex = /complex/;
        for (var _i = 0, _a = Object.keys(component.prototype.propList); _i < _a.length; _i++) {
            var key = _a[_i];
            var _loop_1 = function (prop) {
                if (rex.test(key)) {
                    component.prototype.builderObject[prop.propertyName] = function (value) {
                        var childType = {};
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["h" /* merge */])(childType, getBuilderProperties(prop.type));
                        value(childType);
                        var tempValue;
                        if (!childType.isPropertyArray) {
                            tempValue = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])({}, childType.properties, {});
                        }
                        else {
                            tempValue = childType.propCollections;
                        }
                        this.properties[prop.propertyName] = tempValue;
                        childType.properties = {};
                        childType.propCollections = [];
                        childType.isPropertyArray = false;
                        return this;
                    };
                }
                else {
                    component.prototype.builderObject[prop.propertyName] = function (value) {
                        this.properties[prop.propertyName] = value;
                        return this;
                    };
                }
            };
            for (var _b = 0, _c = component.prototype.propList[key]; _b < _c.length; _b++) {
                var prop = _c[_b];
                _loop_1(prop);
            }
        }
    }
    return component.prototype.builderObject;
}
function CreateBuilder(component) {
    var builderFunction = function (element) {
        this.element = element;
        return this;
    };
    var instanceFunction = function (element) {
        if (!builderFunction.prototype.hasOwnProperty('create')) {
            builderFunction.prototype = getBuilderProperties(component);
            builderFunction.prototype.create = function () {
                var temp = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])({}, {}, this.properties);
                this.properties = {};
                return new component(temp, this.element);
            };
        }
        return new builderFunction(element);
    };
    return instanceFunction;
}
function getParentContext(context, prefix) {
    if (context.hasOwnProperty('parentObj') === false) {
        return { context: context, prefix: prefix };
    }
    else {
        var curText = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('propName', context);
        if (curText) {
            prefix = curText + '-' + prefix;
        }
        return getParentContext(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('parentObj', context), prefix);
    }
}


/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfNumber; });
var PdfNumber = (function () {
    function PdfNumber(value) {
        this.position5 = -1;
        this.value = value;
    }
    Object.defineProperty(PdfNumber.prototype, "intValue", {
        get: function () {
            return this.value;
        },
        set: function (value) {
            this.value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfNumber.prototype, "isInteger", {
        get: function () {
            return this.integer;
        },
        set: function (value) {
            this.integer = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfNumber.prototype, "status", {
        get: function () {
            return this.status5;
        },
        set: function (value) {
            this.status5 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfNumber.prototype, "isSaving", {
        get: function () {
            return this.isSaving5;
        },
        set: function (value) {
            this.isSaving5 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfNumber.prototype, "objectCollectionIndex", {
        get: function () {
            return this.index5;
        },
        set: function (value) {
            this.index5 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfNumber.prototype, "position", {
        get: function () {
            return this.position5;
        },
        set: function (value) {
            this.position5 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfNumber.prototype, "clonedObject", {
        get: function () {
            var rValue = null;
            return rValue;
        },
        enumerable: true,
        configurable: true
    });
    PdfNumber.prototype.save = function (writer) {
        writer.write(this.intValue.toString());
    };
    PdfNumber.prototype.clone = function (crossTable) {
        var newNumber = new PdfNumber(this.value);
        return newNumber;
    };
    PdfNumber.floatToString = function (number) {
        var returnString = number.toFixed(2);
        if (returnString === '0.00') {
            returnString = '.00';
        }
        return returnString;
    };
    PdfNumber.min = function (x, y, z) {
        var r = Math.min(x, y);
        return Math.min(z, r);
    };
    return PdfNumber;
}());



/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__manager__ = __webpack_require__(125);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "DataManager", function() { return __WEBPACK_IMPORTED_MODULE_0__manager__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Deferred", function() { return __WEBPACK_IMPORTED_MODULE_0__manager__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__query__ = __webpack_require__(57);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Query", function() { return __WEBPACK_IMPORTED_MODULE_1__query__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Predicate", function() { return __WEBPACK_IMPORTED_MODULE_1__query__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__adaptors__ = __webpack_require__(124);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Adaptor", function() { return __WEBPACK_IMPORTED_MODULE_2__adaptors__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "JsonAdaptor", function() { return __WEBPACK_IMPORTED_MODULE_2__adaptors__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "UrlAdaptor", function() { return __WEBPACK_IMPORTED_MODULE_2__adaptors__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ODataAdaptor", function() { return __WEBPACK_IMPORTED_MODULE_2__adaptors__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ODataV4Adaptor", function() { return __WEBPACK_IMPORTED_MODULE_2__adaptors__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "WebApiAdaptor", function() { return __WEBPACK_IMPORTED_MODULE_2__adaptors__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "WebMethodAdaptor", function() { return __WEBPACK_IMPORTED_MODULE_2__adaptors__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RemoteSaveAdaptor", function() { return __WEBPACK_IMPORTED_MODULE_2__adaptors__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "CacheAdaptor", function() { return __WEBPACK_IMPORTED_MODULE_2__adaptors__["i"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(58);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "DataUtil", function() { return __WEBPACK_IMPORTED_MODULE_3__util__["a"]; });






/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfArray; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pdf_number__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__input_output_pdf_operators__ = __webpack_require__(29);


var PdfArray = (function () {
    function PdfArray(array) {
        this.startMark = '[';
        this.endMark = ']';
        this.position9 = -1;
        this.clonedObject9 = null;
        if (typeof array === 'undefined') {
            this.internalElements = [];
        }
        else {
            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {
                var tempNumberArray = array;
                for (var index = 0; index < tempNumberArray.length; index++) {
                    var pdfNumber = new __WEBPACK_IMPORTED_MODULE_0__pdf_number__["a" /* PdfNumber */](tempNumberArray[index]);
                    this.add(pdfNumber);
                }
            }
            else {
                var tempArray = array;
                this.internalElements = [];
                for (var index = 0; index < tempArray.elements.length; index++) {
                    this.internalElements.push(tempArray.elements[index]);
                }
            }
        }
    }
    PdfArray.prototype.items = function (index) {
        return this.internalElements[index];
    };
    Object.defineProperty(PdfArray.prototype, "count", {
        get: function () {
            return this.internalElements.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfArray.prototype, "status", {
        get: function () {
            return this.status9;
        },
        set: function (value) {
            this.status9 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfArray.prototype, "isSaving", {
        get: function () {
            return this.isSaving9;
        },
        set: function (value) {
            this.isSaving9 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfArray.prototype, "clonedObject", {
        get: function () {
            return this.clonedObject9;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfArray.prototype, "position", {
        get: function () {
            return this.position9;
        },
        set: function (value) {
            this.position9 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfArray.prototype, "objectCollectionIndex", {
        get: function () {
            return this.index9;
        },
        set: function (value) {
            this.index9 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfArray.prototype, "CrossTable", {
        get: function () {
            return this.pdfCrossTable;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfArray.prototype, "elements", {
        get: function () {
            return this.internalElements;
        },
        enumerable: true,
        configurable: true
    });
    PdfArray.prototype.add = function (element) {
        if (typeof this.internalElements === 'undefined') {
            this.internalElements = [];
        }
        this.internalElements.push(element);
        this.markedChange();
    };
    PdfArray.prototype.markedChange = function () {
        this.bChanged = true;
    };
    PdfArray.prototype.contains = function (element) {
        var returnValue = false;
        for (var index = 0; index < this.internalElements.length; index++) {
            var tempElement = this.internalElements[index];
            var inputElement = element;
            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {
                if (tempElement.value === inputElement.value) {
                    return true;
                }
            }
        }
        return returnValue;
    };
    PdfArray.prototype.getItems = function (index) {
        return this.internalElements[index];
    };
    PdfArray.prototype.save = function (writer) {
        writer.write(this.startMark);
        for (var i = 0, len = this.count; i < len; i++) {
            this.getItems(i).save(writer);
            if (i + 1 !== len) {
                writer.write(__WEBPACK_IMPORTED_MODULE_1__input_output_pdf_operators__["a" /* Operators */].whiteSpace);
            }
        }
        writer.write(this.endMark);
    };
    PdfArray.prototype.clone = function (crossTable) {
        this.clonedObject9 = null;
        var newArray = new PdfArray();
        for (var index = 0; index < this.internalElements.length; index++) {
            var obj = this.internalElements[index];
            newArray.add(obj.clone(crossTable));
        }
        newArray.pdfCrossTable = crossTable;
        this.clonedObject9 = newArray;
        return newArray;
    };
    PdfArray.fromRectangle = function (bounds) {
        var values = [bounds.x, bounds.y, bounds.width, bounds.height];
        var array = new PdfArray(values);
        return array;
    };
    PdfArray.prototype.insert = function (index, element) {
        if (index < this.internalElements.length && index > 0) {
            var tempElements = [];
            for (var i = 0; i < index; i++) {
                tempElements.push(this.internalElements[i]);
            }
            tempElements.push(element);
            for (var i = index; i < this.internalElements.length; i++) {
                tempElements.push(this.internalElements[i]);
            }
            this.internalElements = tempElements;
        }
        else {
            this.internalElements.push(element);
        }
        this.markChanged();
    };
    PdfArray.prototype.indexOf = function (element) {
        return this.internalElements.indexOf(element);
    };
    PdfArray.prototype.remove = function (element) {
        var index = this.internalElements.indexOf(element);
        this.internalElements[index] = null;
        this.markChanged();
    };
    PdfArray.prototype.removeAt = function (index) {
        if (this.internalElements.length > index) {
            var tempArray = [];
            for (var i = 0; i < index; i++) {
                tempArray.push(this.internalElements[i]);
            }
            for (var i = index + 1; i < this.internalElements.length; i++) {
                tempArray.push(this.internalElements[i]);
            }
            this.internalElements = tempArray;
        }
        this.markChanged();
    };
    PdfArray.prototype.clear = function () {
        this.internalElements = [];
        this.markChanged();
    };
    PdfArray.prototype.markChanged = function () {
        this.bChanged = true;
    };
    return PdfArray;
}());



/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EventHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

var EventHandler = (function () {
    function EventHandler() {
    }
    EventHandler.addOrGetEventData = function (element) {
        if ('__eventList' in element) {
            return element.__eventList.events;
        }
        else {
            element.__eventList = {};
            return element.__eventList.events = [];
        }
    };
    EventHandler.add = function (element, eventName, listener, bindTo, intDebounce) {
        var eventData = EventHandler.addOrGetEventData(element);
        var debounceListener;
        if (intDebounce) {
            debounceListener = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["m" /* debounce */])(listener, intDebounce);
        }
        else {
            debounceListener = listener;
        }
        if (bindTo) {
            debounceListener = debounceListener.bind(bindTo);
        }
        var event = eventName.split(' ');
        for (var i = 0; i < event.length; i++) {
            eventData.push({
                name: event[i],
                listener: listener,
                debounce: debounceListener
            });
            element.addEventListener(event[i], debounceListener);
        }
        return debounceListener;
    };
    EventHandler.remove = function (element, eventName, listener) {
        var eventData = EventHandler.addOrGetEventData(element);
        var event = eventName.split(' ');
        var _loop_1 = function (j) {
            var index = -1;
            var debounceListener;
            if (eventData && eventData.length !== 0) {
                eventData.some(function (x, i) {
                    return x.name === event[j] && x.listener === listener ?
                        (index = i, debounceListener = x.debounce, true) : false;
                });
            }
            if (index !== -1) {
                eventData.splice(index, 1);
            }
            element.removeEventListener(event[j], debounceListener);
        };
        for (var j = 0; j < event.length; j++) {
            _loop_1(j);
        }
    };
    EventHandler.clearEvents = function (element) {
        var eventData;
        var copyData;
        eventData = EventHandler.addOrGetEventData(element);
        copyData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])([], copyData, eventData);
        for (var i = 0; i < copyData.length; i++) {
            element.removeEventListener(copyData[i].name, copyData[i].debounce);
            eventData.shift();
        }
    };
    EventHandler.trigger = function (element, eventName, eventProp) {
        var eventData = EventHandler.addOrGetEventData(element);
        var fn = null;
        for (var _i = 0, eventData_1 = eventData; _i < eventData_1.length; _i++) {
            var event_1 = eventData_1[_i];
            if (event_1.name === eventName) {
                event_1.debounce.call(this, eventProp);
            }
        }
    };
    return EventHandler;
}());



/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfReference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PdfReferenceHolder; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__input_output_pdf_dictionary_properties__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_stream__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_array__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_number__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_dictionary__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_string__ = __webpack_require__(40);







var PdfReference = (function () {
    function PdfReference(objNumber, genNumber) {
        this.index3 = -1;
        this.position3 = -1;
        this.objNumber = 0;
        this.genNumber = 0;
        if (typeof objNumber === 'number' && typeof genNumber === 'number') {
            this.objNumber = objNumber;
            this.genNumber = genNumber;
        }
        else {
            this.objNumber = Number(objNumber);
            this.genNumber = Number(genNumber);
        }
    }
    Object.defineProperty(PdfReference.prototype, "status", {
        get: function () {
            return this.status3;
        },
        set: function (value) {
            this.status3 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReference.prototype, "isSaving", {
        get: function () {
            return this.isSaving3;
        },
        set: function (value) {
            this.isSaving3 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReference.prototype, "objectCollectionIndex", {
        get: function () {
            return this.index3;
        },
        set: function (value) {
            this.index3 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReference.prototype, "position", {
        get: function () {
            return this.position3;
        },
        set: function (value) {
            this.position3 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReference.prototype, "clonedObject", {
        get: function () {
            var returnObject3 = null;
            return returnObject3;
        },
        enumerable: true,
        configurable: true
    });
    PdfReference.prototype.save = function (writer) {
        writer.write(this.toString());
    };
    PdfReference.prototype.toString = function () {
        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';
    };
    PdfReference.prototype.clone = function (crossTable) {
        return null;
    };
    return PdfReference;
}());

var PdfReferenceHolder = (function () {
    function PdfReferenceHolder(obj1, obj2) {
        this.index4 = -1;
        this.position4 = -1;
        this.objectIndex = -1;
        this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_0__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        if (obj1 instanceof __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_array__["a" /* PdfArray */]
            || obj1 instanceof __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_dictionary__["a" /* PdfDictionary */]
            || obj1 instanceof __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_name__["a" /* PdfName */]
            || obj1 instanceof __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_number__["a" /* PdfNumber */]
            || obj1 instanceof __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_stream__["a" /* PdfStream */]
            || obj1 instanceof PdfReference
            || obj1 instanceof __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_string__["b" /* PdfString */]) {
            this.primitiveObject = obj1;
        }
        else {
            var tempObj = obj1;
            this.constructor(tempObj.element);
        }
    }
    Object.defineProperty(PdfReferenceHolder.prototype, "status", {
        get: function () {
            return this.status4;
        },
        set: function (value) {
            this.status4 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "isSaving", {
        get: function () {
            return this.isSaving4;
        },
        set: function (value) {
            this.isSaving4 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "objectCollectionIndex", {
        get: function () {
            return this.index4;
        },
        set: function (value) {
            this.index4 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "position", {
        get: function () {
            return this.position4;
        },
        set: function (value) {
            this.position4 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "clonedObject", {
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "object", {
        get: function () {
            return this.primitiveObject;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "reference", {
        get: function () {
            return this.pdfReference;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "index", {
        get: function () {
            return this.objectIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "element", {
        get: function () {
            return this.primitiveObject;
        },
        enumerable: true,
        configurable: true
    });
    PdfReferenceHolder.prototype.save = function (writer) {
        var position = writer.position;
        var cTable = writer.document.crossTable;
        this.object.isSaving = true;
        var reference = null;
        reference = cTable.getReference(this.object);
        reference.save(writer);
    };
    PdfReferenceHolder.prototype.clone = function (crossTable) {
        var refHolder = null;
        var temp = null;
        var refNum = '';
        var reference = null;
        return null;
    };
    return PdfReferenceHolder;
}());



/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, util_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var CellRenderer = (function () {
        function CellRenderer(parent, locator) {
            this.element = ej2_base_2.createElement('TD', { className: 'e-rowcell', attrs: { role: 'gridcell', tabindex: '-1' } });
            this.localizer = locator.getService('localization');
            this.formatter = locator.getService('valueFormatter');
            this.parent = parent;
        }
        CellRenderer.prototype.getGui = function () {
            return '';
        };
        CellRenderer.prototype.format = function (column, value, data) {
            if (!ej2_base_1.isNullOrUndefined(column.format)) {
                value = this.formatter.toView(value, column.getFormatter());
            }
            return ej2_base_1.isNullOrUndefined(value) ? '' : value.toString();
        };
        CellRenderer.prototype.evaluate = function (node, cell, data, attributes) {
            var result;
            if (cell.column.template) {
                var literals = ['index'];
                result = cell.column.getColumnTemplate()(ej2_base_1.extend({ 'index': attributes[literals[0]] }, data));
                util_1.appendChildren(node, result);
                node.setAttribute('aria-label', node.innerText + ' is template cell' + ' column header ' +
                    cell.column.headerText);
                return false;
            }
            return true;
        };
        CellRenderer.prototype.invokeFormatter = function (column, value, data) {
            if (!ej2_base_1.isNullOrUndefined(column.formatter)) {
                if (util_1.doesImplementInterface(column.formatter, 'getValue')) {
                    var formatter = column.formatter;
                    value = new formatter().getValue(column, data);
                }
                else if (typeof column.formatter === 'function') {
                    value = column.formatter(column, data);
                }
                else {
                    value = column.formatter.getValue(column, data);
                }
            }
            return value;
        };
        CellRenderer.prototype.render = function (cell, data, attributes) {
            return this.refreshCell(cell, data, attributes);
        };
        CellRenderer.prototype.refreshTD = function (td, cell, data, attributes) {
            var node = this.refreshCell(cell, data, attributes);
            td.innerHTML = '';
            var elements = [].slice.call(node.childNodes);
            for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
                var elem = elements_1[_i];
                td.appendChild(elem);
            }
        };
        CellRenderer.prototype.refreshCell = function (cell, data, attributes) {
            var node = this.element.cloneNode();
            var column = cell.column;
            var innerHtml = this.getGui();
            var value = this.getValue(column.field, data, column);
            if (column.type === 'date') {
                value = new Date(value);
            }
            value = this.format(column, value, data);
            innerHtml = value.toString();
            if (column.type === 'boolean') {
                var isNull = (value !== 'true' && value !== 'false');
                if (column.displayAsCheckBox) {
                    node.classList.add('e-checkbox');
                    innerHtml = isNull ? null : '<input type="checkbox" disabled ' + (value === 'true' ? 'checked' : '') + '/>';
                }
                else {
                    var localeStr = isNull ? null : value === 'true' ? 'True' : 'False';
                    innerHtml = localeStr ? this.localizer.getConstant(localeStr) : innerHtml;
                }
            }
            var fromFormatter = this.invokeFormatter(column, value, data);
            innerHtml = !ej2_base_1.isNullOrUndefined(column.formatter) ? ej2_base_1.isNullOrUndefined(fromFormatter) ? '' : fromFormatter.toString() : innerHtml;
            node.setAttribute('aria-label', innerHtml + ' column header ' + cell.column.headerText);
            if (this.evaluate(node, cell, data, attributes)) {
                this.appendHtml(node, innerHtml, column.getDomSetter ? column.getDomSetter() : 'innerHTML');
            }
            this.setAttributes(node, cell, attributes);
            return node;
        };
        CellRenderer.prototype.appendHtml = function (node, innerHtml, property) {
            if (property === void 0) { property = 'innerHTML'; }
            node[property] = innerHtml;
            return node;
        };
        CellRenderer.prototype.setAttributes = function (node, cell, attributes) {
            var column = cell.column;
            this.buildAttributeFromCell(node, cell);
            util_1.setStyleAndAttributes(node, attributes);
            util_1.setStyleAndAttributes(node, cell.attributes);
            if (column.customAttributes) {
                util_1.setStyleAndAttributes(node, column.customAttributes);
            }
            if (column.textAlign) {
                node.style.textAlign = column.textAlign;
            }
        };
        CellRenderer.prototype.buildAttributeFromCell = function (node, cell) {
            var attr = {};
            var prop = { 'colindex': 'aria-colindex' };
            var classes = [];
            if (cell.colSpan) {
                attr.colSpan = cell.colSpan;
            }
            if (cell.rowSpan) {
                attr.rowSpan = cell.rowSpan;
            }
            if (cell.isTemplate) {
                classes.push('e-templatecell');
            }
            if (cell.isSelected) {
                classes.push.apply(classes, ['e-selectionbackground', 'e-active']);
            }
            if (!ej2_base_1.isNullOrUndefined(cell.index)) {
                attr[prop.colindex] = cell.index;
            }
            if (!cell.visible) {
                classes.push('e-hide');
            }
            attr.class = classes;
            util_1.setStyleAndAttributes(node, attr);
        };
        CellRenderer.prototype.getValue = function (field, data, column) {
            return column.valueAccessor(column.field, data, column);
        };
        return CellRenderer;
    }());
    exports.CellRenderer = CellRenderer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Browser; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

var REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;
var REGX_IE = /msie|trident/i;
var REGX_IE11 = /Trident\/7\./;
var REGX_IOS = /(ipad|iphone|ipod touch)/i;
var REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\d|(ipad|iphone|ipod touch);.*os 8_\d/i;
var REGX_ANDROID = /android/i;
var REGX_WINDOWS = /trident|windows phone|edge/i;
var REGX_VERSION = /(version)[ \/]([\w.]+)/i;
var REGX_BROWSER = {
    OPERA: /(opera|opr)(?:.*version|)[ \/]([\w.]+)/i,
    EDGE: /(edge)(?:.*version|)[ \/]([\w.]+)/i,
    CHROME: /(chrome|crios)[ \/]([\w.]+)/i,
    PANTHOMEJS: /(phantomjs)[ \/]([\w.]+)/i,
    SAFARI: /(safari)[ \/]([\w.]+)/i,
    WEBKIT: /(webkit)[ \/]([\w.]+)/i,
    MSIE: /(msie|trident) ([\w.]+)/i,
    MOZILLA: /(mozilla)(?:.*? rv:([\w.]+)|)/i
};
window.browserDetails = window.browserDetails || {};
var Browser = (function () {
    function Browser() {
    }
    Browser.extractBrowserDetail = function () {
        var browserInfo = { culture: {} };
        var keys = Object.keys(REGX_BROWSER);
        var clientInfo = [];
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var key = keys_1[_i];
            clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);
            if (clientInfo) {
                browserInfo.name = (clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase());
                browserInfo.name = (clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name);
                browserInfo.version = clientInfo[2];
                browserInfo.culture.name = browserInfo.culture.language = navigator.language;
                if (!!Browser.userAgent.match(REGX_IE11)) {
                    browserInfo.name = 'msie';
                    break;
                }
                var version = Browser.userAgent.match(REGX_VERSION);
                if (browserInfo.name === 'safari' && version) {
                    browserInfo.version = version[2];
                }
                break;
            }
        }
        return browserInfo;
    };
    Browser.getEvent = function (event) {
        var events = {
            start: {
                isPointer: 'pointerdown', isTouch: 'touchstart', isDevice: 'mousedown'
            },
            move: {
                isPointer: 'pointermove', isTouch: 'touchmove', isDevice: 'mousemove'
            },
            end: {
                isPointer: 'pointerup', isTouch: 'touchend', isDevice: 'mouseup'
            }
        };
        return (Browser.isPointer ? events[event].isPointer :
            (Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '')
                : events[event].isDevice));
    };
    Browser.getTouchStartEvent = function () {
        return Browser.getEvent('start');
    };
    Browser.getTouchEndEvent = function () {
        return Browser.getEvent('end');
    };
    Browser.getTouchMoveEvent = function () {
        return Browser.getEvent('move');
    };
    Browser.getValue = function (key, regX) {
        var browserDetails = window.browserDetails;
        if ('undefined' === typeof browserDetails[key]) {
            return browserDetails[key] = regX.test(Browser.userAgent);
        }
        return browserDetails[key];
    };
    Object.defineProperty(Browser, "userAgent", {
        get: function () {
            return Browser.uA;
        },
        set: function (uA) {
            Browser.uA = uA;
            window.browserDetails = {};
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "info", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.info)) {
                return window.browserDetails.info = Browser.extractBrowserDetail();
            }
            return window.browserDetails.info;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isIE", {
        get: function () {
            return Browser.getValue('isIE', REGX_IE);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isTouch", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.isTouch)) {
                return window.browserDetails.isTouch = ('ontouchstart' in window);
            }
            return window.browserDetails.isTouch;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isPointer", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.isPointer)) {
                return window.browserDetails.isPointer = ('pointerEnabled' in window.navigator);
            }
            return window.browserDetails.isPointer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isMSPointer", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.isMSPointer)) {
                return window.browserDetails.isMSPointer = ('msPointerEnabled' in window.navigator);
            }
            return window.browserDetails.isMSPointer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isDevice", {
        get: function () {
            return Browser.getValue('isDevice', REGX_MOBILE);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isIos", {
        get: function () {
            return Browser.getValue('isIos', REGX_IOS);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isIos7", {
        get: function () {
            return Browser.getValue('isIos7', REGX_IOS7);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isAndroid", {
        get: function () {
            return Browser.getValue('isAndroid', REGX_ANDROID);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isWebView", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.isWebView)) {
                window.browserDetails.isWebView = !(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.cordova) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.PhoneGap)
                    && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.phonegap) && window.forge !== 'object');
                return window.browserDetails.isWebView;
            }
            return window.browserDetails.isWebView;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isWindows", {
        get: function () {
            return Browser.getValue('isWindows', REGX_WINDOWS);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "touchStartEvent", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.touchStartEvent)) {
                return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();
            }
            return window.browserDetails.touchStartEvent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "touchMoveEvent", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.touchMoveEvent)) {
                return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();
            }
            return window.browserDetails.touchMoveEvent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "touchEndEvent", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.touchEndEvent)) {
                return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();
            }
            return window.browserDetails.touchEndEvent;
        },
        enumerable: true,
        configurable: true
    });
    return Browser;
}());

Browser.uA = navigator.userAgent;


/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return IntlBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parser_base__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__date_formatter__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__number_formatter__ = __webpack_require__(44);




var IntlBase;
(function (IntlBase) {
    IntlBase.negativeDataRegex = /^(('[^']+'|''|[^*#@0,.E])*)(\*.)?((([#,]*[0,]*0+)(\.0*[0-9]*#*)?)|([#,]*@+#*))(E\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;
    IntlBase.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\*.)?((([0#,]*[0,]*[0#]*)(\.[0#]*)?)|([#,]*@+#*))(E\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;
    IntlBase.latnParseRegex = /0|1|2|3|4|5|6|7|8|9/g;
    var fractionRegex = /[0-9]/g;
    IntlBase.defaultCurrency = '$';
    var mapper = ['infinity', 'nan', 'group', 'decimal'];
    var patternRegex = /G|M|L|H|c|'| a|yy|y|EEEE|E/g;
    var patternMatch = {
        'G': '',
        'M': 'm',
        'L': 'm',
        'H': 'h',
        'c': 'd',
        '\'': '"',
        ' a': ' AM/PM',
        'yy': 'yy',
        'y': 'yyyy',
        'EEEE': 'dddd',
        'E': 'ddd'
    };
    IntlBase.formatRegex = /(^[ncpa]{1})([0-1]?[0-9]|20)?$/i;
    var typeMapper = {
        '$': 'isCurrency',
        '%': 'isPercent',
        '-': 'isNegative',
        0: 'nlead',
        1: 'nend'
    };
    IntlBase.dateParseRegex = /([a-z])\1*|'([^']|'')+'|''|./gi;
    IntlBase.basicPatterns = ['short', 'medium', 'long', 'full'];
    IntlBase.defaultObject = {
        'dates': {
            'calendars': {
                'gregorian': {
                    'months': {
                        'stand-alone': {
                            'abbreviated': {
                                '1': 'Jan',
                                '2': 'Feb',
                                '3': 'Mar',
                                '4': 'Apr',
                                '5': 'May',
                                '6': 'Jun',
                                '7': 'Jul',
                                '8': 'Aug',
                                '9': 'Sep',
                                '10': 'Oct',
                                '11': 'Nov',
                                '12': 'Dec'
                            },
                            'narrow': {
                                '1': 'J',
                                '2': 'F',
                                '3': 'M',
                                '4': 'A',
                                '5': 'M',
                                '6': 'J',
                                '7': 'J',
                                '8': 'A',
                                '9': 'S',
                                '10': 'O',
                                '11': 'N',
                                '12': 'D'
                            },
                            'wide': {
                                '1': 'January',
                                '2': 'February',
                                '3': 'March',
                                '4': 'April',
                                '5': 'May',
                                '6': 'June',
                                '7': 'July',
                                '8': 'August',
                                '9': 'September',
                                '10': 'October',
                                '11': 'November',
                                '12': 'December'
                            }
                        }
                    },
                    "days": {
                        "stand-alone": {
                            "abbreviated": {
                                "sun": "Sun",
                                "mon": "Mon",
                                "tue": "Tue",
                                "wed": "Wed",
                                "thu": "Thu",
                                "fri": "Fri",
                                "sat": "Sat"
                            },
                            "narrow": {
                                "sun": "S",
                                "mon": "M",
                                "tue": "T",
                                "wed": "W",
                                "thu": "T",
                                "fri": "F",
                                "sat": "S"
                            },
                            "short": {
                                "sun": "Su",
                                "mon": "Mo",
                                "tue": "Tu",
                                "wed": "We",
                                "thu": "Th",
                                "fri": "Fr",
                                "sat": "Sa"
                            },
                            "wide": {
                                "sun": "Sunday",
                                "mon": "Monday",
                                "tue": "Tuesday",
                                "wed": "Wednesday",
                                "thu": "Thursday",
                                "fri": "Friday",
                                "sat": "Saturday"
                            }
                        }
                    },
                    "dayPeriods": {
                        "format": {
                            "wide": {
                                "am": "AM",
                                "pm": "PM"
                            }
                        }
                    },
                    'eras': {
                        'eraNames': {
                            '0': 'Before Christ',
                            '0-alt-variant': 'Before Common Era',
                            '1': 'Anno Domini',
                            "1-alt-variant": "Common Era"
                        },
                        'eraAbbr': {
                            '0': 'BC',
                            '0-alt-variant': 'BCE',
                            '1': 'AD',
                            '1-alt-variant': 'CE'
                        },
                        'eraNarrow': {
                            '0': 'B',
                            '0-alt-variant': 'BCE',
                            '1': 'A',
                            '1-alt-variant': 'CE'
                        }
                    },
                    'dateFormats': {
                        'full': 'EEEE, MMMM d, y',
                        'long': 'MMMM d, y',
                        'medium': 'MMM d, y',
                        'short': 'M/d/yy'
                    },
                    'timeFormats': {
                        'full': 'h:mm:ss a zzzz',
                        'long': 'h:mm:ss a z',
                        'medium': 'h:mm:ss a',
                        'short': 'h:mm a'
                    },
                    'dateTimeFormats': {
                        'full': "{1} 'at' {0}",
                        'long': "{1} 'at' {0}",
                        'medium': '{1}, {0}',
                        'short': '{1}, {0}',
                        'availableFormats': {
                            'd': 'd',
                            'E': 'ccc',
                            'Ed': 'd E',
                            'Ehm': 'E h:mm a',
                            'EHm': 'E HH:mm',
                            'Ehms': 'E h:mm:ss a',
                            'EHms': 'E HH:mm:ss',
                            'Gy': 'y G',
                            'GyMMM': 'MMM y G',
                            'GyMMMd': 'MMM d, y G',
                            'GyMMMEd': 'E, MMM d, y G',
                            'h': 'h a',
                            'H': 'HH',
                            'hm': 'h:mm a',
                            'Hm': 'HH:mm',
                            'hms': 'h:mm:ss a',
                            'Hms': 'HH:mm:ss',
                            'hmsv': 'h:mm:ss a v',
                            'Hmsv': 'HH:mm:ss v',
                            'hmv': 'h:mm a v',
                            'Hmv': 'HH:mm v',
                            'M': 'L',
                            'Md': 'M/d',
                            'MEd': 'E, M/d',
                            'MMM': 'LLL',
                            'MMMd': 'MMM d',
                            'MMMEd': 'E, MMM d',
                            'MMMMd': 'MMMM d',
                            'ms': 'mm:ss',
                            'y': 'y',
                            'yM': 'M/y',
                            'yMd': 'M/d/y',
                            'yMEd': 'E, M/d/y',
                            'yMMM': 'MMM y',
                            'yMMMd': 'MMM d, y',
                            'yMMMEd': 'E, MMM d, y',
                            'yMMMM': 'MMMM y',
                        },
                    }
                }
            },
            'timeZoneNames': {
                "hourFormat": "+HH:mm;-HH:mm",
                "gmtFormat": "GMT{0}",
                "gmtZeroFormat": "GMT",
            }
        },
        'numbers': {
            'currencies': {
                'USD': {
                    'displayName': 'US Dollar',
                    'symbol': '$',
                    'symbol-alt-narrow': '$'
                },
                'EUR': {
                    'displayName': 'Euro',
                    'symbol': '€',
                    'symbol-alt-narrow': '€'
                },
                'GBP': {
                    'displayName': 'British Pound',
                    'symbol-alt-narrow': '£'
                },
            },
            'defaultNumberingSystem': 'latn',
            'minimumGroupingDigits': '1',
            'symbols-numberSystem-latn': {
                'decimal': '.',
                'group': ',',
                'list': ';',
                'percentSign': '%',
                'plusSign': '+',
                'minusSign': '-',
                'exponential': 'E',
                'superscriptingExponent': '×',
                'perMille': '‰',
                'infinity': '∞',
                'nan': 'NaN',
                'timeSeparator': ':'
            },
            'decimalFormats-numberSystem-latn': {
                'standard': '#,##0.###',
            },
            'percentFormats-numberSystem-latn': {
                'standard': '#,##0%'
            },
            'currencyFormats-numberSystem-latn': {
                'standard': '¤#,##0.00',
                'accounting': '¤#,##0.00;(¤#,##0.00)'
            }
        }
    };
    IntlBase.monthIndex = {
        3: 'abbreviated',
        4: 'wide',
        5: 'narrow',
        1: 'abbreviated'
    };
    IntlBase.month = 'months';
    IntlBase.days = 'days';
    IntlBase.patternMatcher = {
        C: 'currency',
        P: 'percent',
        N: 'decimal',
        A: 'currency'
    };
    function getResultantPattern(skeleton, dateObject, type) {
        var resPattern;
        var iType = type || 'date';
        if (IntlBase.basicPatterns.indexOf(skeleton) !== -1) {
            resPattern = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(iType + 'Formats.' + skeleton, dateObject);
            if (iType === 'dateTime') {
                var dPattern = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('dateFormats.' + skeleton, dateObject);
                var tPattern = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('timeFormats.' + skeleton, dateObject);
                resPattern = resPattern.replace('{1}', dPattern).replace('{0}', tPattern);
            }
        }
        else {
            resPattern = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('dateTimeFormats.availableFormats.' + skeleton, dateObject);
        }
        return resPattern;
    }
    IntlBase.getResultantPattern = getResultantPattern;
    function getDependables(cldr, culture, isNumber) {
        var ret = {};
        ret.parserObject = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getMainObject(cldr, culture) || IntlBase.defaultObject;
        if (isNumber) {
            ret.numericObject = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('numbers', ret.parserObject);
        }
        else {
            ret.dateObject = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('dates.calendars.gregorian', ret.parserObject);
        }
        return ret;
    }
    IntlBase.getDependables = getDependables;
    function getSymbolPattern(type, numSystem, obj, isAccount) {
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(type + 'Formats-numberSystem-' +
            numSystem + (isAccount ? '.accounting' : '.standard'), obj) || (isAccount ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(type + 'Formats-numberSystem-' +
            numSystem + '.standard', obj) : '');
    }
    IntlBase.getSymbolPattern = getSymbolPattern;
    function getProperNumericSkeleton(skeleton) {
        var matches = skeleton.match(IntlBase.formatRegex);
        var ret = {};
        var pattern = matches[1].toUpperCase();
        ret.isAccount = (pattern === 'A');
        ret.type = IntlBase.patternMatcher[pattern];
        if (skeleton.length > 1) {
            ret.fractionDigits = parseInt(matches[2], 10);
        }
        return ret;
    }
    IntlBase.getProperNumericSkeleton = getProperNumericSkeleton;
    function getFormatData(pattern, needFraction, cSymbol, fractionOnly) {
        var nData = fractionOnly ? {} : { nlead: '', nend: '' };
        var match = pattern.match(IntlBase.customRegex);
        if (match) {
            if (!fractionOnly) {
                nData.nlead = changeCurrencySymbol(match[1], cSymbol);
                nData.nend = changeCurrencySymbol(match[10], cSymbol);
                nData.groupPattern = match[4];
            }
            var fraction = match[7];
            if (fraction && needFraction) {
                var fmatch = fraction.match(fractionRegex);
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(fmatch)) {
                    nData.minimumFraction = fmatch.length;
                }
                else {
                    nData.minimumFraction = 0;
                }
                nData.maximumFraction = fraction.length - 1;
            }
        }
        return nData;
    }
    IntlBase.getFormatData = getFormatData;
    function changeCurrencySymbol(val, sym) {
        if (val) {
            return val.replace(IntlBase.defaultCurrency, sym);
        }
        return '';
    }
    function getCurrencySymbol(numericObject, currencyCode) {
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('currencies.' + currencyCode + '.symbol', numericObject) || '$';
    }
    IntlBase.getCurrencySymbol = getCurrencySymbol;
    function customFormat(format, dOptions, obj) {
        var options = {};
        var formatSplit = format.split(';');
        var data = ['pData', 'nData', 'zeroData'];
        for (var i = 0; i < formatSplit.length; i++) {
            options[data[i]] = customNumberFormat(formatSplit[i], dOptions, obj);
        }
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(options.nData)) {
            options.nData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])({}, options.pData);
            options.nData.nlead = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(dOptions) ? '-' + options.nData.nlead : dOptions.minusSymbol + options.nData.nlead;
        }
        return options;
    }
    IntlBase.customFormat = customFormat;
    function customNumberFormat(format, dOptions, numObject) {
        var cOptions = { type: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0 };
        var pattern = format.match(IntlBase.customRegex);
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(pattern) || pattern[5] === '') {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["q" /* throwError */])('Given Format is not valid or Cldr data not loaded');
        }
        cOptions.nlead = pattern[1];
        cOptions.nend = pattern[10];
        var integerPart = pattern[6];
        cOptions.useGrouping = integerPart.indexOf(',') !== -1;
        integerPart = integerPart.replace(/,/g, '');
        var fractionPart = pattern[7];
        if (integerPart.indexOf('0') !== -1) {
            cOptions.minimumIntegerDigits = integerPart.length - integerPart.indexOf('0');
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(fractionPart)) {
            cOptions.minimumFractionDigits = fractionPart.lastIndexOf('0');
            cOptions.maximumFractionDigits = fractionPart.lastIndexOf('#');
            if (cOptions.minimumFractionDigits === -1) {
                cOptions.minimumFractionDigits = 0;
            }
            if (cOptions.maximumFractionDigits === -1 || cOptions.maximumFractionDigits < cOptions.minimumFractionDigits) {
                cOptions.maximumFractionDigits = cOptions.minimumFractionDigits;
            }
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(dOptions)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '$', dOptions.currencySymbol));
            if (!cOptions.isCurrency) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', dOptions.percentSymbol));
            }
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', '%'));
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(numObject)) {
            var symbolPattern = getSymbolPattern(cOptions.type, dOptions.numberMapper.numberSystem, numObject, false);
            if (cOptions.useGrouping) {
                cOptions.groupSeparator = dOptions.numberMapper.numberSymbols[mapper[2]];
                cOptions.groupData = __WEBPACK_IMPORTED_MODULE_3__number_formatter__["a" /* NumberFormat */].getGroupingDetails(symbolPattern.split(';')[0]);
            }
            cOptions.nlead = cOptions.nlead.replace(/\'/g, '');
            cOptions.nend = cOptions.nend.replace(/\'/g, '');
        }
        return cOptions;
    }
    function isCurrencyPercent(parts, actual, symbol) {
        var options = { nlead: parts[0], nend: parts[1] };
        for (var i = 0; i < 2; i++) {
            var part = parts[i];
            var loc = part.indexOf(actual);
            if ((loc !== -1) && ((loc < part.indexOf('\'')) || (loc > part.lastIndexOf('\'')))) {
                options[typeMapper[i]] = part.substr(0, loc) + symbol + part.substr(loc + 1);
                options[typeMapper[actual]] = true;
                options.type = options.isCurrency ? 'currency' : 'percent';
                break;
            }
        }
        return options;
    }
    IntlBase.isCurrencyPercent = isCurrencyPercent;
    function getDateSeparator(dateObj) {
        var value = (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('dateFormats.short', dateObj) || '').match(/[d‏M‏]([^d‏M])[d‏M‏]/i);
        return value ? value[1] : '/';
    }
    IntlBase.getDateSeparator = getDateSeparator;
    function getActualDateTimeFormat(culture, options, cldr, isExcelFormat) {
        var dependable = getDependables(cldr, culture);
        var actualPattern = options.format || getResultantPattern(options.skeleton, dependable.dateObject, options.type);
        if (isExcelFormat) {
            actualPattern = actualPattern.replace(patternRegex, function (pattern) {
                return patternMatch[pattern];
            });
            if (actualPattern.indexOf('z') !== -1) {
                var tLength = actualPattern.match(/z/g).length;
                var timeZonePattern = void 0;
                var options_1 = { 'timeZone': {} };
                options_1.numMapper = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getNumberMapper(dependable.parserObject, __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getNumberingSystem(cldr));
                options_1.timeZone = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('dates.timeZoneNames', dependable.parserObject);
                var value = new Date();
                var timezone = value.getTimezoneOffset();
                var pattern = (tLength < 4) ? '+H;-H' : options_1.timeZone.hourFormat;
                pattern = pattern.replace(/:/g, options_1.numMapper.timeSeparator);
                if (timezone === 0) {
                    timeZonePattern = options_1.timeZone.gmtZeroFormat;
                }
                else {
                    timeZonePattern = __WEBPACK_IMPORTED_MODULE_2__date_formatter__["a" /* DateFormat */].getTimeZoneValue(timezone, pattern);
                    timeZonePattern = options_1.timeZone.gmtFormat.replace(/\{0\}/, timeZonePattern);
                }
                actualPattern = actualPattern.replace(/[z]+/, '"' + timeZonePattern + '"');
            }
            actualPattern = actualPattern.replace(/ $/, '');
        }
        return actualPattern;
    }
    IntlBase.getActualDateTimeFormat = getActualDateTimeFormat;
    function getActualNumberFormat(culture, options, cldr) {
        var dependable = getDependables(cldr, culture, true);
        var parseOptions = { custom: true };
        var minFrac;
        if ((/(c|a)$/ig).test(options.format) && !options.minimumFractionDigits && !options.maximumFractionDigits) {
            var dOptions = {};
            dOptions.numberMapper = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getNumberMapper(dependable.parserObject, __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getNumberingSystem(cldr), true);
            var symbolPattern = getSymbolPattern('currency', dOptions.numberMapper.numberSystem, dependable.numericObject, (/a/i).test(options.format));
            minFrac = getFormatData(symbolPattern.split(';')[0], true, '', true).minimumFraction;
        }
        var actualPattern;
        if ((IntlBase.formatRegex.test(options.format)) || !(options.format)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(parseOptions, getProperNumericSkeleton(options.format || 'N'));
            parseOptions.custom = false;
            actualPattern = '###0';
            if (parseOptions.fractionDigits || options.minimumFractionDigits || options.maximumFractionDigits || minFrac) {
                var defaultMinimum = 0;
                if (parseOptions.fractionDigits) {
                    options.minimumFractionDigits = options.maximumFractionDigits = parseOptions.fractionDigits;
                }
                actualPattern = fractionDigitsPattern(actualPattern, minFrac || parseOptions.fractionDigits ||
                    options.minimumFractionDigits || defaultMinimum, options.maximumFractionDigits || defaultMinimum);
            }
            if (options.minimumIntegerDigits) {
                actualPattern = minimumIntegerPattern(actualPattern, options.minimumIntegerDigits);
            }
            if (options.useGrouping) {
                actualPattern = groupingPattern(actualPattern);
            }
            if (parseOptions.type === 'currency' && !parseOptions.isAccount) {
                actualPattern = '$ ' + actualPattern;
            }
            else if (parseOptions.type === 'currency' && parseOptions.isAccount) {
                actualPattern = '$ ' + actualPattern + ';($ ' + actualPattern + ')';
            }
            if (parseOptions.type === 'percent') {
                actualPattern += ' %';
            }
        }
        else {
            actualPattern = options.format.replace(/\'/g, '"');
        }
        return actualPattern;
    }
    IntlBase.getActualNumberFormat = getActualNumberFormat;
    function fractionDigitsPattern(pattern, minDigits, maxDigits) {
        pattern += '.';
        for (var a = 0; a < minDigits; a++) {
            pattern += '0';
        }
        if (minDigits < maxDigits) {
            var diff = maxDigits - minDigits;
            for (var b = 0; b < diff; b++) {
                pattern += '#';
            }
        }
        return pattern;
    }
    function minimumIntegerPattern(pattern, digits) {
        var temp = pattern.split('.');
        var integer = '';
        for (var x = 0; x < digits; x++) {
            integer += '0';
        }
        return temp[1] ? (integer + '.' + temp[1]) : integer;
    }
    function groupingPattern(pattern) {
        var temp = pattern.split('.');
        var integer = temp[0];
        var no = 3 - integer.length % 3;
        var hash = (no && no === 1) ? '#' : (no === 2 ? '##' : '');
        integer = hash + integer;
        pattern = '';
        for (var x = integer.length - 1; x > 0; x = x - 3) {
            pattern = ',' + integer[x - 2] + integer[x - 1] + integer[x] + pattern;
        }
        pattern = pattern.slice(1);
        return temp[1] ? (pattern + '.' + temp[1]) : pattern;
    }
})(IntlBase || (IntlBase = {}));


/***/ }),
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ParserBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
var defaultNumberingSystem = {
    'latn': {
        '_digits': '0123456789',
        '_type': 'numeric'
    }
};

var latnRegex = /^[0-9]*$/;
var defaultNumberSymbols = {
    'decimal': '.',
    'group': ',',
    'percentSign': '%',
    'plusSign': '+',
    'minusSign': '-',
    'infinity': '∞',
    'nan': 'NaN',
    'exponential': 'E'
};
var latnNumberSystem = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
var ParserBase = (function () {
    function ParserBase() {
    }
    ParserBase.getMainObject = function (obj, cName) {
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('main.' + cName, obj);
    };
    ParserBase.getNumberingSystem = function (obj) {
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('supplemental.numberingSystems', obj) || this.numberingSystems;
    };
    ParserBase.reverseObject = function (prop, keys) {
        var propKeys = keys || Object.keys(prop);
        var res = {};
        for (var _i = 0, propKeys_1 = propKeys; _i < propKeys_1.length; _i++) {
            var key = propKeys_1[_i];
            if (!res.hasOwnProperty(prop[key])) {
                res[prop[key]] = key;
            }
        }
        return res;
    };
    ParserBase.getSymbolRegex = function (props) {
        var regexStr = props.map(function (str) {
            return str.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, '\\$1');
        }).join('|');
        return new RegExp(regexStr, 'g');
    };
    ParserBase.getSymbolMatch = function (prop) {
        var matchKeys = Object.keys(defaultNumberSymbols);
        var ret = {};
        for (var _i = 0, matchKeys_1 = matchKeys; _i < matchKeys_1.length; _i++) {
            var key = matchKeys_1[_i];
            ret[prop[key]] = defaultNumberSymbols[key];
        }
        return ret;
    };
    ParserBase.constructRegex = function (val) {
        var len = val.length;
        var ret = '';
        for (var i = 0; i < len; i++) {
            if (i !== len - 1) {
                ret += val[i] + '|';
            }
            else {
                ret += val[i];
            }
        }
        return ret;
    };
    ParserBase.convertValueParts = function (value, regex, obj) {
        return value.replace(regex, function (str) {
            return obj[str];
        });
    };
    ParserBase.getDefaultNumberingSystem = function (obj) {
        var ret = {};
        ret.obj = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('numbers', obj);
        ret.nSystem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('defaultNumberingSystem', ret.obj);
        return ret;
    };
    ParserBase.getCurrentNumericOptions = function (curObj, numberSystem, needSymbols) {
        var ret = {};
        var cur = this.getDefaultNumberingSystem(curObj);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(cur.nSystem)) {
            var digits = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(cur.nSystem + '._digits', numberSystem);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(digits)) {
                ret.numericPair = this.reverseObject(digits, latnNumberSystem);
                ret.numberParseRegex = new RegExp(this.constructRegex(digits), 'g');
                ret.numericRegex = '[' + digits[0] + '-' + digits[9] + ']';
                if (needSymbols) {
                    ret.numericRegex = digits[0] + '-' + digits[9];
                    ret.symbolNumberSystem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('symbols-numberSystem-' + cur.nSystem, cur.obj);
                    ret.symbolMatch = this.getSymbolMatch(ret.symbolNumberSystem);
                    ret.numberSystem = cur.nSystem;
                }
            }
        }
        return ret;
    };
    ParserBase.getNumberMapper = function (curObj, numberSystem, isNumber) {
        var ret = { mapper: {} };
        var cur = this.getDefaultNumberingSystem(curObj);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(cur.nSystem)) {
            ret.numberSystem = cur.nSystem;
            ret.numberSymbols = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('symbols-numberSystem-' + cur.nSystem, cur.obj);
            ret.timeSeparator = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('timeSeparator', ret.numberSymbols);
            var digits = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(cur.nSystem + '._digits', numberSystem);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(digits)) {
                for (var _i = 0, latnNumberSystem_1 = latnNumberSystem; _i < latnNumberSystem_1.length; _i++) {
                    var i = latnNumberSystem_1[_i];
                    ret.mapper[i] = digits[i];
                }
            }
        }
        return ret;
    };
    return ParserBase;
}());

ParserBase.nPair = 'numericPair';
ParserBase.nRegex = 'numericRegex';
ParserBase.numberingSystems = defaultNumberingSystem;


/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfFontStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PdfFontFamily; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return PdfFontType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return PdfWordWrapType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return PdfSubSuperScript; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return FontEncoding; });
var PdfFontStyle;
(function (PdfFontStyle) {
    PdfFontStyle[PdfFontStyle["Regular"] = 0] = "Regular";
    PdfFontStyle[PdfFontStyle["Bold"] = 1] = "Bold";
    PdfFontStyle[PdfFontStyle["Italic"] = 2] = "Italic";
    PdfFontStyle[PdfFontStyle["Underline"] = 4] = "Underline";
    PdfFontStyle[PdfFontStyle["Strikeout"] = 8] = "Strikeout";
})(PdfFontStyle || (PdfFontStyle = {}));
var PdfFontFamily;
(function (PdfFontFamily) {
    PdfFontFamily[PdfFontFamily["Helvetica"] = 0] = "Helvetica";
    PdfFontFamily[PdfFontFamily["Courier"] = 1] = "Courier";
    PdfFontFamily[PdfFontFamily["TimesRoman"] = 2] = "TimesRoman";
    PdfFontFamily[PdfFontFamily["Symbol"] = 3] = "Symbol";
    PdfFontFamily[PdfFontFamily["ZapfDingbats"] = 4] = "ZapfDingbats";
})(PdfFontFamily || (PdfFontFamily = {}));
var PdfFontType;
(function (PdfFontType) {
    PdfFontType[PdfFontType["Standard"] = 0] = "Standard";
    PdfFontType[PdfFontType["TrueType"] = 1] = "TrueType";
    PdfFontType[PdfFontType["TrueTypeEmbedded"] = 2] = "TrueTypeEmbedded";
})(PdfFontType || (PdfFontType = {}));
var PdfWordWrapType;
(function (PdfWordWrapType) {
    PdfWordWrapType[PdfWordWrapType["None"] = 0] = "None";
    PdfWordWrapType[PdfWordWrapType["Word"] = 1] = "Word";
    PdfWordWrapType[PdfWordWrapType["WordOnly"] = 2] = "WordOnly";
    PdfWordWrapType[PdfWordWrapType["Character"] = 3] = "Character";
})(PdfWordWrapType || (PdfWordWrapType = {}));
var PdfSubSuperScript;
(function (PdfSubSuperScript) {
    PdfSubSuperScript[PdfSubSuperScript["None"] = 0] = "None";
    PdfSubSuperScript[PdfSubSuperScript["SuperScript"] = 1] = "SuperScript";
    PdfSubSuperScript[PdfSubSuperScript["SubScript"] = 2] = "SubScript";
})(PdfSubSuperScript || (PdfSubSuperScript = {}));
var FontEncoding;
(function (FontEncoding) {
    FontEncoding[FontEncoding["Unknown"] = 0] = "Unknown";
    FontEncoding[FontEncoding["StandardEncoding"] = 1] = "StandardEncoding";
    FontEncoding[FontEncoding["MacRomanEncoding"] = 2] = "MacRomanEncoding";
    FontEncoding[FontEncoding["MacExpertEncoding"] = 3] = "MacExpertEncoding";
    FontEncoding[FontEncoding["WinAnsiEncoding"] = 4] = "WinAnsiEncoding";
    FontEncoding[FontEncoding["PdfDocEncoding"] = 5] = "PdfDocEncoding";
    FontEncoding[FontEncoding["IdentityH"] = 6] = "IdentityH";
})(FontEncoding || (FontEncoding = {}));


/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChildProperty; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base__ = __webpack_require__(8);


var ChildProperty = (function () {
    function ChildProperty(parent, propName, defaultValue, isArray) {
        this.properties = {};
        this.changedProperties = {};
        this.childChangedProperties = {};
        this.oldProperties = {};
        this.finalUpdate = function () { };
        this.callChildDataBind = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('callChildDataBind', __WEBPACK_IMPORTED_MODULE_1__base__["a" /* Base */]);
        this.parentObj = parent;
        this.controlParent = this.parentObj.controlParent || this.parentObj;
        this.propName = propName;
        this.setProperties(defaultValue, true);
        this.isParentArray = isArray;
    }
    ChildProperty.prototype.updateChange = function (val, propName) {
        if (val === true) {
            this.parentObj.childChangedProperties[propName] = val;
        }
        else {
            delete this.parentObj.childChangedProperties[propName];
        }
        if (this.parentObj.updateChange) {
            this.parentObj.updateChange(val, this.parentObj.propName);
        }
    };
    ChildProperty.prototype.updateTimeOut = function () {
        if (this.parentObj.updateTimeOut) {
            this.parentObj.finalUpdate();
            this.parentObj.updateTimeOut();
        }
        else {
            this.parentObj.finalUpdate = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["b" /* setImmediate */])(this.parentObj.dataBind.bind(this.parentObj));
        }
    };
    ChildProperty.prototype.clearChanges = function () {
        this.finalUpdate();
        this.updateChange(false, this.propName);
        this.oldProperties = {};
        this.changedProperties = {};
    };
    ChildProperty.prototype.setProperties = function (prop, muteOnChange) {
        if (muteOnChange === true) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["h" /* merge */])(this, prop);
            this.updateChange(false, this.propName);
            this.clearChanges();
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["h" /* merge */])(this, prop);
        }
    };
    ChildProperty.prototype.dataBind = function () {
        this.callChildDataBind(this.childChangedProperties, this);
        if (this.isParentArray) {
            var curIndex = this.parentObj[this.propName].indexOf(this);
            if (Object.keys(this.changedProperties).length) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["d" /* setValue */])(this.propName + '.' + curIndex, this.changedProperties, this.parentObj.changedProperties);
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["d" /* setValue */])(this.propName + '.' + curIndex, this.oldProperties, this.parentObj.oldProperties);
            }
        }
        else {
            this.parentObj.changedProperties[this.propName] = this.changedProperties;
            this.parentObj.oldProperties[this.propName] = this.oldProperties;
        }
        this.clearChanges();
    };
    ChildProperty.prototype.saveChanges = function (key, newValue, oldValue) {
        if (this.controlParent.isProtectedOnChange) {
            return;
        }
        this.oldProperties[key] = oldValue;
        this.changedProperties[key] = newValue;
        this.updateChange(true, this.propName);
        this.finalUpdate();
        this.updateTimeOut();
    };
    return ChildProperty;
}());



/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return onIntlChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return rightToLeft; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return cldrData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return defaultCulture; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return defaultCurrencyCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return Internationalization; });
/* harmony export (immutable) */ __webpack_exports__["g"] = setCulture;
/* harmony export (immutable) */ __webpack_exports__["h"] = setCurrencyCode;
/* harmony export (immutable) */ __webpack_exports__["i"] = loadCldr;
/* harmony export (immutable) */ __webpack_exports__["j"] = enableRtl;
/* harmony export (immutable) */ __webpack_exports__["k"] = getNumericObject;
/* harmony export (immutable) */ __webpack_exports__["l"] = getDefaultDateObject;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__intl_date_formatter__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__intl_number_formatter__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__intl_date_parser__ = __webpack_require__(82);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__intl_number_parser__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__observer__ = __webpack_require__(30);







var onIntlChange = new __WEBPACK_IMPORTED_MODULE_6__observer__["a" /* Observer */]();
var rightToLeft = false;
var cldrData = {};
var defaultCulture = 'en-US';
var defaultCurrencyCode = 'USD';
var mapper = ['numericObject', 'dateObject'];
var Internationalization = (function () {
    function Internationalization(cultureName) {
        if (cultureName) {
            this.culture = cultureName;
        }
    }
    Internationalization.prototype.getDateFormat = function (options) {
        return __WEBPACK_IMPORTED_MODULE_0__intl_date_formatter__["a" /* DateFormat */].dateFormat(this.getCulture(), options || { type: 'date', skeleton: 'short' }, cldrData);
    };
    Internationalization.prototype.getNumberFormat = function (options) {
        if (options && !options.currency) {
            options.currency = defaultCurrencyCode;
        }
        return __WEBPACK_IMPORTED_MODULE_1__intl_number_formatter__["a" /* NumberFormat */].numberFormatter(this.getCulture(), options || {}, cldrData);
    };
    Internationalization.prototype.getDateParser = function (options) {
        return __WEBPACK_IMPORTED_MODULE_2__intl_date_parser__["a" /* DateParser */].dateParser(this.getCulture(), options || { skeleton: 'short', type: 'date' }, cldrData);
    };
    Internationalization.prototype.getNumberParser = function (options) {
        return __WEBPACK_IMPORTED_MODULE_3__intl_number_parser__["a" /* NumberParser */].numberParser(this.getCulture(), options || { format: 'N' }, cldrData);
    };
    Internationalization.prototype.formatNumber = function (value, option) {
        return this.getNumberFormat(option)(value);
    };
    Internationalization.prototype.formatDate = function (value, option) {
        return this.getDateFormat(option)(value);
    };
    Internationalization.prototype.parseDate = function (value, option) {
        return this.getDateParser(option)(value);
    };
    Internationalization.prototype.parseNumber = function (value, option) {
        return this.getNumberParser(option)(value);
    };
    Internationalization.prototype.getDatePattern = function (option, isExcelFormat) {
        return __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getActualDateTimeFormat(this.getCulture(), option, cldrData, isExcelFormat);
    };
    Internationalization.prototype.getNumberPattern = function (option) {
        return __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getActualNumberFormat(this.getCulture(), option, cldrData);
    };
    Internationalization.prototype.getCulture = function () {
        return this.culture || defaultCulture;
    };
    return Internationalization;
}());

function setCulture(cultureName) {
    defaultCulture = cultureName;
    onIntlChange.notify('notifyExternalChange', { 'locale': defaultCulture });
}
function setCurrencyCode(currencyCode) {
    defaultCurrencyCode = currencyCode;
}
function loadCldr() {
    var data = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        data[_i] = arguments[_i];
    }
    for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {
        var obj = data_1[_a];
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util__["i" /* extend */])(cldrData, obj, {}, true);
    }
}
function enableRtl(status) {
    if (status === void 0) { status = true; }
    rightToLeft = status;
    onIntlChange.notify('notifyExternalChange', { enableRtl: rightToLeft });
}
function getNumericObject(locale, type) {
    var numObject = __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getDependables(cldrData, locale, true)[mapper[0]];
    var dateObject = __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getDependables(cldrData, locale)[mapper[1]];
    var numSystem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util__["c" /* getValue */])('defaultNumberingSystem', numObject);
    var symbPattern = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util__["c" /* getValue */])('symbols-numberSystem-' + numSystem, numObject);
    var pattern = __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getSymbolPattern(type || 'decimal', numSystem, numObject, false);
    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util__["i" /* extend */])(symbPattern, __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getFormatData(pattern, true, '', true), { 'dateSeparator': __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getDateSeparator(dateObject) });
}
function getDefaultDateObject() {
    return __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getDependables(cldrData, '', false)[mapper[1]];
}


/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfColor; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__enum__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__input_output_pdf_operators__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__collections_dictionary__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_number__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_array__ = __webpack_require__(15);





var PdfColor = (function () {
    function PdfColor(color1, color2, color3, color4) {
        if (color1 instanceof PdfColor) {
            this.redColor = color1.r;
            this.greenColor = color1.g;
            this.blueColor = color1.b;
            this.grayColor = color1.gray;
            this.alpha = color1.alpha;
            this.filled = (this.alpha !== 0);
        }
        else if (typeof color1 === 'number' && typeof color2 === 'number' && typeof color3 === 'number' &&
            typeof color4 === 'undefined') {
            this.constructor(PdfColor.maxColourChannelValue, color1, color2, color3);
        }
        else if (typeof color1 === 'number' && typeof color2 === 'number' && typeof color3 === 'number' && typeof color4 === 'number') {
            this.redColor = color2;
            this.cyanColor = 0;
            this.greenColor = color3;
            this.magentaColor = 0;
            this.blueColor = color4;
            this.yellowColor = 0;
            this.blackColor = 0;
            this.grayColor = 0;
            this.alpha = color1;
            this.filled = true;
            this.assignCMYK(color2, color3, color4);
        }
    }
    PdfColor.prototype.assignCMYK = function (r, g, b) {
        var red = r / PdfColor.maxColourChannelValue;
        var green = g / PdfColor.maxColourChannelValue;
        var blue = b / PdfColor.maxColourChannelValue;
        var black = __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_number__["a" /* PdfNumber */].min(1 - red, 1 - green, 1 - blue);
        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);
        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);
        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);
        this.blackColor = black;
        this.cyanColor = cyan;
        this.magentaColor = magenta;
        this.yellowColor = yellow;
    };
    Object.defineProperty(PdfColor.prototype, "r", {
        get: function () {
            return this.redColor;
        },
        set: function (value) {
            this.redColor = value;
            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);
            this.filled = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "red", {
        get: function () {
            return (this.r / PdfColor.maxColourChannelValue);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "b", {
        get: function () {
            return this.blueColor;
        },
        set: function (value) {
            this.blueColor = value;
            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);
            this.filled = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "blue", {
        get: function () {
            return (this.b / PdfColor.maxColourChannelValue);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "g", {
        get: function () {
            return this.greenColor;
        },
        set: function (value) {
            this.greenColor = value;
            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);
            this.filled = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "green", {
        get: function () {
            return (this.g / PdfColor.maxColourChannelValue);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "gray", {
        get: function () {
            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));
        },
        set: function (value) {
            if (value < 0) {
                this.grayColor = 0;
            }
            else if (value > 1) {
                this.grayColor = 1;
            }
            else {
                this.grayColor = value;
            }
            this.r = (this.grayColor * PdfColor.maxColourChannelValue);
            this.g = (this.grayColor * PdfColor.maxColourChannelValue);
            this.b = (this.grayColor * PdfColor.maxColourChannelValue);
            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);
            this.filled = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "isEmpty", {
        get: function () {
            return !this.filled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "a", {
        get: function () {
            return this.alpha;
        },
        set: function (value) {
            if (value < 0) {
                this.alpha = 0;
            }
            else {
                this.alpha = value;
            }
            this.filled = true;
        },
        enumerable: true,
        configurable: true
    });
    PdfColor.prototype.toString = function (colorSpace, stroke) {
        if (this.isEmpty) {
            return '';
        }
        return this.rgbToString(stroke);
    };
    PdfColor.prototype.rgbToString = function (ifStroking) {
        var r = this.r;
        var g = this.g;
        var b = this.b;
        var key = (r << 16) + (g << 8) + b;
        if (ifStroking) {
            key += 1 << 24;
        }
        var colour = '';
        var obj = null;
        if (PdfColor.rgbStrings.containsKey(key)) {
            obj = PdfColor.rgbStrings.getValue(key);
        }
        if (obj == null) {
            var red = r / PdfColor.maxColourChannelValue;
            var green = g / PdfColor.maxColourChannelValue;
            var blue = b / PdfColor.maxColourChannelValue;
            if (ifStroking) {
                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';
            }
            else {
                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';
            }
            PdfColor.rgbStrings.setValue(key, colour);
        }
        else {
            colour = obj.toString();
        }
        return colour + __WEBPACK_IMPORTED_MODULE_1__input_output_pdf_operators__["a" /* Operators */].newLine;
    };
    PdfColor.prototype.toArray = function (colorSpace) {
        var array = new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_array__["a" /* PdfArray */]();
        switch (colorSpace) {
            case __WEBPACK_IMPORTED_MODULE_0__enum__["i" /* PdfColorSpace */].Rgb:
                array.add(new __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_number__["a" /* PdfNumber */](this.red));
                array.add(new __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_number__["a" /* PdfNumber */](this.green));
                array.add(new __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_number__["a" /* PdfNumber */](this.blue));
                break;
            default:
                throw new Error('NotSupportedException : Unsupported colour space.');
        }
        return array;
    };
    return PdfColor;
}());

PdfColor.rgbStrings = new __WEBPACK_IMPORTED_MODULE_2__collections_dictionary__["a" /* Dictionary */]();
PdfColor.grayStringsSroke = new __WEBPACK_IMPORTED_MODULE_2__collections_dictionary__["a" /* Dictionary */]();
PdfColor.grayStringsFill = new __WEBPACK_IMPORTED_MODULE_2__collections_dictionary__["a" /* Dictionary */]();
PdfColor.maxColourChannelValue = 255.0;


/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfPageOrientation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PdfPageRotateAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return PdfNumberStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return PdfDockStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return PdfAlignmentStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return TemplateType; });
var PdfPageOrientation;
(function (PdfPageOrientation) {
    PdfPageOrientation[PdfPageOrientation["Portrait"] = 0] = "Portrait";
    PdfPageOrientation[PdfPageOrientation["Landscape"] = 1] = "Landscape";
})(PdfPageOrientation || (PdfPageOrientation = {}));
var PdfPageRotateAngle;
(function (PdfPageRotateAngle) {
    PdfPageRotateAngle[PdfPageRotateAngle["RotateAngle0"] = 0] = "RotateAngle0";
    PdfPageRotateAngle[PdfPageRotateAngle["RotateAngle90"] = 1] = "RotateAngle90";
    PdfPageRotateAngle[PdfPageRotateAngle["RotateAngle180"] = 2] = "RotateAngle180";
    PdfPageRotateAngle[PdfPageRotateAngle["RotateAngle270"] = 3] = "RotateAngle270";
})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));
var PdfNumberStyle;
(function (PdfNumberStyle) {
    PdfNumberStyle[PdfNumberStyle["None"] = 0] = "None";
    PdfNumberStyle[PdfNumberStyle["Numeric"] = 1] = "Numeric";
    PdfNumberStyle[PdfNumberStyle["LowerLatin"] = 2] = "LowerLatin";
    PdfNumberStyle[PdfNumberStyle["LowerRoman"] = 3] = "LowerRoman";
    PdfNumberStyle[PdfNumberStyle["UpperLatin"] = 4] = "UpperLatin";
    PdfNumberStyle[PdfNumberStyle["UpperRoman"] = 5] = "UpperRoman";
})(PdfNumberStyle || (PdfNumberStyle = {}));
var PdfDockStyle;
(function (PdfDockStyle) {
    PdfDockStyle[PdfDockStyle["None"] = 0] = "None";
    PdfDockStyle[PdfDockStyle["Bottom"] = 1] = "Bottom";
    PdfDockStyle[PdfDockStyle["Top"] = 2] = "Top";
    PdfDockStyle[PdfDockStyle["Left"] = 3] = "Left";
    PdfDockStyle[PdfDockStyle["Right"] = 4] = "Right";
    PdfDockStyle[PdfDockStyle["Fill"] = 5] = "Fill";
})(PdfDockStyle || (PdfDockStyle = {}));
var PdfAlignmentStyle;
(function (PdfAlignmentStyle) {
    PdfAlignmentStyle[PdfAlignmentStyle["None"] = 0] = "None";
    PdfAlignmentStyle[PdfAlignmentStyle["TopLeft"] = 1] = "TopLeft";
    PdfAlignmentStyle[PdfAlignmentStyle["TopCenter"] = 2] = "TopCenter";
    PdfAlignmentStyle[PdfAlignmentStyle["TopRight"] = 3] = "TopRight";
    PdfAlignmentStyle[PdfAlignmentStyle["MiddleLeft"] = 4] = "MiddleLeft";
    PdfAlignmentStyle[PdfAlignmentStyle["MiddleCenter"] = 5] = "MiddleCenter";
    PdfAlignmentStyle[PdfAlignmentStyle["MiddleRight"] = 6] = "MiddleRight";
    PdfAlignmentStyle[PdfAlignmentStyle["BottomLeft"] = 7] = "BottomLeft";
    PdfAlignmentStyle[PdfAlignmentStyle["BottomCenter"] = 8] = "BottomCenter";
    PdfAlignmentStyle[PdfAlignmentStyle["BottomRight"] = 9] = "BottomRight";
})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));
var TemplateType;
(function (TemplateType) {
    TemplateType[TemplateType["None"] = 0] = "None";
    TemplateType[TemplateType["Top"] = 1] = "Top";
    TemplateType[TemplateType["Bottom"] = 2] = "Bottom";
    TemplateType[TemplateType["Left"] = 3] = "Left";
    TemplateType[TemplateType["Right"] = 4] = "Right";
})(TemplateType || (TemplateType = {}));


/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfBrush; });
var PdfBrush = (function () {
    function PdfBrush() {
    }
    return PdfBrush;
}());



/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfStringLayouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PdfStringLayoutResult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return LineInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return LineType; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enum__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__string_tokenizer__ = __webpack_require__(64);



var PdfStringLayouter = (function () {
    function PdfStringLayouter() {
        this.isOverloadWithPosition = false;
    }
    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {
        if (arg4 instanceof __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["c" /* RectangleF */]) {
            this.initialize(arg1, arg2, arg3, arg4, arg5);
            this.isOverloadWithPosition = arg6;
            this.clientSize = arg7;
            var result = this.doLayout();
            this.clear();
            return result;
        }
        else {
            this.initialize(arg1, arg2, arg3, arg4);
            this.isOverloadWithPosition = arg5;
            this.clientSize = arg6;
            var result = this.doLayout();
            this.clear();
            return result;
        }
    };
    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {
        if (typeof pageHeight === 'number') {
            if (text == null) {
                throw new Error('ArgumentNullException:text');
            }
            if (font == null) {
                throw new Error('ArgumentNullException:font');
            }
            this.text = text;
            this.font = font;
            this.format = format;
            this.size = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](rectSize.width, rectSize.height);
            this.rectangle = rectSize;
            this.pageHeight = pageHeight;
            this.reader = new __WEBPACK_IMPORTED_MODULE_2__string_tokenizer__["a" /* StringTokenizer */](text);
        }
        else {
            this.initialize(text, font, format, new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["c" /* RectangleF */](new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */](0, 0), rectSize), 0);
        }
    };
    PdfStringLayouter.prototype.clear = function () {
        this.font = null;
        this.format = null;
        this.reader.close();
        this.reader = null;
        this.text = null;
    };
    PdfStringLayouter.prototype.doLayout = function () {
        var result = new PdfStringLayoutResult();
        var lineResult = new PdfStringLayoutResult();
        var lines = [];
        var line = this.reader.peekLine();
        var lineIndent = this.getLineIndent(true);
        while (line != null) {
            lineResult = this.layoutLine(line, lineIndent);
            var numSymbolsInserted = 0;
            var returnedValue = this.copyToResult(result, lineResult, lines, numSymbolsInserted);
            var success = returnedValue.success;
            numSymbolsInserted = returnedValue.numInserted;
            this.reader.readLine();
            line = this.reader.peekLine();
            lineIndent = this.getLineIndent(false);
        }
        this.finalizeResult(result, lines);
        return result;
    };
    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {
        var lineIndent = 0;
        if (this.format != null) {
            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;
            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;
        }
        return lineIndent;
    };
    PdfStringLayouter.prototype.getLineHeight = function () {
        var height = this.font.height;
        if (this.format != null && this.format.lineSpacing !== 0) {
            height = this.format.lineSpacing + this.font.height;
        }
        return height;
    };
    PdfStringLayouter.prototype.getLineWidth = function (line) {
        var width = this.font.getLineWidth(line, this.format);
        return width;
    };
    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {
        var lineResult = new PdfStringLayoutResult();
        lineResult.layoutLineHeight = this.getLineHeight();
        var lines = [];
        var maxWidth = this.size.width;
        var lineWidth = this.getLineWidth(line) + lineIndent;
        var lineType = LineType.FirstParagraphLine;
        var readWord = true;
        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {
            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);
        }
        else {
            var builder = '';
            var curLine = '';
            lineWidth = lineIndent;
            var curIndent = lineIndent;
            var reader = new __WEBPACK_IMPORTED_MODULE_2__string_tokenizer__["a" /* StringTokenizer */](line);
            var word = reader.peekWord();
            var isSingleWord = false;
            while (word != null) {
                curLine = curLine + word;
                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent;
                if (curLineWidth > maxWidth) {
                    if (this.getWrapType() == __WEBPACK_IMPORTED_MODULE_1__enum__["d" /* PdfWordWrapType */].None)
                        break;
                    if (this.getWrapType() != __WEBPACK_IMPORTED_MODULE_1__enum__["d" /* PdfWordWrapType */].Character || !readWord) {
                        var ln = builder.toString();
                        if (ln.indexOf(' ') === -1) {
                            isSingleWord = true;
                            this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);
                        }
                        else {
                            this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);
                        }
                        if (this.isOverloadWithPosition) {
                            maxWidth = this.clientSize.width;
                        }
                        curLine = '';
                        builder = '';
                        lineWidth = 0;
                        curIndent = 0;
                        curLineWidth = 0;
                        lineType = LineType.None;
                        if (isSingleWord) {
                            reader.readWord();
                            readWord = false;
                        }
                        word = (readWord) ? word : reader.peekWord();
                        isSingleWord = false;
                        readWord = true;
                    }
                    else {
                        readWord = false;
                        curLine = curLine + builder.toString();
                        word = reader.peek().toString();
                    }
                    continue;
                }
                builder = builder + word;
                lineWidth = curLineWidth;
                if (readWord) {
                    reader.readWord();
                    word = reader.peekWord();
                    isSingleWord = false;
                }
                else {
                    reader.read();
                    word = reader.peek().toString();
                }
            }
            if (builder.length > 0) {
                var ln = builder.toString();
                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);
            }
            reader.close();
        }
        lineResult.layoutLines = [];
        for (var index = 0; index < lines.length; index++) {
            lineResult.layoutLines.push(lines[index]);
        }
        lines = [];
        return lineResult;
    };
    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {
        var info = new LineInfo();
        info.text = line;
        info.width = lineWidth;
        info.lineType = breakType;
        lines.push(info);
        var size = lineResult.actualSize;
        size.height += this.getLineHeight();
        size.width = Math.max(size.width, lineWidth);
        lineResult.size = size;
    };
    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, numInserted) {
        var success = true;
        var allowPartialLines = (this.format != null && !this.format.lineLimit);
        var height = result.actualSize.height;
        var maxHeight = this.size.height;
        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {
            maxHeight = this.rectangle.y - this.pageHeight;
            maxHeight = Math.max(maxHeight, -maxHeight);
        }
        numInserted = 0;
        for (var i = 0, len = lineResult.lines.length; i < len; i++) {
            var expHeight = height + lineResult.lineHeight;
            var info = lineResult.lines[i];
            numInserted += info.text.length;
            info = this.trimLine(info, (lines.length === 0));
            lines.push(info);
            var size_1 = result.actualSize;
            size_1.width = Math.max(size_1.width, info.width);
            result.size = size_1;
            height = expHeight;
        }
        var size = result.actualSize;
        size.height = height;
        result.size = size;
        return { success: success, numInserted: numInserted };
    };
    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {
        result.layoutLines = [];
        for (var index = 0; index < lines.length; index++) {
            result.layoutLines.push(lines[index]);
        }
        result.layoutLineHeight = this.getLineHeight();
        lines = [];
    };
    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {
        var line = info.text;
        var lineWidth = info.width;
        var start = (this.format == null || !this.format.rightToLeft);
        var spaces = __WEBPACK_IMPORTED_MODULE_2__string_tokenizer__["a" /* StringTokenizer */].spaces;
        line = (start) ? line.trim() : line.trim();
        if (line.length !== info.text.length) {
            lineWidth = this.getLineWidth(line);
            lineWidth += this.getLineIndent(firstLine);
        }
        info.text = line;
        info.width = lineWidth;
        return info;
    };
    PdfStringLayouter.prototype.getWrapType = function () {
        var wrapType = (this.format != null) ? this.format.wordWrap : __WEBPACK_IMPORTED_MODULE_1__enum__["d" /* PdfWordWrapType */].Word;
        return wrapType;
    };
    return PdfStringLayouter;
}());

var PdfStringLayoutResult = (function () {
    function PdfStringLayoutResult() {
    }
    Object.defineProperty(PdfStringLayoutResult.prototype, "remainder", {
        get: function () {
            return this.textRemainder;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringLayoutResult.prototype, "actualSize", {
        get: function () {
            if (typeof this.size === 'undefined') {
                this.size = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](0, 0);
            }
            return this.size;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringLayoutResult.prototype, "lines", {
        get: function () {
            return this.layoutLines;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringLayoutResult.prototype, "lineHeight", {
        get: function () {
            return this.layoutLineHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringLayoutResult.prototype, "empty", {
        get: function () {
            return (this.layoutLines == null || this.layoutLines.length === 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringLayoutResult.prototype, "lineCount", {
        get: function () {
            var count = (!this.empty) ? this.layoutLines.length : 0;
            return count;
        },
        enumerable: true,
        configurable: true
    });
    return PdfStringLayoutResult;
}());

var LineInfo = (function () {
    function LineInfo() {
    }
    Object.defineProperty(LineInfo.prototype, "lineType", {
        get: function () {
            return this.type;
        },
        set: function (value) {
            this.type = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LineInfo.prototype, "text", {
        get: function () {
            return this.content;
        },
        set: function (value) {
            this.content = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LineInfo.prototype, "width", {
        get: function () {
            return this.lineWidth;
        },
        set: function (value) {
            this.lineWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    return LineInfo;
}());

var LineType;
(function (LineType) {
    LineType[LineType["None"] = 0] = "None";
    LineType[LineType["NewLineBreak"] = 1] = "NewLineBreak";
    LineType[LineType["LayoutBreak"] = 2] = "LayoutBreak";
    LineType[LineType["FirstParagraphLine"] = 4] = "FirstParagraphLine";
    LineType[LineType["LastParagraphLine"] = 8] = "LastParagraphLine";
})(LineType || (LineType = {}));


/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Operators; });
var Operators = (function () {
    function Operators() {
        this.forTest = 'test';
        this.forTest = Operators.obj;
    }
    return Operators;
}());

Operators.obj = 'obj';
Operators.endObj = 'endobj';
Operators.r = 'R';
Operators.whiteSpace = ' ';
Operators.slash = '/';
Operators.newLine = '\r\n';
Operators.stream = 'stream';
Operators.endStream = 'endstream';
Operators.xref = 'xref';
Operators.f = 'f';
Operators.n = 'n';
Operators.trailer = 'trailer';
Operators.startxref = 'startxref';
Operators.eof = '%%EOF';
Operators.header = '%PDF-1.5';
Operators.beginText = 'BT';
Operators.endText = 'ET';
Operators.beginPath = 'm';
Operators.appendLineSegment = 'l';
Operators.stroke = 'S';
Operators.fill = 'f';
Operators.fillEvenOdd = 'f*';
Operators.fillStroke = 'B';
Operators.fillStrokeEvenOdd = 'B*';
Operators.appendbeziercurve = 'c';
Operators.appendRectangle = 're';
Operators.saveState = 'q';
Operators.restoreState = 'Q';
Operators.paintXObject = 'Do';
Operators.modifyCtm = 'cm';
Operators.modifyTM = 'Tm';
Operators.setLineWidth = 'w';
Operators.setLineCapStyle = 'J';
Operators.setLineJoinStyle = 'j';
Operators.setDashPattern = 'd';
Operators.setFlatnessTolerance = 'i';
Operators.closePath = 'h';
Operators.closeStrokePath = 's';
Operators.closeFillStrokePath = 'b';
Operators.setCharacterSpace = 'Tc';
Operators.setWordSpace = 'Tw';
Operators.setHorizontalScaling = 'Tz';
Operators.setTextLeading = 'TL';
Operators.setFont = 'Tf';
Operators.setRenderingMode = 'Tr';
Operators.setTextRise = 'Ts';
Operators.setTextScaling = 'Tz';
Operators.setCoords = 'Td';
Operators.goToNextLine = 'T*';
Operators.setText = 'Tj';
Operators.setTextWithFormatting = 'TJ';
Operators.setTextOnNewLine = '\'';
Operators.selectcolorspaceforstroking = 'CS';
Operators.selectcolorspacefornonstroking = 'cs';
Operators.setrbgcolorforstroking = 'RG';
Operators.setrbgcolorfornonstroking = 'rg';
Operators.setcmykcolorforstroking = 'K';
Operators.setcmykcolorfornonstroking = 'k';
Operators.setgraycolorforstroking = 'G';
Operators.setgraycolorfornonstroking = 'g';
Operators.clipPath = 'W';
Operators.clipPathEvenOdd = 'W*';
Operators.endPath = 'n';
Operators.setGraphicsState = 'gs';
Operators.comment = '%';
Operators.evenOdd = '*';
Operators.setMiterLimit = 'M';


/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Observer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

var Observer = (function () {
    function Observer(context) {
        this.boundedEvents = {};
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(context)) {
            return;
        }
        this.context = context;
    }
    ;
    Observer.prototype.on = function (property, handler, context) {
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(handler)) {
            return;
        }
        var cntxt = context || this.context;
        if (this.notExist(property)) {
            this.boundedEvents[property] = [{ handler: handler, context: cntxt }];
            return;
        }
        if (!this.isHandlerPresent(this.boundedEvents[property], handler)) {
            this.boundedEvents[property].push({ handler: handler, context: cntxt });
        }
    };
    Observer.prototype.off = function (property, handler) {
        if (this.notExist(property)) {
            return;
        }
        var curObject = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(property, this.boundedEvents);
        if (handler) {
            for (var i = 0; i < curObject.length; i++) {
                if (handler === curObject[i].handler) {
                    curObject.splice(i, 1);
                    break;
                }
            }
        }
        else {
            delete this.boundedEvents[property];
        }
    };
    Observer.prototype.notify = function (property, argument) {
        if (this.notExist(property)) {
            return;
        }
        if (argument) {
            argument.name = property;
        }
        var curObject = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(property, this.boundedEvents).slice(0);
        for (var _i = 0, curObject_1 = curObject; _i < curObject_1.length; _i++) {
            var cur = curObject_1[_i];
            cur.handler.call(cur.context, argument);
        }
    };
    Observer.prototype.destroy = function () {
        this.boundedEvents = this.context = undefined;
    };
    Observer.prototype.notExist = function (prop) {
        return this.boundedEvents.hasOwnProperty(prop) === false;
    };
    Observer.prototype.isHandlerPresent = function (boundedEvents, handler) {
        for (var _i = 0, boundedEvents_1 = boundedEvents; _i < boundedEvents_1.length; _i++) {
            var cur = boundedEvents_1[_i];
            if (cur.handler === handler) {
                return true;
            }
        }
        return false;
    };
    return Observer;
}());



/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Dictionary; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(149);

var Dictionary = (function () {
    function Dictionary(toStringFunction) {
        this.table = {};
        this.nElements = 0;
        this.toStr = toStringFunction || __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* defaultToString */];
    }
    Dictionary.prototype.getValue = function (key) {
        var pair = this.table['$' + this.toStr(key)];
        if (typeof pair === 'undefined') {
            return undefined;
        }
        return pair.value;
    };
    Dictionary.prototype.setValue = function (key, value) {
        var ret;
        var k = '$' + this.toStr(key);
        var previousElement = this.table[k];
        this.nElements++;
        ret = undefined;
        this.table[k] = {
            key: key,
            value: value
        };
        return ret;
    };
    Dictionary.prototype.remove = function (key) {
        var k = '$' + this.toStr(key);
        var previousElement = this.table[k];
        delete this.table[k];
        this.nElements--;
        return previousElement.value;
    };
    Dictionary.prototype.keys = function () {
        var keysArray = [];
        var namesOfKeys = Object.keys(this.table);
        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {
            var pair1 = this.table[namesOfKeys[index1]];
            keysArray.push(pair1.key);
        }
        return keysArray;
    };
    Dictionary.prototype.values = function () {
        var valuesArray = [];
        var namesOfValues = Object.keys(this.table);
        for (var index2 = 0; index2 < namesOfValues.length; index2++) {
            var pair2 = this.table[namesOfValues[index2]];
            valuesArray.push(pair2.value);
        }
        return valuesArray;
    };
    Dictionary.prototype.containsKey = function (key) {
        var retutnValue = true;
        if (typeof this.getValue(key) === 'undefined') {
            retutnValue = true;
        }
        else {
            retutnValue = false;
        }
        return !retutnValue;
    };
    Dictionary.prototype.clear = function () {
        this.table = {};
        this.nElements = 0;
    };
    Dictionary.prototype.size = function () {
        return this.nElements;
    };
    return Dictionary;
}());



/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfStringFormat; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__graphics_enum__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__graphics_fonts_enum__ = __webpack_require__(22);


var PdfStringFormat = (function () {
    function PdfStringFormat(arg1, arg2) {
        this.scalingFactor = 100.0;
        if (typeof arg1 === 'undefined') {
            this.internalLineLimit = true;
            this.wordWrapType = __WEBPACK_IMPORTED_MODULE_1__graphics_fonts_enum__["d" /* PdfWordWrapType */].Word;
        }
        else if (typeof arg1 === 'string') {
            this.constructor();
        }
        else {
            if (typeof arg2 === 'undefined') {
                this.constructor();
                this.textAlignment = arg1;
            }
            else {
                this.constructor(arg1);
                this.verticalAlignment = arg2;
            }
        }
    }
    Object.defineProperty(PdfStringFormat.prototype, "alignment", {
        get: function () {
            return this.textAlignment;
        },
        set: function (value) {
            this.textAlignment = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "lineAlignment", {
        get: function () {
            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {
                return __WEBPACK_IMPORTED_MODULE_0__graphics_enum__["b" /* PdfVerticalAlignment */].Top;
            }
            else {
                return this.verticalAlignment;
            }
        },
        set: function (value) {
            this.verticalAlignment = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "rightToLeft", {
        get: function () {
            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {
                return false;
            }
            else {
                return this.isRightToLeft;
            }
        },
        set: function (value) {
            this.isRightToLeft = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "characterSpacing", {
        get: function () {
            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {
                return 0;
            }
            else {
                return this.internalCharacterSpacing;
            }
        },
        set: function (value) {
            this.internalCharacterSpacing = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "wordSpacing", {
        get: function () {
            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {
                return 0;
            }
            else {
                return this.internalWordSpacing;
            }
        },
        set: function (value) {
            this.internalWordSpacing = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "lineSpacing", {
        get: function () {
            if (typeof this.leading === 'undefined' || this.leading == null) {
                return 0;
            }
            else {
                return this.leading;
            }
        },
        set: function (value) {
            this.leading = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "clipPath", {
        get: function () {
            if (typeof this.clip === 'undefined' || this.clip == null) {
                return false;
            }
            else {
                return this.clip;
            }
        },
        set: function (value) {
            this.clip = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "subSuperScript", {
        get: function () {
            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {
                return __WEBPACK_IMPORTED_MODULE_1__graphics_fonts_enum__["e" /* PdfSubSuperScript */].None;
            }
            else {
                return this.pdfSubSuperScript;
            }
        },
        set: function (value) {
            this.pdfSubSuperScript = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "paragraphIndent", {
        get: function () {
            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {
                return 0;
            }
            else {
                return this.internalParagraphIndent;
            }
        },
        set: function (value) {
            this.internalParagraphIndent = value;
            this.firstLineIndent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "lineLimit", {
        get: function () {
            return this.internalLineLimit;
        },
        set: function (value) {
            this.internalLineLimit = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "measureTrailingSpaces", {
        get: function () {
            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {
                return false;
            }
            else {
                return this.trailingSpaces;
            }
        },
        set: function (value) {
            this.trailingSpaces = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "noClip", {
        get: function () {
            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {
                return false;
            }
            else {
                return this.isNoClip;
            }
        },
        set: function (value) {
            this.isNoClip = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "wordWrap", {
        get: function () {
            return this.wordWrapType;
        },
        set: function (value) {
            this.wordWrapType = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "horizontalScalingFactor", {
        get: function () {
            return this.scalingFactor;
        },
        set: function (value) {
            if (value <= 0) {
                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');
            }
            this.scalingFactor = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "firstLineIndent", {
        get: function () {
            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {
                return 0;
            }
            else {
                return this.initialLineIndent;
            }
        },
        set: function (value) {
            this.initialLineIndent = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfStringFormat.prototype.clone = function () {
        var format = this;
        return format;
    };
    return PdfStringFormat;
}());



/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfStream; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pdf_dictionary__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pdf_number__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__input_output_pdf_operators__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pdf_array__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pdf_reference__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__syncfusion_ej2_compression__ = __webpack_require__(123);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







var PdfStream = (function (_super) {
    __extends(PdfStream, _super);
    function PdfStream(dictionary, data) {
        var _this = _super.call(this, dictionary) || this;
        _this.dicPrefix = 'stream';
        _this.dicSuffix = 'endstream';
        _this.clonedObject2 = null;
        _this.bCompress = true;
        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {
            _this.dataStream2 = [];
            _this.dataStream2 = data;
            _this.bCompress2 = false;
        }
        else {
            _this.dataStream2 = [];
            _this.bCompress2 = true;
        }
        return _this;
    }
    Object.defineProperty(PdfStream.prototype, "internalStream", {
        get: function () {
            return this.dataStream2;
        },
        set: function (value) {
            this.dataStream2 = [];
            this.dataStream2 = value;
            this.modify();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStream.prototype, "compress", {
        get: function () {
            return this.bCompress;
        },
        set: function (value) {
            this.bCompress = value;
            this.modify();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStream.prototype, "data", {
        get: function () {
            return this.dataStream2;
        },
        set: function (value) {
            this.dataStream2 = [];
            this.dataStream2 = value;
            this.modify();
        },
        enumerable: true,
        configurable: true
    });
    PdfStream.prototype.clearStream = function () {
        this.internalStream = [];
        this.remove(this.dictionaryProperties.filter);
        this.bCompress = true;
        this.modify();
    };
    PdfStream.prototype.write = function (text) {
        if (text == null) {
            throw new Error('ArgumentNullException:text');
        }
        if (text.length <= 0) {
            throw new Error('ArgumentException: Can not write an empty string, text');
        }
        this.dataStream2.push(text);
        this.modify();
    };
    PdfStream.prototype.compressContent = function (data, writer) {
        if (this.bCompress) {
            var sw = new __WEBPACK_IMPORTED_MODULE_6__syncfusion_ej2_compression__["a" /* CompressedStreamWriter */]();
            sw.write(data, 0, data.length);
            sw.close();
            data = sw.getCompressedString;
            this.addFilter(this.dictionaryProperties.flatedecode);
        }
        return data;
    };
    PdfStream.prototype.addFilter = function (filterName) {
        var obj = this.items.getValue(this.dictionaryProperties.filter);
        if (obj instanceof __WEBPACK_IMPORTED_MODULE_5__pdf_reference__["b" /* PdfReferenceHolder */]) {
            var rh = obj;
            obj = rh.object;
        }
        var array = obj;
        var name = obj;
        if (name != null) {
            array = new __WEBPACK_IMPORTED_MODULE_4__pdf_array__["a" /* PdfArray */]();
            array.insert(0, name);
            this.items.setValue(this.dictionaryProperties.filter, array);
        }
        name = new __WEBPACK_IMPORTED_MODULE_3__pdf_name__["a" /* PdfName */](filterName);
        if (array == null) {
            this.items.setValue(this.dictionaryProperties.filter, name);
        }
        else {
            array.insert(0, name);
        }
    };
    PdfStream.prototype.save = function (writer) {
        var data = '';
        for (var i = 0; i < this.data.length; i++) {
            data = data + this.data[i];
        }
        if (data.length > 1) {
            data = 'q\r\n' + data + 'Q\r\n';
        }
        data = this.compressContent(data, writer);
        var length = data.length;
        this.items.setValue(this.dictionaryProperties.length, new __WEBPACK_IMPORTED_MODULE_1__pdf_number__["a" /* PdfNumber */](length));
        _super.prototype.save.call(this, writer, false);
        writer.write(this.dicPrefix);
        writer.write(__WEBPACK_IMPORTED_MODULE_2__input_output_pdf_operators__["a" /* Operators */].newLine);
        if (data.length > 0) {
            writer.write(data);
        }
        writer.write(__WEBPACK_IMPORTED_MODULE_2__input_output_pdf_operators__["a" /* Operators */].newLine);
        writer.write(this.dicSuffix);
        writer.write(__WEBPACK_IMPORTED_MODULE_2__input_output_pdf_operators__["a" /* Operators */].newLine);
    };
    PdfStream.bytesToString = function (byteArray) {
        var output = '';
        for (var i = 0; i < byteArray.length; i++) {
            output = output + String.fromCharCode(byteArray[i]);
        }
        return output;
    };
    return PdfStream;
}(__WEBPACK_IMPORTED_MODULE_0__pdf_dictionary__["a" /* PdfDictionary */]));



/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__popup_index__ = __webpack_require__(251);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Popup", function() { return __WEBPACK_IMPORTED_MODULE_0__popup_index__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_index__ = __webpack_require__(248);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "calculateRelativeBasedPosition", function() { return __WEBPACK_IMPORTED_MODULE_1__common_index__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "calculatePosition", function() { return __WEBPACK_IMPORTED_MODULE_1__common_index__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "fit", function() { return __WEBPACK_IMPORTED_MODULE_1__common_index__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "isCollide", function() { return __WEBPACK_IMPORTED_MODULE_1__common_index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "flip", function() { return __WEBPACK_IMPORTED_MODULE_1__common_index__["e"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dialog_index__ = __webpack_require__(250);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ButtonProps", function() { return __WEBPACK_IMPORTED_MODULE_2__dialog_index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Dialog", function() { return __WEBPACK_IMPORTED_MODULE_2__dialog_index__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "dialogBuilder", function() { return __WEBPACK_IMPORTED_MODULE_2__dialog_index__["c"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tooltip_index__ = __webpack_require__(252);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Animation", function() { return __WEBPACK_IMPORTED_MODULE_3__tooltip_index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Tooltip", function() { return __WEBPACK_IMPORTED_MODULE_3__tooltip_index__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "tooltipBuilder", function() { return __WEBPACK_IMPORTED_MODULE_3__tooltip_index__["c"]; });






/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(3), __webpack_require__(2), __webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, constant_1, util_1, enum_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var RowRenderer = (function () {
        function RowRenderer(serviceLocator, cellType, parent) {
            this.element = ej2_base_2.createElement('tr', { attrs: { role: 'row' } });
            this.cellType = cellType;
            this.serviceLocator = serviceLocator;
            this.parent = parent;
        }
        RowRenderer.prototype.render = function (row, columns, attributes, rowTemplate) {
            return this.refreshRow(row, columns, attributes, rowTemplate);
        };
        RowRenderer.prototype.refresh = function (row, columns, isChanged, attributes, rowTemplate) {
            if (isChanged) {
                row.data = ej2_base_1.extend({}, row.changes);
            }
            var node = this.parent.getContent().querySelector('[data-uid=' + row.uid + ']');
            var tr = this.refreshRow(row, columns, attributes, rowTemplate);
            var cells = [].slice.call(tr.cells);
            node.innerHTML = '';
            for (var _i = 0, cells_1 = cells; _i < cells_1.length; _i++) {
                var cell = cells_1[_i];
                node.appendChild(cell);
            }
        };
        RowRenderer.prototype.refreshRow = function (row, columns, attributes, rowTemplate) {
            var tr = this.element.cloneNode();
            var rowArgs = { data: row.data };
            var cellArgs = { data: row.data };
            var attrCopy = ej2_base_1.extend({}, attributes, {});
            if (row.isDataRow) {
                row.isSelected = this.parent.getSelectedRowIndexes().indexOf(row.index) > -1;
            }
            this.buildAttributeFromRow(tr, row);
            ej2_base_2.attributes(tr, attrCopy);
            util_1.setStyleAndAttributes(tr, row.attributes);
            var cellRendererFact = this.serviceLocator.getService('cellRendererFactory');
            for (var i = 0, len = row.cells.length; i < len; i++) {
                var cell = row.cells[i];
                cell.isSelected = row.isSelected;
                var cellRenderer = cellRendererFact.getCellRenderer(row.cells[i].cellType || enum_1.CellType.Data);
                var td = cellRenderer.render(row.cells[i], row.data, { 'index': !ej2_base_1.isNullOrUndefined(row.index) ? row.index.toString() : '' });
                tr.appendChild(td);
                if (row.cells[i].cellType === enum_1.CellType.Data) {
                    this.parent.trigger(constant_1.queryCellInfo, ej2_base_1.extend(cellArgs, { cell: td, column: cell.column }));
                }
            }
            if (row.isDataRow) {
                this.parent.trigger(constant_1.rowDataBound, ej2_base_1.extend(rowArgs, { row: tr }));
            }
            if (row.cssClass) {
                tr.classList.add(row.cssClass);
            }
            return tr;
        };
        RowRenderer.prototype.buildAttributeFromRow = function (tr, row) {
            var attr = {};
            var prop = { 'rowindex': 'aria-rowindex', 'dataUID': 'data-uid', 'ariaSelected': 'aria-selected' };
            var classes = [];
            if (row.isDataRow) {
                classes.push('e-row');
            }
            if (row.isAltRow) {
                classes.push('e-altrow');
            }
            if (!ej2_base_1.isNullOrUndefined(row.index)) {
                attr[prop.rowindex] = row.index;
            }
            if (row.rowSpan) {
                attr.rowSpan = row.rowSpan;
            }
            if (row.uid) {
                attr[prop.dataUID] = row.uid;
            }
            if (row.isSelected) {
                attr[prop.ariaSelected] = true;
            }
            if (row.visible === false) {
                classes.push('e-hide');
            }
            attr.class = classes;
            util_1.setStyleAndAttributes(tr, attr);
        };
        return RowRenderer;
    }());
    exports.RowRenderer = RowRenderer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__numerictextbox_index__ = __webpack_require__(227);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "NumericTextBox", function() { return __WEBPACK_IMPORTED_MODULE_0__numerictextbox_index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "numerictextboxHelper", function() { return __WEBPACK_IMPORTED_MODULE_0__numerictextbox_index__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__ = __webpack_require__(224);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "regularExpressions", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "createMask", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "applyMask", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "wireEvents", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "unwireEvents", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "unstrippedValue", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "strippedValue", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "maskInputFocusHandler", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "maskInputBlurHandler", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["i"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "maskInputDropHandler", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["j"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "mobileRemoveFunction", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["k"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "setMaskValue", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["l"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "setElementValue", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["m"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "maskInput", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["n"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getVal", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["o"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getMaskedVal", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["p"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "MaskUndo", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["q"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "MaskedTextBox", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["r"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__input_index__ = __webpack_require__(222);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Input", function() { return __WEBPACK_IMPORTED_MODULE_2__input_index__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__form_validator_index__ = __webpack_require__(221);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ErrorOption", function() { return __WEBPACK_IMPORTED_MODULE_3__form_validator_index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "FormValidator", function() { return __WEBPACK_IMPORTED_MODULE_3__form_validator_index__["b"]; });






/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfSolidBrush; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pdf_color__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enum__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pdf_brush__ = __webpack_require__(27);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var PdfSolidBrush = (function (_super) {
    __extends(PdfSolidBrush, _super);
    function PdfSolidBrush(color) {
        var _this = _super.call(this) || this;
        _this.pdfColor = color;
        return _this;
    }
    Object.defineProperty(PdfSolidBrush.prototype, "color", {
        get: function () {
            return this.pdfColor;
        },
        set: function (value) {
            this.pdfColor = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {
        if (streamWriter == null) {
            throw new Error('ArgumentNullException:streamWriter');
        }
        var diff = false;
        if (brush == null) {
            diff = true;
            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);
            return diff;
        }
        else {
            var sBrush = brush;
            diff = true;
            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);
            return diff;
        }
    };
    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {
        streamWriter.setColorAndSpace(new __WEBPACK_IMPORTED_MODULE_0__pdf_color__["a" /* PdfColor */](0, 0, 0), __WEBPACK_IMPORTED_MODULE_1__enum__["i" /* PdfColorSpace */].Rgb, false);
    };
    return PdfSolidBrush;
}(__WEBPACK_IMPORTED_MODULE_2__pdf_brush__["a" /* PdfBrush */]));



/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ElementLayouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PdfLayoutFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return PdfLayoutParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return PdfLayoutResult; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enum__ = __webpack_require__(62);


var ElementLayouter = (function () {
    function ElementLayouter(element) {
        this.layoutElement = element;
    }
    Object.defineProperty(ElementLayouter.prototype, "elements", {
        get: function () {
            return this.layoutElement;
        },
        enumerable: true,
        configurable: true
    });
    ElementLayouter.prototype.getElement = function () {
        return this.layoutElement;
    };
    ElementLayouter.prototype.layout = function (param, isBoundsChanged) {
        if (typeof isBoundsChanged === 'boolean' && isBoundsChanged === true) {
            return this.layoutInternal(param, true);
        }
        else {
            return this.layoutInternal(param);
        }
    };
    ElementLayouter.prototype.getNextPage = function (currentPage) {
        var section = currentPage.section;
        var nextPage = section.add();
        return nextPage;
    };
    return ElementLayouter;
}());

var PdfLayoutFormat = (function () {
    function PdfLayoutFormat(baseFormat) {
        if (typeof baseFormat === 'undefined') {
        }
        else {
            this.break = baseFormat.break;
            this.layout = baseFormat.layout;
            this.paginateBounds = baseFormat.paginateBounds;
            this.boundsSet = baseFormat.usePaginateBounds;
        }
    }
    Object.defineProperty(PdfLayoutFormat.prototype, "layout", {
        get: function () {
            if (typeof this.layoutType === 'undefined' || this.layoutType == null) {
                this.layoutType = __WEBPACK_IMPORTED_MODULE_1__enum__["a" /* PdfLayoutType */].Paginate;
            }
            return this.layoutType;
        },
        set: function (value) {
            this.layoutType = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLayoutFormat.prototype, "break", {
        get: function () {
            if (typeof this.breakType === 'undefined' || this.boundsSet == null) {
                this.breakType = __WEBPACK_IMPORTED_MODULE_1__enum__["b" /* PdfLayoutBreakType */].FitPage;
            }
            return this.breakType;
        },
        set: function (value) {
            this.breakType = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLayoutFormat.prototype, "paginateBounds", {
        get: function () {
            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {
                this.layoutPaginateBounds = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["c" /* RectangleF */](0, 0, 0, 0);
            }
            return this.layoutPaginateBounds;
        },
        set: function (value) {
            this.layoutPaginateBounds = value;
            this.boundsSet = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLayoutFormat.prototype, "usePaginateBounds", {
        get: function () {
            if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {
                this.boundsSet = false;
            }
            return this.boundsSet;
        },
        enumerable: true,
        configurable: true
    });
    return PdfLayoutFormat;
}());

var PdfLayoutParams = (function () {
    function PdfLayoutParams() {
    }
    Object.defineProperty(PdfLayoutParams.prototype, "page", {
        get: function () {
            return this.pdfPage;
        },
        set: function (value) {
            this.pdfPage = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLayoutParams.prototype, "bounds", {
        get: function () {
            return new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["c" /* RectangleF */](this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);
        },
        set: function (value) {
            this.layoutBounds = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLayoutParams.prototype, "format", {
        get: function () {
            return this.layoutFormat;
        },
        set: function (value) {
            this.layoutFormat = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfLayoutParams;
}());

var PdfLayoutResult = (function () {
    function PdfLayoutResult(page, bounds) {
        this.pdfPage = page;
        this.layoutBounds = bounds;
    }
    Object.defineProperty(PdfLayoutResult.prototype, "page", {
        get: function () {
            return this.pdfPage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLayoutResult.prototype, "bounds", {
        get: function () {
            return this.layoutBounds;
        },
        enumerable: true,
        configurable: true
    });
    return PdfLayoutResult;
}());



/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfFont; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__enum__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pdf_string_format__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__string_layouter__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__string_tokenizer__ = __webpack_require__(64);





var PdfFont = (function () {
    function PdfFont(size, style) {
        this.fontStyle = __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Regular;
        if (typeof size === 'number' && typeof style === 'undefined') {
            this.fontSize = size;
        }
        else {
            this.fontSize = size;
            this.setStyle(style);
        }
    }
    Object.defineProperty(PdfFont.prototype, "name", {
        get: function () {
            return this.metrics.name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "size", {
        get: function () {
            return this.fontSize;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "height", {
        get: function () {
            return this.metrics.getHeight(null);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "style", {
        get: function () {
            return this.fontStyle;
        },
        set: function (value) {
            this.fontStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "bold", {
        get: function () {
            return ((this.style & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Bold) > 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "italic", {
        get: function () {
            return ((this.style & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Italic) > 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "strikeout", {
        get: function () {
            return ((this.style & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Strikeout) > 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "underline", {
        get: function () {
            return ((this.style & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Underline) > 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "metrics", {
        get: function () {
            return this.fontMetrics;
        },
        set: function (value) {
            this.fontMetrics = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "element", {
        get: function () {
            return this.pdfFontInternals;
        },
        enumerable: true,
        configurable: true
    });
    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {
        if (typeof text === 'string' && typeof arg2 === 'undefined') {
            return this.measureString(text, null);
        }
        else if (typeof text === 'string' && (arg2 instanceof __WEBPACK_IMPORTED_MODULE_2__pdf_string_format__["a" /* PdfStringFormat */] || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {
            var temparg2 = arg2;
            var charactersFitted = 0;
            var linesFilled = 0;
            return this.measureString(text, temparg2, charactersFitted, linesFilled);
        }
        else if (typeof text === 'string' && (arg2 instanceof __WEBPACK_IMPORTED_MODULE_2__pdf_string_format__["a" /* PdfStringFormat */] || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {
            var temparg2 = arg2;
            return this.measureString(text, 0, temparg2, arg3, arg4);
        }
        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof __WEBPACK_IMPORTED_MODULE_2__pdf_string_format__["a" /* PdfStringFormat */] || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {
            var layoutArea = new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["b" /* SizeF */](arg2, 0);
            var temparg3 = arg3;
            return this.measureString(text, layoutArea, temparg3, arg4, arg5);
        }
        else {
            if (text == null) {
                throw Error("ArgumentNullException(\"text\")");
            }
            var temparg2 = arg2;
            var temparg3 = arg3;
            var layouter = new __WEBPACK_IMPORTED_MODULE_3__string_layouter__["a" /* PdfStringLayouter */]();
            var result = layouter.layout(text, this, temparg3, temparg2, false, new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["b" /* SizeF */](0, 0));
            arg4 = text.length;
            arg5 = (result.empty) ? 0 : result.lines.length;
            return result.actualSize;
        }
    };
    PdfFont.prototype.equalsTo = function (obj) {
        var result = this.equalsToFont(obj);
        return result;
    };
    PdfFont.prototype.getInternals = function () {
        return this.pdfFontInternals;
    };
    PdfFont.prototype.setInternals = function (internals) {
        if (internals == null) {
            throw new Error('ArgumentNullException:internals');
        }
        this.pdfFontInternals = internals;
    };
    PdfFont.prototype.setStyle = function (style) {
        this.fontStyle = style;
    };
    PdfFont.prototype.applyFormatSettings = function (line, format, width) {
        var realWidth = width;
        if (format != null && width > 0) {
            if (format.characterSpacing !== 0) {
                realWidth += (line.length - 1) * format.characterSpacing;
            }
            if (format.wordSpacing !== 0) {
                var symbols = __WEBPACK_IMPORTED_MODULE_4__string_tokenizer__["a" /* StringTokenizer */].spaces;
                var whitespacesCount = __WEBPACK_IMPORTED_MODULE_4__string_tokenizer__["a" /* StringTokenizer */].getCharsCount(line, symbols);
                realWidth += whitespacesCount * format.wordSpacing;
            }
        }
        return realWidth;
    };
    return PdfFont;
}());

PdfFont.charSizeMultiplier = 0.001;
PdfFont.syncObject = new Object();


/***/ }),
/* 40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InternalEnum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PdfString; });
var InternalEnum;
(function (InternalEnum) {
    var ForceEncoding;
    (function (ForceEncoding) {
        ForceEncoding[ForceEncoding["None"] = 0] = "None";
        ForceEncoding[ForceEncoding["Ascii"] = 1] = "Ascii";
        ForceEncoding[ForceEncoding["Unicode"] = 2] = "Unicode";
    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));
    var SourceType;
    (function (SourceType) {
        SourceType[SourceType["StringValue"] = 0] = "StringValue";
        SourceType[SourceType["ByteBuffer"] = 1] = "ByteBuffer";
    })(SourceType || (SourceType = {}));
})(InternalEnum || (InternalEnum = {}));
var PdfString = (function () {
    function PdfString(value) {
        this.bHex = false;
        this.position1 = -1;
        this.clonedObject1 = null;
        this.bDecrypted = false;
        this.isParentDecrypted = false;
        this.isPacked = false;
        this.isFormField = false;
        this.isColorSpace = false;
        this.isHexString = true;
        if (typeof value === 'undefined') {
            this.bHex = false;
        }
        else {
            if (!(value.length > 0 && value[0] === '0xfeff')) {
                this.stringValue = value;
                this.data = [];
                for (var i = 0; i < value.length; ++i) {
                    this.data.push(value.charCodeAt(i));
                }
            }
        }
    }
    Object.defineProperty(PdfString.prototype, "hex", {
        get: function () {
            return this.bHex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "value", {
        get: function () {
            return this.stringValue;
        },
        set: function (value) {
            this.stringValue = value;
            this.data = null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "status", {
        get: function () {
            return this.status1;
        },
        set: function (value) {
            this.status1 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "isSaving", {
        get: function () {
            return this.isSaving1;
        },
        set: function (value) {
            this.isSaving1 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "objectCollectionIndex", {
        get: function () {
            return this.index1;
        },
        set: function (value) {
            this.index1 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "clonedObject", {
        get: function () {
            return this.clonedObject1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "position", {
        get: function () {
            return this.position1;
        },
        set: function (value) {
            this.position1 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "CrossTable", {
        get: function () {
            return this.crossTable;
        },
        enumerable: true,
        configurable: true
    });
    PdfString.bytesToHex = function (bytes) {
        if (bytes == null) {
            return '';
        }
        var builder = '';
        return builder;
    };
    PdfString.prototype.save = function (writer) {
        if (writer === null) {
            throw new Error('ArgumentNullException : writer');
        }
        writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);
    };
    PdfString.prototype.clone = function (crossTable) {
        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {
            return this.clonedObject1;
        }
        else {
            this.clonedObject1 = null;
        }
        var newString = new PdfString(this.stringValue);
        newString.bHex = this.bHex;
        newString.crossTable = crossTable;
        newString.isColorSpace = this.isColorSpace;
        this.clonedObject1 = newString;
        return newString;
    };
    return PdfString;
}());

PdfString.stringMark = '()';
PdfString.hexStringMark = '<>';
PdfString.hexFormatPattern = '{0:X2}';


/***/ }),
/* 41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__implementation_actions_action__ = __webpack_require__(143);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfAction", function() { return __WEBPACK_IMPORTED_MODULE_0__implementation_actions_action__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__implementation_actions_uri_action__ = __webpack_require__(144);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfUriAction", function() { return __WEBPACK_IMPORTED_MODULE_1__implementation_actions_uri_action__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__implementation_annotations_action_link_annotation__ = __webpack_require__(145);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfActionLinkAnnotation", function() { return __WEBPACK_IMPORTED_MODULE_2__implementation_annotations_action_link_annotation__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__implementation_annotations_annotation__ = __webpack_require__(147);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfAnnotation", function() { return __WEBPACK_IMPORTED_MODULE_3__implementation_annotations_annotation__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__implementation_annotations_annotation_collection__ = __webpack_require__(146);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfAnnotationCollection", function() { return __WEBPACK_IMPORTED_MODULE_4__implementation_annotations_annotation_collection__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__implementation_annotations_document_link_annotation__ = __webpack_require__(237);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentLinkAnnotation", function() { return __WEBPACK_IMPORTED_MODULE_5__implementation_annotations_document_link_annotation__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__implementation_annotations_link_annotation__ = __webpack_require__(94);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfLinkAnnotation", function() { return __WEBPACK_IMPORTED_MODULE_6__implementation_annotations_link_annotation__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__implementation_annotations_pdf_text_web_link__ = __webpack_require__(95);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfTextWebLink", function() { return __WEBPACK_IMPORTED_MODULE_7__implementation_annotations_pdf_text_web_link__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__implementation_annotations_uri_annotation__ = __webpack_require__(148);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfUriAnnotation", function() { return __WEBPACK_IMPORTED_MODULE_8__implementation_annotations_uri_annotation__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__implementation_collections_dictionary__ = __webpack_require__(31);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Dictionary", function() { return __WEBPACK_IMPORTED_MODULE_9__implementation_collections_dictionary__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__implementation_collections_utils__ = __webpack_require__(149);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "defaultToString", function() { return __WEBPACK_IMPORTED_MODULE_10__implementation_collections_utils__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__implementation_document_pdf_catalog__ = __webpack_require__(97);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfCatalog", function() { return __WEBPACK_IMPORTED_MODULE_11__implementation_document_pdf_catalog__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__implementation_document_pdf_document__ = __webpack_require__(47);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfDocument", function() { return __WEBPACK_IMPORTED_MODULE_12__implementation_document_pdf_document__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__implementation_document_pdf_document_base__ = __webpack_require__(155);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentBase", function() { return __WEBPACK_IMPORTED_MODULE_13__implementation_document_pdf_document_base__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__implementation_document_pdf_document_template__ = __webpack_require__(98);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentTemplate", function() { return __WEBPACK_IMPORTED_MODULE_14__implementation_document_pdf_document_template__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__implementation_document_automatic_fields_pdf_page_number_field__ = __webpack_require__(153);
/* inactive harmony reexport namespace */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__implementation_document_automatic_fields_composite_field__ = __webpack_require__(239);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfCompositeField", function() { return __WEBPACK_IMPORTED_MODULE_16__implementation_document_automatic_fields_composite_field__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__implementation_document_automatic_fields_page_count_field__ = __webpack_require__(240);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfPageCountField", function() { return __WEBPACK_IMPORTED_MODULE_17__implementation_document_automatic_fields_page_count_field__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__implementation_drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PointF", function() { return __WEBPACK_IMPORTED_MODULE_18__implementation_drawing_pdf_drawing__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "SizeF", function() { return __WEBPACK_IMPORTED_MODULE_18__implementation_drawing_pdf_drawing__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RectangleF", function() { return __WEBPACK_IMPORTED_MODULE_18__implementation_drawing_pdf_drawing__["c"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__implementation_general_pdf_cache_collection__ = __webpack_require__(157);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfCacheCollection", function() { return __WEBPACK_IMPORTED_MODULE_19__implementation_general_pdf_cache_collection__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__implementation_general_pdf_collection__ = __webpack_require__(158);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfCollection", function() { return __WEBPACK_IMPORTED_MODULE_20__implementation_general_pdf_collection__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__implementation_general_pdf_destination__ = __webpack_require__(242);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfDestination", function() { return __WEBPACK_IMPORTED_MODULE_21__implementation_general_pdf_destination__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__implementation_general_enum__ = __webpack_require__(156);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfDestinationMode", function() { return __WEBPACK_IMPORTED_MODULE_22__implementation_general_enum__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__implementation_graphics_constants__ = __webpack_require__(159);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ProcedureSets", function() { return __WEBPACK_IMPORTED_MODULE_23__implementation_graphics_constants__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__implementation_graphics_enum__ = __webpack_require__(9);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfHorizontalAlignment", function() { return __WEBPACK_IMPORTED_MODULE_24__implementation_graphics_enum__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfVerticalAlignment", function() { return __WEBPACK_IMPORTED_MODULE_24__implementation_graphics_enum__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfTextAlignment", function() { return __WEBPACK_IMPORTED_MODULE_24__implementation_graphics_enum__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TextRenderingMode", function() { return __WEBPACK_IMPORTED_MODULE_24__implementation_graphics_enum__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfLineJoin", function() { return __WEBPACK_IMPORTED_MODULE_24__implementation_graphics_enum__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfLineCap", function() { return __WEBPACK_IMPORTED_MODULE_24__implementation_graphics_enum__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfDashStyle", function() { return __WEBPACK_IMPORTED_MODULE_24__implementation_graphics_enum__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfFillMode", function() { return __WEBPACK_IMPORTED_MODULE_24__implementation_graphics_enum__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfColorSpace", function() { return __WEBPACK_IMPORTED_MODULE_24__implementation_graphics_enum__["i"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfBlendMode", function() { return __WEBPACK_IMPORTED_MODULE_24__implementation_graphics_enum__["j"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGraphicsUnit", function() { return __WEBPACK_IMPORTED_MODULE_24__implementation_graphics_enum__["k"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridImagePosition", function() { return __WEBPACK_IMPORTED_MODULE_24__implementation_graphics_enum__["l"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__implementation_graphics_pdf_color__ = __webpack_require__(25);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfColor", function() { return __WEBPACK_IMPORTED_MODULE_25__implementation_graphics_pdf_color__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__implementation_graphics_pdf_graphics__ = __webpack_require__(66);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGraphics", function() { return __WEBPACK_IMPORTED_MODULE_26__implementation_graphics_pdf_graphics__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "GetResourceEventHandler", function() { return __WEBPACK_IMPORTED_MODULE_26__implementation_graphics_pdf_graphics__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGraphicsState", function() { return __WEBPACK_IMPORTED_MODULE_26__implementation_graphics_pdf_graphics__["c"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__implementation_graphics_pdf_margins__ = __webpack_require__(165);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfMargins", function() { return __WEBPACK_IMPORTED_MODULE_27__implementation_graphics_pdf_margins__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__implementation_graphics_pdf_pen__ = __webpack_require__(67);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfPen", function() { return __WEBPACK_IMPORTED_MODULE_28__implementation_graphics_pdf_pen__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__implementation_graphics_pdf_resources__ = __webpack_require__(102);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfResources", function() { return __WEBPACK_IMPORTED_MODULE_29__implementation_graphics_pdf_resources__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Guid", function() { return __WEBPACK_IMPORTED_MODULE_29__implementation_graphics_pdf_resources__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__implementation_graphics_pdf_transformation_matrix__ = __webpack_require__(166);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfTransformationMatrix", function() { return __WEBPACK_IMPORTED_MODULE_30__implementation_graphics_pdf_transformation_matrix__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Matrix", function() { return __WEBPACK_IMPORTED_MODULE_30__implementation_graphics_pdf_transformation_matrix__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__implementation_graphics_brushes_pdf_brush__ = __webpack_require__(27);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfBrush", function() { return __WEBPACK_IMPORTED_MODULE_31__implementation_graphics_brushes_pdf_brush__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__implementation_graphics_brushes_pdf_solid_brush__ = __webpack_require__(37);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfSolidBrush", function() { return __WEBPACK_IMPORTED_MODULE_32__implementation_graphics_brushes_pdf_solid_brush__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__implementation_graphics_figures_pdf_template__ = __webpack_require__(48);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfTemplate", function() { return __WEBPACK_IMPORTED_MODULE_33__implementation_graphics_figures_pdf_template__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__implementation_graphics_figures_layout_element__ = __webpack_require__(99);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutElement", function() { return __WEBPACK_IMPORTED_MODULE_34__implementation_graphics_figures_layout_element__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__implementation_graphics_figures_text_element__ = __webpack_require__(161);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfTextElement", function() { return __WEBPACK_IMPORTED_MODULE_35__implementation_graphics_figures_text_element__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__implementation_graphics_figures_base_element_layouter__ = __webpack_require__(38);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ElementLayouter", function() { return __WEBPACK_IMPORTED_MODULE_36__implementation_graphics_figures_base_element_layouter__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutFormat", function() { return __WEBPACK_IMPORTED_MODULE_36__implementation_graphics_figures_base_element_layouter__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutParams", function() { return __WEBPACK_IMPORTED_MODULE_36__implementation_graphics_figures_base_element_layouter__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutResult", function() { return __WEBPACK_IMPORTED_MODULE_36__implementation_graphics_figures_base_element_layouter__["d"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__implementation_graphics_figures_base_text_layouter__ = __webpack_require__(160);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TextLayouter", function() { return __WEBPACK_IMPORTED_MODULE_37__implementation_graphics_figures_base_text_layouter__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TextPageLayoutResult", function() { return __WEBPACK_IMPORTED_MODULE_37__implementation_graphics_figures_base_text_layouter__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfTextLayoutResult", function() { return __WEBPACK_IMPORTED_MODULE_37__implementation_graphics_figures_base_text_layouter__["c"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__implementation_graphics_figures_enum__ = __webpack_require__(62);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutType", function() { return __WEBPACK_IMPORTED_MODULE_38__implementation_graphics_figures_enum__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutBreakType", function() { return __WEBPACK_IMPORTED_MODULE_38__implementation_graphics_figures_enum__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__implementation_graphics_fonts_enum__ = __webpack_require__(22);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfFontStyle", function() { return __WEBPACK_IMPORTED_MODULE_39__implementation_graphics_fonts_enum__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfFontFamily", function() { return __WEBPACK_IMPORTED_MODULE_39__implementation_graphics_fonts_enum__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfFontType", function() { return __WEBPACK_IMPORTED_MODULE_39__implementation_graphics_fonts_enum__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfWordWrapType", function() { return __WEBPACK_IMPORTED_MODULE_39__implementation_graphics_fonts_enum__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfSubSuperScript", function() { return __WEBPACK_IMPORTED_MODULE_39__implementation_graphics_fonts_enum__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "FontEncoding", function() { return __WEBPACK_IMPORTED_MODULE_39__implementation_graphics_fonts_enum__["f"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__implementation_graphics_fonts_pdf_font__ = __webpack_require__(39);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfFont", function() { return __WEBPACK_IMPORTED_MODULE_40__implementation_graphics_fonts_pdf_font__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__implementation_graphics_fonts_pdf_font_metrics__ = __webpack_require__(162);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfFontMetrics", function() { return __WEBPACK_IMPORTED_MODULE_41__implementation_graphics_fonts_pdf_font_metrics__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "WidthTable", function() { return __WEBPACK_IMPORTED_MODULE_41__implementation_graphics_fonts_pdf_font_metrics__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "StandardWidthTable", function() { return __WEBPACK_IMPORTED_MODULE_41__implementation_graphics_fonts_pdf_font_metrics__["c"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__implementation_graphics_fonts_pdf_standard_font__ = __webpack_require__(63);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfStandardFont", function() { return __WEBPACK_IMPORTED_MODULE_42__implementation_graphics_fonts_pdf_standard_font__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__implementation_graphics_fonts_pdf_standard_font_metrics_factory__ = __webpack_require__(163);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfStandardFontMetricsFactory", function() { return __WEBPACK_IMPORTED_MODULE_43__implementation_graphics_fonts_pdf_standard_font_metrics_factory__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__implementation_graphics_fonts_pdf_string_format__ = __webpack_require__(32);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfStringFormat", function() { return __WEBPACK_IMPORTED_MODULE_44__implementation_graphics_fonts_pdf_string_format__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__implementation_graphics_fonts_string_layouter__ = __webpack_require__(28);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfStringLayouter", function() { return __WEBPACK_IMPORTED_MODULE_45__implementation_graphics_fonts_string_layouter__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfStringLayoutResult", function() { return __WEBPACK_IMPORTED_MODULE_45__implementation_graphics_fonts_string_layouter__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "LineInfo", function() { return __WEBPACK_IMPORTED_MODULE_45__implementation_graphics_fonts_string_layouter__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "LineType", function() { return __WEBPACK_IMPORTED_MODULE_45__implementation_graphics_fonts_string_layouter__["d"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__implementation_graphics_fonts_string_tokenizer__ = __webpack_require__(64);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "StringTokenizer", function() { return __WEBPACK_IMPORTED_MODULE_46__implementation_graphics_fonts_string_tokenizer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__implementation_graphics_images_byte_array__ = __webpack_require__(100);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ByteArray", function() { return __WEBPACK_IMPORTED_MODULE_47__implementation_graphics_images_byte_array__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__implementation_graphics_images_image_decoder__ = __webpack_require__(164);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ImageFormat", function() { return __WEBPACK_IMPORTED_MODULE_48__implementation_graphics_images_image_decoder__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ImageDecoder", function() { return __WEBPACK_IMPORTED_MODULE_48__implementation_graphics_images_image_decoder__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__implementation_graphics_images_pdf_bitmap__ = __webpack_require__(101);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfBitmap", function() { return __WEBPACK_IMPORTED_MODULE_49__implementation_graphics_images_pdf_bitmap__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__implementation_graphics_images_pdf_image__ = __webpack_require__(65);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfImage", function() { return __WEBPACK_IMPORTED_MODULE_50__implementation_graphics_images_pdf_image__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__implementation_graphics_pdf_transparency__ = __webpack_require__(103);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfTransparency", function() { return __WEBPACK_IMPORTED_MODULE_51__implementation_graphics_pdf_transparency__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__implementation_input_output_enum__ = __webpack_require__(104);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ObjectStatus", function() { return __WEBPACK_IMPORTED_MODULE_52__implementation_input_output_enum__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__implementation_input_output_cross_table__ = __webpack_require__(167);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ObjectType", function() { return __WEBPACK_IMPORTED_MODULE_53__implementation_input_output_cross_table__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__implementation_input_output_pdf_cross_table__ = __webpack_require__(105);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfCrossTable", function() { return __WEBPACK_IMPORTED_MODULE_54__implementation_input_output_pdf_cross_table__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RegisteredObject", function() { return __WEBPACK_IMPORTED_MODULE_54__implementation_input_output_pdf_cross_table__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__implementation_input_output_pdf_dictionary_properties__ = __webpack_require__(6);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "DictionaryProperties", function() { return __WEBPACK_IMPORTED_MODULE_55__implementation_input_output_pdf_dictionary_properties__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__implementation_input_output_pdf_main_object_collection__ = __webpack_require__(168);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfMainObjectCollection", function() { return __WEBPACK_IMPORTED_MODULE_56__implementation_input_output_pdf_main_object_collection__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ObjectInfo", function() { return __WEBPACK_IMPORTED_MODULE_56__implementation_input_output_pdf_main_object_collection__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__implementation_input_output_pdf_operators__ = __webpack_require__(29);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Operators", function() { return __WEBPACK_IMPORTED_MODULE_57__implementation_input_output_pdf_operators__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__implementation_input_output_pdf_stream_writer__ = __webpack_require__(169);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfStreamWriter", function() { return __WEBPACK_IMPORTED_MODULE_58__implementation_input_output_pdf_stream_writer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__implementation_input_output_pdf_writer__ = __webpack_require__(170);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfWriter", function() { return __WEBPACK_IMPORTED_MODULE_59__implementation_input_output_pdf_writer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__implementation_pages_enum__ = __webpack_require__(26);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfPageOrientation", function() { return __WEBPACK_IMPORTED_MODULE_60__implementation_pages_enum__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfPageRotateAngle", function() { return __WEBPACK_IMPORTED_MODULE_60__implementation_pages_enum__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfNumberStyle", function() { return __WEBPACK_IMPORTED_MODULE_60__implementation_pages_enum__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfDockStyle", function() { return __WEBPACK_IMPORTED_MODULE_60__implementation_pages_enum__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfAlignmentStyle", function() { return __WEBPACK_IMPORTED_MODULE_60__implementation_pages_enum__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TemplateType", function() { return __WEBPACK_IMPORTED_MODULE_60__implementation_pages_enum__["f"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__implementation_pages_page_added_event_arguments__ = __webpack_require__(171);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PageAddedEventArgs", function() { return __WEBPACK_IMPORTED_MODULE_61__implementation_pages_page_added_event_arguments__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__implementation_pages_pdf_document_page_collection__ = __webpack_require__(172);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentPageCollection", function() { return __WEBPACK_IMPORTED_MODULE_62__implementation_pages_pdf_document_page_collection__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__implementation_pages_pdf_page__ = __webpack_require__(49);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfPage", function() { return __WEBPACK_IMPORTED_MODULE_63__implementation_pages_pdf_page__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__implementation_pages_pdf_page_base__ = __webpack_require__(106);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfPageBase", function() { return __WEBPACK_IMPORTED_MODULE_64__implementation_pages_pdf_page_base__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__implementation_pages_pdf_page_layer__ = __webpack_require__(108);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfPageLayer", function() { return __WEBPACK_IMPORTED_MODULE_65__implementation_pages_pdf_page_layer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__implementation_pages_pdf_page_layer_collection__ = __webpack_require__(107);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfPageLayerCollection", function() { return __WEBPACK_IMPORTED_MODULE_66__implementation_pages_pdf_page_layer_collection__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__implementation_pages_pdf_page_settings__ = __webpack_require__(173);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfPageSettings", function() { return __WEBPACK_IMPORTED_MODULE_67__implementation_pages_pdf_page_settings__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__implementation_pages_pdf_page_size__ = __webpack_require__(174);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfPageSize", function() { return __WEBPACK_IMPORTED_MODULE_68__implementation_pages_pdf_page_size__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__implementation_pages_pdf_page_template_element__ = __webpack_require__(245);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfPageTemplateElement", function() { return __WEBPACK_IMPORTED_MODULE_69__implementation_pages_pdf_page_template_element__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__implementation_pages_pdf_section__ = __webpack_require__(177);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfSection", function() { return __WEBPACK_IMPORTED_MODULE_70__implementation_pages_pdf_section__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PageSettingsState", function() { return __WEBPACK_IMPORTED_MODULE_70__implementation_pages_pdf_section__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__implementation_pages_pdf_section_collection__ = __webpack_require__(109);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfSectionCollection", function() { return __WEBPACK_IMPORTED_MODULE_71__implementation_pages_pdf_section_collection__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__implementation_pages_pdf_section_page_collection__ = __webpack_require__(175);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfSectionPageCollection", function() { return __WEBPACK_IMPORTED_MODULE_72__implementation_pages_pdf_section_page_collection__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__implementation_pages_pdf_section_templates__ = __webpack_require__(176);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfSectionTemplate", function() { return __WEBPACK_IMPORTED_MODULE_73__implementation_pages_pdf_section_templates__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_74__implementation_primitives_pdf_array__ = __webpack_require__(15);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfArray", function() { return __WEBPACK_IMPORTED_MODULE_74__implementation_primitives_pdf_array__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__implementation_primitives_pdf_dictionary__ = __webpack_require__(10);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfDictionary", function() { return __WEBPACK_IMPORTED_MODULE_75__implementation_primitives_pdf_dictionary__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "SaveSectionCollectionEventHandler", function() { return __WEBPACK_IMPORTED_MODULE_75__implementation_primitives_pdf_dictionary__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "SaveAnnotationEventHandler", function() { return __WEBPACK_IMPORTED_MODULE_75__implementation_primitives_pdf_dictionary__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "SaveSectionEventHandler", function() { return __WEBPACK_IMPORTED_MODULE_75__implementation_primitives_pdf_dictionary__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "SaveTemplateEventHandler", function() { return __WEBPACK_IMPORTED_MODULE_75__implementation_primitives_pdf_dictionary__["e"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_76__implementation_primitives_pdf_name__ = __webpack_require__(5);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfName", function() { return __WEBPACK_IMPORTED_MODULE_76__implementation_primitives_pdf_name__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_77__implementation_primitives_pdf_number__ = __webpack_require__(13);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfNumber", function() { return __WEBPACK_IMPORTED_MODULE_77__implementation_primitives_pdf_number__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__implementation_primitives_pdf_reference__ = __webpack_require__(17);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfReference", function() { return __WEBPACK_IMPORTED_MODULE_78__implementation_primitives_pdf_reference__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfReferenceHolder", function() { return __WEBPACK_IMPORTED_MODULE_78__implementation_primitives_pdf_reference__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__implementation_primitives_pdf_stream__ = __webpack_require__(33);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfStream", function() { return __WEBPACK_IMPORTED_MODULE_79__implementation_primitives_pdf_stream__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_80__implementation_primitives_pdf_string__ = __webpack_require__(40);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "InternalEnum", function() { return __WEBPACK_IMPORTED_MODULE_80__implementation_primitives_pdf_string__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfString", function() { return __WEBPACK_IMPORTED_MODULE_80__implementation_primitives_pdf_string__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__implementation_structured_elements_grid_styles_style__ = __webpack_require__(50);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridStyleBase", function() { return __WEBPACK_IMPORTED_MODULE_81__implementation_structured_elements_grid_styles_style__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridStyle", function() { return __WEBPACK_IMPORTED_MODULE_81__implementation_structured_elements_grid_styles_style__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridCellStyle", function() { return __WEBPACK_IMPORTED_MODULE_81__implementation_structured_elements_grid_styles_style__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridRowStyle", function() { return __WEBPACK_IMPORTED_MODULE_81__implementation_structured_elements_grid_styles_style__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfHorizontalOverflowType", function() { return __WEBPACK_IMPORTED_MODULE_81__implementation_structured_elements_grid_styles_style__["e"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_82__implementation_structured_elements_grid_styles_pdf_borders__ = __webpack_require__(111);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfBorders", function() { return __WEBPACK_IMPORTED_MODULE_82__implementation_structured_elements_grid_styles_pdf_borders__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfPaddings", function() { return __WEBPACK_IMPORTED_MODULE_82__implementation_structured_elements_grid_styles_pdf_borders__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_83__implementation_structured_elements_tables_light_tables_enum__ = __webpack_require__(112);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfBorderOverlapStyle", function() { return __WEBPACK_IMPORTED_MODULE_83__implementation_structured_elements_tables_light_tables_enum__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_84__implementation_structured_elements_grid_pdf_grid__ = __webpack_require__(247);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridLayoutFormat", function() { return __WEBPACK_IMPORTED_MODULE_84__implementation_structured_elements_grid_pdf_grid__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGrid", function() { return __WEBPACK_IMPORTED_MODULE_84__implementation_structured_elements_grid_pdf_grid__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "GridCellEventArgs", function() { return __WEBPACK_IMPORTED_MODULE_84__implementation_structured_elements_grid_pdf_grid__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridBeginCellDrawEventArgs", function() { return __WEBPACK_IMPORTED_MODULE_84__implementation_structured_elements_grid_pdf_grid__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridEndCellDrawEventArgs", function() { return __WEBPACK_IMPORTED_MODULE_84__implementation_structured_elements_grid_pdf_grid__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfCancelEventArgs", function() { return __WEBPACK_IMPORTED_MODULE_84__implementation_structured_elements_grid_pdf_grid__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "BeginPageLayoutEventArgs", function() { return __WEBPACK_IMPORTED_MODULE_84__implementation_structured_elements_grid_pdf_grid__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "EndPageLayoutEventArgs", function() { return __WEBPACK_IMPORTED_MODULE_84__implementation_structured_elements_grid_pdf_grid__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridBeginPageLayoutEventArgs", function() { return __WEBPACK_IMPORTED_MODULE_84__implementation_structured_elements_grid_pdf_grid__["i"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridEndPageLayoutEventArgs", function() { return __WEBPACK_IMPORTED_MODULE_84__implementation_structured_elements_grid_pdf_grid__["j"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RowLayoutResult", function() { return __WEBPACK_IMPORTED_MODULE_84__implementation_structured_elements_grid_pdf_grid__["k"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridLayoutResult", function() { return __WEBPACK_IMPORTED_MODULE_84__implementation_structured_elements_grid_pdf_grid__["l"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_85__implementation_structured_elements_grid_pdf_grid_column__ = __webpack_require__(178);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridColumn", function() { return __WEBPACK_IMPORTED_MODULE_85__implementation_structured_elements_grid_pdf_grid_column__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridColumnCollection", function() { return __WEBPACK_IMPORTED_MODULE_85__implementation_structured_elements_grid_pdf_grid_column__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_86__implementation_structured_elements_grid_pdf_grid_row__ = __webpack_require__(179);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridRow", function() { return __WEBPACK_IMPORTED_MODULE_86__implementation_structured_elements_grid_pdf_grid_row__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridRowCollection", function() { return __WEBPACK_IMPORTED_MODULE_86__implementation_structured_elements_grid_pdf_grid_row__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridHeaderCollection", function() { return __WEBPACK_IMPORTED_MODULE_86__implementation_structured_elements_grid_pdf_grid_row__["c"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_87__implementation_structured_elements_grid_pdf_grid_cell__ = __webpack_require__(110);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridCell", function() { return __WEBPACK_IMPORTED_MODULE_87__implementation_structured_elements_grid_pdf_grid_cell__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "PdfGridCellCollection", function() { return __WEBPACK_IMPORTED_MODULE_87__implementation_structured_elements_grid_pdf_grid_cell__["b"]; });
/* empty harmony namespace reexport */



























































































/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Row = (function () {
        function Row(options) {
            ej2_base_1.merge(this, options);
        }
        return Row;
    }());
    exports.Row = Row;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export basicPatterns */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DateFormat; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__parser_base__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__intl_base__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util__ = __webpack_require__(1);



var abbreviateRegexGlobal = /\/MMMMM|MMMM|MMM|a|LLL|EEEEE|EEEE|E|K|ccc|G+|z+/gi;
var standalone = 'stand-alone';
var weekdayKey = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];
var basicPatterns = ['short', 'medium', 'long', 'full'];
var timeSetter = {
    m: 'getMinutes',
    h: 'getHours',
    H: 'getHours',
    s: 'getSeconds',
    d: 'getDate',
};
var datePartMatcher = {
    'M': 'month',
    'd': 'day',
    'E': 'weekday',
    'c': 'weekday',
    'y': 'year',
    'm': 'minute',
    'h': 'hour',
    'H': 'hour',
    's': 'second',
    'L': 'month',
    'a': 'designator',
    'z': 'timeZone',
    'Z': 'timeZone',
    'G': 'era'
};
var timeSeparator = 'timeSeparator';
var DateFormat = (function () {
    function DateFormat() {
    }
    DateFormat.dateFormat = function (culture, option, cldr) {
        var _this = this;
        var dependable = __WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].getDependables(cldr, culture);
        var formatOptions = {};
        var resPattern = option.format || __WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].getResultantPattern(option.skeleton, dependable.dateObject, option.type);
        formatOptions.dateSeperator = __WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].getDateSeparator(dependable.dateObject);
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(resPattern)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["q" /* throwError */])('Format options or type given must be invalid');
        }
        else {
            formatOptions.pattern = resPattern;
            formatOptions.numMapper = __WEBPACK_IMPORTED_MODULE_0__parser_base__["a" /* ParserBase */].getNumberMapper(dependable.parserObject, __WEBPACK_IMPORTED_MODULE_0__parser_base__["a" /* ParserBase */].getNumberingSystem(cldr));
            var patternMatch = resPattern.match(abbreviateRegexGlobal) || [];
            for (var _i = 0, patternMatch_1 = patternMatch; _i < patternMatch_1.length; _i++) {
                var str = patternMatch_1[_i];
                var len = str.length;
                var char = str[0];
                if (char === 'K') {
                    char = 'h';
                }
                var charKey = datePartMatcher[char];
                switch (char) {
                    case 'E':
                    case 'c':
                        formatOptions.weekday = dependable.dateObject[__WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].days][standalone][__WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].monthIndex[len]];
                        break;
                    case 'M':
                    case 'L':
                        formatOptions.month = dependable.dateObject[__WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].month][standalone][__WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].monthIndex[len]];
                        break;
                    case 'a':
                        formatOptions.designator = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["c" /* getValue */])('dayPeriods.format.wide', dependable.dateObject);
                        break;
                    case 'G':
                        var eText = (len <= 3) ? 'eraAbbr' : (len === 4) ? 'eraNames' : 'eraNarrow';
                        formatOptions.era = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["c" /* getValue */])('eras.' + eText, dependable.dateObject);
                        break;
                    case 'z':
                        formatOptions.timeZone = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["c" /* getValue */])('dates.timeZoneNames', dependable.parserObject);
                        break;
                }
            }
        }
        return function (value) {
            if (isNaN(value.getDate())) {
                return null;
            }
            return _this.intDateFormatter(value, formatOptions);
        };
    };
    DateFormat.intDateFormatter = function (value, options) {
        var pattern = options.pattern;
        var ret = '';
        var matches = pattern.match(__WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].dateParseRegex);
        for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {
            var match = matches_1[_i];
            var length_1 = match.length;
            var char = match[0];
            if (char === 'K') {
                char = 'h';
            }
            var curval = void 0;
            var isNumber = void 0;
            var processNumber = void 0;
            var curstr = '';
            switch (char) {
                case 'M':
                case 'L':
                    curval = value.getMonth() + 1;
                    if (length_1 > 2) {
                        ret += options.month[curval];
                    }
                    else {
                        isNumber = true;
                    }
                    break;
                case 'E':
                case 'c':
                    ret += options.weekday[weekdayKey[value.getDay()]];
                    break;
                case 'H':
                case 'h':
                case 'm':
                case 's':
                case 'd':
                    isNumber = true;
                    curval = value[timeSetter[char]]();
                    if (char === 'h') {
                        curval = curval % 12 || 12;
                    }
                    break;
                case 'y':
                    processNumber = true;
                    curstr += value.getFullYear();
                    if (length_1 === 2) {
                        curstr = curstr.substr(curstr.length - 2);
                    }
                    break;
                case 'a':
                    var desig = value.getHours() < 12 ? 'am' : 'pm';
                    ret += options.designator[desig];
                    break;
                case 'G':
                    var dec = value.getFullYear() < 0 ? 0 : 1;
                    ret += options.era[dec];
                    break;
                case '\'':
                    ret += (match === '\'\'') ? '\'' : match.replace(/\'/g, '');
                    break;
                case 'z':
                    var timezone = value.getTimezoneOffset();
                    var pattern_1 = (length_1 < 4) ? '+H;-H' : options.timeZone.hourFormat;
                    pattern_1 = pattern_1.replace(/:/g, options.numMapper.timeSeparator);
                    if (timezone === 0) {
                        ret += options.timeZone.gmtZeroFormat;
                    }
                    else {
                        processNumber = true;
                        curstr = this.getTimeZoneValue(timezone, pattern_1);
                    }
                    curstr = options.timeZone.gmtFormat.replace(/\{0\}/, curstr);
                    break;
                case ':':
                    ret += options.numMapper.numberSymbols[timeSeparator];
                    break;
                case '/':
                    ret += options.dateSeperator;
                    break;
                default:
                    ret += match;
            }
            if (isNumber) {
                processNumber = true;
                curstr = this.checkTwodigitNumber(curval, length_1);
            }
            if (processNumber) {
                ret += __WEBPACK_IMPORTED_MODULE_0__parser_base__["a" /* ParserBase */].convertValueParts(curstr, __WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].latnParseRegex, options.numMapper.mapper);
            }
        }
        return ret;
    };
    DateFormat.checkTwodigitNumber = function (val, len) {
        var ret = val + '';
        if (len === 2 && ret.length !== 2) {
            return '0' + ret;
        }
        return ret;
    };
    DateFormat.getTimeZoneValue = function (tVal, pattern) {
        var _this = this;
        var splt = pattern.split(';');
        var curPattern = splt[tVal > 0 ? 1 : 0];
        var no = Math.abs(tVal);
        return curPattern = curPattern.replace(/HH?|mm/g, function (str) {
            var len = str.length;
            var ishour = str.indexOf('H') !== -1;
            return _this.checkTwodigitNumber(Math.floor(ishour ? (no / 60) : (no % 60)), len);
        });
    };
    return DateFormat;
}());



/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NumberFormat; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__internationalization__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__intl_base__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__parser_base__ = __webpack_require__(21);




var errorText = {
    'ms': 'minimumSignificantDigits',
    'ls': 'maximumSignificantDigits',
    'mf': 'minimumFractionDigits',
    'lf': 'maximumFractionDigits',
};
var integerError = 'minimumIntegerDigits';
var percentSign = 'percentSign';
var minusSign = 'minusSign';
var spaceRegex = /\s/;
var mapper = ['infinity', 'nan', 'group', 'decimal'];
var infinity = 'infinity';
var nan = 'nan';
var NumberFormat = (function () {
    function NumberFormat() {
    }
    NumberFormat.numberFormatter = function (culture, option, cldr) {
        var _this = this;
        var fOptions = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])({}, option);
        var cOptions = {};
        var dOptions = {};
        var symbolPattern;
        var dependable = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getDependables(cldr, culture, true);
        dOptions.numberMapper = __WEBPACK_IMPORTED_MODULE_3__parser_base__["a" /* ParserBase */].getNumberMapper(dependable.parserObject, __WEBPACK_IMPORTED_MODULE_3__parser_base__["a" /* ParserBase */].getNumberingSystem(cldr), true);
        dOptions.currencySymbol = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getCurrencySymbol(dependable.numericObject, fOptions.currency || __WEBPACK_IMPORTED_MODULE_1__internationalization__["e" /* defaultCurrencyCode */]);
        dOptions.percentSymbol = dOptions.numberMapper.numberSymbols[percentSign];
        dOptions.minusSymbol = dOptions.numberMapper.numberSymbols[minusSign];
        var symbols = dOptions.numberMapper.numberSymbols;
        if ((option.format) && !(__WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].formatRegex.test(option.format))) {
            cOptions = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].customFormat(option.format, dOptions, dependable.numericObject);
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(fOptions, __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getProperNumericSkeleton(option.format || 'N'));
            fOptions.isCurrency = fOptions.type === 'currency';
            fOptions.isPercent = fOptions.type === 'percent';
            symbolPattern = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getSymbolPattern(fOptions.type, dOptions.numberMapper.numberSystem, dependable.numericObject, fOptions.isAccount);
            fOptions.groupOne = this.checkValueRange(fOptions.maximumSignificantDigits, fOptions.minimumSignificantDigits, true);
            this.checkValueRange(fOptions.maximumFractionDigits, fOptions.minimumFractionDigits, false, true);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(fOptions.fractionDigits)) {
                fOptions.minimumFractionDigits = fOptions.maximumFractionDigits = fOptions.fractionDigits;
            }
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(fOptions.useGrouping)) {
                fOptions.useGrouping = true;
            }
            if (fOptions.isCurrency) {
                symbolPattern = symbolPattern.replace(/\u00A4/g, __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].defaultCurrency);
            }
            var split = symbolPattern.split(';');
            cOptions.nData = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getFormatData(split[1] || '-' + split[0], true, dOptions.currencySymbol);
            cOptions.pData = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getFormatData(split[0], false, dOptions.currencySymbol);
            if (fOptions.useGrouping) {
                fOptions.groupSeparator = symbols[mapper[2]];
                fOptions.groupData = this.getGroupingDetails(split[0]);
            }
            var minFrac = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(fOptions.minimumFractionDigits);
            if (minFrac) {
                fOptions.minimumFractionDigits = cOptions.nData.minimumFraction;
            }
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(fOptions.maximumFractionDigits)) {
                var mval = cOptions.nData.maximumFraction;
                fOptions.maximumFractionDigits = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(mval) && fOptions.isPercent ? 0 : mval;
            }
            var mfrac = fOptions.minimumFractionDigits;
            var lfrac = fOptions.maximumFractionDigits;
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(mfrac) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(lfrac)) {
                if (mfrac > lfrac) {
                    fOptions.maximumFractionDigits = mfrac;
                }
            }
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(cOptions.nData, fOptions);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(cOptions.pData, fOptions);
        return function (value) {
            if (isNaN(value)) {
                return symbols[mapper[1]];
            }
            else if (!isFinite(value)) {
                return symbols[mapper[0]];
            }
            return _this.intNumberFormatter(value, cOptions, dOptions);
        };
    };
    NumberFormat.getGroupingDetails = function (pattern) {
        var ret = {};
        var match = pattern.match(__WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].negativeDataRegex);
        if (match && match[4]) {
            var pattern_1 = match[4];
            var p = pattern_1.lastIndexOf(',');
            if (p !== -1) {
                var temp = pattern_1.split('.')[0];
                ret.primary = (temp.length - p) - 1;
                var s = pattern_1.lastIndexOf(',', p - 1);
                if (s !== -1) {
                    ret.secondary = p - 1 - s;
                }
            }
        }
        return ret;
    };
    NumberFormat.checkValueRange = function (val1, val2, checkbothExist, isFraction) {
        var decide = isFraction ? 'f' : 's';
        var dint = 0;
        var str1 = errorText['l' + decide];
        var str2 = errorText['m' + decide];
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(val1)) {
            this.checkRange(val1, str1, isFraction);
            dint++;
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(val2)) {
            this.checkRange(val2, str2, isFraction);
            dint++;
        }
        if (dint === 2) {
            if (val1 < val2) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["q" /* throwError */])(str2 + 'specified must be less than the' + str1);
            }
            else {
                return true;
            }
        }
        else if (checkbothExist && dint === 1) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["q" /* throwError */])('Both' + str2 + 'and' + str2 + 'must be present');
        }
        return false;
    };
    NumberFormat.checkRange = function (val, text, isFraction) {
        var range = isFraction ? [0, 20] : [1, 21];
        if (val < range[0] || val > range[1]) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["q" /* throwError */])(text + 'value must be within the range' + range[0] + 'to' + range[1]);
        }
    };
    NumberFormat.intNumberFormatter = function (value, fOptions, dOptions) {
        var curData;
        if (value < 0) {
            value = value * -1;
            curData = fOptions.nData;
        }
        else if (value === 0) {
            curData = fOptions.zeroData || fOptions.pData;
        }
        else {
            curData = fOptions.pData;
        }
        var fValue = '';
        if (curData.isPercent) {
            value = value * 100;
        }
        if (curData.groupOne) {
            fValue = this.processSignificantDigits(value, curData.minimumSignificantDigits, curData.maximumSignificantDigits);
        }
        else {
            fValue = this.processFraction(value, curData.minimumFractionDigits, curData.maximumFractionDigits);
            if (curData.minimumIntegerDigits) {
                fValue = this.processMinimumIntegers(fValue, curData.minimumIntegerDigits);
            }
        }
        fValue = fValue.replace('.', dOptions.numberMapper.numberSymbols[mapper[3]]);
        if (curData.useGrouping) {
            fValue = this.groupNumbers(fValue, curData.groupData.primary, curData.groupSeparator || ',', dOptions.numberMapper.numberSymbols[mapper[3]] || '.', curData.groupData.secondary);
        }
        fValue = __WEBPACK_IMPORTED_MODULE_3__parser_base__["a" /* ParserBase */].convertValueParts(fValue, __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].latnParseRegex, dOptions.numberMapper.mapper);
        return curData.nlead + fValue + curData.nend;
    };
    NumberFormat.processSignificantDigits = function (value, min, max) {
        var temp = value + '';
        var tn;
        var length = temp.length;
        if (length < min) {
            return value.toPrecision(min);
        }
        else {
            temp = value.toPrecision(max);
            tn = +temp;
            return tn + '';
        }
    };
    NumberFormat.groupNumbers = function (val, level1, sep, decimalSymbol, level2) {
        var flag = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(level2) && level2 !== 0;
        var split = val.split(decimalSymbol);
        var prefix = split[0];
        var length = prefix.length;
        var str = '';
        while (length > level1) {
            str = prefix.slice(length - level1, length) + (str.length ?
                (sep + str) : '');
            length -= level1;
            if (flag) {
                level1 = level2;
                flag = false;
            }
        }
        split[0] = prefix.slice(0, length) + (str.length ? sep : '') + str;
        return split.join(decimalSymbol);
    };
    NumberFormat.processFraction = function (value, min, max) {
        var temp = (value + '').split('.')[1];
        var length = temp ? temp.length : 0;
        if (min && length < min) {
            var ret = '';
            if (length === 0) {
                ret = value.toFixed(min);
            }
            else {
                ret += value;
                for (var j = 0; j < min - length; j++) {
                    ret += '0';
                }
                return ret;
            }
            return value.toFixed(min);
        }
        else if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(max) && (length > max || max === 0)) {
            return value.toFixed(max);
        }
        return value + '';
    };
    NumberFormat.processMinimumIntegers = function (value, min) {
        var temp = value.split('.');
        var lead = temp[0];
        var len = lead.length;
        if (len < min) {
            for (var i = 0; i < min - len; i++) {
                lead = '0' + lead;
            }
            temp[0] = lead;
        }
        return temp.join('.');
    };
    return NumberFormat;
}());



/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ModuleLoader; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

var MODULE_SUFFIX = 'Module';
var ModuleLoader = (function () {
    function ModuleLoader(parent) {
        this.loadedModules = [];
        this.parent = parent;
    }
    ;
    ModuleLoader.prototype.inject = function (requiredModules, moduleList) {
        var reqLength = requiredModules.length;
        if (reqLength === 0) {
            this.clean();
            return;
        }
        if (this.loadedModules.length) {
            this.clearUnusedModule(requiredModules);
        }
        for (var i = 0; i < reqLength; i++) {
            var modl = requiredModules[i];
            for (var _i = 0, moduleList_1 = moduleList; _i < moduleList_1.length; _i++) {
                var module = moduleList_1[_i];
                var modName = modl.member;
                if (module.prototype.getModuleName() === modl.member && !this.isModuleLoaded(modName)) {
                    var moduleObject = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["a" /* createInstance */])(module, modl.args);
                    var memberName = this.getMemberName(modName);
                    if (modl.isProperty) {
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["d" /* setValue */])(memberName, module, this.parent);
                    }
                    else {
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["d" /* setValue */])(memberName, moduleObject, this.parent);
                    }
                    var loadedModule = modl;
                    loadedModule.member = memberName;
                    this.loadedModules.push(loadedModule);
                }
            }
        }
    };
    ModuleLoader.prototype.clean = function () {
        for (var _i = 0, _a = this.loadedModules; _i < _a.length; _i++) {
            var modules = _a[_i];
            if (!modules.isProperty) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(modules.member, this.parent).destroy();
            }
        }
        this.loadedModules = [];
    };
    ModuleLoader.prototype.clearUnusedModule = function (moduleList) {
        var _this = this;
        var usedModules = moduleList.map(function (arg) { return _this.getMemberName(arg.member); });
        var removableModule = this.loadedModules.filter(function (module) {
            return usedModules.indexOf(module.member) === -1;
        });
        for (var _i = 0, removableModule_1 = removableModule; _i < removableModule_1.length; _i++) {
            var mod = removableModule_1[_i];
            if (!mod.isProperty) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(mod.member, this.parent).destroy();
            }
            this.loadedModules.splice(this.loadedModules.indexOf(mod), 1);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["e" /* deleteObject */])(this.parent, mod.member);
        }
    };
    ModuleLoader.prototype.getMemberName = function (name) {
        return name[0].toLowerCase() + name.substring(1) + MODULE_SUFFIX;
    };
    ModuleLoader.prototype.isModuleLoaded = function (modName) {
        for (var _i = 0, _a = this.loadedModules; _i < _a.length; _i++) {
            var mod = _a[_i];
            if (mod.member === this.getMemberName(modName)) {
                return true;
            }
        }
        return false;
    };
    return ModuleLoader;
}());



/***/ }),
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TemporaryDictionary; });
var TemporaryDictionary = (function () {
    function TemporaryDictionary() {
        this.mKeys = [];
        this.mValues = [];
    }
    TemporaryDictionary.prototype.size = function () {
        return this.mKeys.length;
    };
    TemporaryDictionary.prototype.add = function (key, value) {
        if (key === undefined || key === null || value === undefined || value === null) {
            throw new ReferenceError('Provided key or value is not valid.');
        }
        var index = this.mKeys.indexOf(key);
        if (index < 0) {
            this.mKeys.push(key);
            this.mValues.push(value);
            return 1;
        }
        else {
            throw new RangeError('An item with the same key has already been added.');
        }
    };
    TemporaryDictionary.prototype.keys = function () {
        return this.mKeys;
    };
    TemporaryDictionary.prototype.values = function () {
        return this.mValues;
    };
    TemporaryDictionary.prototype.getValue = function (key) {
        if (key === undefined || key === null) {
            throw new ReferenceError('Provided key is not valid.');
        }
        var index = this.mKeys.indexOf(key);
        if (index < 0) {
            throw new RangeError('No item with the specified key has been added.');
        }
        else {
            return this.mValues[index];
        }
    };
    TemporaryDictionary.prototype.setValue = function (key, value) {
        if (key === undefined || key === null) {
            throw new ReferenceError('Provided key is not valid.');
        }
        var index = this.mKeys.indexOf(key);
        if (index < 0) {
            this.mKeys.push(key);
            this.mValues.push(value);
        }
        else {
            this.mValues[index] = value;
        }
    };
    TemporaryDictionary.prototype.remove = function (key) {
        if (key === undefined || key === null) {
            throw new ReferenceError('Provided key is not valid.');
        }
        var index = this.mKeys.indexOf(key);
        if (index < 0) {
            throw new RangeError('No item with the specified key has been added.');
        }
        else {
            this.mKeys.splice(index, 1);
            this.mValues.splice(index, 1);
            return true;
        }
    };
    TemporaryDictionary.prototype.containsKey = function (key) {
        if (key === undefined || key === null) {
            throw new ReferenceError('Provided key is not valid.');
        }
        var index = this.mKeys.indexOf(key);
        if (index < 0) {
            return false;
        }
        return true;
    };
    TemporaryDictionary.prototype.clear = function () {
        this.mKeys = [];
        this.mValues = [];
    };
    return TemporaryDictionary;
}());



/***/ }),
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfDocument; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__input_output_pdf_writer__ = __webpack_require__(170);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__input_output_pdf_main_object_collection__ = __webpack_require__(168);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pdf_document_base__ = __webpack_require__(155);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__input_output_pdf_cross_table__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pdf_catalog__ = __webpack_require__(97);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pages_pdf_page_settings__ = __webpack_require__(173);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__pages_pdf_section_collection__ = __webpack_require__(109);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__pages_pdf_document_page_collection__ = __webpack_require__(172);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__general_pdf_cache_collection__ = __webpack_require__(157);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__graphics_enum__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__pdf_document_template__ = __webpack_require__(98);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__graphics_fonts_enum__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__graphics_fonts_pdf_standard_font__ = __webpack_require__(63);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();













var PdfDocument = (function (_super) {
    __extends(PdfDocument, _super);
    function PdfDocument(isMerging) {
        var _this = _super.call(this) || this;
        _this.defaultMargin = 40.0;
        _this.streamWriter = null;
        _this = _super.call(this, _this) || this;
        if (isMerging === true || isMerging === false || typeof isMerging !== 'undefined') {
            var objects = new __WEBPACK_IMPORTED_MODULE_1__input_output_pdf_main_object_collection__["a" /* PdfMainObjectCollection */]();
            _this.setMainObjectCollection(objects);
            var crossTable = new __WEBPACK_IMPORTED_MODULE_3__input_output_pdf_cross_table__["a" /* PdfCrossTable */]();
            crossTable.isMerging = isMerging;
            crossTable.document = _this;
            _this.setCrossTable(crossTable);
            var catalog = new __WEBPACK_IMPORTED_MODULE_4__pdf_catalog__["a" /* PdfCatalog */]();
            _this.setCatalog(catalog);
            objects.add(catalog);
            catalog.position = -1;
            _this.sectionCollection = new __WEBPACK_IMPORTED_MODULE_6__pages_pdf_section_collection__["a" /* PdfSectionCollection */](_this);
            _this.documentPageCollection = new __WEBPACK_IMPORTED_MODULE_7__pages_pdf_document_page_collection__["a" /* PdfDocumentPageCollection */](_this);
            catalog.pages = _this.sectionCollection;
        }
        else {
            PdfDocument.cacheCollection = new __WEBPACK_IMPORTED_MODULE_8__general_pdf_cache_collection__["a" /* PdfCacheCollection */]();
            _this.constructor(false);
        }
        return _this;
    }
    Object.defineProperty(PdfDocument, "defaultFont", {
        get: function () {
            if (this.defaultStandardFont == null) {
                this.defaultStandardFont = new __WEBPACK_IMPORTED_MODULE_12__graphics_fonts_pdf_standard_font__["a" /* PdfStandardFont */](__WEBPACK_IMPORTED_MODULE_11__graphics_fonts_enum__["b" /* PdfFontFamily */].Helvetica, 8);
            }
            return this.defaultStandardFont;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocument.prototype, "sections", {
        get: function () {
            return this.sectionCollection;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocument.prototype, "pageSettings", {
        get: function () {
            if (this.settings == null) {
                this.settings = new __WEBPACK_IMPORTED_MODULE_5__pages_pdf_page_settings__["a" /* PdfPageSettings */](this.defaultMargin);
            }
            return this.settings;
        },
        set: function (value) {
            this.settings = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocument.prototype, "pages", {
        get: function () {
            return this.documentPageCollection;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocument, "cache", {
        get: function () {
            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {
                return new __WEBPACK_IMPORTED_MODULE_8__general_pdf_cache_collection__["a" /* PdfCacheCollection */]();
            }
            return PdfDocument.cacheCollection;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocument.prototype, "colorSpace", {
        get: function () {
            if ((this.pdfColorSpace === __WEBPACK_IMPORTED_MODULE_9__graphics_enum__["i" /* PdfColorSpace */].Rgb) || ((this.pdfColorSpace === __WEBPACK_IMPORTED_MODULE_9__graphics_enum__["i" /* PdfColorSpace */].Cmyk)
                || (this.pdfColorSpace === __WEBPACK_IMPORTED_MODULE_9__graphics_enum__["i" /* PdfColorSpace */].GrayScale))) {
                return this.pdfColorSpace;
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_9__graphics_enum__["i" /* PdfColorSpace */].Rgb;
            }
        },
        set: function (value) {
            if ((value === __WEBPACK_IMPORTED_MODULE_9__graphics_enum__["i" /* PdfColorSpace */].Rgb) || ((value === __WEBPACK_IMPORTED_MODULE_9__graphics_enum__["i" /* PdfColorSpace */].Cmyk) ||
                (value === __WEBPACK_IMPORTED_MODULE_9__graphics_enum__["i" /* PdfColorSpace */].GrayScale))) {
                this.pdfColorSpace = value;
            }
            else {
                this.pdfColorSpace = __WEBPACK_IMPORTED_MODULE_9__graphics_enum__["i" /* PdfColorSpace */].Rgb;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocument.prototype, "template", {
        get: function () {
            if (this.pageTemplate == null) {
                this.pageTemplate = new __WEBPACK_IMPORTED_MODULE_10__pdf_document_template__["a" /* PdfDocumentTemplate */]();
            }
            return this.pageTemplate;
        },
        set: function (value) {
            this.pageTemplate = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {
        this.checkPagesPresence();
        if (stream === null) {
            throw new Error('ArgumentNullException : stream');
        }
        this.streamWriter = stream;
        var writer = new __WEBPACK_IMPORTED_MODULE_0__input_output_pdf_writer__["a" /* PdfWriter */](stream);
        writer.document = this;
        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {
            return this.crossTable.save(writer);
        }
        else {
            this.crossTable.save(writer, arg2);
        }
    };
    PdfDocument.prototype.checkPagesPresence = function () {
        if (this.pages.count === 0) {
            this.pages.add();
        }
    };
    PdfDocument.prototype.destroy = function () {
        this.catalog = undefined;
        this.colorSpace = undefined;
        this.currentSavingObj = undefined;
        this.documentPageCollection = undefined;
        this.isStreamCopied = undefined;
        this.pageSettings = undefined;
        this.pageTemplate = undefined;
        this.pdfColorSpace = undefined;
        this.sectionCollection = undefined;
        this.streamWriter.destroy();
    };
    return PdfDocument;
}(__WEBPACK_IMPORTED_MODULE_2__pdf_document_base__["a" /* PdfDocumentBase */]));

PdfDocument.defaultStandardFont = null;


/***/ }),
/* 48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfTemplate; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_stream__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__input_output_pdf_dictionary_properties__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_array__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pdf_graphics__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pdf_resources__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__drawing_pdf_drawing__ = __webpack_require__(4);








var PdfTemplate = (function () {
    function PdfTemplate(arg1, arg2) {
        this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_1__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        this.writeTransformation = true;
        if (typeof arg1 === 'undefined') {
        }
        else if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_6__drawing_pdf_drawing__["b" /* SizeF */] && typeof arg2 === 'undefined') {
            this.content = new __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_stream__["a" /* PdfStream */]();
            var tempSize = new __WEBPACK_IMPORTED_MODULE_6__drawing_pdf_drawing__["b" /* SizeF */](arg1.width, arg1.height);
            this.setSize(tempSize);
            this.initialize();
        }
        else {
            this.content = new __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_stream__["a" /* PdfStream */]();
            this.setSize(new __WEBPACK_IMPORTED_MODULE_6__drawing_pdf_drawing__["b" /* SizeF */](arg1, arg2));
            this.initialize();
        }
    }
    Object.defineProperty(PdfTemplate.prototype, "size", {
        get: function () {
            return this.templateSize;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTemplate.prototype, "width", {
        get: function () {
            return this.size.width;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTemplate.prototype, "height", {
        get: function () {
            return this.size.height;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTemplate.prototype, "graphics", {
        get: function () {
            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {
                var gr = new __WEBPACK_IMPORTED_MODULE_3__pdf_graphics__["b" /* GetResourceEventHandler */](this);
                var g = new __WEBPACK_IMPORTED_MODULE_3__pdf_graphics__["a" /* PdfGraphics */](this.size, gr, this.content);
                this.pdfGraphics = g;
                this.pdfGraphics.initializeCoordinates();
            }
            return this.pdfGraphics;
        },
        enumerable: true,
        configurable: true
    });
    PdfTemplate.prototype.getResources = function () {
        if (this.resources == null) {
            this.resources = new __WEBPACK_IMPORTED_MODULE_4__pdf_resources__["a" /* PdfResources */]();
            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);
        }
        return this.resources;
    };
    PdfTemplate.prototype.initialize = function () {
        this.addType();
        this.addSubType();
    };
    PdfTemplate.prototype.addType = function () {
        var value = new __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.xObject);
        this.content.items.setValue(this.dictionaryProperties.type, value);
    };
    PdfTemplate.prototype.addSubType = function () {
        var value = new __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.form);
        this.content.items.setValue(this.dictionaryProperties.subtype, value);
    };
    PdfTemplate.prototype.reset = function (size) {
        if (typeof size === 'undefined') {
            if (this.resources != null) {
                this.resources = null;
                this.content.remove(this.dictionaryProperties.resources);
            }
            if (this.graphics != null) {
                this.graphics.reset(this.size);
            }
        }
        else {
            this.setSize(size);
            this.reset();
        }
    };
    PdfTemplate.prototype.setSize = function (size) {
        var rect = new __WEBPACK_IMPORTED_MODULE_6__drawing_pdf_drawing__["c" /* RectangleF */](new __WEBPACK_IMPORTED_MODULE_6__drawing_pdf_drawing__["a" /* PointF */](0, 0), size);
        var val = __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_array__["a" /* PdfArray */].fromRectangle(rect);
        this.content.items.setValue(this.dictionaryProperties.bBox, val);
        this.templateSize = size;
    };
    Object.defineProperty(PdfTemplate.prototype, "element", {
        get: function () {
            return this.content;
        },
        enumerable: true,
        configurable: true
    });
    return PdfTemplate;
}());



/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pdf_page_base__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_dictionary__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_reference__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__annotations_annotation_collection__ = __webpack_require__(146);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__pdf_page_layer__ = __webpack_require__(108);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







var PdfPage = (function (_super) {
    __extends(PdfPage, _super);
    function PdfPage() {
        var _this = _super.call(this, new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_dictionary__["a" /* PdfDictionary */]()) || this;
        _this.annotationCollection = null;
        _this.beginSave = null;
        _this.initialize();
        return _this;
    }
    Object.defineProperty(PdfPage.prototype, "document", {
        get: function () {
            if (this.section !== null && this.section.parent !== null) {
                return this.section.parent.document;
            }
            else {
                return null;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPage.prototype, "graphics", {
        get: function () {
            var result = this.defaultLayer.graphics;
            result.currentPage = this;
            return result;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPage.prototype, "crossTable", {
        get: function () {
            if (this.section === null) {
                throw new Error('PdfDocumentException : Page is not created');
            }
            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPage.prototype, "size", {
        get: function () {
            return this.section.pageSettings.size;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPage.prototype, "origin", {
        get: function () {
            return this.section.pageSettings.origin;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPage.prototype, "annotations", {
        get: function () {
            if (this.annotationCollection == null) {
                this.annotationCollection = new __WEBPACK_IMPORTED_MODULE_5__annotations_annotation_collection__["a" /* PdfAnnotationCollection */](this);
                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);
                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);
            }
            return this.annotationCollection;
        },
        enumerable: true,
        configurable: true
    });
    PdfPage.prototype.initialize = function () {
        this.dictionary.items.setValue(this.dictionaryProperties.type, new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_name__["a" /* PdfName */]('Page'));
        this.dictionary.pageBeginDrawTemplate = new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_dictionary__["e" /* SaveTemplateEventHandler */](this);
    };
    PdfPage.prototype.setSection = function (section) {
        this.section = section;
        this.dictionary.items.setValue(this.dictionaryProperties.parent, new __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_reference__["b" /* PdfReferenceHolder */](section));
    };
    PdfPage.prototype.resetProgress = function () {
        this.isProgressOn = false;
    };
    PdfPage.prototype.getClientSize = function () {
        var returnValue = this.section.getActualBounds(this, true);
        return new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["b" /* SizeF */](returnValue.width, returnValue.height);
    };
    PdfPage.prototype.pageBeginSave = function () {
        var doc = this.document;
        if (typeof doc !== undefined && doc != null) {
            this.drawPageTemplates(doc);
        }
        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {
            this.beginSave(this);
        }
    };
    PdfPage.prototype.drawPageTemplates = function (document) {
        var hasBackTemplates = this.section.containsTemplates(document, this, false);
        if (hasBackTemplates) {
            var backLayer = new __WEBPACK_IMPORTED_MODULE_6__pdf_page_layer__["a" /* PdfPageLayer */](this, false);
            this.layers.insert(0, backLayer);
            this.section.drawTemplates(this, backLayer, document, false);
            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {
                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {
                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];
                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);
                }
            }
        }
        var hasFrontTemplates = this.section.containsTemplates(document, this, true);
        if (hasFrontTemplates) {
            var frontLayer = new __WEBPACK_IMPORTED_MODULE_6__pdf_page_layer__["a" /* PdfPageLayer */](this, false);
            this.layers.add(frontLayer);
            this.section.drawTemplates(this, frontLayer, document, true);
        }
    };
    return PdfPage;
}(__WEBPACK_IMPORTED_MODULE_0__pdf_page_base__["a" /* PdfPageBase */]));



/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfGridStyleBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PdfGridStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return PdfGridCellStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return PdfGridRowStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return PdfHorizontalOverflowType; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pdf_borders__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tables_light_tables_enum__ = __webpack_require__(112);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var PdfGridStyleBase = (function () {
    function PdfGridStyleBase() {
    }
    Object.defineProperty(PdfGridStyleBase.prototype, "backgroundBrush", {
        get: function () {
            return this.gridBackgroundBrush;
        },
        set: function (value) {
            this.gridBackgroundBrush = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyleBase.prototype, "textBrush", {
        get: function () {
            return this.gridTextBrush;
        },
        set: function (value) {
            this.gridTextBrush = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyleBase.prototype, "textPen", {
        get: function () {
            return this.gridTextPen;
        },
        set: function (value) {
            this.gridTextPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyleBase.prototype, "font", {
        get: function () {
            return this.gridFont;
        },
        set: function (value) {
            this.gridFont = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGridStyleBase;
}());

var PdfGridStyle = (function (_super) {
    __extends(PdfGridStyle, _super);
    function PdfGridStyle() {
        var _this = _super.call(this) || this;
        _this.gridBorderOverlapStyle = __WEBPACK_IMPORTED_MODULE_1__tables_light_tables_enum__["a" /* PdfBorderOverlapStyle */].Overlap;
        _this.bAllowHorizontalOverflow = false;
        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;
        return _this;
    }
    Object.defineProperty(PdfGridStyle.prototype, "cellSpacing", {
        get: function () {
            if (typeof this.gridCellSpacing === 'undefined') {
                this.gridCellSpacing = 0;
            }
            return this.gridCellSpacing;
        },
        set: function (value) {
            this.gridCellSpacing = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyle.prototype, "horizontalOverflowType", {
        get: function () {
            return this.gridHorizontalOverflowType;
        },
        set: function (value) {
            this.gridHorizontalOverflowType = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyle.prototype, "allowHorizontalOverflow", {
        get: function () {
            return this.bAllowHorizontalOverflow;
        },
        set: function (value) {
            this.bAllowHorizontalOverflow = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyle.prototype, "cellPadding", {
        get: function () {
            if (typeof this.gridCellPadding === 'undefined') {
                this.gridCellPadding = new __WEBPACK_IMPORTED_MODULE_0__pdf_borders__["b" /* PdfPaddings */]();
            }
            return this.gridCellPadding;
        },
        set: function (value) {
            if (typeof this.gridCellPadding === 'undefined') {
                this.gridCellPadding = new __WEBPACK_IMPORTED_MODULE_0__pdf_borders__["b" /* PdfPaddings */]();
                this.gridCellPadding = value;
            }
            else {
                this.gridCellPadding = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyle.prototype, "borderOverlapStyle", {
        get: function () {
            return this.gridBorderOverlapStyle;
        },
        set: function (value) {
            this.gridBorderOverlapStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGridStyle;
}(PdfGridStyleBase));

var PdfGridCellStyle = (function (_super) {
    __extends(PdfGridCellStyle, _super);
    function PdfGridCellStyle() {
        var _this = _super.call(this) || this;
        _this.gridCellBorders = __WEBPACK_IMPORTED_MODULE_0__pdf_borders__["a" /* PdfBorders */].default;
        return _this;
    }
    Object.defineProperty(PdfGridCellStyle.prototype, "stringFormat", {
        get: function () {
            return this.format;
        },
        set: function (value) {
            this.format = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCellStyle.prototype, "borders", {
        get: function () {
            return this.gridCellBorders;
        },
        set: function (value) {
            this.gridCellBorders = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCellStyle.prototype, "cellPadding", {
        get: function () {
            return this.gridCellPadding;
        },
        set: function (value) {
            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {
                this.gridCellPadding = new __WEBPACK_IMPORTED_MODULE_0__pdf_borders__["b" /* PdfPaddings */]();
            }
            this.gridCellPadding = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGridCellStyle;
}(PdfGridStyleBase));

var PdfGridRowStyle = (function () {
    function PdfGridRowStyle() {
    }
    Object.defineProperty(PdfGridRowStyle.prototype, "backgroundBrush", {
        get: function () {
            return this.gridRowBackgroundBrush;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {
        this.gridRowBackgroundBrush = value;
        if (typeof this.parent !== 'undefined') {
            for (var i = 0; i < this.parent.cells.count; i++) {
                this.parent.cells.getCell(i).style.backgroundBrush = value;
            }
        }
    };
    Object.defineProperty(PdfGridRowStyle.prototype, "textBrush", {
        get: function () {
            return this.gridRowTextBrush;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridRowStyle.prototype.setTextBrush = function (value) {
        this.gridRowTextBrush = value;
        if (typeof this.parent !== 'undefined') {
            for (var i = 0; i < this.parent.cells.count; i++) {
                this.parent.cells.getCell(i).style.textBrush = value;
            }
        }
    };
    Object.defineProperty(PdfGridRowStyle.prototype, "textPen", {
        get: function () {
            return this.gridRowTextPen;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridRowStyle.prototype.setTextPen = function (value) {
        this.gridRowTextPen = value;
        if (typeof this.parent !== 'undefined') {
            for (var i = 0; i < this.parent.cells.count; i++) {
                this.parent.cells.getCell(i).style.textPen = value;
            }
        }
    };
    Object.defineProperty(PdfGridRowStyle.prototype, "font", {
        get: function () {
            return this.gridRowFont;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridRowStyle.prototype.setFont = function (value) {
        this.gridRowFont = value;
        if (typeof this.parent !== 'undefined') {
            for (var i = 0; i < this.parent.cells.count; i++) {
                this.parent.cells.getCell(i).style.font = value;
            }
        }
    };
    Object.defineProperty(PdfGridRowStyle.prototype, "border", {
        get: function () {
            if (typeof this.gridRowBorder === 'undefined') {
                this.setBorder(new __WEBPACK_IMPORTED_MODULE_0__pdf_borders__["a" /* PdfBorders */]());
            }
            return this.gridRowBorder;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridRowStyle.prototype.setBorder = function (value) {
        this.gridRowBorder = value;
        if (typeof this.parent !== 'undefined') {
            for (var i = 0; i < this.parent.cells.count; i++) {
                this.parent.cells.getCell(i).style.borders = value;
            }
        }
    };
    PdfGridRowStyle.prototype.setParent = function (parent) {
        this.parent = parent;
    };
    return PdfGridRowStyle;
}());

var PdfHorizontalOverflowType;
(function (PdfHorizontalOverflowType) {
    PdfHorizontalOverflowType[PdfHorizontalOverflowType["NextPage"] = 0] = "NextPage";
    PdfHorizontalOverflowType[PdfHorizontalOverflowType["LastPage"] = 1] = "LastPage";
})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Cell = (function () {
        function Cell(options) {
            ej2_base_1.merge(this, options);
        }
        return Cell;
    }());
    exports.Cell = Cell;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var AriaService = (function () {
        function AriaService() {
        }
        AriaService.prototype.setOptions = function (target, options) {
            var props = Object.keys(options);
            props.forEach(function (name) { return setStateAndProperties(target, config[name], options[name]); });
        };
        AriaService.prototype.setExpand = function (target, expand) {
            setStateAndProperties(target, config.expand, expand);
        };
        AriaService.prototype.setSort = function (target, direction) {
            setStateAndProperties(target, config.sort, direction, typeof direction === 'boolean');
        };
        AriaService.prototype.setBusy = function (target, isBusy) {
            setStateAndProperties(target, config.busy, isBusy);
            setStateAndProperties(target, config.invalid, null, true);
        };
        AriaService.prototype.setGrabbed = function (target, isGrabbed, remove) {
            setStateAndProperties(target, config.grabbed, isGrabbed, remove);
        };
        AriaService.prototype.setDropTarget = function (target, isTarget) {
            setStateAndProperties(target, config.dropeffect, 'copy', !isTarget);
        };
        return AriaService;
    }());
    exports.AriaService = AriaService;
    function setStateAndProperties(target, attribute, value, remove) {
        if (remove) {
            target.removeAttribute(attribute);
            return;
        }
        if (target) {
            target.setAttribute(attribute, value);
        }
    }
    var config = {
        expand: 'aria-expanded',
        role: 'role',
        selected: 'aria-selected',
        multiselectable: 'aria-multiselectable',
        sort: 'aria-sort',
        busy: 'aria-busy',
        invalid: 'aria-invalid',
        grabbed: 'aria-grabbed',
        dropeffect: 'aria-dropeffect',
        haspopup: 'aria-haspopup',
        level: 'aria-level',
        colcount: 'aria-colcount'
    };
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(42), __webpack_require__(7), __webpack_require__(51), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, row_1, enum_1, cell_1, util_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var RowModelGenerator = (function () {
        function RowModelGenerator(parent) {
            this.parent = parent;
        }
        RowModelGenerator.prototype.generateRows = function (data, args) {
            var rows = [];
            var startIndex = this.parent.enableVirtualization ? args.startIndex : 0;
            for (var i = 0, len = Object.keys(data).length; i < len; i++, startIndex++) {
                rows[i] = this.generateRow(data[i], startIndex);
            }
            return rows;
        };
        RowModelGenerator.prototype.ensureColumns = function () {
            var cols = [];
            if (this.parent.detailTemplate || this.parent.childGrid) {
                cols.push(this.generateCell({}, null, enum_1.CellType.DetailExpand));
            }
            return cols;
        };
        RowModelGenerator.prototype.generateRow = function (data, index, cssClass, indent) {
            var options = {};
            var tmp = [];
            options.uid = util_1.getUid('grid-row');
            options.data = data;
            options.index = index;
            options.indent = indent;
            options.isDataRow = true;
            options.cssClass = cssClass;
            options.isAltRow = this.parent.enableAltRow ? index % 2 !== 0 : false;
            options.isSelected = this.parent.getSelectedRowIndexes().indexOf(index) > -1;
            var cells = this.ensureColumns();
            var row = new row_1.Row(options);
            row.cells = cells.concat(this.generateCells(options));
            return row;
        };
        RowModelGenerator.prototype.generateCells = function (options) {
            var _this = this;
            var dummies = this.parent.getColumns();
            var tmp = [];
            dummies.forEach(function (dummy, index) {
                return tmp.push(_this.generateCell(dummy, options.uid, undefined, null, index));
            });
            return tmp;
        };
        RowModelGenerator.prototype.generateCell = function (column, rowId, cellType, colSpan, oIndex) {
            var opt = {
                'visible': column.visible,
                'isDataCell': !ej2_base_1.isNullOrUndefined(column.field || column.template),
                'isTemplate': !ej2_base_1.isNullOrUndefined(column.template),
                'rowID': rowId,
                'column': column,
                'cellType': !ej2_base_1.isNullOrUndefined(cellType) ? cellType : enum_1.CellType.Data,
                'colSpan': colSpan
            };
            if (opt.isDataCell) {
                opt.index = this.parent.getColumnIndexByField(column.field);
            }
            return new cell_1.Cell(opt);
        };
        RowModelGenerator.prototype.refreshRows = function (input) {
            var _this = this;
            input.forEach(function (row) { return row.cells = _this.generateCells(row); });
            return input;
        };
        return RowModelGenerator;
    }());
    exports.RowModelGenerator = RowModelGenerator;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(42), __webpack_require__(70), __webpack_require__(0), __webpack_require__(2), __webpack_require__(7), __webpack_require__(51)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, row_1, column_1, ej2_base_1, util_1, enum_1, cell_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SummaryModelGenerator = (function () {
        function SummaryModelGenerator(parent) {
            this.parent = parent;
        }
        SummaryModelGenerator.prototype.getData = function () {
            var _this = this;
            var rows = [];
            this.parent.aggregates.slice().forEach(function (row) {
                var columns = row.columns.filter(function (column) {
                    return !(column.footerTemplate || column.groupFooterTemplate || column.groupCaptionTemplate)
                        || _this.columnSelector(column);
                });
                if (columns.length) {
                    rows.push({ columns: columns });
                }
            });
            return rows;
        };
        SummaryModelGenerator.prototype.columnSelector = function (column) {
            return column.footerTemplate !== undefined;
        };
        SummaryModelGenerator.prototype.getColumns = function () {
            var columns = [];
            if (this.parent.allowGrouping) {
                this.parent.groupSettings.columns.forEach(function (value) { return columns.push(new column_1.Column({})); });
            }
            if (this.parent.detailTemplate) {
                columns.push(new column_1.Column({}));
            }
            columns.push.apply(columns, this.parent.getColumns());
            return columns;
        };
        SummaryModelGenerator.prototype.generateRows = function (input, args) {
            var _this = this;
            if (this.parent.currentViewData.length === 0) {
                return [];
            }
            var data = this.buildSummaryData(input, args);
            var rows = [];
            this.getData().forEach(function (row, index) {
                rows.push(_this.getGeneratedRow(row, data[index], args ? args.level : undefined));
            });
            return rows;
        };
        SummaryModelGenerator.prototype.getGeneratedRow = function (summaryRow, data, raw) {
            var _this = this;
            var tmp = [];
            var indents = this.getIndentByLevel(raw);
            var indentLength = this.parent.groupSettings.columns.length + (this.parent.detailTemplate ? 1 : 0);
            this.getColumns().forEach(function (value, index) { return tmp.push(_this.getGeneratedCell(value, summaryRow, index >= indentLength ? _this.getCellType() : enum_1.CellType.Indent, indents[index])); });
            var row = new row_1.Row({ data: data, attributes: { class: 'e-summaryrow' } });
            row.cells = tmp;
            row.visible = tmp.some(function (cell) { return cell.isDataCell && cell.visible; });
            return row;
        };
        SummaryModelGenerator.prototype.getGeneratedCell = function (column, summaryRow, cellType, indent) {
            var sColumn = summaryRow.columns.filter(function (scolumn) { return scolumn.columnName === column.field; })[0];
            var attrs = { 'style': { 'textAlign': column.textAlign } };
            if (indent) {
                attrs.class = indent;
            }
            var opt = {
                'visible': column.visible,
                'isDataCell': !ej2_base_1.isNullOrUndefined(sColumn),
                'isTemplate': sColumn && !ej2_base_1.isNullOrUndefined(sColumn.footerTemplate
                    || sColumn.groupFooterTemplate || sColumn.groupCaptionTemplate),
                'column': sColumn || {},
                'attributes': attrs,
                'cellType': cellType
            };
            return new cell_1.Cell(opt);
        };
        SummaryModelGenerator.prototype.buildSummaryData = function (data, args) {
            var _this = this;
            var dummy = [];
            var summaryRows = this.getData();
            var single = {};
            var key = '';
            summaryRows.forEach(function (row) {
                single = {};
                row.columns.forEach(function (column) {
                    single = _this.setTemplate(column, (args && args.aggregates) ? args : data, single);
                });
                dummy.push(single);
            });
            return dummy;
        };
        SummaryModelGenerator.prototype.getIndentByLevel = function (data) {
            return this.parent.groupSettings.columns.map(function () { return 'e-indentcelltop'; });
        };
        SummaryModelGenerator.prototype.setTemplate = function (column, data, single) {
            var _this = this;
            var types = column.type;
            var helper = {};
            var formatFn = column.getFormatter() || (function () { return function (a) { return a; }; })();
            var group = data;
            if (!(types instanceof Array)) {
                types = [column.type];
            }
            types.forEach(function (type) {
                var key = column.field + ' - ' + type;
                var disp = column.columnName;
                var val = group.aggregates && group.aggregates[key] ? group.aggregates[key] :
                    util_1.calculateAggregate(type, group.aggregates ? group.result : data, column, _this.parent);
                single[disp] = single[disp] || {};
                single[disp][key] = val;
                single[disp][type] = formatFn(val);
                if (group.field) {
                    single[disp].field = group.field;
                    single[disp].key = group.key;
                }
            });
            helper.format = column.getFormatter();
            column.setTemplate(helper);
            return single;
        };
        SummaryModelGenerator.prototype.getCellType = function () {
            return enum_1.CellType.Summary;
        };
        return SummaryModelGenerator;
    }());
    exports.SummaryModelGenerator = SummaryModelGenerator;
    var GroupSummaryModelGenerator = (function (_super) {
        __extends(GroupSummaryModelGenerator, _super);
        function GroupSummaryModelGenerator() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        GroupSummaryModelGenerator.prototype.columnSelector = function (column) {
            return column.groupFooterTemplate !== undefined;
        };
        GroupSummaryModelGenerator.prototype.getIndentByLevel = function (level) {
            if (level === void 0) { level = this.parent.groupSettings.columns.length; }
            return this.parent.groupSettings.columns.map(function (v, indx) { return indx <= level - 1 ? '' : 'e-indentcelltop'; });
        };
        GroupSummaryModelGenerator.prototype.getCellType = function () {
            return enum_1.CellType.GroupSummary;
        };
        return GroupSummaryModelGenerator;
    }(SummaryModelGenerator));
    exports.GroupSummaryModelGenerator = GroupSummaryModelGenerator;
    var CaptionSummaryModelGenerator = (function (_super) {
        __extends(CaptionSummaryModelGenerator, _super);
        function CaptionSummaryModelGenerator() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        CaptionSummaryModelGenerator.prototype.columnSelector = function (column) {
            return column.groupCaptionTemplate !== undefined;
        };
        CaptionSummaryModelGenerator.prototype.getData = function () {
            var initVal = { columns: [] };
            return [_super.prototype.getData.call(this).reduce(function (prev, cur) {
                    prev.columns = prev.columns.concat(cur.columns);
                    return prev;
                }, initVal)];
        };
        CaptionSummaryModelGenerator.prototype.isEmpty = function () {
            return (this.getData()[0].columns || []).length === 0;
        };
        CaptionSummaryModelGenerator.prototype.getCellType = function () {
            return enum_1.CellType.CaptionSummary;
        };
        return CaptionSummaryModelGenerator;
    }(SummaryModelGenerator));
    exports.CaptionSummaryModelGenerator = CaptionSummaryModelGenerator;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var NumericContainer = (function () {
        function NumericContainer(pagerModule) {
            this.pagerModule = pagerModule;
        }
        NumericContainer.prototype.render = function () {
            this.pagerElement = this.pagerModule.element;
            this.renderNumericContainer();
            this.refreshNumericLinks();
            this.wireEvents();
        };
        NumericContainer.prototype.refresh = function () {
            var pagerObj = this.pagerModule;
            pagerObj.totalPages = (pagerObj.totalRecordsCount % pagerObj.pageSize === 0) ? (pagerObj.totalRecordsCount / pagerObj.pageSize) :
                (parseInt((pagerObj.totalRecordsCount / pagerObj.pageSize).toString(), 10) + 1);
            if (this.links.length) {
                this.updateLinksHtml();
            }
            this.updateStyles();
        };
        NumericContainer.prototype.refreshNumericLinks = function () {
            var link;
            var pagerObj = this.pagerModule;
            var div = pagerObj.element.querySelector('.e-numericcontainer');
            var frag = document.createDocumentFragment();
            div.innerHTML = '';
            for (var i = 1; i <= pagerObj.pageCount; i++) {
                link = ej2_base_3.createElement('a', {
                    className: 'e-link e-numericitem e-spacing e-pager-default',
                    attrs: { role: 'link', tabindex: '-1', 'aria-label': 'Goto Page ' + i }
                });
                if (pagerObj.currentPage === i) {
                    ej2_base_3.classList(link, ['e-currentitem', 'e-active'], ['e-pager-default']);
                }
                frag.appendChild(link);
            }
            div.appendChild(frag);
            this.links = [].slice.call(div.childNodes);
        };
        NumericContainer.prototype.wireEvents = function () {
            ej2_base_2.EventHandler.add(this.pagerElement, 'click', this.clickHandler, this);
        };
        NumericContainer.prototype.unwireEvents = function () {
            ej2_base_2.EventHandler.remove(this.pagerElement, 'click', this.clickHandler);
        };
        NumericContainer.prototype.destroy = function () {
            this.unwireEvents();
        };
        NumericContainer.prototype.renderNumericContainer = function () {
            this.element = ej2_base_3.createElement('div', {
                className: 'e-pagercontainer', attrs: { 'role': 'navigation' }
            });
            this.renderFirstNPrev(this.element);
            this.renderPrevPagerSet(this.element);
            this.element.appendChild(ej2_base_3.createElement('div', { className: 'e-numericcontainer' }));
            this.renderNextPagerSet(this.element);
            this.renderNextNLast(this.element);
            this.pagerModule.element.appendChild(this.element);
        };
        NumericContainer.prototype.renderFirstNPrev = function (pagerContainer) {
            this.first = ej2_base_3.createElement('div', {
                className: 'e-first e-icons e-icon-first',
                attrs: {
                    title: this.pagerModule.getLocalizedLabel('firstPageTooltip'),
                    'aria-label': this.pagerModule.getLocalizedLabel('firstPageTooltip'),
                    tabindex: '-1'
                }
            });
            this.prev = ej2_base_3.createElement('div', {
                className: 'e-prev e-icons e-icon-prev',
                attrs: {
                    title: this.pagerModule.getLocalizedLabel('previousPageTooltip'),
                    'aria-label': this.pagerModule.getLocalizedLabel('previousPageTooltip'),
                    tabindex: '-1'
                }
            });
            ej2_base_3.append([this.first, this.prev], pagerContainer);
        };
        NumericContainer.prototype.renderPrevPagerSet = function (pagerContainer) {
            this.PP = ej2_base_3.createElement('a', {
                className: 'e-link e-pp e-spacing', innerHTML: '...',
                attrs: {
                    title: this.pagerModule.getLocalizedLabel('previousPagerTooltip'), role: 'link',
                    'aria-label': this.pagerModule.getLocalizedLabel('previousPagerTooltip'),
                    tabindex: '-1'
                }
            });
            pagerContainer.appendChild(this.PP);
        };
        NumericContainer.prototype.renderNextPagerSet = function (pagerContainer) {
            this.NP = ej2_base_3.createElement('a', {
                className: 'e-link e-np e-spacing',
                innerHTML: '...', attrs: {
                    title: this.pagerModule.getLocalizedLabel('nextPagerTooltip'), role: 'link',
                    'aria-label': this.pagerModule.getLocalizedLabel('nextPagerTooltip'),
                    tabindex: '-1'
                }
            });
            pagerContainer.appendChild(this.NP);
        };
        NumericContainer.prototype.renderNextNLast = function (pagerContainer) {
            this.next = ej2_base_3.createElement('div', {
                className: 'e-next e-icons e-icon-next',
                attrs: {
                    title: this.pagerModule.getLocalizedLabel('nextPageTooltip'),
                    'aria-label': this.pagerModule.getLocalizedLabel('nextPageTooltip'),
                    tabindex: '-1'
                }
            });
            this.last = ej2_base_3.createElement('div', {
                className: 'e-last e-icons e-icon-last',
                attrs: {
                    title: this.pagerModule.getLocalizedLabel('lastPageTooltip'),
                    'aria-label': this.pagerModule.getLocalizedLabel('lastPageTooltip'),
                    tabindex: '-1'
                }
            });
            ej2_base_3.append([this.next, this.last], pagerContainer);
        };
        NumericContainer.prototype.clickHandler = function (e) {
            var pagerObj = this.pagerModule;
            var target = e.target;
            pagerObj.previousPageNo = pagerObj.currentPage;
            if (!target.classList.contains('e-disable') && !ej2_base_1.isNullOrUndefined(target.getAttribute('index'))) {
                pagerObj.currentPage = parseInt(target.getAttribute('index'), 10);
                pagerObj.dataBind();
            }
            return false;
        };
        NumericContainer.prototype.updateLinksHtml = function () {
            var pagerObj = this.pagerModule;
            var currentPageSet;
            var pageNo;
            pagerObj.currentPage = pagerObj.totalPages === 1 ? 1 : pagerObj.currentPage;
            if (pagerObj.currentPage > pagerObj.totalPages && pagerObj.totalPages) {
                pagerObj.currentPage = pagerObj.totalPages;
            }
            currentPageSet = parseInt((pagerObj.currentPage / pagerObj.pageCount).toString(), 10);
            if (pagerObj.currentPage % pagerObj.pageCount === 0 && currentPageSet > 0) {
                currentPageSet = currentPageSet - 1;
            }
            for (var i = 0; i < pagerObj.pageCount; i++) {
                pageNo = (currentPageSet * pagerObj.pageCount) + 1 + i;
                if (pageNo <= pagerObj.totalPages) {
                    this.links[i].style.display = '';
                    this.links[i].setAttribute('index', pageNo.toString());
                    this.links[i].innerHTML = !pagerObj.customText ? pageNo.toString() : pagerObj.customText + pageNo;
                    if (pagerObj.currentPage !== pageNo) {
                        this.links[i].classList.add('e-pager-default');
                    }
                    else {
                        this.links[i].classList.remove('e-pager-default');
                    }
                }
                else {
                    this.links[i].style.display = 'none';
                }
                ej2_base_3.classList(this.links[i], [], ['e-currentitem', 'e-active']);
            }
            this.first.setAttribute('index', '1');
            this.last.setAttribute('index', pagerObj.totalPages.toString());
            this.prev.setAttribute('index', (pagerObj.currentPage - 1).toString());
            this.next.setAttribute('index', (pagerObj.currentPage + 1).toString());
            this.pagerElement.querySelector('.e-mfirst').setAttribute('index', '1');
            this.pagerElement.querySelector('.e-mlast').setAttribute('index', pagerObj.totalPages.toString());
            this.pagerElement.querySelector('.e-mprev').setAttribute('index', (pagerObj.currentPage - 1).toString());
            this.pagerElement.querySelector('.e-mnext').setAttribute('index', (pagerObj.currentPage + 1).toString());
            this.PP.setAttribute('index', (parseInt(this.links[0].getAttribute('index'), 10) - pagerObj.pageCount).toString());
            this.NP.setAttribute('index', (parseInt(this.links[this.links.length - 1].getAttribute('index'), 10) + 1).toString());
        };
        NumericContainer.prototype.updateStyles = function () {
            this.updateFirstNPrevStyles();
            this.updatePrevPagerSetStyles();
            this.updateNextPagerSetStyles();
            this.updateNextNLastStyles();
            if (this.links.length) {
                ej2_base_3.classList(this.links[(this.pagerModule.currentPage - 1) % this.pagerModule.pageCount], ['e-currentitem', 'e-active'], []);
            }
        };
        NumericContainer.prototype.updateFirstNPrevStyles = function () {
            var firstPage = ['e-firstpage', 'e-pager-default'];
            var firstPageDisabled = ['e-firstpagedisabled', 'e-disable'];
            var prevPage = ['e-prevpage', 'e-pager-default'];
            var prevPageDisabled = ['e-prevpagedisabled', 'e-disable'];
            if (this.pagerModule.currentPage > 1) {
                ej2_base_3.classList(this.prev, prevPage, prevPageDisabled);
                ej2_base_3.classList(this.first, firstPage, firstPageDisabled);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mfirst'), firstPage, firstPageDisabled);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mprev'), prevPage, prevPageDisabled);
            }
            else {
                ej2_base_3.classList(this.prev, prevPageDisabled, prevPage);
                ej2_base_3.classList(this.first, firstPageDisabled, firstPage);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mprev'), prevPageDisabled, prevPage);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mfirst'), firstPageDisabled, firstPage);
            }
        };
        NumericContainer.prototype.updatePrevPagerSetStyles = function () {
            if (this.pagerModule.currentPage > this.pagerModule.pageCount) {
                ej2_base_3.classList(this.PP, ['e-numericitem', 'e-pager-default'], ['e-nextprevitemdisabled', 'e-disable']);
            }
            else {
                ej2_base_3.classList(this.PP, ['e-nextprevitemdisabled', 'e-disable'], ['e-numericitem', 'e-pager-default']);
            }
        };
        NumericContainer.prototype.updateNextPagerSetStyles = function () {
            var pagerObj = this.pagerModule;
            var firstPage = this.links[0].innerHTML.replace(pagerObj.customText, '');
            if (!firstPage.length || !this.links.length || (parseInt(firstPage, 10) + pagerObj.pageCount > pagerObj.totalPages)) {
                ej2_base_3.classList(this.NP, ['e-nextprevitemdisabled', 'e-disable'], ['e-numericitem', 'e-pager-default']);
            }
            else {
                ej2_base_3.classList(this.NP, ['e-numericitem', 'e-pager-default'], ['e-nextprevitemdisabled', 'e-disable']);
            }
        };
        NumericContainer.prototype.updateNextNLastStyles = function () {
            var lastPage = ['e-lastpage', 'e-pager-default'];
            var lastPageDisabled = ['e-lastpagedisabled', 'e-disable'];
            var nextPage = ['e-nextpage', 'e-pager-default'];
            var nextPageDisabled = ['e-nextpagedisabled', 'e-disable'];
            var pagerObj = this.pagerModule;
            if (pagerObj.currentPage === pagerObj.totalPages || pagerObj.totalRecordsCount === 0) {
                ej2_base_3.classList(this.last, lastPageDisabled, lastPage);
                ej2_base_3.classList(this.next, nextPageDisabled, nextPage);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mlast'), lastPageDisabled, lastPage);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mnext'), nextPageDisabled, nextPage);
            }
            else {
                ej2_base_3.classList(this.last, lastPage, lastPageDisabled);
                ej2_base_3.classList(this.next, nextPage, nextPageDisabled);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mlast'), lastPage, lastPageDisabled);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mnext'), nextPage, nextPageDisabled);
            }
        };
        return NumericContainer;
    }());
    exports.NumericContainer = NumericContainer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PagerMessage = (function () {
        function PagerMessage(pagerModule) {
            this.pagerModule = pagerModule;
        }
        PagerMessage.prototype.render = function () {
            var div = ej2_base_1.createElement('div', { className: 'e-parentmsgbar', attrs: { 'aria-label': 'Pager Information' } });
            this.pageNoMsgElem = ej2_base_1.createElement('span', { className: 'e-pagenomsg', styles: 'textalign:right' });
            this.pageCountMsgElem = ej2_base_1.createElement('span', { className: 'e-pagecountmsg', styles: 'textalign:right' });
            ej2_base_1.append([this.pageNoMsgElem, this.pageCountMsgElem], div);
            this.pagerModule.element.appendChild(div);
            this.refresh();
        };
        PagerMessage.prototype.refresh = function () {
            var pagerObj = this.pagerModule;
            this.pageNoMsgElem.textContent = this.format(pagerObj.getLocalizedLabel('currentPageInfo'), [pagerObj.totalRecordsCount === 0 ? 0 :
                    pagerObj.currentPage, pagerObj.totalPages || 0]) + ' ';
            this.pageCountMsgElem.textContent = this.format(pagerObj.getLocalizedLabel('totalItemsInfo'), [pagerObj.totalRecordsCount || 0]);
            this.pageNoMsgElem.parentElement.setAttribute('aria-label', this.pageNoMsgElem.textContent + this.pageCountMsgElem.textContent);
        };
        PagerMessage.prototype.hideMessage = function () {
            if (this.pageNoMsgElem) {
                this.pageNoMsgElem.style.display = 'none';
            }
            if (this.pageCountMsgElem) {
                this.pageCountMsgElem.style.display = 'none';
            }
        };
        PagerMessage.prototype.showMessage = function () {
            if (!this.pageNoMsgElem) {
                this.render();
            }
            this.pageNoMsgElem.style.display = '';
            this.pageCountMsgElem.style.display = '';
        };
        PagerMessage.prototype.destroy = function () {
        };
        PagerMessage.prototype.format = function (str, args) {
            var regx;
            for (var i = 0; i < args.length; i++) {
                regx = new RegExp('\\{' + (i) + '\\}', 'gm');
                str = str.replace(regx, args[i].toString());
            }
            return str;
        };
        return PagerMessage;
    }());
    exports.PagerMessage = PagerMessage;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Query; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Predicate; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(58);

var Query = (function () {
    function Query(from) {
        this.subQuery = null;
        this.isChild = false;
        this.queries = [];
        this.key = '';
        this.fKey = '';
        if (typeof from === 'string') {
            this.fromTable = from;
        }
        else if (from && from instanceof Array) {
            this.lookups = from;
        }
        this.expands = [];
        this.sortedColumns = [];
        this.groupedColumns = [];
        this.subQuery = null;
        this.isChild = false;
        this.params = [];
        return this;
    }
    Query.prototype.setKey = function (field) {
        this.key = field;
        return this;
    };
    Query.prototype.using = function (dataManager) {
        this.dataManager = dataManager;
        return this;
    };
    Query.prototype.execute = function (dataManager, done, fail, always) {
        dataManager = dataManager || this.dataManager;
        if (dataManager) {
            return dataManager.executeQuery(this, done, fail, always);
        }
        return __WEBPACK_IMPORTED_MODULE_0__util__["a" /* DataUtil */].throwError('Query - execute() : dataManager needs to be is set using "using" function or should be passed as argument');
    };
    Query.prototype.executeLocal = function (dataManager) {
        dataManager = dataManager || this.dataManager;
        if (dataManager) {
            return dataManager.executeLocal(this);
        }
        return __WEBPACK_IMPORTED_MODULE_0__util__["a" /* DataUtil */].throwError('Query - executeLocal() : dataManager needs to be is set using "using" function or should be passed as argument');
    };
    Query.prototype.clone = function () {
        var cloned = new Query();
        cloned.queries = this.queries.slice(0);
        cloned.key = this.key;
        cloned.isChild = this.isChild;
        cloned.dataManager = this.dataManager;
        cloned.fromTable = this.fromTable;
        cloned.params = this.params.slice(0);
        cloned.expands = this.expands.slice(0);
        cloned.sortedColumns = this.sortedColumns.slice(0);
        cloned.groupedColumns = this.groupedColumns.slice(0);
        cloned.subQuerySelector = this.subQuerySelector;
        cloned.subQuery = this.subQuery;
        cloned.fKey = this.fKey;
        cloned.requiresCounts = this.requiresCounts;
        return cloned;
    };
    Query.prototype.from = function (tableName) {
        this.fromTable = tableName;
        return this;
    };
    Query.prototype.addParams = function (key, value) {
        if (typeof value === 'function') {
            this.params.push({ key: key, fn: value });
        }
        else {
            this.params.push({ key: key, value: value });
        }
        return this;
    };
    Query.prototype.expand = function (tables) {
        if (typeof tables === 'string') {
            this.expands = [].slice.call([tables], 0);
        }
        else {
            this.expands = tables.slice(0);
        }
        return this;
    };
    Query.prototype.where = function (fieldName, operator, value, ignoreCase) {
        operator = operator ? (operator).toLowerCase() : null;
        var predicate = null;
        if (typeof fieldName === 'string') {
            predicate = new Predicate(fieldName, operator, value, ignoreCase);
        }
        else if (fieldName instanceof Predicate) {
            predicate = fieldName;
        }
        this.queries.push({
            fn: 'onWhere',
            e: predicate
        });
        return this;
    };
    Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase) {
        if (typeof fieldNames === 'string') {
            fieldNames = [fieldNames];
        }
        operator = operator || 'contains';
        var comparer = __WEBPACK_IMPORTED_MODULE_0__util__["a" /* DataUtil */].fnOperators[operator];
        this.queries.push({
            fn: 'onSearch',
            e: {
                fieldNames: fieldNames,
                operator: operator,
                searchKey: searchKey,
                ignoreCase: ignoreCase,
                comparer: comparer
            }
        });
        return this;
    };
    Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {
        var order = 'ascending';
        var sorts;
        var temp;
        if (typeof fieldName === 'string' && __WEBPACK_IMPORTED_MODULE_0__util__["a" /* DataUtil */].endsWith(fieldName.toLowerCase(), ' desc')) {
            fieldName = fieldName.replace(/ desc$/i, '');
            comparer = 'descending';
        }
        if (!comparer || typeof comparer === 'string') {
            order = comparer ? comparer.toLowerCase() : 'ascending';
            comparer = __WEBPACK_IMPORTED_MODULE_0__util__["a" /* DataUtil */].fnSort(comparer);
        }
        if (isFromGroup) {
            sorts = Query.filterQueries(this.queries, 'onSortBy');
            for (var i = 0; i < sorts.length; i++) {
                temp = sorts[i].e.fieldName;
                if (typeof temp === 'string') {
                    if (temp === fieldName) {
                        return this;
                    }
                }
                else if (temp instanceof Array) {
                    for (var j = 0; j < temp.length; j++) {
                        if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {
                            return this;
                        }
                    }
                }
            }
        }
        this.queries.push({
            fn: 'onSortBy',
            e: {
                fieldName: fieldName,
                comparer: comparer,
                direction: order
            }
        });
        return this;
    };
    Query.prototype.sortByDesc = function (fieldName) {
        return this.sortBy(fieldName, 'descending');
    };
    Query.prototype.group = function (fieldName) {
        this.sortBy(fieldName, null, true);
        this.queries.push({
            fn: 'onGroup',
            e: {
                fieldName: fieldName
            }
        });
        return this;
    };
    Query.prototype.page = function (pageIndex, pageSize) {
        this.queries.push({
            fn: 'onPage',
            e: {
                pageIndex: pageIndex,
                pageSize: pageSize
            }
        });
        return this;
    };
    Query.prototype.range = function (start, end) {
        this.queries.push({
            fn: 'onRange',
            e: {
                start: start,
                end: end
            }
        });
        return this;
    };
    Query.prototype.take = function (nos) {
        this.queries.push({
            fn: 'onTake',
            e: {
                nos: nos
            }
        });
        return this;
    };
    Query.prototype.skip = function (nos) {
        this.queries.push({
            fn: 'onSkip',
            e: { nos: nos }
        });
        return this;
    };
    Query.prototype.select = function (fieldNames) {
        if (typeof fieldNames === 'string') {
            fieldNames = [].slice.call([fieldNames], 0);
        }
        this.queries.push({
            fn: 'onSelect',
            e: { fieldNames: fieldNames }
        });
        return this;
    };
    Query.prototype.hierarchy = function (query, selectorFn) {
        this.subQuerySelector = selectorFn;
        this.subQuery = query;
        return this;
    };
    Query.prototype.foreignKey = function (key) {
        this.fKey = key;
        return this;
    };
    Query.prototype.requiresCount = function () {
        this.requiresCounts = true;
        return this;
    };
    Query.prototype.aggregate = function (type, field) {
        this.queries.push({
            fn: 'onAggregates',
            e: { field: field, type: type }
        });
        return this;
    };
    Query.filterQueries = function (queries, name) {
        return queries.filter(function (q) {
            return q.fn === name;
        });
    };
    Query.filterQueryLists = function (queries, singles) {
        var filtered = queries.filter(function (q) {
            return singles.indexOf(q.fn) !== -1;
        });
        var res = {};
        for (var i = 0; i < filtered.length; i++) {
            if (!res[filtered[i].fn]) {
                res[filtered[i].fn] = filtered[i].e;
            }
        }
        return res;
    };
    return Query;
}());

var Predicate = (function () {
    function Predicate(field, operator, value, ignoreCase) {
        if (ignoreCase === void 0) { ignoreCase = false; }
        this.isComplex = false;
        if (typeof field === 'string') {
            this.field = field;
            this.operator = operator.toLowerCase();
            this.value = value;
            this.ignoreCase = ignoreCase;
            this.isComplex = false;
            this.comparer = __WEBPACK_IMPORTED_MODULE_0__util__["a" /* DataUtil */].fnOperators.processOperator(this.operator);
        }
        else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {
            this.isComplex = true;
            this.condition = operator.toLowerCase();
            this.predicates = [field];
            if (value instanceof Array) {
                [].push.apply(this.predicates, value);
            }
            else {
                this.predicates.push(value);
            }
        }
        return this;
    }
    Predicate.and = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return Predicate.combinePredicates([].slice.call(args, 0), 'and');
    };
    Predicate.prototype.and = function (field, operator, value, ignoreCase) {
        return Predicate.combine(this, field, operator, value, 'and', ignoreCase);
    };
    Predicate.or = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return Predicate.combinePredicates([].slice.call(args, 0), 'or');
    };
    Predicate.prototype.or = function (field, operator, value, ignoreCase) {
        return Predicate.combine(this, field, operator, value, 'or', ignoreCase);
    };
    Predicate.fromJson = function (json) {
        if (json instanceof Array) {
            var res = [];
            for (var i = 0, len = json.length; i < len; i++) {
                res.push(this.fromJSONData(json[i]));
            }
            return res;
        }
        var pred = json;
        return this.fromJSONData(pred);
    };
    Predicate.prototype.validate = function (record) {
        var predicate = this.predicates ? this.predicates : [];
        var isAnd;
        var ret;
        if (!this.isComplex && this.comparer) {
            return this.comparer.call(this, __WEBPACK_IMPORTED_MODULE_0__util__["a" /* DataUtil */].getObject(this.field, record), this.value, this.ignoreCase);
        }
        isAnd = this.condition === 'and';
        for (var i = 0; i < predicate.length; i++) {
            ret = predicate[i].validate(record);
            if (isAnd) {
                if (!ret) {
                    return false;
                }
            }
            else {
                if (ret) {
                    return true;
                }
            }
        }
        return isAnd;
    };
    Predicate.prototype.toJson = function () {
        var predicates;
        var p;
        if (this.isComplex) {
            predicates = [];
            p = this.predicates;
            for (var i = 0; i < p.length; i++) {
                predicates.push(p[i].toJson());
            }
        }
        return {
            isComplex: this.isComplex,
            field: this.field,
            operator: this.operator,
            value: this.value,
            ignoreCase: this.ignoreCase,
            condition: this.condition,
            predicates: predicates
        };
    };
    Predicate.combinePredicates = function (predicates, operator) {
        if (predicates.length === 1) {
            if (!(predicates[0] instanceof Array)) {
                return predicates[0];
            }
            predicates = predicates[0];
        }
        return new Predicate(predicates[0], operator, predicates.slice(1));
    };
    Predicate.combine = function (pred, field, operator, value, condition, ignoreCase) {
        if (field instanceof Predicate) {
            return Predicate[condition](pred, field);
        }
        if (typeof field === 'string') {
            return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase));
        }
        return __WEBPACK_IMPORTED_MODULE_0__util__["a" /* DataUtil */].throwError('Predicate - ' + condition + ' : invalid arguments');
    };
    Predicate.fromJSONData = function (json) {
        var preds = json.predicates || [];
        var len = preds.length;
        var predicates = [];
        var result;
        for (var i = 0; i < len; i++) {
            predicates.push(this.fromJSONData(preds[i]));
        }
        if (!json.isComplex) {
            result = new Predicate(json.field, json.operator, json.value, json.ignoreCase);
        }
        else {
            result = new Predicate(predicates[0], json.condition, predicates.slice(1));
        }
        return result;
    };
    return Predicate;
}());



/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DataUtil; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__manager__ = __webpack_require__(125);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__query__ = __webpack_require__(57);



var consts = { GroupGuid: '{271bbba0-1ee7}' };
var DataUtil = (function () {
    function DataUtil() {
    }
    DataUtil.getValue = function (value, inst) {
        if (typeof value === 'function') {
            return value.call(inst || {});
        }
        return value;
    };
    DataUtil.endsWith = function (input, substr) {
        return input.slice(-substr.length) === substr;
    };
    DataUtil.startsWith = function (input, start) {
        return input.slice(0, start.length) === start;
    };
    DataUtil.fnSort = function (order) {
        order = order ? order.toLowerCase() : 'ascending';
        if (order === 'ascending') {
            return this.fnAscending;
        }
        return this.fnDescending;
    };
    DataUtil.fnAscending = function (x, y) {
        if (y === null || y === undefined) {
            return -1;
        }
        if (typeof x === 'string') {
            return x.localeCompare(y);
        }
        if (x === null || x === undefined) {
            return 1;
        }
        return x - y;
    };
    DataUtil.fnDescending = function (x, y) {
        if (y === null || y === undefined) {
            return 1;
        }
        if (typeof x === 'string') {
            return x.localeCompare(y) * -1;
        }
        if (x === null || x === undefined) {
            return -1;
        }
        return y - x;
    };
    DataUtil.extractFields = function (obj, fields) {
        var newObj = {};
        if (fields.length === 1) {
            return this.getObject(fields[0], obj);
        }
        for (var i = 0; i < fields.length; i++) {
            newObj[fields[i].replace('.', '_')] = this.getObject(fields[i], obj);
        }
        return newObj;
    };
    DataUtil.select = function (jsonArray, fields) {
        var newData = [];
        for (var i = 0; i < jsonArray.length; i++) {
            newData.push(this.extractFields(jsonArray[i], fields));
        }
        return newData;
    };
    DataUtil.group = function (jsonArray, field, aggregates, level, groupDs) {
        level = level || 1;
        var jsonData = jsonArray;
        var guid = 'GroupGuid';
        if (jsonData.GroupGuid === consts[guid]) {
            var _loop_1 = function (j) {
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(groupDs)) {
                    var indx = -1;
                    var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });
                    indx = groupDs.indexOf(temp[0]);
                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items);
                    jsonData[j].count = groupDs[indx].count;
                }
                else {
                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1);
                    jsonData[j].count = jsonData[j].items.length;
                }
            };
            var this_1 = this;
            for (var j = 0; j < jsonData.length; j++) {
                _loop_1(j);
            }
            jsonData.childLevels += 1;
            return jsonData;
        }
        var grouped = {};
        var groupedArray = [];
        groupedArray.GroupGuid = consts[guid];
        groupedArray.level = level;
        groupedArray.childLevels = 0;
        groupedArray.records = jsonData;
        var _loop_2 = function (i) {
            var val = this_2.getVal(jsonData, i, field);
            if (!grouped[val]) {
                grouped[val] = {
                    key: val,
                    count: 0,
                    items: [],
                    aggregates: {},
                    field: field
                };
                groupedArray.push(grouped[val]);
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(groupDs)) {
                    var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });
                    grouped[val].count = tempObj[0].count;
                }
            }
            grouped[val].count = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(groupDs) ? grouped[val].count : grouped[val].count += 1;
            grouped[val].items.push(jsonData[i]);
        };
        var this_2 = this;
        for (var i = 0; i < jsonData.length; i++) {
            _loop_2(i);
        }
        if (aggregates && aggregates.length) {
            var _loop_3 = function (i) {
                var res = {};
                var fn = void 0;
                var aggs = aggregates;
                for (var j = 0; j < aggregates.length; j++) {
                    fn = DataUtil.aggregates[aggregates[j].type];
                    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(groupDs)) {
                        var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });
                        if (fn) {
                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);
                        }
                    }
                    else {
                        if (fn) {
                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);
                        }
                    }
                }
                groupedArray[i].aggregates = res;
            };
            for (var i = 0; i < groupedArray.length; i++) {
                _loop_3(i);
            }
        }
        return groupedArray;
    };
    DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {
        var i;
        var grp = {};
        var temp;
        if (lookup.result) {
            lookup = lookup.result;
        }
        if (lookup.GroupGuid) {
            this.throwError('DataManager: Do not have support Grouping in hierarchy');
        }
        for (i = 0; i < lookup.length; i++) {
            var fKeyData = this.getObject(fKey, lookup[i]);
            temp = grp[fKeyData] || (grp[fKeyData] = []);
            temp.push(lookup[i]);
        }
        for (i = 0; i < source.length; i++) {
            var fKeyData = this.getObject(pKey || fKey, source[i]);
            source[i][from] = grp[fKeyData];
        }
    };
    DataUtil.getFieldList = function (obj, fields, prefix) {
        if (prefix === undefined) {
            prefix = '';
        }
        if (fields === undefined || fields === null) {
            return this.getFieldList(obj, [], prefix);
        }
        var copyObj = obj;
        var keys = Object.keys(obj);
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var prop = keys_1[_i];
            if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {
                this.getFieldList(copyObj[prop], fields, prefix + prop + '.');
            }
            else {
                fields.push(prefix + prop);
            }
        }
        return fields;
    };
    DataUtil.getObject = function (nameSpace, from) {
        if (!nameSpace) {
            return from;
        }
        if (nameSpace.indexOf('.') === -1) {
            return from[nameSpace];
        }
        var value = from;
        var splits = nameSpace.split('.');
        for (var i = 0; i < splits.length; i++) {
            if (value == null) {
                break;
            }
            value = value[splits[i]];
        }
        return value;
    };
    DataUtil.sort = function (ds, field, comparer) {
        if (ds.length <= 1) {
            return ds;
        }
        var middle = parseInt((ds.length / 2).toString(), 10);
        var left = ds.slice(0, middle);
        var right = ds.slice(middle);
        left = this.sort(left, field, comparer);
        right = this.sort(right, field, comparer);
        return this.merge(left, right, field, comparer);
    };
    DataUtil.merge = function (left, right, fieldName, comparer) {
        var result = [];
        var current;
        while (left.length > 0 || right.length > 0) {
            if (left.length > 0 && right.length > 0) {
                if (comparer) {
                    current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName)) <= 0 ? left : right;
                }
                else {
                    current = left[0][fieldName] < left[0][fieldName] ? left : right;
                }
            }
            else {
                current = left.length > 0 ? left : right;
            }
            result.push(current.shift());
        }
        return result;
    };
    DataUtil.getVal = function (array, index, field) {
        return field ? this.getObject(field, array[index]) : array[index];
    };
    DataUtil.toLowerCase = function (val) {
        return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';
    };
    DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {
        if (fnName in adaptor) {
            var res = adaptor[fnName](param1, param2);
            if (!this.fnOperators.isnull(res)) {
                param1 = res;
            }
        }
        return param1;
    };
    DataUtil.isPlainObject = function (obj) {
        return (!!obj) && (obj.constructor === Object);
    };
    DataUtil.isCors = function () {
        var xhr = null;
        var request = 'XMLHttpRequest';
        try {
            xhr = new window[request]();
        }
        catch (e) {
        }
        return !!xhr && ('withCredentials' in xhr);
    };
    DataUtil.getGuid = function (prefix) {
        var hexs = '0123456789abcdef';
        var rand;
        return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {
            if ('crypto' in window && 'getRandomValues' in crypto) {
                var arr = new Uint8Array(1);
                window.crypto.getRandomValues(arr);
                rand = arr[0] % 16 | 0;
            }
            else {
                rand = Math.random() * 16 | 0;
            }
            return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];
        });
    };
    DataUtil.isNull = function (val) {
        return val === undefined || val === null;
    };
    DataUtil.getItemFromComparer = function (array, field, comparer) {
        var keyVal;
        var current;
        var key;
        var i = 0;
        var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';
        if (array.length) {
            while (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(keyVal) && i < array.length) {
                keyVal = DataUtil.getVal(array, i, field);
                key = array[i++];
            }
        }
        for (; i < array.length; i++) {
            current = DataUtil.getVal(array, i, field);
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(current)) {
                continue;
            }
            if (castRequired) {
                keyVal = +keyVal;
                current = +current;
            }
            if (comparer(keyVal, current) > 0) {
                keyVal = current;
                key = array[i];
            }
        }
        return key;
    };
    return DataUtil;
}());

DataUtil.serverTimezoneOffset = 0;
DataUtil.throwError = function (error) {
    try {
        throw new Error(error);
    }
    catch (e) {
        throw e.message + '\n' + e.stack;
    }
};
DataUtil.aggregates = {
    sum: function (ds, field) {
        var result = 0;
        var val;
        var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';
        for (var i = 0; i < ds.length; i++) {
            val = DataUtil.getVal(ds, i, field);
            if (!isNaN(val) && val !== null) {
                if (castRequired) {
                    val = +val;
                }
                result += val;
            }
        }
        return result;
    },
    average: function (ds, field) {
        return DataUtil.aggregates.sum(ds, field) / ds.length;
    },
    min: function (ds, field) {
        var comparer;
        if (typeof field === 'function') {
            comparer = field;
            field = null;
        }
        return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));
    },
    max: function (ds, field) {
        var comparer;
        if (typeof field === 'function') {
            comparer = field;
            field = null;
        }
        return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));
    },
    truecount: function (ds, field) {
        return new __WEBPACK_IMPORTED_MODULE_1__manager__["a" /* DataManager */](ds).executeLocal(new __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */]().where(field, 'equal', true, true)).length;
    },
    falsecount: function (ds, field) {
        return new __WEBPACK_IMPORTED_MODULE_1__manager__["a" /* DataManager */](ds).executeLocal(new __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */]().where(field, 'equal', false, true)).length;
    },
    count: function (ds, field) {
        return ds.length;
    }
};
DataUtil.operatorSymbols = {
    '<': 'lessthan',
    '>': 'greaterthan',
    '<=': 'lessthanorequal',
    '>=': 'greaterthanorequal',
    '==': 'equal',
    '!=': 'notequal',
    '*=': 'contains',
    '$=': 'endswith',
    '^=': 'startswith'
};
DataUtil.odBiOperator = {
    '<': ' lt ',
    '>': ' gt ',
    '<=': ' le ',
    '>=': ' ge ',
    '==': ' eq ',
    '!=': ' ne ',
    'lessthan': ' lt ',
    'lessthanorequal': ' le ',
    'greaterthan': ' gt ',
    'greaterthanorequal': ' ge ',
    'equal': ' eq ',
    'notequal': ' ne '
};
DataUtil.odUniOperator = {
    '$=': 'endswith',
    '^=': 'startswith',
    '*=': 'substringof',
    'endswith': 'endswith',
    'startswith': 'startswith',
    'contains': 'substringof'
};
DataUtil.odv4UniOperator = {
    '$=': 'endswith',
    '^=': 'startswith',
    '*=': 'contains',
    'endswith': 'endswith',
    'startswith': 'startswith',
    'contains': 'contains'
};
DataUtil.fnOperators = {
    equal: function (actual, expected, ignoreCase) {
        if (ignoreCase) {
            return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);
        }
        return actual === expected;
    },
    notequal: function (actual, expected, ignoreCase) {
        return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);
    },
    lessthan: function (actual, expected, ignoreCase) {
        if (ignoreCase) {
            return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);
        }
        return actual < expected;
    },
    greaterthan: function (actual, expected, ignoreCase) {
        if (ignoreCase) {
            return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);
        }
        return actual > expected;
    },
    lessthanorequal: function (actual, expected, ignoreCase) {
        if (ignoreCase) {
            return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);
        }
        return actual <= expected;
    },
    greaterthanorequal: function (actual, expected, ignoreCase) {
        if (ignoreCase) {
            return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);
        }
        return actual >= expected;
    },
    contains: function (actual, expected, ignoreCase) {
        if (ignoreCase) {
            return !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(actual) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(expected) &&
                DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;
        }
        return !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(actual) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(expected) &&
            actual.toString().indexOf(expected) !== -1;
    },
    notnull: function (actual) {
        return actual !== null;
    },
    isnull: function (actual) {
        return actual === null;
    },
    startswith: function (actual, expected, ignoreCase) {
        if (ignoreCase) {
            return actual && expected && DataUtil.startsWith(actual.toLowerCase(), expected.toLowerCase());
        }
        return actual && expected && DataUtil.startsWith(actual, expected);
    },
    endswith: function (actual, expected, ignoreCase) {
        if (ignoreCase) {
            return actual && expected && DataUtil.endsWith(actual.toLowerCase(), expected.toLowerCase());
        }
        return actual && expected && DataUtil.endsWith(actual, expected);
    },
    processSymbols: function (operator) {
        var fnName = DataUtil.operatorSymbols[operator];
        if (fnName) {
            var fn = DataUtil.fnOperators[fnName];
            return fn;
        }
        return DataUtil.throwError('Query - Process Operator : Invalid operator');
    },
    processOperator: function (operator) {
        var fn = DataUtil.fnOperators[operator];
        if (fn) {
            return fn;
        }
        return DataUtil.fnOperators.processSymbols(operator);
    }
};
DataUtil.parse = {
    parseJson: function (jsonText) {
        if (typeof jsonText === 'string') {
            jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);
        }
        else if (jsonText instanceof Array) {
            DataUtil.parse.iterateAndReviveArray(jsonText);
        }
        else if (typeof jsonText === 'object') {
            DataUtil.parse.iterateAndReviveJson(jsonText);
        }
        return jsonText;
    },
    iterateAndReviveArray: function (array) {
        for (var i = 0; i < array.length; i++) {
            if (typeof array[i] === 'object') {
                DataUtil.parse.iterateAndReviveJson(array[i]);
            }
            else if (typeof array[i] === 'string' && !/^[\s]*\[|^[\s]*\{|\"/g.test(array[i])) {
                array[i] = DataUtil.parse.jsonReviver('', array[i]);
            }
            else {
                array[i] = DataUtil.parse.parseJson(array[i]);
            }
        }
    },
    iterateAndReviveJson: function (json) {
        var value;
        var keys = Object.keys(json);
        for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
            var prop = keys_2[_i];
            if (DataUtil.startsWith(prop, '__')) {
                continue;
            }
            value = json[prop];
            if (typeof value === 'object') {
                if (value instanceof Array) {
                    DataUtil.parse.iterateAndReviveArray(value);
                }
                else if (value) {
                    DataUtil.parse.iterateAndReviveJson(value);
                }
            }
            else {
                json[prop] = DataUtil.parse.jsonReviver(json[prop], value);
            }
        }
    },
    jsonReviver: function (field, value) {
        var dupValue = value;
        if (typeof value === 'string') {
            var ms = /^\/Date\(([+-]?[0-9]+)([+-][0-9]{4})?\)\/$/.exec(value);
            if (ms) {
                return DataUtil.parse.jsonReplacer({ value: new Date(parseInt(ms[1], 10)) }, false).value;
            }
            else if (/^(\d{4}\-\d\d\-\d\d([tT][\d:\.]*){1})([zZ]|([+\-])(\d\d):?(\d\d))?$/.test(value)) {
                var arr = dupValue.split(/[^0-9]/);
                value = DataUtil.parse.jsonReplacer({
                    value: new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10))
                }, false).value;
            }
        }
        return value;
    },
    isJson: function (jsonData) {
        if (typeof jsonData[0] === 'string') {
            return jsonData;
        }
        return DataUtil.parse.parseJson(jsonData);
    },
    isGuid: function (value) {
        var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;
        var match = regex.exec(value);
        return match != null;
    },
    replacer: function (value, stringify) {
        if (DataUtil.isPlainObject(value)) {
            return DataUtil.parse.jsonReplacer(value, stringify);
        }
        if (value instanceof Array) {
            return DataUtil.parse.arrayReplacer(value);
        }
        if (value instanceof Date) {
            return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;
        }
        return value;
    },
    jsonReplacer: function (val, stringify) {
        if (stringify === void 0) { stringify = true; }
        var value;
        var keys = Object.keys(val);
        for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {
            var prop = keys_3[_i];
            value = val[prop];
            if (!(value instanceof Date)) {
                continue;
            }
            var d = value;
            var unixstamp = +d - (d.getTimezoneOffset() * 60000);
            val[prop] = new Date(unixstamp - (DataUtil.serverTimezoneOffset * 3600000));
            if (stringify) {
                val[prop] = val[prop].toJSON();
            }
        }
        return val;
    },
    arrayReplacer: function (val) {
        for (var i = 0; i < val.length; i++) {
            if (DataUtil.isPlainObject(val[i])) {
                val[i] = DataUtil.parse.jsonReplacer(val[i]);
            }
            else if (val[i] instanceof Date) {
                val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;
            }
        }
        return val;
    }
};


/***/ }),
/* 59 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = incrementalSearch;
/* harmony export (immutable) */ __webpack_exports__["a"] = Search;
var queryString = '';
var prevString = '';
var matches = [];
var activeClass = 'e-active';
function incrementalSearch(keyCode, items, selectedIndex, ignoreCase) {
    queryString += String.fromCharCode(keyCode);
    setTimeout(function () { queryString = ''; }, 1000);
    var index;
    queryString = ignoreCase ? queryString.toLowerCase() : queryString;
    if (prevString === queryString) {
        for (var i = 0; i < matches.length; i++) {
            if (matches[i].classList.contains(activeClass)) {
                index = i;
                break;
            }
        }
        index = index + 1;
        return matches[index];
    }
    else {
        var listItems = items;
        var strLength = queryString.length;
        var text = void 0;
        var item = void 0;
        selectedIndex = selectedIndex ? selectedIndex + 1 : 0;
        var i = selectedIndex;
        matches = [];
        do {
            if (i === listItems.length) {
                i = -1;
            }
            i === -1 ? index = 0 : index = i;
            item = listItems[index];
            text = ignoreCase ? item.innerText.toLowerCase() : item.innerText;
            if (text.substr(0, strLength) === queryString) {
                matches.push(listItems[index]);
            }
            i++;
        } while (i !== selectedIndex);
        prevString = queryString;
        return matches[0];
    }
}
function Search(inputVal, items, searchType, ignoreCase) {
    var listItems = items;
    ignoreCase = ignoreCase !== undefined && ignoreCase !== null ? ignoreCase : true;
    var itemData = { item: null, index: null };
    if (inputVal.length) {
        var strLength = inputVal.length;
        var queryStr = ignoreCase ? inputVal.toLocaleLowerCase() : inputVal;
        for (var i = 0, itemsData = listItems; i < itemsData.length; i++) {
            var item = itemsData[i];
            var text = (ignoreCase ? item.textContent.toLocaleLowerCase() : item.textContent).replace(/^\s+|\s+$/g, '');
            if (searchType === 'Equal' && text === queryStr || searchType === 'StartsWith' && text.substr(0, strLength) === queryStr) {
                itemData.item = item;
                itemData.index = i;
                return { item: item, index: i };
            }
        }
        return itemData;
    }
    return itemData;
}


/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__stream_writer__ = __webpack_require__(219);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_0__stream_writer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__encoding__ = __webpack_require__(139);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__encoding__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__save__ = __webpack_require__(140);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_2__save__["a"]; });





/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Input; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);

var CLASSNAMES = {
    RTL: 'e-rtl',
    DISABLE: 'e-disabled',
    INPUT: 'e-input',
    INPUTGROUP: 'e-input-group',
    FLOATINPUT: 'e-float-input',
    FLOATLINE: 'e-float-line',
    FLOATTEXT: 'e-float-text',
    CLEARICON: 'e-clear-icon',
    CLEARICONHIDE: 'e-clear-icon-hide',
    LABELTOP: 'e-label-top',
    LABELBOTTOM: 'e-label-bottom',
    NOFLOATLABEL: 'e-no-float-label',
    INPUTCUSTOMTAG: 'e-input-custom-tag',
    FLOATCUSTOMTAG: 'e-float-custom-tag'
};
var Input;
(function (Input) {
    var privateInputObj = {
        container: null,
        buttons: [],
        clearButton: null
    };
    function createInput(args) {
        var inputObject = { container: null, buttons: [], clearButton: null };
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(args.floatLabelType) || args.floatLabelType === 'Never') {
            inputObject.container = createInputContainer(args, CLASSNAMES.INPUTGROUP, CLASSNAMES.INPUTCUSTOMTAG, 'span');
            args.element.parentNode.insertBefore(inputObject.container, args.element);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([args.element], CLASSNAMES.INPUT);
            inputObject.container.appendChild(args.element);
        }
        else {
            createFloatingInput(args, inputObject);
        }
        args.element.addEventListener('focus', function () {
            var parent = getParentNode(this);
            if (parent.classList.contains('e-input-group')) {
                parent.classList.add('e-input-focus');
            }
        });
        args.element.addEventListener('blur', function () {
            var parent = getParentNode(this);
            if (parent.classList.contains('e-input-group')) {
                parent.classList.remove('e-input-focus');
            }
        });
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(args.properties) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(args.properties.showClearButton) && args.properties.showClearButton) {
            inputObject.clearButton = createClearButton(args.element, inputObject.container);
            if (inputObject.container.classList.contains(CLASSNAMES.FLOATINPUT)) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([inputObject.container], CLASSNAMES.INPUTGROUP);
            }
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(args.buttons)) {
            for (var i = 0; i < args.buttons.length; i++) {
                inputObject.buttons.push(appendSpan(args.buttons[i], inputObject.container));
            }
        }
        inputObject = setPropertyValue(args, inputObject);
        privateInputObj = inputObject;
        return inputObject;
    }
    Input.createInput = createInput;
    function _focusFn() {
        var label = getParentNode(this).getElementsByClassName('e-float-text')[0];
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([label], CLASSNAMES.LABELTOP);
        if (label.classList.contains(CLASSNAMES.LABELBOTTOM)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([label], CLASSNAMES.LABELBOTTOM);
        }
    }
    function _blurFn() {
        var parent = getParentNode(this);
        if (parent.getElementsByTagName('input')[0].value === '') {
            var label = parent.getElementsByClassName('e-float-text')[0];
            if (label.classList.contains(CLASSNAMES.LABELTOP)) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([label], CLASSNAMES.LABELTOP);
            }
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([label], CLASSNAMES.LABELBOTTOM);
        }
    }
    function wireFloatingEvents(element) {
        element.addEventListener('focus', _focusFn);
        element.addEventListener('blur', _blurFn);
    }
    function unwireFloatingEvents(element) {
        element.removeEventListener('focus', _focusFn);
        element.removeEventListener('blur', _blurFn);
    }
    function createFloatingInput(args, inputObject) {
        var inputElement;
        var floatLinelement;
        var floatLabelElement;
        if (args.floatLabelType === 'Auto') {
            wireFloatingEvents(args.element);
        }
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(inputObject.container)) {
            inputObject.container = createInputContainer(args, CLASSNAMES.FLOATINPUT, CLASSNAMES.FLOATCUSTOMTAG, 'div');
            args.element.parentNode.insertBefore(inputObject.container, args.element);
        }
        else {
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(args.customTag)) {
                inputObject.container.classList.add(CLASSNAMES.FLOATCUSTOMTAG);
            }
            inputObject.container.classList.add(CLASSNAMES.FLOATINPUT);
        }
        floatLinelement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: CLASSNAMES.FLOATLINE });
        floatLabelElement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('label', { className: CLASSNAMES.FLOATTEXT });
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(args.element.id) && args.element.id !== '') {
            floatLabelElement.id = 'label_' + args.element.id.replace(/ /g, '_');
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(args.element, { 'aria-labelledby': floatLabelElement.id });
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(args.element.placeholder) && args.element.placeholder !== '') {
            floatLabelElement.innerHTML = args.element.placeholder;
            args.element.removeAttribute('placeholder');
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(args.properties) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(args.properties.placeholder) &&
            args.properties.placeholder !== '') {
            floatLabelElement.innerHTML = args.properties.placeholder;
        }
        if (!floatLabelElement.innerHTML) {
            inputObject.container.classList.add(CLASSNAMES.NOFLOATLABEL);
        }
        inputObject.container.appendChild(args.element);
        inputObject.container.appendChild(floatLinelement);
        inputObject.container.appendChild(floatLabelElement);
        updateLabelState(args.element.value, floatLabelElement);
        if (args.floatLabelType === 'Always') {
            if (floatLabelElement.classList.contains(CLASSNAMES.LABELBOTTOM)) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([floatLabelElement], CLASSNAMES.LABELBOTTOM);
            }
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([floatLabelElement], CLASSNAMES.LABELTOP);
        }
        if (args.floatLabelType === 'Auto') {
            args.element.addEventListener('input', function (event) {
                updateLabelState(args.element.value, floatLabelElement);
            });
            args.element.addEventListener('blur', function (event) {
                updateLabelState(args.element.value, floatLabelElement);
            });
        }
    }
    function setPropertyValue(args, inputObject) {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(args.properties)) {
            for (var _i = 0, _a = Object.keys(args.properties); _i < _a.length; _i++) {
                var prop = _a[_i];
                switch (prop) {
                    case 'cssClass':
                        setCssClass(args.properties.cssClass, [inputObject.container]);
                        break;
                    case 'enabled':
                        setEnabled(args.properties.enabled, args.element);
                        break;
                    case 'enableRtl':
                        setEnableRtl(args.properties.enableRtl, [inputObject.container]);
                        break;
                    case 'placeholder':
                        setPlaceholder(args.properties.placeholder, args.element);
                        break;
                    case 'readonly':
                        setReadonly(args.properties.readonly, args.element);
                        break;
                }
            }
        }
        return inputObject;
    }
    function updateIconState(value, button) {
        if (value) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([button], CLASSNAMES.CLEARICONHIDE);
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([button], CLASSNAMES.CLEARICONHIDE);
        }
    }
    function updateLabelState(value, label) {
        if (value) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([label], CLASSNAMES.LABELTOP);
            if (label.classList.contains(CLASSNAMES.LABELBOTTOM)) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([label], CLASSNAMES.LABELBOTTOM);
            }
        }
        else {
            if (label.classList.contains(CLASSNAMES.LABELTOP)) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([label], CLASSNAMES.LABELTOP);
            }
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([label], CLASSNAMES.LABELBOTTOM);
        }
    }
    function getParentNode(element) {
        var parentNode = element.parentNode;
        return parentNode;
    }
    function createClearButton(element, container) {
        var button = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: CLASSNAMES.CLEARICON });
        container.appendChild(button);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(privateInputObj.container) &&
            privateInputObj.container.classList.contains(CLASSNAMES.FLOATINPUT)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([privateInputObj.container], CLASSNAMES.INPUTGROUP);
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([button], CLASSNAMES.CLEARICONHIDE);
        wireClearBtnEvents(element, button);
        return button;
    }
    function wireClearBtnEvents(element, button) {
        button.addEventListener('click', function (event) {
            if (!(element.classList.contains(CLASSNAMES.DISABLE) || element.readOnly)) {
                event.preventDefault();
                if (element !== document.activeElement) {
                    element.focus();
                }
                element.value = '';
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([button], CLASSNAMES.CLEARICONHIDE);
            }
        });
        element.addEventListener('input', function (event) {
            updateIconState(element.value, button);
        });
        element.addEventListener('focus', function (event) {
            updateIconState(element.value, button);
        });
        element.addEventListener('blur', function (event) {
            setTimeout(function () { __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([button], CLASSNAMES.CLEARICONHIDE); }, 200);
        });
    }
    function validateLabel(element, floatLabelType) {
        var parent = getParentNode(element);
        if (parent.classList.contains(CLASSNAMES.FLOATINPUT) && floatLabelType === 'Auto') {
            var label = getParentNode(element).getElementsByClassName('e-float-text')[0];
            updateLabelState(element.value, label);
        }
    }
    function createInputContainer(args, className, tagClass, tag) {
        var container;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(args.customTag)) {
            container = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])(args.customTag, { className: className });
            container.classList.add(tagClass);
        }
        else {
            container = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])(tag, { className: className });
        }
        return container;
    }
    function setValue(value, element, floatLabelType, clearButton) {
        element.value = value;
        if ((!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(floatLabelType)) && floatLabelType === 'Auto') {
            validateLabel(element, floatLabelType);
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(clearButton) && clearButton) {
            var parentElement = getParentNode(element);
            var button = parentElement.getElementsByClassName(CLASSNAMES.CLEARICON)[0];
            if (element.value && parentElement.classList.contains('e-input-focus')) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([button], CLASSNAMES.CLEARICONHIDE);
            }
            else {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([button], CLASSNAMES.CLEARICONHIDE);
            }
        }
    }
    Input.setValue = setValue;
    function setCssClass(cssClass, elements, oldClass) {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(oldClass) && oldClass !== '') {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])(elements, oldClass);
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(cssClass) && cssClass !== '') {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])(elements, cssClass);
        }
    }
    Input.setCssClass = setCssClass;
    function setPlaceholder(placeholder, element) {
        var parentElement;
        parentElement = getParentNode(element);
        if (parentElement.classList.contains(CLASSNAMES.FLOATINPUT)) {
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(placeholder) && placeholder !== '') {
                parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].textContent = placeholder;
                parentElement.classList.remove(CLASSNAMES.NOFLOATLABEL);
            }
            else {
                parentElement.classList.add(CLASSNAMES.NOFLOATLABEL);
                parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].textContent = '';
            }
        }
        else {
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(placeholder) && placeholder !== '') {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(element, { 'placeholder': placeholder, 'aria-placeholder': placeholder });
            }
            else {
                element.removeAttribute('placeholder');
                element.removeAttribute('aria-placeholder');
            }
        }
    }
    Input.setPlaceholder = setPlaceholder;
    function setReadonly(isReadonly, element, floatLabelType) {
        if (isReadonly) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(element, { readonly: '' });
        }
        else {
            element.removeAttribute('readonly');
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(floatLabelType)) {
            validateLabel(element, floatLabelType);
        }
    }
    Input.setReadonly = setReadonly;
    function setEnableRtl(isRtl, elements) {
        if (isRtl) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])(elements, CLASSNAMES.RTL);
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])(elements, CLASSNAMES.RTL);
        }
    }
    Input.setEnableRtl = setEnableRtl;
    function setEnabled(isEnable, element, floatLabelType) {
        var disabledAttrs = { 'disabled': 'disabled', 'aria-disabled': 'true' };
        if (isEnable) {
            element.classList.remove(CLASSNAMES.DISABLE);
            removeAttributes(disabledAttrs, element);
        }
        else {
            element.classList.add(CLASSNAMES.DISABLE);
            addAttributes(disabledAttrs, element);
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(floatLabelType)) {
            validateLabel(element, floatLabelType);
        }
    }
    Input.setEnabled = setEnabled;
    function removeAttributes(attrs, element) {
        for (var _i = 0, _a = Object.keys(attrs); _i < _a.length; _i++) {
            var key = _a[_i];
            var parentElement = void 0;
            parentElement = getParentNode(element);
            if (key === 'disabled') {
                element.classList.remove(CLASSNAMES.DISABLE);
            }
            if (key === 'disabled' && parentElement.classList.contains(CLASSNAMES.INPUTGROUP)) {
                parentElement.classList.remove(CLASSNAMES.DISABLE);
            }
            if (key === 'placeholder' && parentElement.classList.contains(CLASSNAMES.FLOATINPUT)) {
                parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].textContent = '';
            }
            else {
                element.removeAttribute(key);
            }
        }
    }
    Input.removeAttributes = removeAttributes;
    function addAttributes(attrs, element) {
        for (var _i = 0, _a = Object.keys(attrs); _i < _a.length; _i++) {
            var key = _a[_i];
            var parentElement = void 0;
            parentElement = getParentNode(element);
            if (key === 'disabled') {
                element.classList.add(CLASSNAMES.DISABLE);
            }
            if (key === 'disabled' && parentElement.classList.contains(CLASSNAMES.INPUTGROUP)) {
                parentElement.classList.add(CLASSNAMES.DISABLE);
            }
            if (key === 'placeholder' && parentElement.classList.contains(CLASSNAMES.FLOATINPUT)) {
                parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].textContent = attrs[key];
            }
            else {
                element.setAttribute(key, attrs[key]);
            }
        }
    }
    Input.addAttributes = addAttributes;
    function removeFloating(input) {
        var container = input.container;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(container) && container.classList.contains(CLASSNAMES.FLOATINPUT)) {
            var inputEle = container.querySelector('input');
            var placeholder = container.querySelector('.' + CLASSNAMES.FLOATTEXT).textContent;
            var clearButton = container.querySelector('.e-clear-icon') !== null;
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(container.querySelector('.' + CLASSNAMES.FLOATLINE));
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(container.querySelector('.' + CLASSNAMES.FLOATTEXT));
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["classList"])(container, [CLASSNAMES.INPUTGROUP], [CLASSNAMES.FLOATINPUT]);
            unwireFloatingEvents(inputEle);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(inputEle, { 'placeholder': placeholder });
            inputEle.classList.add(CLASSNAMES.INPUT);
            if (!clearButton) {
                inputEle.removeAttribute('required');
            }
        }
    }
    Input.removeFloating = removeFloating;
    function addFloating(input, type, placeholder) {
        var container = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(input, '.' + CLASSNAMES.INPUTGROUP);
        if (type !== 'Never') {
            var customTag = container.tagName;
            customTag = customTag !== 'DIV' && customTag !== 'SPAN' ? customTag : null;
            var args = { element: input, floatLabelType: type, customTag: customTag, properties: { placeholder: placeholder } };
            var iconEle = container.querySelector('.e-clear-icon');
            var inputObj = { container: container };
            input.classList.remove(CLASSNAMES.INPUT);
            createFloatingInput(args, inputObj);
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(iconEle)) {
                iconEle = container.querySelector('.e-input-group-icon');
            }
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(iconEle)) {
                container.classList.remove(CLASSNAMES.INPUTGROUP);
            }
            else {
                var floatLine = container.querySelector('.' + CLASSNAMES.FLOATLINE);
                var floatText = container.querySelector('.' + CLASSNAMES.FLOATTEXT);
                container.insertBefore(input, iconEle);
                container.insertBefore(floatLine, iconEle);
                container.insertBefore(floatText, iconEle);
            }
        }
    }
    Input.addFloating = addFloating;
    function appendSpan(iconClass, container) {
        var button = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: iconClass });
        container.appendChild(button);
        if (!container.classList.contains(CLASSNAMES.INPUTGROUP)) {
            container.classList.add(CLASSNAMES.INPUTGROUP);
        }
        button.addEventListener('mousedown', function () {
            if (!container.classList.contains('e-disabled') && !container.querySelector('input').readOnly) {
                this.classList.add('e-input-btn-ripple');
            }
        });
        button.addEventListener('mouseup', function () {
            var ele = this;
            setTimeout(function () { ele.classList.remove('e-input-btn-ripple'); }, 500);
        });
        return button;
    }
    Input.appendSpan = appendSpan;
})(Input || (Input = {}));


/***/ }),
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfLayoutType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PdfLayoutBreakType; });
var PdfLayoutType;
(function (PdfLayoutType) {
    PdfLayoutType[PdfLayoutType["Paginate"] = 0] = "Paginate";
    PdfLayoutType[PdfLayoutType["OnePage"] = 1] = "OnePage";
})(PdfLayoutType || (PdfLayoutType = {}));
var PdfLayoutBreakType;
(function (PdfLayoutBreakType) {
    PdfLayoutBreakType[PdfLayoutBreakType["FitPage"] = 0] = "FitPage";
    PdfLayoutBreakType[PdfLayoutBreakType["FitElement"] = 1] = "FitElement";
    PdfLayoutBreakType[PdfLayoutBreakType["FitColumnsToPage"] = 2] = "FitColumnsToPage";
})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));


/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfStandardFont; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__enum__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pdf_font__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__document_pdf_document__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pdf_standard_font_metrics_factory__ = __webpack_require__(163);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_dictionary__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__input_output_pdf_dictionary_properties__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_name__ = __webpack_require__(5);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







var PdfStandardFont = (function (_super) {
    __extends(PdfStandardFont, _super);
    function PdfStandardFont(fontFamilyPrototype, size, style) {
        var _this = _super.call(this, size, style) || this;
        _this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_5__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',
            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];
        if ((typeof fontFamilyPrototype === 'number') && (typeof style === 'undefined')) {
            _this.constructor(fontFamilyPrototype, size, __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Regular);
        }
        else if ((typeof fontFamilyPrototype === 'number') && (typeof style !== 'undefined')) {
            _this = _super.call(this, size, style) || this;
            _this.pdfFontFamily = fontFamilyPrototype;
            _this.checkStyle();
            _this.initializeInternals();
        }
        else if ((fontFamilyPrototype instanceof PdfStandardFont) && (typeof style === 'undefined')) {
            _this.constructor(fontFamilyPrototype.fontFamily, size, fontFamilyPrototype.style);
        }
        else if ((fontFamilyPrototype instanceof PdfStandardFont) && (typeof style !== 'undefined')) {
            _this.constructor(fontFamilyPrototype.fontFamily, size, style);
        }
        return _this;
    }
    Object.defineProperty(PdfStandardFont.prototype, "fontFamily", {
        get: function () {
            return this.pdfFontFamily;
        },
        enumerable: true,
        configurable: true
    });
    PdfStandardFont.prototype.checkStyle = function () {
        if (this.fontFamily === __WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfFontFamily */].Symbol || this.fontFamily === __WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfFontFamily */].ZapfDingbats) {
            var style = this.style;
            style &= ~(__WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Bold | __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Italic);
            this.setStyle(style);
        }
    };
    PdfStandardFont.prototype.getLineWidth = function (line, format) {
        if (line == null) {
            throw new Error('ArgumentNullException:line');
        }
        var width = 0;
        var name = this.name;
        line = PdfStandardFont.convert(line);
        for (var i = 0, len = line.length; i < len; i++) {
            var ch = line[i];
            var charWidth = this.getCharWidthInternal(ch, format);
            width += charWidth;
        }
        var size = this.metrics.getSize(format);
        width *= (__WEBPACK_IMPORTED_MODULE_1__pdf_font__["a" /* PdfFont */].charSizeMultiplier * size);
        width = this.applyFormatSettings(line, format, width);
        return width;
    };
    PdfStandardFont.prototype.equalsToFont = function (font) {
        var equal = false;
        var stFont = font;
        if (stFont != null) {
            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);
            var lineReducer = (~(__WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Underline | __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Strikeout));
            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);
            equal = (fontFamilyEqual && styleEqual);
        }
        return equal;
    };
    PdfStandardFont.prototype.initializeInternals = function () {
        var equalFont = null;
        equalFont = __WEBPACK_IMPORTED_MODULE_2__document_pdf_document__["a" /* PdfDocument */].cache.search(this);
        var internals = null;
        var metrics = __WEBPACK_IMPORTED_MODULE_3__pdf_standard_font_metrics_factory__["a" /* PdfStandardFontMetricsFactory */].getMetrics(this.pdfFontFamily, this.style, this.size);
        this.metrics = metrics;
        internals = this.createInternals();
        this.setInternals(internals);
    };
    PdfStandardFont.prototype.createInternals = function () {
        var dictionary = new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_dictionary__["a" /* PdfDictionary */]();
        dictionary.items.setValue(this.dictionaryProperties.type, new __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.font));
        dictionary.items.setValue(this.dictionaryProperties.subtype, new __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.type1));
        dictionary.items.setValue(this.dictionaryProperties.baseFont, new __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_name__["a" /* PdfName */](this.metrics.postScriptName));
        if (this.fontFamily !== __WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfFontFamily */].Symbol && this.fontFamily !== __WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfFontFamily */].ZapfDingbats) {
            var encoding = this.encodings[__WEBPACK_IMPORTED_MODULE_0__enum__["f" /* FontEncoding */].WinAnsiEncoding];
            dictionary.items.setValue(this.dictionaryProperties.encoding, new __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_name__["a" /* PdfName */](encoding));
        }
        return dictionary;
    };
    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {
        var width = 0;
        var code = 0;
        code = charCode.charCodeAt(0);
        if (this.name === '0' || this.name === '1' || this.name === '2' ||
            this.name === '3' || this.name === '4') {
            code = code - PdfStandardFont.charOffset;
        }
        code = (code >= 0 && code !== 128) ? code : 0;
        var metrics = this.metrics;
        var widthTable = metrics.widthTable;
        width = widthTable.items(code);
        return width;
    };
    PdfStandardFont.convert = function (text) {
        return text;
    };
    return PdfStandardFont;
}(__WEBPACK_IMPORTED_MODULE_1__pdf_font__["a" /* PdfFont */]));

PdfStandardFont.charOffset = 32;


/***/ }),
/* 64 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StringTokenizer; });
var StringTokenizer = (function () {
    function StringTokenizer(textValue) {
        this.currentPosition = 0;
        if (textValue == null) {
            throw new Error('ArgumentNullException:text');
        }
        this.text = textValue;
    }
    Object.defineProperty(StringTokenizer.prototype, "length", {
        get: function () {
            return this.text.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StringTokenizer.prototype, "position", {
        get: function () {
            return this.currentPosition;
        },
        set: function (value) {
            this.currentPosition = value;
        },
        enumerable: true,
        configurable: true
    });
    StringTokenizer.getCharsCount = function (text, symbols) {
        if (typeof symbols === 'string') {
            if (text == null) {
                throw new Error('ArgumentNullException:wholeText');
            }
            var numSymbols = 0;
            var curIndex = 0;
            for (;;) {
                curIndex = text.indexOf(symbols, curIndex);
                if (curIndex === -1) {
                    break;
                }
                else {
                    numSymbols++;
                    curIndex++;
                }
            }
            return numSymbols;
        }
        else {
            if (text == null) {
                throw new Error('ArgumentNullException:text');
            }
            if (symbols == null) {
                throw new Error('ArgumentNullException:symbols');
            }
            var count = 0;
            for (var i = 0, len = text.length; i < len; i++) {
                var ch = text[i];
                if (this.contains(symbols, ch)) {
                    count++;
                }
            }
            return count;
        }
    };
    StringTokenizer.prototype.readLine = function () {
        var pos = this.currentPosition;
        while (pos < this.length) {
            var ch = this.text[pos];
            switch (ch) {
                case '\r':
                case '\n': {
                    var text = this.text.substring(this.currentPosition, pos - this.currentPosition);
                    this.currentPosition = pos + 1;
                    this.currentPosition++;
                    return text;
                }
            }
            pos++;
        }
        if (pos > this.currentPosition) {
            var text2 = this.text.substring(this.currentPosition, pos - this.currentPosition);
            this.currentPosition = pos;
            return text2;
        }
        return null;
    };
    StringTokenizer.prototype.peekLine = function () {
        var pos = this.currentPosition;
        var line = this.readLine();
        this.currentPosition = pos;
        return line;
    };
    StringTokenizer.prototype.readWord = function () {
        var pos = this.currentPosition;
        while (pos < this.length) {
            var ch = this.text[pos];
            switch (ch) {
                case '\r':
                case '\n':
                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);
                    this.currentPosition = pos + 1;
                    if (((ch === '\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\n')) {
                        this.currentPosition++;
                    }
                    return textValue;
                case ' ':
                case '\t': {
                    if (pos === this.currentPosition) {
                        pos++;
                    }
                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);
                    this.currentPosition = pos;
                    return text;
                }
            }
            pos++;
        }
        if (pos > this.currentPosition) {
            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);
            this.currentPosition = pos;
            return text2;
        }
        return null;
    };
    StringTokenizer.prototype.peekWord = function () {
        var pos = this.currentPosition;
        var word = this.readWord();
        this.currentPosition = pos;
        return word;
    };
    StringTokenizer.prototype.read = function (count) {
        if (typeof count === 'undefined') {
            var ch = '0';
            return ch;
        }
        else {
            var num = 0;
            var builder = '';
            return builder;
        }
    };
    StringTokenizer.prototype.peek = function () {
        var ch = '0';
        return ch;
    };
    StringTokenizer.prototype.close = function () {
        this.text = null;
    };
    StringTokenizer.contains = function (array, symbol) {
        var contains = false;
        for (var i = 0; i < array.length; i++) {
            if (array[i] === symbol) {
                contains = true;
                break;
            }
        }
        return contains;
    };
    return StringTokenizer;
}());

StringTokenizer.whiteSpace = ' ';
StringTokenizer.tab = '\t';
StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];
StringTokenizer.whiteSpacePattern = '^[ \t]+$';


/***/ }),
/* 65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfImage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enum__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__unit_convertor__ = __webpack_require__(244);



var PdfImage = (function () {
    function PdfImage() {
    }
    Object.defineProperty(PdfImage.prototype, "width", {
        get: function () {
            return this.imageWidth;
        },
        set: function (value) {
            this.imageWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfImage.prototype, "height", {
        get: function () {
            return this.imageHeight;
        },
        set: function (value) {
            this.imageHeight = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfImage.prototype, "size", {
        set: function (value) {
            this.width = value.width;
            this.height = value.height;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfImage.prototype, "physicalDimension", {
        get: function () {
            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);
            return new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](this.width, this.height);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfImage.prototype, "element", {
        get: function () {
            return this.imageStream;
        },
        enumerable: true,
        configurable: true
    });
    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {
        if (typeof horizontalResolution === 'undefined') {
            var dpiX = __WEBPACK_IMPORTED_MODULE_2__unit_convertor__["a" /* PdfUnitConverter */].horizontalResolution;
            var dpiY = __WEBPACK_IMPORTED_MODULE_2__unit_convertor__["a" /* PdfUnitConverter */].verticalResolution;
            var size = this.getPointSize(width, height, dpiX, dpiY);
            return size;
        }
        else {
            var ucX = new __WEBPACK_IMPORTED_MODULE_2__unit_convertor__["a" /* PdfUnitConverter */](horizontalResolution);
            var ucY = new __WEBPACK_IMPORTED_MODULE_2__unit_convertor__["a" /* PdfUnitConverter */](verticalResolution);
            var ptWidth = ucX.convertUnits(width, __WEBPACK_IMPORTED_MODULE_1__enum__["k" /* PdfGraphicsUnit */].Pixel, __WEBPACK_IMPORTED_MODULE_1__enum__["k" /* PdfGraphicsUnit */].Point);
            var ptHeight = ucY.convertUnits(height, __WEBPACK_IMPORTED_MODULE_1__enum__["k" /* PdfGraphicsUnit */].Pixel, __WEBPACK_IMPORTED_MODULE_1__enum__["k" /* PdfGraphicsUnit */].Point);
            var size = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](ptWidth, ptHeight);
            return size;
        }
    };
    return PdfImage;
}());



/***/ }),
/* 66 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfGraphics; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return GetResourceEventHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return PdfGraphicsState; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__enum__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__fonts_enum__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__input_output_pdf_stream_writer__ = __webpack_require__(169);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pdf_pen__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__brushes_pdf_brush__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__brushes_pdf_solid_brush__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__fonts_pdf_font__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__pdf_transformation_matrix__ = __webpack_require__(166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__constants__ = __webpack_require__(159);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__primitives_pdf_string__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__fonts_pdf_string_format__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__collections_object_object_pair_dictionary__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__pdf_transparency__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__fonts_string_layouter__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__input_output_pdf_dictionary_properties__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__fonts_string_tokenizer__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__document_automatic_fields_automatic_field_info_collection__ = __webpack_require__(238);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__document_automatic_fields_automatic_field_info__ = __webpack_require__(150);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__input_output_pdf_operators__ = __webpack_require__(29);





















var PdfGraphics = (function () {
    function PdfGraphics(arg1, arg2, arg3) {
        this.currentColorSpace = __WEBPACK_IMPORTED_MODULE_0__enum__["i" /* PdfColorSpace */].Rgb;
        this.previousTextRenderingMode = __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* TextRenderingMode */].Fill;
        this.previousCharacterSpacing = 0.0;
        this.previousWordSpacing = 0.0;
        this.previousTextScaling = 100.0;
        this.procedureSets = new __WEBPACK_IMPORTED_MODULE_9__constants__["a" /* ProcedureSets */]();
        this.isNormalRender = true;
        this.isUseFontSize = false;
        this.isItalic = false;
        this.isEmfTextScaled = false;
        this.isEmf = false;
        this.isEmfPlus = false;
        this.isBaselineFormat = true;
        this.emfScalingFactor = new __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["b" /* SizeF */](0, 0);
        this.colorSpaceChanged = false;
        this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_15__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        this.isOverloadWithPosition = false;
        this.isPointOverload = false;
        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];
        this.isImageOptimized = false;
        this.graphicsState = [];
        this.istransparencySet = false;
        this.internalAutomaticFields = null;
        this.startCutIndex = -1;
        if (arg3 instanceof __WEBPACK_IMPORTED_MODULE_2__input_output_pdf_stream_writer__["a" /* PdfStreamWriter */]) {
            this.pdfStreamWriter = arg3;
            this.getResources = arg2;
            this.canvasSize = arg1;
            this.initialize();
        }
        else {
            this.constructor(arg1, arg2, new __WEBPACK_IMPORTED_MODULE_2__input_output_pdf_stream_writer__["a" /* PdfStreamWriter */](arg3));
        }
    }
    Object.defineProperty(PdfGraphics.prototype, "stringLayoutResult", {
        get: function () {
            return this.pdfStringLayoutResult;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "size", {
        get: function () {
            return this.canvasSize;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "mediaBoxUpperRightBound", {
        get: function () {
            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {
                this.internalMediaBoxUpperRightBound = 0;
            }
            return this.internalMediaBoxUpperRightBound;
        },
        set: function (value) {
            this.internalMediaBoxUpperRightBound = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "clientSize", {
        get: function () {
            return new __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["b" /* SizeF */](this.clipBounds.width, this.clipBounds.height);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "colorSpace", {
        get: function () {
            return this.currentColorSpace;
        },
        set: function (value) {
            this.currentColorSpace = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "streamWriter", {
        get: function () {
            return this.pdfStreamWriter;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "matrix", {
        get: function () {
            if (this.transformationMatrix == null) {
                this.transformationMatrix = new __WEBPACK_IMPORTED_MODULE_7__pdf_transformation_matrix__["a" /* PdfTransformationMatrix */]();
            }
            return this.transformationMatrix;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "layer", {
        get: function () {
            return this.pageLayer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "page", {
        get: function () {
            return this.pageLayer.page;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "automaticFields", {
        get: function () {
            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {
                this.internalAutomaticFields = new __WEBPACK_IMPORTED_MODULE_17__document_automatic_fields_automatic_field_info_collection__["a" /* PdfAutomaticFieldInfoCollection */]();
            }
            return this.internalAutomaticFields;
        },
        enumerable: true,
        configurable: true
    });
    PdfGraphics.prototype.initialize = function () {
        this.bStateSaved = false;
        this.currentPen = null;
        this.currentBrush = null;
        this.currentFont = null;
        this.currentColorSpace = __WEBPACK_IMPORTED_MODULE_0__enum__["i" /* PdfColorSpace */].Rgb;
        this.bCSInitialized = false;
        this.transformationMatrix = null;
        this.previousTextRenderingMode = (-1);
        this.previousCharacterSpacing = -1.0;
        this.previousWordSpacing = -1.0;
        this.previousTextScaling = -100.0;
        this.currentStringFormat = null;
        this.clipBounds = new __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["c" /* RectangleF */](new __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["a" /* PointF */](0, 0), this.size);
        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);
    };
    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {
        if (typeof size === 'undefined') {
            if (template == null) {
                throw Error('ArgumentNullException-template');
            }
            this.drawPdfTemplate(template, location, template.size);
        }
        else {
            if (template == null) {
                throw Error('ArgumentNullException-template');
            }
            var scaleX = (template.width > 0) ? size.width / template.width : 1;
            var scaleY = (template.height > 0) ? size.height / template.height : 1;
            var bNeedScale = !(scaleX === 1 && scaleY === 1);
            var state = this.save();
            var matrix = new __WEBPACK_IMPORTED_MODULE_7__pdf_transformation_matrix__["a" /* PdfTransformationMatrix */]();
            if (this.pageLayer != null) {
                this.getTranslateTransform(location.x, location.y + size.height, matrix);
            }
            if (bNeedScale) {
                this.getScaleTransform(scaleX, scaleY, matrix);
            }
            this.pdfStreamWriter.modifyCtm(matrix);
            var resources = this.getResources.getResources();
            var name_1 = resources.getName(template);
            this.pdfStreamWriter.executeObject(name_1);
            this.restore(state);
            var g = template.graphics;
            if (g != null) {
                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {
                    var fieldInfo = g.automaticFields.automaticFields[index];
                    var newLocation = new __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["a" /* PointF */](fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);
                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;
                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;
                    this.automaticFields.add(new __WEBPACK_IMPORTED_MODULE_18__document_automatic_fields_automatic_field_info__["a" /* PdfAutomaticFieldInfo */](fieldInfo.field, newLocation, scalingX, scalingY));
                    this.page.dictionary.modify();
                }
            }
            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);
            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);
            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);
            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);
        }
    };
    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {
        if (typeof arg1 === 'string' && arg2 instanceof __WEBPACK_IMPORTED_MODULE_6__fonts_pdf_font__["a" /* PdfFont */] && (arg3 instanceof __WEBPACK_IMPORTED_MODULE_3__pdf_pen__["a" /* PdfPen */] || arg3 === null) && (arg4 instanceof __WEBPACK_IMPORTED_MODULE_4__brushes_pdf_brush__["a" /* PdfBrush */] || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof __WEBPACK_IMPORTED_MODULE_11__fonts_pdf_string_format__["a" /* PdfStringFormat */] || arg7 === null) && typeof arg8 === 'undefined') {
            this.isOverloadWithPosition = true;
            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);
        }
        else {
            var temparg3 = arg3;
            var temparg4 = arg4;
            var temparg5 = arg5;
            var temparg6 = arg6;
            var temparg7 = arg7;
            var temparg8 = arg8;
            var temparg9 = arg9;
            var layouter = new __WEBPACK_IMPORTED_MODULE_14__fonts_string_layouter__["a" /* PdfStringLayouter */]();
            var result = layouter.layout(arg1, arg2, temparg9, new __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["b" /* SizeF */](temparg7, 0), this.isOverloadWithPosition, this.clientSize);
            if (!result.empty) {
                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);
                if (temparg7 <= 0) {
                    temparg5 = rect.x;
                    temparg7 = rect.width;
                }
                if (temparg8 <= 0) {
                    temparg6 = rect.y;
                    temparg8 = rect.height;
                }
                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["c" /* RectangleF */](temparg5, temparg6, temparg7, temparg8), temparg9);
                this.isEmfTextScaled = false;
                this.emfScalingFactor = new __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["b" /* SizeF */](0, 0);
            }
            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);
            this.isNormalRender = true;
            this.pdfStringLayoutResult = result;
            this.isUseFontSize = false;
        }
    };
    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {
        if (arg2 instanceof __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["a" /* PointF */]) {
            var temparg2 = arg2;
            var temparg3 = arg3;
            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);
        }
        else {
            var temparg2 = arg2;
            var temparg3 = arg3;
            var temparg4 = arg4;
            var temparg5 = arg5;
            this.stateControl(arg1, null, null);
            var sw = this.streamWriter;
            sw.beginPath(temparg2, temparg3);
            sw.appendLineSegment(temparg4, temparg5);
            sw.strokePath();
            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);
        }
    };
    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {
        if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_3__pdf_pen__["a" /* PdfPen */] && typeof arg2 === 'number') {
            var temparg3 = arg3;
            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);
        }
        else if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_4__brushes_pdf_brush__["a" /* PdfBrush */] && typeof arg2 === 'number') {
            var temparg3 = arg3;
            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);
        }
        else {
            var temparg3 = arg3;
            var temparg4 = arg4;
            var temparg5 = arg5;
            var temparg6 = arg6;
            if (arg2 instanceof __WEBPACK_IMPORTED_MODULE_5__brushes_pdf_solid_brush__["a" /* PdfSolidBrush */] && arg2.color.isEmpty) {
                arg2 = null;
            }
            var temparg1 = arg1;
            var temparg2 = arg2;
            this.stateControl(temparg1, temparg2, null);
            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);
            this.drawPath(temparg1, temparg2, false);
        }
    };
    PdfGraphics.prototype.drawPath = function (arg1, arg2, arg3, arg4) {
        if (typeof arg3 === 'boolean') {
            var temparg3 = arg3;
            this.drawPath(arg1, arg2, __WEBPACK_IMPORTED_MODULE_0__enum__["h" /* PdfFillMode */].Winding, temparg3);
        }
        else {
            var temparg3 = arg3;
            var temparg4 = arg4;
            var isPen = arg1 != null;
            var isBrush = arg2 != null;
            var isEvenOdd = (temparg3 === __WEBPACK_IMPORTED_MODULE_0__enum__["h" /* PdfFillMode */].Alternate);
            if (isPen && isBrush) {
                this.streamWriter.fillStrokePath(isEvenOdd);
            }
            else if (!isPen && !isBrush) {
                this.streamWriter.endPath();
            }
            else if (isPen) {
                this.streamWriter.strokePath();
            }
            else {
                this.streamWriter.fillPath(isEvenOdd);
            }
        }
    };
    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {
        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {
            var size = arg1.physicalDimension;
            this.drawImage(arg1, arg2, arg3, size.width, size.height);
        }
        else {
            var temparg2 = arg2;
            var temparg3 = arg3;
            var temparg4 = arg4;
            var temparg5 = arg5;
            arg1.save();
            var matrix = new __WEBPACK_IMPORTED_MODULE_7__pdf_transformation_matrix__["a" /* PdfTransformationMatrix */]();
            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);
            this.getScaleTransform(arg4, arg5, matrix);
            this.pdfStreamWriter.write('q');
            this.pdfStreamWriter.modifyCtm(matrix);
            var resources = this.getResources.getResources();
            if (typeof this.pageLayer !== 'undefined' && this.page != null) {
                resources.document = this.page.document;
            }
            var name_2 = resources.getName(arg1);
            if (typeof this.pageLayer !== 'undefined') {
                this.page.setResources(resources);
            }
            this.pdfStreamWriter.executeObject(name_2);
            this.pdfStreamWriter.write(__WEBPACK_IMPORTED_MODULE_19__input_output_pdf_operators__["a" /* Operators */].restoreState);
            this.pdfStreamWriter.write(__WEBPACK_IMPORTED_MODULE_19__input_output_pdf_operators__["a" /* Operators */].newLine);
            var resource = this.getResources.getResources();
            resource.requireProcedureSet(this.procedureSets.imageB);
            resource.requireProcedureSet(this.procedureSets.imageC);
            resource.requireProcedureSet(this.procedureSets.imageI);
            resource.requireProcedureSet(this.procedureSets.text);
        }
    };
    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {
        var bounds;
        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {
            var line = result.lines[lineIndex];
            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);
            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);
            var lineWidth = line.width;
            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);
            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));
            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;
            var x = layoutRectangle.x + hShift;
            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent;
            var height = result.lineHeight;
            bounds = new __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["c" /* RectangleF */](x, y, width, height);
        }
        else {
            bounds = new __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["c" /* RectangleF */](0, 0, 0, 0);
        }
        return bounds;
    };
    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {
        var layoutedRectangle = new __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["c" /* RectangleF */](x, y, textSize.width, textSize.width);
        if (format != null) {
            switch (format.alignment) {
                case __WEBPACK_IMPORTED_MODULE_0__enum__["c" /* PdfTextAlignment */].Center:
                    layoutedRectangle.x -= layoutedRectangle.width / 2;
                    break;
                case __WEBPACK_IMPORTED_MODULE_0__enum__["c" /* PdfTextAlignment */].Right:
                    layoutedRectangle.x -= layoutedRectangle.width;
                    break;
            }
            switch (format.lineAlignment) {
                case __WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfVerticalAlignment */].Middle:
                    layoutedRectangle.y -= layoutedRectangle.height / 2;
                    break;
                case __WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfVerticalAlignment */].Bottom:
                    layoutedRectangle.y -= layoutedRectangle.height;
                    break;
            }
        }
        return layoutedRectangle;
    };
    PdfGraphics.prototype.setLayer = function (layer) {
        this.pageLayer = layer;
        var page = layer.page;
        if (page != null && typeof page !== 'undefined') {
            page.beginSave = this.pageSave;
        }
    };
    PdfGraphics.prototype.pageSave = function (page) {
        if (page.graphics.automaticFields != null) {
            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {
                var fieldInfo = page.graphics.automaticFields.automaticFields[i];
                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);
            }
        }
    };
    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {
        if (!result.empty) {
            this.applyStringSettings(font, pen, brush, format, layoutRectangle);
            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;
            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {
                this.pdfStreamWriter.setTextScaling(textScaling);
                this.previousTextScaling = textScaling;
            }
            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;
            var subScript = (format != null && format.subSuperScript === __WEBPACK_IMPORTED_MODULE_1__fonts_enum__["e" /* PdfSubSuperScript */].SubScript);
            var shift = 0;
            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));
            this.shift = shift;
            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);
            this.pdfStreamWriter.setLeading(+height);
            var resultHeight = 0;
            var remainingString = '';
            for (var i = 0; i < result.lines.length; i++) {
                resultHeight += result.lineHeight;
                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {
                    this.startCutIndex = i;
                    break;
                }
            }
            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {
                remainingString += result.lines[j].text;
            }
            var bounds = new __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["c" /* RectangleF */](layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);
            this.drawLayoutResult(result, font, format, layoutRectangle);
            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);
            this.isEmfPlus = false;
            this.isUseFontSize = false;
            if (this.startCutIndex !== -1) {
                var page = this.getNextPage();
                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);
            }
        }
        else {
            throw new Error('ArgumentNullException:result');
        }
    };
    PdfGraphics.prototype.getNextPage = function () {
        var section = this.currentPage.section;
        var nextPage = null;
        var index = section.indexOf(this.currentPage);
        if (index === section.count - 1) {
            nextPage = section.add();
        }
        else {
            nextPage = section.getPages()[index + 1];
        }
        return nextPage;
    };
    PdfGraphics.prototype.setClip = function (rectangle, mode) {
        if (typeof mode === 'undefined') {
            this.setClip(rectangle, __WEBPACK_IMPORTED_MODULE_0__enum__["h" /* PdfFillMode */].Winding);
        }
        else {
            this.pdfStreamWriter.appendRectangle(rectangle);
            this.pdfStreamWriter.clipPath((mode === __WEBPACK_IMPORTED_MODULE_0__enum__["h" /* PdfFillMode */].Alternate));
        }
    };
    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {
        var setLineWidth = false;
        var tm = this.getTextRenderingMode(pen, brush, format);
        this.stateControl(pen, brush, font, format);
        this.pdfStreamWriter.beginText();
        if ((tm) !== this.previousTextRenderingMode) {
            this.pdfStreamWriter.setTextRenderingMode(tm);
            this.previousTextRenderingMode = tm;
        }
        var cs = (format != null) ? format.characterSpacing : 0;
        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {
            this.pdfStreamWriter.setCharacterSpacing(cs);
            this.previousCharacterSpacing = cs;
        }
        var ws = (format != null) ? format.wordSpacing : 0;
        if (ws !== this.previousWordSpacing) {
            this.pdfStreamWriter.setWordSpacing(ws);
            this.previousWordSpacing = ws;
        }
    };
    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {
        var shift = 0;
        if (boundsHeight >= 0 && format != null && format.lineAlignment !== __WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfVerticalAlignment */].Top) {
            switch (format.lineAlignment) {
                case __WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfVerticalAlignment */].Middle:
                    shift = (boundsHeight - textHeight) / 2;
                    break;
                case __WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfVerticalAlignment */].Bottom:
                    shift = boundsHeight - textHeight;
                    break;
            }
        }
        return shift;
    };
    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {
        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);
        if (vAlignShift !== 0) {
            this.pdfStreamWriter.startNextLine(0, vAlignShift);
        }
        var lines = result.lines;
        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {
            var lineInfo = lines[i];
            var line = lineInfo.text;
            var lineWidth = lineInfo.width;
            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);
            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));
            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;
            if (hAlignShift !== 0 && !this.isEmfTextScaled) {
                this.pdfStreamWriter.startNextLine(hAlignShift, 0);
            }
            this.drawAsciiLine(lineInfo, layoutRectangle, font, format);
            if (hAlignShift !== 0 && !this.isEmfTextScaled) {
                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);
            }
            if (this.isOverloadWithPosition && lines.length > 1) {
                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);
                layoutRectangle.x = 0;
                layoutRectangle.width = this.clientSize.width;
                this.isOverloadWithPosition = false;
                this.isPointOverload = true;
            }
        }
        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);
        if (vAlignShift !== 0) {
            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));
        }
        this.pdfStreamWriter.endText();
    };
    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {
        this.justifyLine(lineInfo, layoutRectangle.width, format);
        var value = '';
        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {
            for (var i = 0; i < lineInfo.text.length; i++) {
                if (lineInfo.text[i] === '(') {
                    value += '\\\(';
                }
                else if (lineInfo.text[i] === ')') {
                    value += '\\\)';
                }
                else {
                    value += lineInfo.text[i];
                }
            }
        }
        if (value === '') {
            value = lineInfo.text;
        }
        var line = '(' + value + ')';
        this.pdfStreamWriter.showNextLineText(new __WEBPACK_IMPORTED_MODULE_10__primitives_pdf_string__["b" /* PdfString */](line));
    };
    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {
        var line = lineInfo.text;
        var lineWidth = lineInfo.width;
        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);
        var hasWordSpacing = (format != null && format.wordSpacing !== 0);
        var symbols = __WEBPACK_IMPORTED_MODULE_16__fonts_string_tokenizer__["a" /* StringTokenizer */].spaces;
        var whitespacesCount = __WEBPACK_IMPORTED_MODULE_16__fonts_string_tokenizer__["a" /* StringTokenizer */].getCharsCount(line, symbols);
        var wordSpace = 0;
        if (shouldJustify) {
            if (hasWordSpacing) {
                lineWidth -= (whitespacesCount * format.wordSpacing);
            }
            var difference = boundsWidth - lineWidth;
            wordSpace = difference / whitespacesCount;
            this.pdfStreamWriter.setWordSpacing(wordSpace);
        }
        else {
            if (hasWordSpacing) {
                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);
            }
            else {
                this.pdfStreamWriter.setWordSpacing(0);
            }
        }
        return wordSpace;
    };
    PdfGraphics.prototype.reset = function (size) {
        this.canvasSize = size;
        this.streamWriter.clear();
        this.initialize();
        this.initializeCoordinates();
    };
    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {
        var line = lineInfo.text;
        var lineWidth = lineInfo.width;
        var justifyStyle = (format != null && format.alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["c" /* PdfTextAlignment */].Justify);
        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);
        var symbols = __WEBPACK_IMPORTED_MODULE_16__fonts_string_tokenizer__["a" /* StringTokenizer */].spaces;
        var whitespacesCount = __WEBPACK_IMPORTED_MODULE_16__fonts_string_tokenizer__["a" /* StringTokenizer */].getCharsCount(line, symbols);
        var hasSpaces = (whitespacesCount > 0 && line[0] !== __WEBPACK_IMPORTED_MODULE_16__fonts_string_tokenizer__["a" /* StringTokenizer */].whiteSpace);
        var goodLineBreakStyle = ((lineInfo.lineType & __WEBPACK_IMPORTED_MODULE_14__fonts_string_layouter__["d" /* LineType */].LayoutBreak) > 0);
        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["c" /* PdfTextAlignment */].Justify));
        return shouldJustify;
    };
    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {
        if (font.underline || font.strikeout) {
            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);
            if (linePen != null) {
                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);
                var underlineYOffset = 0;
                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;
                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;
                var lines = result.lines;
                for (var i = 0, len = result.lineCount; i < len; i++) {
                    var lineInfo = lines[i];
                    var line = lineInfo.text;
                    var lineWidth = lineInfo.width;
                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);
                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));
                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;
                    var x1 = layoutRectangle.x + hShift;
                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;
                    if (font.underline) {
                        var y = underlineYOffset;
                        this.drawLine(linePen, x1, y, x2, y);
                        underlineYOffset += result.lineHeight;
                    }
                    if (font.strikeout) {
                        var y = strikeoutYOffset;
                        this.drawLine(linePen, x1, y, x2, y);
                        strikeoutYOffset += result.lineHeight;
                    }
                    if (this.isPointOverload && lines.length > 1) {
                        layoutRectangle.x = 0;
                        layoutRectangle.width = this.clientSize.width;
                    }
                }
                this.isPointOverload = false;
            }
        }
    };
    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {
        var lineWidth = font.metrics.getSize(format) / 20;
        var linePen = null;
        if (pen != null) {
            linePen = new __WEBPACK_IMPORTED_MODULE_3__pdf_pen__["a" /* PdfPen */](pen.color, lineWidth);
        }
        else if (brush != null) {
            linePen = new __WEBPACK_IMPORTED_MODULE_3__pdf_pen__["a" /* PdfPen */](brush, lineWidth);
        }
        return linePen;
    };
    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {
        var tm = __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* TextRenderingMode */].None;
        if (pen != null && brush != null) {
            tm = __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* TextRenderingMode */].FillStroke;
        }
        else if (pen != null) {
            tm = __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* TextRenderingMode */].Stroke;
        }
        else {
            tm = __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* TextRenderingMode */].Fill;
        }
        if (format != null && format.clipPath) {
            tm |= __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* TextRenderingMode */].ClipFlag;
        }
        return tm;
    };
    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {
        var lineIndent = 0;
        var firstParagraphLine = ((lineInfo.lineType & __WEBPACK_IMPORTED_MODULE_14__fonts_string_layouter__["d" /* LineType */].FirstParagraphLine) > 0);
        if (format != null && firstParagraphLine) {
            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;
            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;
        }
        return lineIndent;
    };
    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {
        var shift = 0;
        if (boundsWidth >= 0 && format != null && format.alignment !== __WEBPACK_IMPORTED_MODULE_0__enum__["c" /* PdfTextAlignment */].Left) {
            switch (format.alignment) {
                case __WEBPACK_IMPORTED_MODULE_0__enum__["c" /* PdfTextAlignment */].Center:
                    shift = (boundsWidth - lineWidth) / 2;
                    break;
                case __WEBPACK_IMPORTED_MODULE_0__enum__["c" /* PdfTextAlignment */].Right:
                    shift = boundsWidth - lineWidth;
                    break;
            }
        }
        return shift;
    };
    PdfGraphics.prototype.rightToLeft = function (format) {
        var rtl = (format != null && format.rightToLeft);
        return rtl;
    };
    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {
        if (typeof format === 'undefined') {
            this.stateControl(pen, brush, font, null);
        }
        else {
            var saveState = false;
            if (brush !== null) {
                var solidBrush = brush;
                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {
                    if (this.colorSpaceChanged === false) {
                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;
                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;
                        this.colorSpace = this.pageLayer.page.document.colorSpace;
                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;
                        this.colorSpaceChanged = true;
                    }
                }
                this.initCurrentColorSpace(this.currentColorSpace);
            }
            else if (pen != null) {
                var pdfPen = pen;
                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {
                    this.colorSpace = this.pageLayer.page.document.colorSpace;
                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;
                }
                this.initCurrentColorSpace(this.currentColorSpace);
            }
            this.penControl(pen, saveState);
            this.brushControl(brush, saveState);
            this.fontControl(font, format, saveState);
        }
    };
    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {
        var re = this.getResources.getResources();
        if (!this.bCSInitialized) {
            this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);
            this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);
            this.bCSInitialized = true;
        }
    };
    PdfGraphics.prototype.penControl = function (pen, saveState) {
        if (pen != null) {
            this.currentPen = pen;
            this.colorSpace = __WEBPACK_IMPORTED_MODULE_0__enum__["i" /* PdfColorSpace */].Rgb;
            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());
            this.currentPen = pen.clone();
        }
    };
    PdfGraphics.prototype.brushControl = function (brush, saveState) {
        if (brush != null) {
            this.currentBrush = brush;
            brush.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);
            this.currentBrush = brush;
            brush = null;
        }
    };
    PdfGraphics.prototype.fontControl = function (font, format, saveState) {
        if (font != null) {
            var curSubSuper = (format != null) ? format.subSuperScript : __WEBPACK_IMPORTED_MODULE_1__fonts_enum__["e" /* PdfSubSuperScript */].None;
            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : __WEBPACK_IMPORTED_MODULE_1__fonts_enum__["e" /* PdfSubSuperScript */].None;
            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {
                var resources = this.getResources.getResources();
                this.currentFont = font;
                this.currentStringFormat = format;
                var size = font.metrics.getSize(format);
                this.isEmfTextScaled = false;
                var fontName = resources.getName(font);
                this.pdfStreamWriter.setFont(font, fontName, size);
            }
        }
    };
    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {
        if (typeof arg2 === 'undefined') {
            this.istransparencySet = true;
            this.setTransparency(arg1, arg1, __WEBPACK_IMPORTED_MODULE_0__enum__["j" /* PdfBlendMode */].Normal);
        }
        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {
            this.setTransparency(arg1, arg2, __WEBPACK_IMPORTED_MODULE_0__enum__["j" /* PdfBlendMode */].Normal);
        }
        else {
            if (this.trasparencies == null) {
                this.trasparencies = new __WEBPACK_IMPORTED_MODULE_12__collections_object_object_pair_dictionary__["a" /* TemporaryDictionary */]();
            }
            var transp = null;
            var td = new TransparencyData(arg1, arg2, arg3);
            if (this.trasparencies.containsKey(td)) {
                transp = this.trasparencies.getValue(td);
            }
            if (transp == null) {
                transp = new __WEBPACK_IMPORTED_MODULE_13__pdf_transparency__["a" /* PdfTransparency */](arg1, arg2, arg3);
                this.trasparencies.setValue(td, transp);
            }
            var resources = this.getResources.getResources();
            var name_3 = resources.getName(transp);
            var sw = this.streamWriter;
            sw.setGraphicsState(name_3);
        }
    };
    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {
        if (x instanceof __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["c" /* RectangleF */] && typeof y === 'undefined') {
            this.clipBounds = x;
            this.pdfStreamWriter.writeComment('Clip margins.');
            this.pdfStreamWriter.appendRectangle(x);
            this.pdfStreamWriter.closePath();
            this.pdfStreamWriter.clipPath(false);
            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');
            this.translateTransform(x.x, x.y);
        }
        else if (typeof x === 'number') {
            var clipArea = new __WEBPACK_IMPORTED_MODULE_8__drawing_pdf_drawing__["c" /* RectangleF */](left, top, this.size.width - left - right, this.size.height - top - bottom);
            this.clipBounds = clipArea;
            this.pdfStreamWriter.writeComment("Clip margins.");
            this.pdfStreamWriter.appendRectangle(clipArea);
            this.pdfStreamWriter.closePath();
            this.pdfStreamWriter.clipPath(false);
            this.pdfStreamWriter.writeComment("Translate co-ordinate system.");
            this.translateTransform(x, y);
        }
    };
    PdfGraphics.prototype.updateY = function (y) {
        return -y;
    };
    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {
        var matrix = new __WEBPACK_IMPORTED_MODULE_7__pdf_transformation_matrix__["a" /* PdfTransformationMatrix */]();
        this.getTranslateTransform(offsetX, offsetY, matrix);
        this.pdfStreamWriter.modifyCtm(matrix);
        this.matrix.multiply(matrix);
    };
    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {
        input.translate(x, this.updateY(y));
        return input;
    };
    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {
        var matrix = new __WEBPACK_IMPORTED_MODULE_7__pdf_transformation_matrix__["a" /* PdfTransformationMatrix */]();
        this.getScaleTransform(scaleX, scaleY, matrix);
        this.pdfStreamWriter.modifyCtm(matrix);
        this.matrix.multiply(matrix);
    };
    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {
        if (input == null) {
            input = new __WEBPACK_IMPORTED_MODULE_7__pdf_transformation_matrix__["a" /* PdfTransformationMatrix */]();
        }
        input.scale(x, y);
        return input;
    };
    PdfGraphics.prototype.rotateTransform = function (angle) {
        var matrix = new __WEBPACK_IMPORTED_MODULE_7__pdf_transformation_matrix__["a" /* PdfTransformationMatrix */]();
        this.getRotateTransform(angle, matrix);
        this.pdfStreamWriter.modifyCtm(matrix);
        this.matrix.multiply(matrix);
    };
    PdfGraphics.prototype.initializeCoordinates = function () {
        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');
        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {
            if (this.cropBox == null) {
                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {
                    this.translateTransform(0, this.updateY(this.size.height));
                }
                else {
                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));
                }
            }
        }
    };
    PdfGraphics.prototype.getRotateTransform = function (angle, input) {
        if (input == null || typeof input === 'undefined') {
            input = new __WEBPACK_IMPORTED_MODULE_7__pdf_transformation_matrix__["a" /* PdfTransformationMatrix */]();
        }
        input.rotate(this.updateY(angle));
        return input;
    };
    PdfGraphics.prototype.save = function () {
        var state = new PdfGraphicsState(this, this.matrix.clone());
        state.brush = this.currentBrush;
        state.pen = this.currentPen;
        state.font = this.currentFont;
        state.colorSpace = this.currentColorSpace;
        state.characterSpacing = this.previousCharacterSpacing;
        state.wordSpacing = this.previousWordSpacing;
        state.textScaling = this.previousTextScaling;
        state.textRenderingMode = this.previousTextRenderingMode;
        this.graphicsState.push(state);
        this.pdfStreamWriter.saveGraphicsState();
        return state;
    };
    PdfGraphics.prototype.restore = function (state) {
        if (typeof state === 'undefined') {
            if (this.graphicsState.length > 0) {
                this.doRestoreState();
            }
        }
        else {
            if (this.graphicsState.indexOf(state) !== -1) {
                for (;;) {
                    if (this.graphicsState.length === 0) {
                        break;
                    }
                    var popState = this.doRestoreState();
                    if (popState === state) {
                        break;
                    }
                }
            }
        }
    };
    PdfGraphics.prototype.doRestoreState = function () {
        var state = this.graphicsState.pop();
        this.transformationMatrix = state.matrix;
        this.currentBrush = state.brush;
        this.currentPen = state.pen;
        this.currentFont = state.font;
        this.currentColorSpace = state.colorSpace;
        this.previousCharacterSpacing = state.characterSpacing;
        this.previousWordSpacing = state.wordSpacing;
        this.previousTextScaling = state.textScaling;
        this.previousTextRenderingMode = state.textRenderingMode;
        this.pdfStreamWriter.restoreGraphicsState();
        return state;
    };
    return PdfGraphics;
}());

PdfGraphics.pathTypesValuesMask = 0xf;
PdfGraphics.transparencyObject = false;
var GetResourceEventHandler = (function () {
    function GetResourceEventHandler(sender) {
        this.sender = sender;
    }
    GetResourceEventHandler.prototype.getResources = function () {
        return this.sender.getResources();
    };
    return GetResourceEventHandler;
}());

var PdfGraphicsState = (function () {
    function PdfGraphicsState(graphics, matrix) {
        this.internalTextRenderingMode = __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* TextRenderingMode */].Fill;
        this.internalCharacterSpacing = 0.0;
        this.internalWordSpacing = 0.0;
        this.internalTextScaling = 100.0;
        this.pdfColorSpace = __WEBPACK_IMPORTED_MODULE_0__enum__["i" /* PdfColorSpace */].Rgb;
        if (typeof graphics !== 'undefined') {
            this.pdfGraphics = graphics;
            this.transformationMatrix = matrix;
        }
    }
    Object.defineProperty(PdfGraphicsState.prototype, "graphics", {
        get: function () {
            return this.pdfGraphics;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "matrix", {
        get: function () {
            return this.transformationMatrix;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "characterSpacing", {
        get: function () {
            return this.internalCharacterSpacing;
        },
        set: function (value) {
            this.internalCharacterSpacing = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "wordSpacing", {
        get: function () {
            return this.internalWordSpacing;
        },
        set: function (value) {
            this.internalWordSpacing = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "textScaling", {
        get: function () {
            return this.internalTextScaling;
        },
        set: function (value) {
            this.internalTextScaling = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "pen", {
        get: function () {
            return this.pdfPen;
        },
        set: function (value) {
            this.pdfPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "brush", {
        get: function () {
            return this.pdfBrush;
        },
        set: function (value) {
            this.pdfBrush = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "font", {
        get: function () {
            return this.pdfFont;
        },
        set: function (value) {
            this.pdfFont = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "colorSpace", {
        get: function () {
            return this.pdfColorSpace;
        },
        set: function (value) {
            this.pdfColorSpace = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "textRenderingMode", {
        get: function () {
            return this.internalTextRenderingMode;
        },
        set: function (value) {
            this.internalTextRenderingMode = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGraphicsState;
}());

var TransparencyData = (function () {
    function TransparencyData(alphaPen, alphaBrush, blendMode) {
        this.alphaPen = alphaPen;
        this.alphaBrush = alphaBrush;
        this.blendMode = blendMode;
    }
    return TransparencyData;
}());


/***/ }),
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfPen; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pdf_color__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enum__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__brushes_pdf_brush__ = __webpack_require__(27);



var PdfPen = (function () {
    function PdfPen(arg1, arg2) {
        this.pdfColor = new __WEBPACK_IMPORTED_MODULE_0__pdf_color__["a" /* PdfColor */](0, 0, 0);
        this.dashOffsetValue = 0;
        this.penDashPattern = [0];
        this.pdfDashStyle = __WEBPACK_IMPORTED_MODULE_1__enum__["g" /* PdfDashStyle */].Solid;
        this.pdfLineCap = 0;
        this.pdfLineJoin = 0;
        this.penWidth = 1.0;
        this.internalMiterLimit = 0.0;
        this.colorSpace = __WEBPACK_IMPORTED_MODULE_1__enum__["i" /* PdfColorSpace */].Rgb;
        if (typeof arg2 === 'number') {
            this.constructor(arg1);
            this.width = arg2;
        }
        else if (typeof arg2 === 'undefined' && arg1 instanceof __WEBPACK_IMPORTED_MODULE_2__brushes_pdf_brush__["a" /* PdfBrush */]) {
            this.setBrush(arg1);
        }
        else if (typeof arg2 === 'undefined' && arg1 instanceof __WEBPACK_IMPORTED_MODULE_0__pdf_color__["a" /* PdfColor */]) {
            this.color = arg1;
        }
    }
    Object.defineProperty(PdfPen.prototype, "color", {
        get: function () {
            return this.pdfColor;
        },
        set: function (value) {
            this.pdfColor = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPen.prototype, "dashOffset", {
        get: function () {
            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {
                return 0;
            }
            else {
                return this.dashOffsetValue;
            }
        },
        set: function (value) {
            this.dashOffsetValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPen.prototype, "dashPattern", {
        get: function () {
            return this.penDashPattern;
        },
        set: function (value) {
            this.penDashPattern = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPen.prototype, "dashStyle", {
        get: function () {
            return this.pdfDashStyle;
        },
        set: function (value) {
            if (this.pdfDashStyle !== value) {
                this.pdfDashStyle = value;
                switch (this.pdfDashStyle) {
                    case __WEBPACK_IMPORTED_MODULE_1__enum__["g" /* PdfDashStyle */].Custom:
                        break;
                    case __WEBPACK_IMPORTED_MODULE_1__enum__["g" /* PdfDashStyle */].Dash:
                        this.penDashPattern = [3, 1];
                        break;
                    case __WEBPACK_IMPORTED_MODULE_1__enum__["g" /* PdfDashStyle */].Dot:
                        this.penDashPattern = [1, 1];
                        break;
                    case __WEBPACK_IMPORTED_MODULE_1__enum__["g" /* PdfDashStyle */].DashDot:
                        this.penDashPattern = [3, 1, 1, 1];
                        break;
                    case __WEBPACK_IMPORTED_MODULE_1__enum__["g" /* PdfDashStyle */].DashDotDot:
                        this.penDashPattern = [3, 1, 1, 1, 1, 1];
                        break;
                    case __WEBPACK_IMPORTED_MODULE_1__enum__["g" /* PdfDashStyle */].Solid:
                        break;
                    default:
                        this.pdfDashStyle = __WEBPACK_IMPORTED_MODULE_1__enum__["g" /* PdfDashStyle */].Solid;
                        this.penDashPattern = [0];
                        break;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPen.prototype, "lineCap", {
        get: function () {
            return this.pdfLineCap;
        },
        set: function (value) {
            this.pdfLineCap = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPen.prototype, "lineJoin", {
        get: function () {
            return this.pdfLineJoin;
        },
        set: function (value) {
            this.pdfLineJoin = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPen.prototype, "miterLimit", {
        get: function () {
            return this.internalMiterLimit;
        },
        set: function (value) {
            this.internalMiterLimit = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPen.prototype, "width", {
        get: function () {
            return this.penWidth;
        },
        set: function (value) {
            this.penWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfPen.prototype.clone = function () {
        var pen = this;
        return pen;
    };
    PdfPen.prototype.setBrush = function (brush) {
        var sBrush = brush;
        this.color = sBrush.color;
        this.pdfBrush = sBrush;
    };
    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {
        var diff = false;
        saveState = true;
        if (currentPen == null) {
            diff = true;
        }
        diff = this.dashControl(currentPen, saveState, streamWriter);
        streamWriter.setLineWidth(this.width);
        streamWriter.setLineJoin(this.lineJoin);
        streamWriter.setLineCap(this.lineCap);
        var miterLimit = this.miterLimit;
        if (miterLimit > 0) {
            streamWriter.setMiterLimit(miterLimit);
            diff = true;
        }
        var brush = this.pdfBrush;
        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);
        diff = true;
        return diff;
    };
    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {
        saveState = true;
        var lineWidth = this.width;
        var pattern = this.getPattern();
        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);
        return saveState;
    };
    PdfPen.prototype.getPattern = function () {
        var pattern = this.dashPattern;
        for (var i = 0; i < pattern.length; ++i) {
            pattern[i] *= this.width;
        }
        return pattern;
    };
    return PdfPen;
}());



/***/ }),
/* 68 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = calculateRelativeBasedPosition;
/* harmony export (immutable) */ __webpack_exports__["a"] = calculatePosition;
var elementRect;
var element;
var parentDocument;
function calculateRelativeBasedPosition(anchor, element) {
    var anchorPos = { left: 0, top: 0 };
    var tempAnchor = anchor;
    if (!anchor || !element) {
        return anchorPos;
    }
    while (element.offsetParent && anchor && element.offsetParent !== anchor) {
        anchorPos.left += anchor.offsetLeft;
        anchorPos.top += anchor.offsetTop;
        anchor = anchor.offsetParent;
    }
    anchor = tempAnchor;
    while (element.offsetParent && anchor && element.offsetParent !== anchor) {
        anchorPos.left -= anchor.scrollLeft;
        anchorPos.top -= anchor.scrollTop;
        anchor = anchor.parentElement;
    }
    return anchorPos;
}
function calculatePosition(currentElement, positionX, positionY) {
    if (!currentElement) {
        return { left: 0, top: 0 };
    }
    if (!positionX) {
        positionX = 'left';
    }
    if (!positionY) {
        positionY = 'top';
    }
    parentDocument = currentElement.ownerDocument;
    element = currentElement;
    var pos = { left: 0, top: 0 };
    return updatePosition(positionX.toLowerCase(), positionY.toLowerCase(), pos);
}
function setPosx(value, pos) {
    pos.left = value;
}
function setPosy(value, pos) {
    pos.top = value;
}
function updatePosition(posX, posY, pos) {
    elementRect = element.getBoundingClientRect();
    switch (posY + posX) {
        case 'topcenter':
            setPosx(getElementHCenter(), pos);
            setPosy(getElementTop(), pos);
            break;
        case 'topright':
            setPosx(getElementRight(), pos);
            setPosy(getElementTop(), pos);
            break;
        case 'centercenter':
            setPosx(getElementHCenter(), pos);
            setPosy(getElementVCenter(), pos);
            break;
        case 'centerright':
            setPosx(getElementRight(), pos);
            setPosy(getElementVCenter(), pos);
            break;
        case 'centerleft':
            setPosx(getElementLeft(), pos);
            setPosy(getElementVCenter(), pos);
            break;
        case 'bottomcenter':
            setPosx(getElementHCenter(), pos);
            setPosy(getElementBottom(), pos);
            break;
        case 'bottomright':
            setPosx(getElementRight(), pos);
            setPosy(getElementBottom(), pos);
            break;
        case 'bottomleft':
            setPosx(getElementLeft(), pos);
            setPosy(getElementBottom(), pos);
            break;
        default:
        case 'topleft':
            setPosx(getElementLeft(), pos);
            setPosy(getElementTop(), pos);
            break;
    }
    return pos;
}
function getBodyScrollTop() {
    return parentDocument.documentElement.scrollTop || parentDocument.body.scrollTop;
}
function getBodyScrollLeft() {
    return parentDocument.documentElement.scrollLeft || parentDocument.body.scrollLeft;
}
function getElementBottom() {
    return elementRect.bottom + getBodyScrollTop();
}
function getElementVCenter() {
    return getElementTop() + (elementRect.height / 2);
}
function getElementTop() {
    return elementRect.top + getBodyScrollTop();
}
function getElementLeft() {
    return elementRect.left + getBodyScrollLeft();
}
function getElementRight() {
    return elementRect.right + getBodyScrollLeft();
}
function getElementHCenter() {
    return getElementLeft() + (elementRect.width / 2);
}


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(14), __webpack_require__(2), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_data_1, util_1, events) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Data = (function () {
        function Data(parent) {
            this.parent = parent;
            this.initDataManager();
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.rowsAdded, this.addRows, this);
            this.parent.on(events.rowsRemoved, this.removeRows, this);
            this.parent.on(events.dataSourceModified, this.initDataManager, this);
            this.parent.on(events.destroy, this.destroy, this);
            this.parent.on(events.updateData, this.crudActions, this);
            this.parent.on(events.addDeleteAction, this.getData, this);
        }
        Data.prototype.initDataManager = function () {
            var gObj = this.parent;
            this.dataManager = gObj.dataSource instanceof ej2_data_1.DataManager ? gObj.dataSource :
                (ej2_base_1.isNullOrUndefined(gObj.dataSource) ? new ej2_data_1.DataManager() : new ej2_data_1.DataManager(gObj.dataSource));
            gObj.query = gObj.query instanceof ej2_data_1.Query ? gObj.query : new ej2_data_1.Query();
        };
        Data.prototype.generateQuery = function (skipPage) {
            var gObj = this.parent;
            var query = gObj.query.clone();
            if (gObj.allowFiltering && gObj.filterSettings.columns.length) {
                var columns = gObj.filterSettings.columns;
                for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {
                    var col = columns_1[_i];
                    var sType = gObj.getColumnByField(col.field).type;
                    if (sType !== 'date' && sType !== 'datetime') {
                        query.where(col.field, col.operator, col.value, !col.matchCase);
                    }
                    else {
                        query.where(this.getDatePredicate(col));
                    }
                }
            }
            if (gObj.searchSettings.key.length) {
                var sSettings = gObj.searchSettings;
                sSettings.fields = sSettings.fields.length ? sSettings.fields : gObj.getColumnFieldNames();
                query.search(sSettings.key, sSettings.fields, sSettings.operator, sSettings.ignoreCase);
            }
            gObj.aggregates.forEach(function (row) {
                row.columns.forEach(function (column) {
                    var types = column.type instanceof Array ? column.type : [column.type];
                    types.forEach(function (type) { return query.aggregate(type, column.field); });
                });
            });
            if ((gObj.allowSorting || gObj.allowGrouping) && gObj.sortSettings.columns.length) {
                var columns = gObj.sortSettings.columns;
                var sortGrp = [];
                for (var i = columns.length - 1; i > -1; i--) {
                    if (gObj.groupSettings.columns.indexOf(columns[i].field) === -1) {
                        query.sortBy(columns[i].field, columns[i].direction);
                    }
                    else {
                        sortGrp.push(columns[i]);
                    }
                }
                for (var i = 0, len = sortGrp.length; i < len; i++) {
                    query.sortBy(sortGrp[i].field, sortGrp[i].direction);
                }
            }
            if ((gObj.allowPaging || gObj.enableVirtualization) && skipPage !== true) {
                query.page(gObj.pageSettings.currentPage, gObj.pageSettings.pageSize);
            }
            if (gObj.allowGrouping && gObj.groupSettings.columns.length) {
                var columns = gObj.groupSettings.columns;
                for (var i = 0, len = columns.length; i < len; i++) {
                    query.group(columns[i]);
                }
            }
            return query;
        };
        Data.prototype.getData = function (args, query) {
            var _this = this;
            if (args === void 0) { args = { requestType: '' }; }
            var key = this.getKey(args.foreignKeyData &&
                Object.keys(args.foreignKeyData).length ?
                args.foreignKeyData : this.parent.getPrimaryKeyFieldNames());
            switch (args.requestType) {
                case 'delete':
                    query = query ? query : this.generateQuery();
                    this.dataManager.remove(key, args.data[0], null, query);
                    break;
                case 'save':
                    query = query ? query : this.generateQuery();
                    this.dataManager.insert(args.data, null, query, 0);
                    break;
            }
            if (this.dataManager.ready) {
                var ready = this.dataManager.ready;
                ready.then(function (e) {
                    _this.dataManager = new ej2_data_1.DataManager(e.result);
                    _this.parent.refresh();
                }).catch(function (e) {
                    _this.parent.trigger(events.actionFailure, { error: e });
                });
            }
            return this.dataManager.executeQuery(query);
        };
        Data.prototype.crudActions = function (args) {
            this.generateQuery();
            var promise = null;
            var pr = 'promise';
            var key = this.getKey(args.foreignKeyData &&
                Object.keys(args.foreignKeyData).length ? args.foreignKeyData :
                this.parent.getPrimaryKeyFieldNames());
            switch (args.requestType) {
                case 'save':
                    promise = this.dataManager.update(key, args.data, null, this.generateQuery());
                    break;
            }
            args[pr] = promise;
            this.parent.notify(events.crudAction, args);
        };
        Data.prototype.saveChanges = function (changes, key) {
            var promise = this.dataManager.saveChanges(changes, key, null, this.generateQuery().requiresCount());
            return promise;
        };
        Data.prototype.getKey = function (keys) {
            if (keys && keys.length) {
                return keys[0];
            }
            return undefined;
        };
        Data.prototype.isRemote = function () {
            return this.dataManager.dataSource.offline !== true && this.dataManager.dataSource.url !== undefined;
        };
        Data.prototype.getDatePredicate = function (filterObject) {
            var prevDate;
            var nextDate;
            var prevObj = ej2_base_1.extend({}, util_1.getActualProperties(filterObject));
            var nextObj = ej2_base_1.extend({}, util_1.getActualProperties(filterObject));
            var value = new Date(filterObject.value);
            prevDate = new Date(value.setDate(value.getDate() - 1));
            nextDate = new Date(value.setDate(value.getDate() + 2));
            prevObj.value = prevDate;
            nextObj.value = nextDate;
            if (filterObject.operator === 'equal') {
                prevObj.operator = 'greaterthan';
                nextObj.operator = 'lessthan';
            }
            else {
                prevObj.operator = 'lessthanorequal';
                nextObj.operator = 'greaterthanorequal';
            }
            var predicateSt = new ej2_data_1.Predicate(prevObj.field, prevObj.operator, prevObj.value, false);
            var predicateEnd = new ej2_data_1.Predicate(nextObj.field, nextObj.operator, nextObj.value, false);
            return filterObject.operator === 'equal' ? predicateSt.and(predicateEnd) : predicateSt.or(predicateEnd);
        };
        Data.prototype.addRows = function (e) {
            for (var i = e.records.length; i > 0; i--) {
                this.dataManager.dataSource.json.splice(e.toIndex, 0, e.records[i - 1]);
            }
        };
        Data.prototype.removeRows = function (e) {
            var json = this.dataManager.dataSource.json;
            this.dataManager.dataSource.json = json.filter(function (value, index) { return e.indexes.indexOf(index) === -1; });
        };
        Data.prototype.destroy = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.rowsAdded, this.addRows);
            this.parent.off(events.rowsRemoved, this.removeRows);
            this.parent.off(events.dataSourceModified, this.initDataManager);
            this.parent.off(events.dataSourceModified, this.destroy);
            this.parent.off(events.updateData, this.crudActions);
            this.parent.off(events.addDeleteAction, this.getData);
        };
        return Data;
    }());
    exports.Data = Data;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(72), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, value_formatter_1, util_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Column = (function () {
        function Column(options) {
            this.allowSorting = true;
            this.allowResizing = true;
            this.allowFiltering = true;
            this.allowGrouping = true;
            this.allowEditing = true;
            this.showInColumnChooser = true;
            ej2_base_1.merge(this, options);
            this.uid = util_1.getUid('grid-column');
            var valueFormatter = new value_formatter_1.ValueFormatter();
            if (options.format && (options.format.skeleton || options.format.format)) {
                this.setFormatter(valueFormatter.getFormatFunction(options.format));
                this.setParser(valueFormatter.getParserFunction(options.format));
            }
            if (!this.field) {
                this.allowFiltering = false;
                this.allowGrouping = false;
                this.allowSorting = false;
            }
            if (this.template) {
                this.templateFn = util_1.templateCompiler(this.template);
            }
        }
        Column.prototype.getFormatter = function () {
            return this.formatFn;
        };
        Column.prototype.setFormatter = function (value) {
            this.formatFn = value;
        };
        Column.prototype.getParser = function () {
            return this.parserFn;
        };
        Column.prototype.setParser = function (value) {
            this.parserFn = value;
        };
        Column.prototype.getColumnTemplate = function () {
            return this.templateFn;
        };
        Column.prototype.getDomSetter = function () {
            return this.disableHtmlEncode ? 'textContent' : 'innerHTML';
        };
        return Column;
    }());
    exports.Column = Column;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(2), __webpack_require__(3), __webpack_require__(35), __webpack_require__(53), __webpack_require__(120)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, util_1, events, row_renderer_1, row_model_generator_1, group_model_generator_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ContentRender = (function () {
        function ContentRender(parent, serviceLocator) {
            var _this = this;
            this.rows = [];
            this.drop = function (e) {
                _this.parent.notify(events.columnDrop, { target: e.target, droppedElement: e.droppedElement });
                ej2_base_3.remove(e.droppedElement);
            };
            this.rafCallback = function () {
                _this.ariaService.setBusy(_this.getPanel().firstChild, false);
                if (_this.parent.isDestroyed) {
                    return;
                }
                _this.parent.notify(events.contentReady, {});
                _this.parent.trigger(events.dataBound, {});
                if (_this.args) {
                    var action = (_this.args.requestType || '').toLowerCase() + '-complete';
                    _this.parent.notify(action, _this.args);
                }
            };
            this.parent = parent;
            this.serviceLocator = serviceLocator;
            this.ariaService = this.serviceLocator.getService('ariaService');
            this.generator = this.getModelGenerator();
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.columnVisibilityChanged, this.setVisible, this);
            this.parent.on(events.colGroupRefresh, this.colGroupRefresh, this);
        }
        ContentRender.prototype.renderPanel = function () {
            var gObj = this.parent;
            var div = ej2_base_3.createElement('div', { className: 'e-gridcontent' });
            var innerDiv = ej2_base_3.createElement('div', {
                className: 'e-content'
            });
            if (!ej2_base_1.Browser.isDevice) {
                innerDiv.setAttribute('tabindex', '0');
            }
            this.ariaService.setOptions(innerDiv, { busy: false });
            div.appendChild(innerDiv);
            this.setPanel(div);
            gObj.element.appendChild(div);
        };
        ContentRender.prototype.renderTable = function () {
            var contentDiv = this.getPanel();
            contentDiv.appendChild(this.createContentTable());
            this.setTable(contentDiv.querySelector('.e-table'));
            this.ariaService.setOptions(this.getTable(), {
                multiselectable: this.parent.selectionSettings.type === 'multiple'
            });
            this.initializeContentDrop();
        };
        ContentRender.prototype.createContentTable = function () {
            var innerDiv = this.getPanel().firstChild;
            var table = ej2_base_3.createElement('table', {
                className: 'e-table', attrs: {
                    cellspacing: '0.25px', role: 'grid',
                    id: this.parent.element.id + '_content_table'
                }
            });
            this.setColGroup(this.parent.element.querySelector('.e-gridheader').querySelector('colgroup').cloneNode(true));
            table.appendChild(this.getColGroup());
            table.appendChild(ej2_base_3.createElement('tbody'));
            innerDiv.appendChild(table);
            return innerDiv;
        };
        ContentRender.prototype.refreshContentRows = function (args) {
            var _this = this;
            if (args === void 0) { args = {}; }
            var gObj = this.parent;
            var dataSource = gObj.currentViewData;
            var frag = document.createDocumentFragment();
            var columns = gObj.getColumns();
            var tr;
            var row = new row_renderer_1.RowRenderer(this.serviceLocator, null, this.parent);
            this.rowElements = [];
            var modelData = this.generator.generateRows(dataSource, args);
            var tbody = this.getTable().querySelector('tbody');
            for (var i = 0, len = modelData.length; i < len; i++) {
                if (!gObj.rowTemplate) {
                    tr = row.render(modelData[i], columns);
                }
                else {
                    var elements = gObj.getRowTemplate()(ej2_base_2.extend({ index: i }, dataSource[i]));
                    for (var j = 0; j < elements.length; j++) {
                        var isTR = elements[j].nodeName.toLowerCase() === 'tr';
                        if (isTR || (elements[j].querySelectorAll && elements[j].querySelectorAll('tr').length)) {
                            tr = isTR ? elements[j] : elements[j].querySelector('tr');
                        }
                    }
                }
                frag.appendChild(tr);
                this.rows.push(modelData[i]);
                if (modelData[i].isDataRow) {
                    var td = tr.querySelectorAll('.e-rowcell:not(.e-hide)')[0];
                    if (td) {
                        td.classList.add('e-detailrowvisible');
                    }
                    this.rowElements.push(tr);
                }
                this.ariaService.setOptions(this.getTable(), { colcount: gObj.getColumns().length.toString() });
            }
            this.args = args;
            util_1.getUpdateUsingRaf(function () {
                ej2_base_3.remove(tbody);
                tbody = ej2_base_3.createElement('tbody');
                _this.appendContent(tbody, frag, args);
            }, this.rafCallback);
        };
        ContentRender.prototype.appendContent = function (tbody, frag, args) {
            tbody.appendChild(frag);
            this.getTable().appendChild(tbody);
        };
        ContentRender.prototype.getPanel = function () {
            return this.contentPanel;
        };
        ContentRender.prototype.setPanel = function (panel) {
            this.contentPanel = panel;
        };
        ContentRender.prototype.getTable = function () {
            return this.contentTable;
        };
        ContentRender.prototype.setTable = function (table) {
            this.contentTable = table;
        };
        ContentRender.prototype.getRows = function () {
            return this.rows;
        };
        ContentRender.prototype.getRowElements = function () {
            return this.rowElements;
        };
        ContentRender.prototype.setRowElements = function (elements) {
            this.rowElements = elements;
        };
        ContentRender.prototype.getColGroup = function () {
            return this.colgroup;
        };
        ContentRender.prototype.setColGroup = function (colGroup) {
            return this.colgroup = colGroup;
        };
        ContentRender.prototype.setVisible = function (columns) {
            var rows = this.getRows();
            var element;
            var testRow;
            rows.some(function (r) { if (r.isDataRow) {
                testRow = r;
            } return r.isDataRow; });
            var tasks = [];
            for (var c = 0, clen = columns.length; c < clen; c++) {
                var column = columns[c];
                var idx = this.parent.getNormalizedColumnIndex(column.uid);
                if (this.canSkip(column, testRow, idx)) {
                    continue;
                }
                var displayVal = column.visible === true ? '' : 'none';
                ej2_base_3.setStyleAttribute(this.getColGroup().childNodes[idx], { 'display': displayVal });
            }
            this.refreshContentRows({ requestType: 'refresh' });
        };
        ContentRender.prototype.colGroupRefresh = function () {
            if (this.getColGroup()) {
                var colGroup = this.getColGroup();
                colGroup.innerHTML = this.parent.element.querySelector('.e-gridheader').querySelector('colgroup').innerHTML;
                this.setColGroup(colGroup);
            }
        };
        ContentRender.prototype.initializeContentDrop = function () {
            var gObj = this.parent;
            var drop = new ej2_base_1.Droppable(gObj.getContent(), {
                accept: '.e-dragclone',
                drop: this.drop
            });
        };
        ContentRender.prototype.canSkip = function (column, row, index) {
            return ej2_base_2.isNullOrUndefined(row) ||
                ej2_base_2.isNullOrUndefined(column.visible) ||
                row.cells[index].visible === column.visible;
        };
        ContentRender.prototype.getModelGenerator = function () {
            return this.generator = this.parent.allowGrouping ? new group_model_generator_1.GroupModelGenerator(this.parent) : new row_model_generator_1.RowModelGenerator(this.parent);
        };
        ContentRender.prototype.renderEmpty = function (tbody) {
            this.getTable().appendChild(tbody);
        };
        ContentRender.prototype.setSelection = function (uid, set, clearAll) {
            this.getRows().filter(function (row) { return clearAll || uid === row.uid; })
                .forEach(function (row) { return row.isSelected = set; });
        };
        ContentRender.prototype.getRowByIndex = function (index) {
            return this.parent.getDataRows()[index];
        };
        return ContentRender;
    }());
    exports.ContentRender = ContentRender;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ValueFormatter = (function () {
        function ValueFormatter(cultureName) {
            this.intl = new ej2_base_2.Internationalization();
            if (!ej2_base_1.isNullOrUndefined(cultureName)) {
                this.intl.culture = cultureName;
            }
        }
        ValueFormatter.prototype.getFormatFunction = function (format) {
            if (format.type) {
                return this.intl.getDateFormat(format);
            }
            else {
                return this.intl.getNumberFormat(format);
            }
        };
        ValueFormatter.prototype.getParserFunction = function (format) {
            if (format.type) {
                return this.intl.getDateParser(format);
            }
            else {
                return this.intl.getNumberParser(format);
            }
        };
        ValueFormatter.prototype.fromView = function (value, format, type) {
            if (type === 'date' || type === 'datetime' || type === 'number') {
                return format(value);
            }
            else {
                return value;
            }
        };
        ValueFormatter.prototype.toView = function (value, format) {
            var result = value;
            if (!ej2_base_1.isNullOrUndefined(format) && !ej2_base_1.isNullOrUndefined(value)) {
                result = format(value);
            }
            return result;
        };
        ValueFormatter.prototype.setCulture = function (cultureName) {
            if (!ej2_base_1.isNullOrUndefined(cultureName)) {
                ej2_base_2.setCulture(cultureName);
            }
        };
        return ValueFormatter;
    }());
    exports.ValueFormatter = ValueFormatter;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ExternalMessage = (function () {
        function ExternalMessage(pagerModule) {
            this.pagerModule = pagerModule;
        }
        ExternalMessage.prototype.getModuleName = function () {
            return 'externalMessage';
        };
        ExternalMessage.prototype.render = function () {
            this.element = ej2_base_1.createElement('div', { className: 'e-pagerexternalmsg', attrs: { 'aria-label': 'Pager external message' } });
            this.pagerModule.element.appendChild(this.element);
            this.refresh();
        };
        ExternalMessage.prototype.refresh = function () {
            if (this.pagerModule.externalMessage && this.pagerModule.externalMessage.toString().length) {
                this.showMessage();
                this.element.innerHTML = this.pagerModule.externalMessage;
            }
            else {
                this.hideMessage();
            }
        };
        ExternalMessage.prototype.hideMessage = function () {
            this.element.style.display = 'none';
        };
        ExternalMessage.prototype.showMessage = function () {
            this.element.style.display = '';
        };
        ExternalMessage.prototype.destroy = function () {
            ej2_base_1.remove(this.element);
        };
        return ExternalMessage;
    }());
    exports.ExternalMessage = ExternalMessage;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(55), __webpack_require__(56)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, ej2_base_4, numeric_container_1, pager_message_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Pager = (function (_super) {
        __extends(Pager, _super);
        function Pager(options, element) {
            var _this = _super.call(this, options, element) || this;
            _this.defaultConstants = {
                currentPageInfo: '{0} of {1} pages',
                totalItemsInfo: '({0} items)',
                firstPageTooltip: 'Go to first page',
                lastPageTooltip: 'Go to last page',
                nextPageTooltip: 'Go to next page',
                previousPageTooltip: 'Go to previous page',
                nextPagerTooltip: 'Go to next pager',
                previousPagerTooltip: 'Go to previous pager',
                pagerDropDown: 'Items per page'
            };
            _this.containerModule = new numeric_container_1.NumericContainer(_this);
            _this.pagerMessageModule = new pager_message_1.PagerMessage(_this);
            return _this;
        }
        Pager.prototype.requiredModules = function () {
            var modules = [];
            if (this.enableExternalMessage) {
                modules.push({
                    member: 'externalMessage',
                    args: [this]
                });
            }
            if (this.checkpagesizes()) {
                modules.push({
                    member: 'pagerdropdown',
                    args: [this]
                });
            }
            return modules;
        };
        Pager.prototype.preRender = function () {
        };
        Pager.prototype.render = function () {
            this.initLocalization();
            this.updateRTL();
            this.totalRecordsCount = this.totalRecordsCount || 0;
            this.renderFirstPrevDivForDevice();
            this.containerModule.render();
            if (this.enablePagerMessage) {
                this.pagerMessageModule.render();
            }
            this.renderNextLastDivForDevice();
            if (this.checkpagesizes()) {
                this.pagerdropdownModule.render();
            }
            this.addAriaLabel();
            if (this.enableExternalMessage && this.externalMessageModule) {
                this.externalMessageModule.render();
            }
            this.refresh();
            this.trigger('created', { 'currentPage': this.currentPage, 'totalRecordsCount': this.totalRecordsCount });
        };
        Pager.prototype.getPersistData = function () {
            var keyEntity = ['enableExternalMessage', 'enablePagerMessage', 'currentPage', 'enableQueryString', 'pageSizes',
                'pageSize', 'pageCount', 'totalRecordsCount', 'externalMessage', 'customText', 'click', 'created', 'dropDownChanged'];
            return this.addOnPersist(keyEntity);
        };
        Pager.prototype.destroy = function () {
            _super.prototype.destroy.call(this);
            this.containerModule.destroy();
            this.pagerMessageModule.destroy();
            this.element.innerHTML = '';
        };
        Pager.prototype.getModuleName = function () {
            return 'pager';
        };
        Pager.prototype.onPropertyChanged = function (newProp, oldProp) {
            if (this.isDestroyed) {
                return;
            }
            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
                var prop = _a[_i];
                switch (prop) {
                    case 'pageCount':
                        this.containerModule.refreshNumericLinks();
                        this.containerModule.refresh();
                        break;
                    case 'currentPage':
                        if (this.checkGoToPage(newProp.currentPage, oldProp.currentPage)) {
                            this.currentPageChanged();
                        }
                        break;
                    case 'pageSize':
                    case 'totalRecordsCount':
                    case 'customText':
                        this.refresh();
                        break;
                    case 'pageSizes':
                        if (this.checkpagesizes()) {
                            this.pagerdropdownModule.destroy();
                            this.pagerdropdownModule.render();
                        }
                        this.refresh();
                        break;
                    case 'locale':
                        this.initLocalization();
                        this.refresh();
                        break;
                    case 'enableExternalMessage':
                        if (this.enableExternalMessage) {
                            this.externalMessageModule.render();
                        }
                        break;
                    case 'externalMessage':
                        if (this.externalMessageModule) {
                            this.externalMessageModule.refresh();
                        }
                        break;
                    case 'enableRtl':
                        this.updateRTL();
                        break;
                    case 'enablePagerMessage':
                        if (this.enablePagerMessage) {
                            this.pagerMessageModule.showMessage();
                        }
                        else {
                            this.pagerMessageModule.hideMessage();
                        }
                        break;
                }
            }
        };
        Pager.prototype.getLocalizedLabel = function (key) {
            return this.localeObj.getConstant(key);
        };
        Pager.prototype.goToPage = function (pageNo) {
            if (this.checkGoToPage(pageNo)) {
                this.currentPage = pageNo;
                this.dataBind();
            }
        };
        Pager.prototype.checkpagesizes = function () {
            if (this.pageSizes === true || this.pageSizes.length) {
                return true;
            }
            return false;
        };
        Pager.prototype.checkGoToPage = function (newPageNo, oldPageNo) {
            if (newPageNo !== this.currentPage) {
                this.previousPageNo = this.currentPage;
            }
            if (!ej2_base_3.isNullOrUndefined(oldPageNo)) {
                this.previousPageNo = oldPageNo;
            }
            if (this.previousPageNo !== newPageNo && (newPageNo >= 1 && newPageNo <= this.totalPages)) {
                return true;
            }
            return false;
        };
        Pager.prototype.currentPageChanged = function () {
            if (this.enableQueryString) {
                this.updateQueryString(this.currentPage);
            }
            var args = { currentPage: this.currentPage, cancel: false };
            this.trigger('click', args);
            if (!args.cancel) {
                this.refresh();
            }
        };
        Pager.prototype.refresh = function () {
            this.updateRTL();
            this.containerModule.refresh();
            if (this.enablePagerMessage) {
                this.pagerMessageModule.refresh();
            }
            if (this.enableExternalMessage && this.externalMessageModule) {
                this.externalMessageModule.refresh();
            }
        };
        Pager.prototype.updateRTL = function () {
            if (this.enableRtl) {
                this.element.classList.add('e-rtl');
            }
            else {
                this.element.classList.remove('e-rtl');
            }
        };
        Pager.prototype.initLocalization = function () {
            this.localeObj = new ej2_base_1.L10n(this.getModuleName(), this.defaultConstants, this.locale);
        };
        Pager.prototype.updateQueryString = function (value) {
            var updatedUrl = this.getUpdatedURL(window.location.href, 'page', value.toString());
            window.history.pushState({ path: updatedUrl }, '', updatedUrl);
        };
        Pager.prototype.getUpdatedURL = function (uri, key, value) {
            var regx = new RegExp('([?|&])' + key + '=.*?(&|#|$)', 'i');
            if (uri.match(regx)) {
                return uri.replace(regx, '$1' + key + '=' + value + '$2');
            }
            else {
                var hash = '';
                if (uri.indexOf('#') !== -1) {
                    hash = uri.replace(/.*#/, '#');
                    uri = uri.replace(/#.*/, '');
                }
                return uri + (uri.indexOf('?') !== -1 ? '&' : '?') + key + '=' + value + hash;
            }
        };
        Pager.prototype.renderFirstPrevDivForDevice = function () {
            this.element.appendChild(ej2_base_2.createElement('div', {
                className: 'e-mfirst e-icons e-icon-first',
                attrs: { title: this.getLocalizedLabel('firstPageTooltip'), tabindex: '-1' }
            }));
            this.element.appendChild(ej2_base_2.createElement('div', {
                className: 'e-mprev e-icons e-icon-prev',
                attrs: { title: this.getLocalizedLabel('previousPageTooltip'), tabindex: '-1' }
            }));
        };
        Pager.prototype.renderNextLastDivForDevice = function () {
            this.element.appendChild(ej2_base_2.createElement('div', {
                className: 'e-mnext e-icons e-icon-next',
                attrs: { title: this.getLocalizedLabel('nextPageTooltip'), tabindex: '-1' }
            }));
            this.element.appendChild(ej2_base_2.createElement('div', {
                className: 'e-mlast e-icons e-icon-last',
                attrs: { title: this.getLocalizedLabel('lastPageTooltip'), tabindex: '-1' }
            }));
        };
        Pager.prototype.addAriaLabel = function () {
            var _this = this;
            var classList = ['.e-mfirst', '.e-mprev', '.e-mnext', '.e-mlast'];
            if (!ej2_base_1.Browser.isDevice) {
                classList.forEach(function (value) {
                    var element = _this.element.querySelector(value);
                    element.setAttribute('aria-label', element.getAttribute('title'));
                });
            }
        };
        return Pager;
    }(ej2_base_1.Component));
    __decorate([
        ej2_base_4.Property(false)
    ], Pager.prototype, "enableQueryString", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Pager.prototype, "enableExternalMessage", void 0);
    __decorate([
        ej2_base_4.Property(true)
    ], Pager.prototype, "enablePagerMessage", void 0);
    __decorate([
        ej2_base_4.Property(12)
    ], Pager.prototype, "pageSize", void 0);
    __decorate([
        ej2_base_4.Property(10)
    ], Pager.prototype, "pageCount", void 0);
    __decorate([
        ej2_base_4.Property(1)
    ], Pager.prototype, "currentPage", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Pager.prototype, "totalRecordsCount", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Pager.prototype, "externalMessage", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Pager.prototype, "pageSizes", void 0);
    __decorate([
        ej2_base_4.Property('')
    ], Pager.prototype, "customText", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Pager.prototype, "click", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Pager.prototype, "dropDownChanged", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Pager.prototype, "created", void 0);
    Pager = __decorate([
        ej2_base_4.NotifyPropertyChanges
    ], Pager);
    exports.Pager = Pager;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(270), __webpack_require__(254), __webpack_require__(272), __webpack_require__(275), __webpack_require__(283)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, common_1, actions_1, models_1, renderer_1, services_1) {
    "use strict";
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    __export(common_1);
    __export(actions_1);
    __export(models_1);
    __export(renderer_1);
    __export(services_1);
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 76 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Ajax; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

var headerRegex = /^(.*?):[ \t]*([^\r\n]*)$/gm;
var defaultType = 'GET';
var Ajax = (function () {
    function Ajax(options, type, async) {
        this.mode = true;
        this.options = {};
        if (typeof options === 'string') {
            this.url = options;
            this.type = type ? type.toUpperCase() : defaultType;
            this.mode = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(async) ? async : true;
        }
        else if (typeof options === 'object') {
            this.options = options;
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["h" /* merge */])(this, this.options);
        }
        this.type = this.type ? this.type.toUpperCase() : defaultType;
    }
    Ajax.prototype.send = function (data) {
        var _this = this;
        this.data = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(data) ? this.data : data;
        var promise = new Promise(function (resolve, reject) {
            _this.httpRequest = new XMLHttpRequest();
            _this.httpRequest.onreadystatechange = function () { _this.stateChange(resolve, reject); };
            _this.httpRequest.open(_this.type, _this.url, _this.mode);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(_this.data)) {
                _this.httpRequest.setRequestHeader('Content-Type', _this.contentType || 'application/json; charset=utf-8');
            }
            if (_this.beforeSend) {
                _this.beforeSend();
            }
            _this.httpRequest.send(!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(_this.data) ? _this.data : null);
        });
        return promise;
    };
    Ajax.prototype.successHandler = function (data) {
        if (this.onSuccess) {
            this.onSuccess(data, this);
        }
        return data;
    };
    Ajax.prototype.failureHandler = function (reason) {
        if (this.onFailure) {
            this.onFailure(this.httpRequest);
        }
        return reason;
    };
    Ajax.prototype.stateChange = function (resolve, reject) {
        var data = this.httpRequest.responseText;
        if (this.dataType && this.dataType.toLowerCase() === 'json') {
            if (data === '') {
                data = undefined;
            }
            else {
                try {
                    data = JSON.parse(data);
                }
                catch (error) {
                }
            }
        }
        if (this.httpRequest.readyState === 4) {
            if (this.httpRequest.status === 200 || this.httpRequest.status === 304) {
                resolve(this.successHandler(data));
            }
            else {
                reject(new Error(this.failureHandler(this.httpRequest.statusText)));
            }
        }
    };
    Ajax.prototype.getResponseHeader = function (key) {
        var responseHeaders;
        var header;
        responseHeaders = {};
        var headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());
        while (headers) {
            responseHeaders[headers[1].toLowerCase()] = headers[2];
            headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());
        }
        header = responseHeaders[key.toLowerCase()];
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(header) ? null : header;
    };
    return Ajax;
}());



/***/ }),
/* 77 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Animation; });
/* harmony export (immutable) */ __webpack_exports__["b"] = rippleEffect;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return isRippleEnabled; });
/* harmony export (immutable) */ __webpack_exports__["d"] = enableRipple;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__dom__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__browser__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__event_handler__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__notify_property_change__ = __webpack_require__(12);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var Animation = Animation_1 = (function (_super) {
    __extends(Animation, _super);
    function Animation(options) {
        var _this = _super.call(this, options, undefined) || this;
        _this.easing = {
            ease: 'cubic-bezier(0.250, 0.100, 0.250, 1.000)',
            linear: 'cubic-bezier(0.250, 0.250, 0.750, 0.750)',
            easeIn: 'cubic-bezier(0.420, 0.000, 1.000, 1.000)',
            easeOut: 'cubic-bezier(0.000, 0.000, 0.580, 1.000)',
            easeInOut: 'cubic-bezier(0.420, 0.000, 0.580, 1.000)',
            elasticInOut: 'cubic-bezier(0.5,-0.58,0.38,1.81)',
            elasticIn: 'cubic-bezier(0.17,0.67,0.59,1.81)',
            elasticOut: 'cubic-bezier(0.7,-0.75,0.99,1.01)'
        };
        return _this;
    }
    Animation.prototype.animate = function (element, options) {
        options = !options ? {} : options;
        var model = this.getModel(options);
        if (typeof element === 'string') {
            var elements = Array.prototype.slice.call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__dom__["k" /* selectAll */])(element, document));
            for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
                var element_1 = elements_1[_i];
                model.element = element_1;
                Animation_1.delayAnimation(model);
            }
        }
        else {
            model.element = element;
            Animation_1.delayAnimation(model);
        }
    };
    Animation.stop = function (element, model) {
        element.style.animation = '';
        element.removeAttribute('e-animate');
        var animationId = element.getAttribute('e-animation-id');
        if (animationId) {
            var frameId = parseInt(animationId, 10);
            cancelAnimationFrame(frameId);
            element.removeAttribute('e-animation-id');
        }
        if (model && model.end) {
            model.end.call(this, model);
        }
    };
    Animation.delayAnimation = function (model) {
        if (model.delay) {
            setTimeout(function () { Animation_1.applyAnimation(model); }, model.delay);
        }
        else {
            Animation_1.applyAnimation(model);
        }
    };
    Animation.applyAnimation = function (model) {
        var _this = this;
        model.timeStamp = 0;
        var step = 0;
        var timerId = 0;
        var startTime = 0;
        var prevTimeStamp = 0;
        var duration = model.duration;
        model.element.setAttribute('e-animate', 'true');
        var startAnimation = function (timeStamp) {
            try {
                if (timeStamp) {
                    prevTimeStamp = prevTimeStamp === 0 ? timeStamp : prevTimeStamp;
                    model.timeStamp = (timeStamp + model.timeStamp) - prevTimeStamp;
                    prevTimeStamp = timeStamp;
                    if (!step && model.begin) {
                        model.begin.call(_this, model);
                    }
                    step = step + 1;
                    var avg = model.timeStamp / step;
                    if (model.timeStamp < duration && model.timeStamp + avg < duration && model.element.getAttribute('e-animate')) {
                        model.element.style.animation = model.name + ' ' + model.duration + 'ms ' + model.timingFunction;
                        if (model.progress) {
                            model.progress.call(_this, model);
                        }
                        requestAnimationFrame(startAnimation);
                    }
                    else {
                        cancelAnimationFrame(timerId);
                        model.element.removeAttribute('e-animation-id');
                        model.element.removeAttribute('e-animate');
                        model.element.style.animation = '';
                        if (model.end) {
                            model.end.call(_this, model);
                        }
                    }
                }
                else {
                    startTime = performance.now();
                    timerId = requestAnimationFrame(startAnimation);
                    model.element.setAttribute('e-animation-id', timerId.toString());
                }
            }
            catch (e) {
                cancelAnimationFrame(timerId);
                model.element.removeAttribute('e-animation-id');
                if (model.fail) {
                    model.fail.call(_this, e);
                }
            }
        };
        startAnimation();
    };
    Animation.prototype.getModel = function (options) {
        return {
            name: options.name || this.name,
            delay: options.delay || this.delay,
            duration: (options.duration !== undefined ? options.duration : this.duration),
            begin: options.begin || this.begin,
            end: options.end || this.end,
            fail: options.fail || this.fail,
            progress: options.progress || this.progress,
            timingFunction: this.easing[options.timingFunction] ? this.easing[options.timingFunction] :
                (options.timingFunction || this.easing[this.timingFunction])
        };
    };
    Animation.prototype.onPropertyChanged = function (newProp, oldProp) {
    };
    Animation.prototype.getModuleName = function () {
        return 'animation';
    };
    Animation.prototype.destroy = function () {
    };
    return Animation;
}(__WEBPACK_IMPORTED_MODULE_1__base__["a" /* Base */]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["a" /* Property */])('FadeIn')
], Animation.prototype, "name", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["a" /* Property */])(400)
], Animation.prototype, "duration", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["a" /* Property */])('ease')
], Animation.prototype, "timingFunction", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["a" /* Property */])(0)
], Animation.prototype, "delay", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["f" /* Event */])()
], Animation.prototype, "progress", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["f" /* Event */])()
], Animation.prototype, "begin", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["f" /* Event */])()
], Animation.prototype, "end", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["f" /* Event */])()
], Animation.prototype, "fail", void 0);
Animation = Animation_1 = __decorate([
    __WEBPACK_IMPORTED_MODULE_4__notify_property_change__["g" /* NotifyPropertyChanges */]
], Animation);

function rippleEffect(element, rippleOptions, done) {
    var rippleModel = getRippleModel(rippleOptions);
    if (rippleModel.rippleFlag === false || (rippleModel.rippleFlag === undefined && !isRippleEnabled)) {
        return Function;
    }
    element.setAttribute('data-ripple', 'true');
    __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].add(element, 'mousedown', rippleHandler, { parent: element, rippleOptions: rippleModel });
    __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].add(element, 'mouseup', rippleUpHandler, { parent: element, rippleOptions: rippleModel, done: done });
    __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].add(element, 'mouseleave', rippleLeaveHandler, { parent: element, rippleOptions: rippleModel });
    if (__WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].isPointer) {
        __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].add(element, 'transitionend', rippleLeaveHandler, { parent: element, rippleOptions: rippleModel });
    }
    return (function () {
        element.removeAttribute('data-ripple');
        __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].remove(element, 'mousedown', rippleHandler);
        __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].remove(element, 'mouseup', rippleUpHandler);
        __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].remove(element, 'mouseleave', rippleLeaveHandler);
        __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].remove(element, 'transitionend', rippleLeaveHandler);
    });
}
function getRippleModel(rippleOptions) {
    var rippleModel = {
        selector: rippleOptions && rippleOptions.selector ? rippleOptions.selector : null,
        ignore: rippleOptions && rippleOptions.ignore ? rippleOptions.ignore : null,
        rippleFlag: rippleOptions && rippleOptions.rippleFlag,
        isCenterRipple: rippleOptions && rippleOptions.isCenterRipple,
        duration: rippleOptions && rippleOptions.duration ? rippleOptions.duration : 350
    };
    return rippleModel;
}
function rippleHandler(e) {
    var target = (e.target);
    var selector = this.rippleOptions.selector;
    var element = selector ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__dom__["l" /* closest */])(target, selector) : target;
    if (!element || (this.rippleOptions && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__dom__["l" /* closest */])(target, this.rippleOptions.ignore))) {
        return;
    }
    var offset = element.getBoundingClientRect();
    var offsetX = e.pageX - document.body.scrollLeft;
    var offsetY = e.pageY - document.body.scrollTop;
    var pageX = Math.max(Math.abs(offsetX - offset.left), Math.abs(offsetX - offset.right));
    var pageY = Math.max(Math.abs(offsetY - offset.top), Math.abs(offsetY - offset.bottom));
    var radius = Math.sqrt(pageX * pageX + pageY * pageY);
    var diameter = radius * 2 + 'px';
    var x = offsetX - offset.left - radius;
    var y = offsetY - offset.top - radius;
    if (this.rippleOptions && this.rippleOptions.isCenterRipple) {
        x = 0;
        y = 0;
        diameter = '100%';
    }
    element.classList.add('e-ripple');
    var duration = this.rippleOptions.duration.toString();
    var styles = 'width: ' + diameter + ';height: ' + diameter + ';left: ' + x + 'px;top: ' + y + 'px;' +
        'transition-duration: ' + duration + 'ms;';
    var rippleElement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__dom__["a" /* createElement */])('div', { className: 'e-ripple-element', styles: styles });
    element.appendChild(rippleElement);
    window.getComputedStyle(rippleElement).getPropertyValue('opacity');
    rippleElement.style.transform = 'scale(1)';
    if (element !== this.parent) {
        __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].add(element, 'mouseleave', rippleLeaveHandler, { parent: this.parent, rippleOptions: this.rippleOptions });
    }
}
function rippleUpHandler(e) {
    removeRipple(e, this);
}
function rippleLeaveHandler(e) {
    removeRipple(e, this);
}
function removeRipple(e, eventArgs) {
    var duration = eventArgs.rippleOptions.duration;
    var target = (e.target);
    var selector = eventArgs.rippleOptions.selector;
    var element = selector ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__dom__["l" /* closest */])(target, selector) : target;
    if (!element || (element && element.className.indexOf('e-ripple') === -1)) {
        return;
    }
    var rippleElements = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__dom__["k" /* selectAll */])('.e-ripple-element', element);
    var rippleElement = rippleElements[rippleElements.length - 1];
    if (rippleElement) {
        rippleElement.style.opacity = '0.5';
    }
    if (eventArgs.parent !== element) {
        __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].remove(element, 'mouseleave', rippleLeaveHandler);
    }
    setTimeout(function () {
        if (rippleElement && rippleElement.parentNode) {
            rippleElement.parentNode.removeChild(rippleElement);
        }
        if (!element.getElementsByClassName('e-ripple-element').length) {
            element.classList.remove('e-ripple');
        }
        if (eventArgs.done) {
            eventArgs.done(e);
        }
    }, duration);
}
var isRippleEnabled = false;
function enableRipple(isRipple) {
    isRippleEnabled = isRipple;
    return isRippleEnabled;
}
var Animation_1;


/***/ }),
/* 78 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CanvasRenderer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

var CanvasRenderer = (function () {
    function CanvasRenderer(rootID) {
        this.rootId = rootID;
    }
    CanvasRenderer.prototype.getOptionValue = function (options, key) {
        return options[key];
    };
    CanvasRenderer.prototype.createCanvas = function (options) {
        var canvasObj = document.createElement('canvas');
        canvasObj.setAttribute('id', this.rootId + '_canvas');
        this.ctx = canvasObj.getContext('2d');
        this.canvasObj = canvasObj;
        this.setCanvasSize(options.width, options.height);
        return this.canvasObj;
    };
    CanvasRenderer.prototype.setCanvasSize = function (width, height) {
        var element = document.getElementById(this.rootId);
        var size = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(element) ? element.getBoundingClientRect() : null;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.width)) {
            this.canvasObj.setAttribute('width', width ? width.toString() : size.width.toString());
        }
        else {
            this.canvasObj.setAttribute('width', this.width.toString());
        }
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.height)) {
            this.canvasObj.setAttribute('height', height ? height.toString() : '450');
        }
        else {
            this.canvasObj.setAttribute('height', this.height.toString());
        }
    };
    CanvasRenderer.prototype.setAttributes = function (options) {
        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');
        var dashArray = this.getOptionValue(options, 'stroke-dasharray');
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(dashArray)) {
            var dashArrayString = dashArray.split(',');
            this.ctx.setLineDash([parseInt(dashArrayString[0], 10), parseInt(dashArrayString[1], 10)]);
        }
        this.ctx.strokeStyle = this.getOptionValue(options, 'stroke');
    };
    CanvasRenderer.prototype.drawLine = function (options) {
        this.ctx.save();
        this.ctx.beginPath();
        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');
        this.ctx.strokeStyle = options.stroke;
        this.ctx.moveTo(options.x1, options.y1);
        this.ctx.lineTo(options.x2, options.y2);
        this.ctx.stroke();
        this.ctx.restore();
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawRectangle = function (options) {
        var canvasCtx = this.ctx;
        var cornerRadius = options.rx;
        this.ctx.save();
        this.ctx.beginPath();
        this.ctx.globalAlpha = this.getOptionValue(options, 'opacity');
        this.setAttributes(options);
        this.ctx.rect(options.x, options.y, options.width, options.height);
        if (cornerRadius !== null && cornerRadius >= 0) {
            this.drawCornerRadius(options);
        }
        else {
            if (options.fill === 'none') {
                options.fill = 'transparent';
            }
            this.ctx.fillStyle = options.fill;
            this.ctx.fillRect(options.x, options.y, options.width, options.height);
            this.ctx.stroke();
        }
        this.ctx.restore();
        this.ctx = canvasCtx;
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawCornerRadius = function (options) {
        var cornerRadius = options.rx;
        var x = options.x;
        var y = options.y;
        var width = options.width;
        var height = options.height;
        if (options.fill === 'none') {
            options.fill = 'transparent';
        }
        this.ctx.fillStyle = options.fill;
        if (width < 2 * cornerRadius) {
            cornerRadius = width / 2;
        }
        if (height < 2 * cornerRadius) {
            cornerRadius = height / 2;
        }
        this.ctx.beginPath();
        this.ctx.moveTo(x + width - cornerRadius, y);
        this.ctx.arcTo(x + width, y, x + width, y + height, cornerRadius);
        this.ctx.arcTo(x + width, y + height, x, y + height, cornerRadius);
        this.ctx.arcTo(x, y + height, x, y, cornerRadius);
        this.ctx.arcTo(x, y, x + width, y, cornerRadius);
        this.ctx.closePath();
        this.ctx.fill();
        this.ctx.stroke();
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawPath = function (options, canvasTranslate) {
        var path = options.d;
        var dataSplit = path.split(' ');
        var borderWidth = this.getOptionValue(options, 'stroke-width');
        var canvasCtx = this.ctx;
        var flag = true;
        this.ctx.save();
        this.ctx.beginPath();
        if (canvasTranslate) {
            this.ctx.translate(canvasTranslate[0], canvasTranslate[1]);
        }
        this.ctx.globalAlpha = options.opacity ? options.opacity : this.getOptionValue(options, 'fill-opacity');
        this.setAttributes(options);
        for (var i = 0; i < dataSplit.length; i = i + 3) {
            var x1 = parseFloat(dataSplit[i + 1]);
            var y1 = parseFloat(dataSplit[i + 2]);
            switch (dataSplit[i]) {
                case 'M':
                    if (!options.innerR && !options.cx) {
                        this.ctx.moveTo(x1, y1);
                    }
                    break;
                case 'L':
                    if (!options.innerR) {
                        this.ctx.lineTo(x1, y1);
                    }
                    break;
                case 'C':
                    var c1 = parseFloat(dataSplit[i + 3]);
                    var c2 = parseFloat(dataSplit[i + 4]);
                    var c3 = parseFloat(dataSplit[i + 5]);
                    var c4 = parseFloat(dataSplit[i + 6]);
                    this.ctx.bezierCurveTo(x1, y1, c1, c2, c3, c4);
                    i = i + 4;
                    break;
                case 'A':
                    if (!options.innerR) {
                        if (options.cx) {
                            this.ctx.arc(options.cx, options.cy, options.radius, 0, 2 * Math.PI, options.counterClockWise);
                        }
                        else {
                            this.ctx.moveTo(options.x, options.y);
                            this.ctx.arc(options.x, options.y, options.radius, options.start, options.end, options.counterClockWise);
                            this.ctx.lineTo(options.x, options.y);
                        }
                    }
                    else if (flag) {
                        this.ctx.arc(options.x, options.y, options.radius, options.start, options.end, options.counterClockWise);
                        this.ctx.arc(options.x, options.y, options.innerR, options.end, options.start, !options.counterClockWise);
                        flag = false;
                    }
                    i = i + 5;
                    break;
                case 'z':
                    this.ctx.closePath();
                    break;
            }
        }
        if (options.fill !== 'none' && options.fill !== undefined) {
            this.ctx.fillStyle = options.fill;
            this.ctx.fill();
        }
        if (borderWidth > 0) {
            this.ctx.stroke();
        }
        this.ctx.restore();
        this.ctx = canvasCtx;
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawText = function (options, label) {
        var fontWeight = this.getOptionValue(options, 'font-weight');
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(fontWeight) && fontWeight.toLowerCase() === 'regular') {
            fontWeight = 'normal';
        }
        var fontSize = this.getOptionValue(options, 'font-size');
        var fontFamily = this.getOptionValue(options, 'font-family');
        var fontStyle = this.getOptionValue(options, 'font-style').toLowerCase();
        var font = (fontStyle + ' ' + fontWeight + ' ' + fontSize + ' ' + fontFamily);
        var anchor = this.getOptionValue(options, 'text-anchor');
        var opacity = options.opacity !== undefined ? options.opacity : 1;
        if (anchor === 'middle') {
            anchor = 'center';
        }
        this.ctx.save();
        this.ctx.fillStyle = options.fill;
        this.ctx.font = font;
        this.ctx.textAlign = anchor;
        this.ctx.globalAlpha = opacity;
        if (options.baseline) {
            this.ctx.textBaseline = options.baseline;
        }
        var txtlngth = 0;
        this.ctx.translate(options.x + (txtlngth / 2), options.y);
        this.ctx.rotate(options.labelRotation * Math.PI / 180);
        this.ctx.fillText(label, 0, 0);
        this.ctx.restore();
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawCircle = function (options) {
        var canvasCtx = this.ctx;
        this.ctx.save();
        this.ctx.beginPath();
        this.ctx.arc(options.cx, options.cy, options.r, 0, 2 * Math.PI);
        this.ctx.fillStyle = options.fill;
        this.ctx.globalAlpha = options.opacity;
        this.ctx.fill();
        this.setAttributes(options);
        this.ctx.stroke();
        this.ctx.restore();
        this.ctx = canvasCtx;
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawPolyline = function (options) {
        this.ctx.save();
        this.ctx.beginPath();
        var points = options.points.split(' ');
        for (var i = 0; i < points.length - 1; i++) {
            var point = points[i].split(',');
            var x = parseFloat(point[0]);
            var y = parseFloat(point[1]);
            if (i === 0) {
                this.ctx.moveTo(x, y);
            }
            else {
                this.ctx.lineTo(x, y);
            }
        }
        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');
        this.ctx.strokeStyle = options.stroke;
        this.ctx.stroke();
        this.ctx.restore();
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawEllipse = function (options) {
        var canvasCtx = this.ctx;
        var circumference = Math.max(options.rx, options.ry);
        var scaleX = options.rx / circumference;
        var scaleY = options.ry / circumference;
        this.ctx.save();
        this.ctx.beginPath();
        this.ctx.translate(options.cx, options.cy);
        this.ctx.save();
        this.ctx.scale(scaleX, scaleY);
        this.ctx.arc(0, 0, circumference, 0, 2 * Math.PI, false);
        this.ctx.fillStyle = options.fill;
        this.ctx.fill();
        this.ctx.restore();
        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');
        this.ctx.strokeStyle = options.stroke;
        this.ctx.stroke();
        this.ctx.restore();
        this.ctx = canvasCtx;
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawImage = function (options) {
        this.ctx.save();
        var imageObj = new Image();
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(options.href)) {
            imageObj.src = options.href;
            this.ctx.drawImage(imageObj, options.x, options.y, options.width, options.height);
        }
        this.ctx.restore();
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.createLinearGradient = function (colors) {
        var myGradient;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(colors[0].colorStop)) {
            myGradient = this.ctx.createLinearGradient(0, 0, 0, this.canvasObj.height);
        }
        var color = this.setGradientValues(colors, myGradient);
        return color;
    };
    CanvasRenderer.prototype.createRadialGradient = function (colors) {
        var myGradient;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(colors[0].colorStop)) {
            myGradient = this.ctx.createRadialGradient(0, 0, 0, 0, 0, this.canvasObj.height);
        }
        var colorName = this.setGradientValues(colors, myGradient);
        return colorName;
    };
    CanvasRenderer.prototype.setGradientValues = function (colors, myGradient) {
        var colorName;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(colors[0].colorStop)) {
            for (var i = 0; i <= colors.length - 1; i++) {
                var color = colors[i].color;
                var newColorStop = (colors[i].colorStop).slice(0, -1);
                var stopColor = parseInt(newColorStop, 10) / 100;
                myGradient.addColorStop(stopColor, color);
            }
            colorName = myGradient.toString();
        }
        else {
            colorName = colors[0].color.toString();
        }
        this.dataUrl = this.canvasObj.toDataURL();
        return colorName;
    };
    CanvasRenderer.prototype.setElementAttributes = function (options, element) {
        var keys = Object.keys(options);
        var values = Object.keys(options).map(function (key) { return options[key]; });
        for (var i = 0; i < keys.length; i++) {
            element.setAttribute(keys[i], values[i]);
        }
        return element;
    };
    CanvasRenderer.prototype.updateCanvasAttributes = function (options) {
        this.setElementAttributes(options, this.canvasObj);
        var ctx = this.ctx;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.dataUrl)) {
            var img_1 = new Image;
            img_1.onload = function () {
                ctx.drawImage(img_1, 0, 0);
            };
            img_1.src = this.dataUrl;
        }
    };
    return CanvasRenderer;
}());



/***/ }),
/* 79 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Component; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__module_loader__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__base__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__observer__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__child_property__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__notify_property_change__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__internationalization__ = __webpack_require__(24);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};







var Component = (function (_super) {
    __extends(Component, _super);
    function Component(options, selector) {
        var _this = _super.call(this, options, selector) || this;
        _this.needsID = false;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(_this.enableRtl)) {
            _this.setProperties({ 'enableRtl': __WEBPACK_IMPORTED_MODULE_6__internationalization__["b" /* rightToLeft */] }, true);
        }
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(_this.locale)) {
            _this.setProperties({ 'locale': __WEBPACK_IMPORTED_MODULE_6__internationalization__["d" /* defaultCulture */] }, true);
        }
        _this.moduleLoader = new __WEBPACK_IMPORTED_MODULE_1__module_loader__["a" /* ModuleLoader */](_this);
        _this.localObserver = new __WEBPACK_IMPORTED_MODULE_3__observer__["a" /* Observer */](_this);
        _this.detectFunction = new Function('args', 'var prop = Object.keys(args); if(prop.length){this[prop[0]] = args[prop[0]];}');
        __WEBPACK_IMPORTED_MODULE_6__internationalization__["a" /* onIntlChange */].on('notifyExternalChange', _this.detectFunction, _this);
        if (_this.enablePersistence) {
            window.addEventListener('unload', _this.setPersistData.bind(_this));
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(selector)) {
            _this.appendTo();
        }
        return _this;
    }
    Component.prototype.requiredModules = function () {
        return [];
    };
    ;
    Component.prototype.destroy = function () {
        if (this.isDestroyed) {
            return;
        }
        this.localObserver.destroy();
        if (this.refreshing) {
            return;
        }
        this.trigger('destroyed', { cancel: false });
        _super.prototype.destroy.call(this);
        this.moduleLoader.clean();
        __WEBPACK_IMPORTED_MODULE_6__internationalization__["a" /* onIntlChange */].off('notifyExternalChange', this.detectFunction);
        if (this.enablePersistence) {
            this.setPersistData();
        }
    };
    Component.prototype.refresh = function () {
        this.refreshing = true;
        this.destroy();
        this.clearChanges();
        this.localObserver = new __WEBPACK_IMPORTED_MODULE_3__observer__["a" /* Observer */](this);
        this.preRender();
        this.injectModules();
        this.render();
        this.refreshing = false;
    };
    Component.prototype.appendTo = function (selector) {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(selector) && typeof (selector) === 'string') {
            this.element = document.querySelector(selector);
        }
        else if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(selector)) {
            this.element = selector;
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.element)) {
            if (this.needsID && !this.element.id) {
                this.element.id = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["l" /* getUniqueID */])(this.getModuleName());
            }
            this.isProtectedOnChange = false;
            var inst = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('ej2_instances', this.element);
            if (!inst || inst.indexOf(this) === -1) {
                _super.prototype.addInstance.call(this);
            }
            this.preRender();
            if (this.enablePersistence) {
                this.mergePersistData();
            }
            this.injectModules();
            this.render();
            this.trigger('created');
        }
    };
    Component.prototype.dataBind = function () {
        this.injectModules();
        _super.prototype.dataBind.call(this);
    };
    ;
    Component.prototype.on = function (event, handler, context) {
        if (typeof event === 'string') {
            this.localObserver.on(event, handler, context);
        }
        else {
            for (var _i = 0, event_1 = event; _i < event_1.length; _i++) {
                var arg = event_1[_i];
                this.localObserver.on(arg.event, arg.handler, arg.context);
            }
        }
    };
    Component.prototype.off = function (event, handler) {
        if (typeof event === 'string') {
            this.localObserver.off(event, handler);
        }
        else {
            for (var _i = 0, event_2 = event; _i < event_2.length; _i++) {
                var arg = event_2[_i];
                this.localObserver.off(arg.event, arg.handler);
            }
        }
    };
    Component.prototype.notify = function (property, argument) {
        if (this.isDestroyed !== true) {
            this.localObserver.notify(property, argument);
        }
    };
    Component.prototype.getInjectedModules = function () {
        return this.injectedModules;
    };
    ;
    Component.Inject = function () {
        var moduleList = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            moduleList[_i] = arguments[_i];
        }
        if (!this.prototype.injectedModules) {
            this.prototype.injectedModules = [];
        }
        for (var i = 0; i < moduleList.length; i++) {
            if (this.prototype.injectedModules.indexOf(moduleList[i]) === -1) {
                this.prototype.injectedModules.push(moduleList[i]);
            }
        }
    };
    Component.prototype.injectModules = function () {
        if (this.injectedModules && this.injectedModules.length) {
            this.moduleLoader.inject(this.requiredModules(), this.injectedModules);
        }
    };
    Component.prototype.mergePersistData = function () {
        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);
        if (!(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(data) || (data === ''))) {
            this.setProperties(JSON.parse(data), true);
        }
    };
    Component.prototype.setPersistData = function () {
        window.localStorage.setItem(this.getModuleName() + this.element.id, this.getPersistData());
    };
    Component.prototype.clearTemplate = function (templateName) {
    };
    Component.prototype.addOnPersist = function (options) {
        var _this = this;
        var persistObj = {};
        for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {
            var key = options_1[_i];
            var objValue = void 0;
            objValue = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(key, this);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(objValue)) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["d" /* setValue */])(key, this.getActualProperties(objValue), persistObj);
            }
        }
        return JSON.stringify(persistObj, function (key, value) {
            return _this.getActualProperties(value);
        });
    };
    Component.prototype.getActualProperties = function (obj) {
        if (obj instanceof __WEBPACK_IMPORTED_MODULE_4__child_property__["a" /* ChildProperty */]) {
            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('properties', obj);
        }
        else {
            return obj;
        }
    };
    Component.prototype.ignoreOnPersist = function (options) {
        return JSON.stringify(this.iterateJsonProperties(this.properties, options));
    };
    Component.prototype.iterateJsonProperties = function (obj, ignoreList) {
        var newObj = {};
        var _loop_1 = function (key) {
            if (ignoreList.indexOf(key) === -1) {
                var value = obj[key];
                if (typeof value === 'object' && !(value instanceof Array)) {
                    var newList = ignoreList.filter(function (str) {
                        return new RegExp(key + '.').test(str);
                    }).map(function (str) {
                        return str.replace(key + '.', '');
                    });
                    newObj[key] = this_1.iterateJsonProperties(this_1.getActualProperties(value), newList);
                }
                else {
                    newObj[key] = value;
                }
            }
        };
        var this_1 = this;
        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {
            var key = _a[_i];
            _loop_1(key);
        }
        return newObj;
    };
    return Component;
}(__WEBPACK_IMPORTED_MODULE_2__base__["a" /* Base */]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__notify_property_change__["a" /* Property */])(false)
], Component.prototype, "enablePersistence", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__notify_property_change__["a" /* Property */])()
], Component.prototype, "enableRtl", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__notify_property_change__["a" /* Property */])()
], Component.prototype, "locale", void 0);
Component = __decorate([
    __WEBPACK_IMPORTED_MODULE_5__notify_property_change__["g" /* NotifyPropertyChanges */]
], Component);



/***/ }),
/* 80 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Position; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Draggable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__browser__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dom__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__notify_property_change__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__event_handler__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__child_property__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util__ = __webpack_require__(1);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};








var defaultPosition = { left: 0, top: 0, bottom: 0, right: 0 };
var positionProp = ['offsetLeft', 'offsetTop'];
var axisMapper = ['x', 'y'];
var axisValueMapper = ['left', 'top'];
var Position = (function (_super) {
    __extends(Position, _super);
    function Position() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Position;
}(__WEBPACK_IMPORTED_MODULE_5__child_property__["a" /* ChildProperty */]));

__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])(0)
], Position.prototype, "left", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])(0)
], Position.prototype, "top", void 0);
var Draggable = Draggable_1 = (function (_super) {
    __extends(Draggable, _super);
    function Draggable(element, options) {
        var _this = _super.call(this, options, element) || this;
        _this.dragLimit = Draggable_1.getDefaultPosition();
        _this.borderWidth = Draggable_1.getDefaultPosition();
        _this.padding = Draggable_1.getDefaultPosition();
        _this.diffX = 0;
        _this.diffY = 0;
        _this.droppables = {};
        _this.bind();
        return _this;
    }
    Draggable.prototype.bind = function () {
        this.toggleEvents();
        if (__WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].isIE) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["b" /* addClass */])([this.element], 'e-block-touch');
        }
        this.droppables[this.scope] = {};
    };
    Draggable.getDefaultPosition = function () {
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["i" /* extend */])({}, defaultPosition);
    };
    Draggable.prototype.toggleEvents = function (isUnWire) {
        var ele;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["k" /* isUndefined */])(this.handle)) {
            ele = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["j" /* select */])(this.handle, this.element);
        }
        if (isUnWire) {
            __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(ele || this.element, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchStartEvent, this.initialize);
        }
        else {
            __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].add(ele || this.element, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchStartEvent, this.initialize, this);
        }
    };
    Draggable.prototype.initialize = function (evt) {
        this.target = evt.currentTarget;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["k" /* isUndefined */])(evt.changedTouches)) {
            evt.preventDefault();
        }
        if (this.abort) {
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["j" /* isNullOrUndefined */])(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["l" /* closest */])(evt.target, this.abort))) {
                return;
            }
        }
        this.element.setAttribute('aria-grabbed', 'true');
        var intCoord = this.getCoordinates(evt);
        this.initialPosition = { x: intCoord.pageX, y: intCoord.pageY };
        if (!this.clone) {
            var pos = this.element.getBoundingClientRect();
            this.relativeXPosition = intCoord.pageX - pos.left;
            this.relativeYPosition = intCoord.pageY - pos.top;
        }
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].add(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchMoveEvent, this.intDragStart, this);
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].add(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchEndEvent, this.intDestroy, this);
        this.toggleEvents(true);
        document.body.classList.add('e-prevent-select');
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].trigger(document.documentElement, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchStartEvent, evt);
    };
    Draggable.prototype.intDragStart = function (evt) {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["k" /* isUndefined */])(evt.changedTouches) && (evt.changedTouches.length !== 1)) {
            return;
        }
        var intCordinate = this.getCoordinates(evt);
        var pos;
        var styleProp = getComputedStyle(this.element);
        this.margin = {
            left: parseInt(styleProp.marginLeft, 10),
            top: parseInt(styleProp.marginTop, 10),
            right: parseInt(styleProp.marginRight, 10),
            bottom: parseInt(styleProp.marginBottom, 10),
        };
        var element = this.element;
        if (this.clone && this.dragTarget) {
            var intClosest = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["l" /* closest */])(evt.target, this.dragTarget);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["j" /* isNullOrUndefined */])(intClosest)) {
                element = intClosest;
            }
        }
        this.offset = this.calculateParentPosition(element);
        this.position = this.getMousePosition(evt);
        var x = this.initialPosition.x - intCordinate.pageX;
        var y = this.initialPosition.y - intCordinate.pageY;
        var distance = Math.sqrt((x * x) + (y * y));
        if (distance >= this.distance) {
            var ele = this.getHelperElement(evt);
            if (!ele || __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["j" /* isNullOrUndefined */])(ele)) {
                return;
            }
            var dragTargetElement = this.helperElement = ele;
            this.parentClientRect = this.calculateParentPosition(dragTargetElement.offsetParent);
            if (this.dragStart) {
                var curTarget = this.getProperTargetElement(evt);
                this.trigger('dragStart', { event: evt, element: element, target: curTarget });
            }
            if (this.dragArea) {
                this.setDragArea();
            }
            else {
                this.dragLimit = { left: 0, right: 0, bottom: 0, top: 0 };
                this.borderWidth = { top: 0, left: 0 };
            }
            pos = { left: this.position.left - this.parentClientRect.left, top: this.position.top - this.parentClientRect.top };
            if (this.clone && !this.enableTailMode) {
                this.diffX = this.position.left - this.offset.left;
                this.diffY = this.position.top - this.offset.top;
            }
            var posValue = this.getProcessedPositionValue({ top: (pos.top - this.diffY) + 'px',
                left: (pos.left - this.diffX) + 'px' });
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["o" /* setStyleAttribute */])(dragTargetElement, {
                position: 'absolute', top: posValue.top, left: posValue.left
            });
            __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchMoveEvent, this.intDragStart);
            __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchEndEvent, this.intDestroy);
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["d" /* isVisible */])(dragTargetElement)) {
                __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].add(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchMoveEvent, this.intDrag, this);
                __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].add(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchEndEvent, this.intDragStop, this);
                this.setGlobalDroppables(false, this.element, dragTargetElement);
            }
            else {
                document.body.classList.remove('e-prevent-select');
            }
        }
    };
    Draggable.prototype.getProcessedPositionValue = function (value) {
        if (this.axis) {
            if (this.axis === 'x') {
                value.top = '0px';
            }
            else if (this.axis === 'y') {
                value.left = '0px';
            }
        }
        if (this.queryPositionInfo) {
            return this.queryPositionInfo(value);
        }
        return value;
    };
    Draggable.prototype.calculateParentPosition = function (ele) {
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["j" /* isNullOrUndefined */])(ele)) {
            return { left: 0, top: 0 };
        }
        var rect = ele.getBoundingClientRect();
        var style = getComputedStyle(ele);
        return {
            left: (rect.left + window.pageXOffset) - parseInt(style.marginLeft, 10),
            top: (rect.top + window.pageYOffset) - parseInt(style.marginTop, 10)
        };
    };
    Draggable.prototype.intDrag = function (evt) {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["k" /* isUndefined */])(evt.changedTouches) && (evt.changedTouches.length !== 1)) {
            return;
        }
        var left;
        var top;
        this.position = this.getMousePosition(evt);
        var docHeight = this.getDocumentWidthHeight('Height');
        if (docHeight < this.position.top) {
            this.position.top = docHeight;
        }
        var docWidth = this.getDocumentWidthHeight('Width');
        if (docWidth < this.position.left) {
            this.position.left = docWidth;
        }
        if (this.drag) {
            var curTarget = this.getProperTargetElement(evt);
            this.trigger('drag', { event: evt, element: this.element, target: curTarget });
        }
        var eleObj = this.checkTargetElement(evt);
        if (eleObj.target && eleObj.instance) {
            eleObj.instance.intOver(evt, eleObj.target);
            eleObj.instance.dragData[this.scope] = this.droppables[this.scope];
            this.hoverObject = eleObj;
        }
        else if (this.hoverObject) {
            this.hoverObject.instance.intOut(evt, eleObj.target);
            this.hoverObject.instance.dragData[this.scope] = null;
            this.hoverObject = null;
        }
        var helperElement = this.droppables[this.scope].helper;
        this.parentClientRect = this.calculateParentPosition(this.helperElement.offsetParent);
        var tLeft = this.parentClientRect.left;
        var tTop = this.parentClientRect.top;
        var intCoord = this.getCoordinates(evt);
        var pagex = intCoord.pageX;
        var pagey = intCoord.pageY;
        var dLeft = this.position.left - this.diffX;
        var dTop = this.position.top - this.diffY;
        if (this.dragArea) {
            var styles = getComputedStyle(helperElement);
            if (this.pageX !== pagex || this.skipDistanceCheck) {
                var helperWidth = helperElement.offsetWidth + (parseFloat(styles.marginLeft)
                    + parseFloat(styles.marginRight));
                if (this.dragLimit.left > dLeft) {
                    left = this.dragLimit.left;
                }
                else if (this.dragLimit.right < dLeft + helperWidth) {
                    left = this.dragLimit.right - helperWidth;
                }
                else {
                    left = dLeft;
                }
            }
            if (this.pageY !== pagey || this.skipDistanceCheck) {
                var helperHeight = helperElement.offsetHeight + (parseFloat(styles.marginTop)
                    + parseFloat(styles.marginBottom));
                if (this.dragLimit.top > dTop) {
                    top = this.dragLimit.top;
                }
                else if (this.dragLimit.bottom < dTop + helperHeight) {
                    top = this.dragLimit.bottom - helperHeight;
                }
                else {
                    top = dTop;
                }
            }
        }
        else {
            left = dLeft;
            top = dTop;
        }
        var iTop = tTop + this.borderWidth.top;
        var iLeft = tLeft + this.borderWidth.left;
        var dragValue = this.getProcessedPositionValue({ top: (top - iTop) + 'px', left: (left - iLeft) + 'px' });
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["o" /* setStyleAttribute */])(helperElement, { left: dragValue.left, top: dragValue.top });
        this.position.left = left;
        this.position.top = top;
        this.pageX = pagex;
        this.pageY = pagey;
    };
    Draggable.prototype.getDocumentWidthHeight = function (str) {
        var docBody = document.body;
        var docEle = document.documentElement;
        var returnValue = Math.max(docBody['scroll' + str], docEle['scroll' + str], docBody['offset' + str], docEle['offset' + str], docEle['client' + str]);
        return returnValue;
    };
    Draggable.prototype.intDragStop = function (evt) {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["k" /* isUndefined */])(evt.changedTouches) && (evt.changedTouches.length !== 1)) {
            return;
        }
        var type = ['touchend', 'pointerup', 'mouseup'];
        if (type.indexOf(evt.type) !== -1) {
            if (this.dragStop) {
                var curTarget = this.getProperTargetElement(evt);
                this.trigger('dragStop', { event: evt, element: this.element, target: curTarget, helper: this.helperElement });
            }
            this.intDestroy(evt);
        }
        else {
            this.element.setAttribute('aria-grabbed', 'false');
        }
        var eleObj = this.checkTargetElement(evt);
        if (eleObj.target && eleObj.instance) {
            eleObj.instance.dragStopCalled = true;
            eleObj.instance.dragData[this.scope] = this.droppables[this.scope];
            eleObj.instance.intDrop(evt, eleObj.target);
        }
        this.setGlobalDroppables(true);
        document.body.classList.remove('e-prevent-select');
    };
    Draggable.prototype.intDestroy = function (evt) {
        this.toggleEvents();
        document.body.classList.remove('e-prevent-select');
        this.element.setAttribute('aria-grabbed', 'false');
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchMoveEvent, this.intDragStart);
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchEndEvent, this.intDragStop);
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchEndEvent, this.intDestroy);
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchMoveEvent, this.intDrag);
    };
    Draggable.prototype.onPropertyChanged = function (newProp, oldProp) {
    };
    Draggable.prototype.getModuleName = function () {
        return 'draggable';
    };
    Draggable.prototype.setDragArea = function () {
        var eleWidthBound;
        var eleHeightBound;
        var top = 0;
        var left = 0;
        var ele;
        var type = typeof this.dragArea;
        if (type === 'string') {
            ele = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["j" /* select */])(this.dragArea);
        }
        else {
            ele = this.dragArea;
        }
        if (ele) {
            var elementArea = ele.getBoundingClientRect();
            eleWidthBound = elementArea.width ? elementArea.width : elementArea.right - elementArea.left;
            eleHeightBound = elementArea.height ? elementArea.height : elementArea.bottom - elementArea.top;
            var keys = ['Top', 'Left', 'Bottom', 'Right'];
            var styles = getComputedStyle(ele);
            for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                var tborder = styles['border' + key + 'Width'];
                var tpadding = styles['padding' + key];
                var lowerKey = key.toLowerCase();
                this.borderWidth[lowerKey] = isNaN(parseFloat(tborder)) ? 0 : parseFloat(tborder);
                this.padding[lowerKey] = isNaN(parseFloat(tpadding)) ? 0 : parseFloat(tpadding);
            }
            top = elementArea.top;
            left = elementArea.left;
            this.dragLimit.left = left + this.borderWidth.left + this.padding.left;
            this.dragLimit.top = top + this.borderWidth.top + this.padding.top;
            this.dragLimit.right = left + eleWidthBound - (this.borderWidth.right + this.padding.right);
            this.dragLimit.bottom = top + eleHeightBound - (this.borderWidth.bottom + this.padding.bottom);
        }
    };
    Draggable.prototype.getProperTargetElement = function (evt) {
        var intCoord = this.getCoordinates(evt);
        var ele;
        var prevStyle = this.helperElement.style.display || '';
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["p" /* compareElementParent */])(evt.target, this.helperElement) || evt.type.indexOf('touch') !== -1) {
            this.helperElement.style.display = 'none';
            ele = document.elementFromPoint(intCoord.clientX, intCoord.clientY);
            this.helperElement.style.display = prevStyle;
        }
        else {
            ele = evt.target;
        }
        return ele;
    };
    Draggable.prototype.getMousePosition = function (evt) {
        var intCoord = this.getCoordinates(evt);
        var pageX = this.clone ? intCoord.pageX : intCoord.pageX - this.relativeXPosition;
        var pageY = this.clone ? intCoord.pageY : intCoord.pageY - this.relativeYPosition;
        return {
            left: pageX - (this.margin.left + this.cursorAt.left),
            top: pageY - (this.margin.top + this.cursorAt.top)
        };
    };
    Draggable.prototype.getCoordinates = function (evt) {
        if (evt.type.indexOf('touch') > -1) {
            return evt.changedTouches[0];
        }
        return evt;
    };
    Draggable.prototype.getHelperElement = function (evt) {
        var element;
        if (this.clone) {
            if (this.helper) {
                element = this.helper({ sender: evt, element: this.target });
            }
            else {
                element = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["a" /* createElement */])('div', { className: 'e-drag-helper e-block-touch', innerHTML: 'Draggable' });
                document.body.appendChild(element);
            }
        }
        else {
            element = this.element;
        }
        return element;
    };
    Draggable.prototype.setGlobalDroppables = function (reset, drag, helper) {
        this.droppables[this.scope] = reset ? null : {
            draggable: drag,
            helper: helper,
            draggedElement: this.element
        };
    };
    Draggable.prototype.checkTargetElement = function (evt) {
        var target = this.getProperTargetElement(evt);
        var dropIns = this.getDropInstance(target);
        if (!dropIns && target && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["j" /* isNullOrUndefined */])(target.parentNode)) {
            var parent_1 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["l" /* closest */])(target.parentNode, '.e-droppable') || target.parentElement;
            if (parent_1) {
                dropIns = this.getDropInstance(parent_1);
            }
        }
        return { target: target, instance: dropIns };
    };
    Draggable.prototype.getDropInstance = function (ele) {
        var name = 'getModuleName';
        var drop;
        var eleInst = ele && ele.ej2_instances;
        if (eleInst) {
            for (var _i = 0, eleInst_1 = eleInst; _i < eleInst_1.length; _i++) {
                var inst = eleInst_1[_i];
                if (inst[name]() === 'droppable') {
                    drop = inst;
                    break;
                }
            }
        }
        return drop;
    };
    Draggable.prototype.destroy = function () {
        this.toggleEvents(true);
        _super.prototype.destroy.call(this);
    };
    return Draggable;
}(__WEBPACK_IMPORTED_MODULE_0__base__["a" /* Base */]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["b" /* Complex */])({}, Position)
], Draggable.prototype, "cursorAt", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])(true)
], Draggable.prototype, "clone", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])()
], Draggable.prototype, "dragArea", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["f" /* Event */])()
], Draggable.prototype, "drag", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["f" /* Event */])()
], Draggable.prototype, "dragStart", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["f" /* Event */])()
], Draggable.prototype, "dragStop", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])(1)
], Draggable.prototype, "distance", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])()
], Draggable.prototype, "handle", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])()
], Draggable.prototype, "abort", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])()
], Draggable.prototype, "helper", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])('default')
], Draggable.prototype, "scope", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])('')
], Draggable.prototype, "dragTarget", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])()
], Draggable.prototype, "axis", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])()
], Draggable.prototype, "queryPositionInfo", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])(false)
], Draggable.prototype, "enableTailMode", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])(false)
], Draggable.prototype, "skipDistanceCheck", void 0);
Draggable = Draggable_1 = __decorate([
    __WEBPACK_IMPORTED_MODULE_3__notify_property_change__["g" /* NotifyPropertyChanges */]
], Draggable);

var Draggable_1;


/***/ }),
/* 81 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Droppable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__browser__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dom__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__notify_property_change__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__event_handler__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util__ = __webpack_require__(1);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






var Droppable = (function (_super) {
    __extends(Droppable, _super);
    function Droppable(element, options) {
        var _this = _super.call(this, options, element) || this;
        _this.mouseOver = false;
        _this.dragData = {};
        _this.dragStopCalled = false;
        _this.bind();
        return _this;
    }
    Droppable.prototype.bind = function () {
        this.wireEvents();
    };
    Droppable.prototype.wireEvents = function () {
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].add(this.element, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchEndEvent, this.intDrop, this);
    };
    Droppable.prototype.onPropertyChanged = function (newProp, oldProp) {
    };
    Droppable.prototype.getModuleName = function () {
        return 'droppable';
    };
    Droppable.prototype.intOver = function (event, element) {
        if (!this.mouseOver) {
            this.trigger('over', { event: event, target: element });
            this.mouseOver = true;
        }
    };
    Droppable.prototype.intOut = function (event, element) {
        if (this.mouseOver) {
            this.trigger('out', { evt: event, target: element });
            this.mouseOver = false;
        }
    };
    Droppable.prototype.intDrop = function (evt, element) {
        if (!this.dragStopCalled) {
            return;
        }
        else {
            this.dragStopCalled = false;
        }
        var accept = true;
        var drag = this.dragData[this.scope];
        var isDrag = drag ? (drag.helper && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["d" /* isVisible */])(drag.helper)) : false;
        var area;
        if (isDrag) {
            area = this.isDropArea(evt, drag.helper, element);
            if (this.accept) {
                accept = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["q" /* matches */])(drag.helper, this.accept);
            }
        }
        if (isDrag && this.drop && area.canDrop && accept) {
            this.trigger('drop', { event: evt, target: area.target, droppedElement: drag.helper, dragData: drag });
        }
    };
    Droppable.prototype.isDropArea = function (evt, helper, element) {
        var area = { canDrop: true, target: element || evt.target };
        var isTouch = evt.type === 'touchend';
        if (isTouch || area.target === helper) {
            helper.style.display = 'none';
            var coord = isTouch ? (evt.changedTouches[0]) : evt;
            var ele = document.elementFromPoint(coord.clientX, coord.clientY);
            area.canDrop = false;
            area.canDrop = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util__["p" /* compareElementParent */])(ele, this.element);
            if (area.canDrop) {
                area.target = ele;
            }
            helper.style.display = '';
        }
        return area;
    };
    Droppable.prototype.destroy = function () {
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(this.element, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchEndEvent, this.intDrop);
        _super.prototype.destroy.call(this);
    };
    return Droppable;
}(__WEBPACK_IMPORTED_MODULE_0__base__["a" /* Base */]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])()
], Droppable.prototype, "accept", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])('default')
], Droppable.prototype, "scope", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["f" /* Event */])()
], Droppable.prototype, "drop", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["f" /* Event */])()
], Droppable.prototype, "over", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["f" /* Event */])()
], Droppable.prototype, "out", void 0);
Droppable = __decorate([
    __WEBPACK_IMPORTED_MODULE_3__notify_property_change__["g" /* NotifyPropertyChanges */]
], Droppable);



/***/ }),
/* 82 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DateParser; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__intl_base__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parser_base__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util__ = __webpack_require__(1);



var number = 'numbers';
var defNoSystem = 'defaultNumberingSystem';
var noSystem = 'numberingSystem';
var standalone = 'stand-alone';
var curWeekDay = 'curWeekDay';
var latnRegex = /^[0-9]*$/;
var abbreviateRegex = /\/MMMMM|MMMM|MMM|a|LLL|EEEEE|EEEE|E|ccc/;
var timeSetter = {
    minute: 'setMinutes',
    hour: 'setHours',
    second: 'setSeconds',
    day: 'setDate',
    month: 'setMonth'
};
var month = 'months';
var datePartMatcher = {
    'M': 'month',
    'd': 'day',
    'E': 'weekday',
    'c': 'weekday',
    'y': 'year',
    'm': 'minute',
    'h': 'hour',
    'H': 'hour',
    's': 'second',
    'L': 'month',
    'a': 'designator',
    'z': 'timeZone',
    'Z': 'timeZone',
    'G': 'era'
};
var DateParser = (function () {
    function DateParser() {
    }
    DateParser.dateParser = function (culture, option, cldr) {
        var _this = this;
        var dependable = __WEBPACK_IMPORTED_MODULE_0__intl_base__["a" /* IntlBase */].getDependables(cldr, culture);
        var numOptions = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getCurrentNumericOptions(dependable.parserObject, __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getNumberingSystem(cldr));
        var parseOptions = {};
        var resPattern = option.format || __WEBPACK_IMPORTED_MODULE_0__intl_base__["a" /* IntlBase */].getResultantPattern(option.skeleton, dependable.dateObject, option.type);
        var regexString = '';
        var hourOnly;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(resPattern)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["q" /* throwError */])('Format options or type given must be invalid');
        }
        else {
            parseOptions = { pattern: resPattern, evalposition: {} };
            var patternMatch = resPattern.match(__WEBPACK_IMPORTED_MODULE_0__intl_base__["a" /* IntlBase */].dateParseRegex) || [];
            var length_1 = patternMatch.length;
            var nRegx = numOptions.numericRegex;
            for (var i = 0; i < length_1; i++) {
                var str = patternMatch[i];
                var len = str.length;
                var char = (str[0] === 'K') ? 'h' : str[0];
                var isNumber = void 0;
                var canUpdate = void 0;
                var charKey = datePartMatcher[char];
                var optional = (len === 2) ? '' : '?';
                switch (char) {
                    case 'E':
                    case 'c':
                        var weekObject = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].reverseObject(dependable.dateObject[__WEBPACK_IMPORTED_MODULE_0__intl_base__["a" /* IntlBase */].days][standalone][__WEBPACK_IMPORTED_MODULE_0__intl_base__["a" /* IntlBase */].monthIndex[len]]);
                        regexString += '(' + Object.keys(weekObject).join('|') + ')';
                        break;
                    case 'M':
                    case 'L':
                    case 'd':
                    case 'm':
                    case 's':
                    case 'h':
                    case 'H':
                        canUpdate = true;
                        if ((char === 'M' || char === 'L') && len > 2) {
                            parseOptions[charKey] = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].reverseObject(dependable.dateObject[month][standalone][__WEBPACK_IMPORTED_MODULE_0__intl_base__["a" /* IntlBase */].monthIndex[len]]);
                            regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';
                        }
                        else {
                            isNumber = true;
                            regexString += '(' + nRegx + nRegx + optional + ')';
                        }
                        if (char === 'h') {
                            parseOptions.hour12 = true;
                        }
                        break;
                    case 'y':
                        canUpdate = isNumber = true;
                        if (len === 2) {
                            regexString += '(' + nRegx + nRegx + ')';
                        }
                        else {
                            regexString += '(' + nRegx + '{' + len + ',})';
                        }
                        break;
                    case 'a':
                        canUpdate = true;
                        parseOptions[charKey] = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].reverseObject(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["c" /* getValue */])('dayPeriods.format.wide', dependable.dateObject));
                        regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';
                        break;
                    case 'G':
                        canUpdate = true;
                        var eText = (len <= 3) ? 'eraAbbr' : (len === 4) ? 'eraNames' : 'eraNarrow';
                        parseOptions[charKey] = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].reverseObject(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["c" /* getValue */])('eras.' + eText, dependable.dateObject));
                        regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + '?)';
                        break;
                    case 'z':
                        var tval = new Date().getTimezoneOffset();
                        canUpdate = (tval !== 0);
                        parseOptions[charKey] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["c" /* getValue */])('dates.timeZoneNames', dependable.parserObject);
                        var tzone = parseOptions[charKey];
                        hourOnly = (len < 4);
                        var hpattern = hourOnly ? '+H;-H' : tzone.hourFormat;
                        regexString += '(' + this.parseTimeZoneRegx(hpattern, tzone, nRegx) + ')?';
                        break;
                    case '\'':
                        var iString = str.replace(/\'/g, '');
                        regexString += '(' + iString + ')?';
                        break;
                    default:
                        regexString += '(.)?';
                        break;
                }
                if (canUpdate) {
                    parseOptions.evalposition[charKey] = { isNumber: isNumber, pos: i + 1, hourOnly: hourOnly };
                }
                if (i === length_1 - 1 && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["j" /* isNullOrUndefined */])(regexString)) {
                    parseOptions.parserRegex = new RegExp('^' + regexString + '$');
                }
            }
        }
        return function (value) {
            var parsedDateParts = _this.internalDateParse(value, parseOptions, numOptions);
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["j" /* isNullOrUndefined */])(parsedDateParts) || !Object.keys(parsedDateParts).length) {
                return null;
            }
            return _this.getDateObject(parsedDateParts);
        };
    };
    DateParser.getDateObject = function (options, value) {
        var res = value || new Date();
        res.setMilliseconds(0);
        var tKeys = ['hour', 'minute', 'second', 'month', 'day'];
        var y = options.year;
        var desig = options.designator;
        var tzone = options.timeZone;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(y)) {
            var len = (y + '').length;
            if (len <= 2) {
                var century = Math.floor(res.getFullYear() / 100) * 100;
                y += century;
            }
            res.setFullYear(y);
        }
        for (var _i = 0, tKeys_1 = tKeys; _i < tKeys_1.length; _i++) {
            var key = tKeys_1[_i];
            var tValue = options[key];
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(tValue)) {
                if (key === 'month') {
                    tValue -= 1;
                    if (tValue < 0 || tValue > 11) {
                        return new Date('invalid');
                    }
                    var pDate = res.getDate();
                    res.setDate(1);
                    res[timeSetter[key]](tValue);
                    var lDate = new Date(res.getFullYear(), tValue + 1, 0).getDate();
                    res.setDate(pDate < lDate ? pDate : lDate);
                }
                else {
                    if (key === 'day') {
                        var lastDay = new Date(res.getFullYear(), res.getMonth() + 1, 0).getDate();
                        if ((tValue < 1 || tValue > lastDay)) {
                            return null;
                        }
                    }
                    res[timeSetter[key]](tValue);
                }
            }
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(desig)) {
            var hour = res.getHours();
            if (desig === 'pm') {
                res.setHours(hour + (hour === 12 ? 0 : 12));
            }
            else if (hour === 12) {
                res.setHours(0);
            }
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(tzone)) {
            var tzValue = tzone - res.getTimezoneOffset();
            if (tzValue !== 0) {
                res.setMinutes(res.getMinutes() + tzValue);
            }
        }
        return res;
    };
    DateParser.internalDateParse = function (value, parseOptions, num) {
        var matches = value.match(parseOptions.parserRegex);
        var retOptions = { 'hour': 0, 'minute': 0, 'second': 0 };
        var nRegx = num.numericRegex;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["j" /* isNullOrUndefined */])(matches)) {
            return null;
        }
        else {
            var props = Object.keys(parseOptions.evalposition);
            for (var _i = 0, props_1 = props; _i < props_1.length; _i++) {
                var prop = props_1[_i];
                var curObject = parseOptions.evalposition[prop];
                var matchString = matches[curObject.pos];
                if (curObject.isNumber) {
                    retOptions[prop] = this.internalNumberParser(matchString, num);
                }
                else {
                    if (prop === 'timeZone' && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(matchString)) {
                        var pos = curObject.pos;
                        var val = void 0;
                        var tmatch = matches[pos + 1];
                        var flag = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(tmatch);
                        if (curObject.hourOnly) {
                            val = this.getZoneValue(flag, tmatch, matches[pos + 4], num) * 60;
                        }
                        else {
                            val = this.getZoneValue(flag, tmatch, matches[pos + 7], num) * 60;
                            val += this.getZoneValue(flag, matches[pos + 4], matches[pos + 10], num);
                        }
                        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["j" /* isNullOrUndefined */])(val)) {
                            retOptions[prop] = val;
                        }
                    }
                    else {
                        retOptions[prop] = parseOptions[prop][matchString];
                    }
                }
            }
            if (parseOptions.hour12) {
                retOptions.hour12 = true;
            }
        }
        return retOptions;
    };
    DateParser.internalNumberParser = function (value, option) {
        value = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].convertValueParts(value, option.numberParseRegex, option.numericPair);
        if (latnRegex.test(value)) {
            return +value;
        }
        return null;
    };
    DateParser.parseTimeZoneRegx = function (hourFormat, tZone, nRegex) {
        var pattern = tZone.gmtFormat;
        var ret;
        var result;
        var cRegex = '(' + nRegex + ')' + '(' + nRegex + ')';
        var splitStr;
        ret = hourFormat.replace('+', '\\+');
        if (hourFormat.indexOf('HH') !== -1) {
            ret = ret.replace(/HH|mm/g, '(' + cRegex + ')');
        }
        else {
            ret = ret.replace(/H|m/g, '(' + cRegex + '?)');
        }
        splitStr = (ret.split(';').map(function (str) {
            return pattern.replace('{0}', str);
        }));
        ret = splitStr.join('|') + '|' + tZone.gmtZeroFormat;
        return ret;
    };
    DateParser.getZoneValue = function (flag, val1, val2, num) {
        var value = this.internalNumberParser(flag ? val1 : val2, num);
        if (flag) {
            return -value;
        }
        return value;
    };
    return DateParser;
}());



/***/ }),
/* 83 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NumberParser; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parser_base__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__intl_base__ = __webpack_require__(20);



var formatRegex = /(^[ncpa]{1})([0-1]?[0-9]|20)?$/i;
var parseRegex = /^([^0-9]*)(([0-9,]*[0-9]+)(\.[0-9]+)?)([Ee][+-]?[0-9]+)?([^0-9]*)$/;
var groupRegex = /,/g;
var latnDecimalRegex = /^[0-9]*(\.[0-9]+)?$/;
var keys = ['minusSign', 'infinity'];
var NumberParser = (function () {
    function NumberParser() {
    }
    NumberParser.numberParser = function (culture, option, cldr) {
        var _this = this;
        var dependable = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getDependables(cldr, culture, true);
        var parseOptions = { custom: true };
        var numOptions;
        if ((__WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].formatRegex.test(option.format)) || !(option.format)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(parseOptions, __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getProperNumericSkeleton(option.format || 'N'));
            parseOptions.custom = false;
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(parseOptions, __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].customFormat(option.format, null, null));
        }
        numOptions = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getCurrentNumericOptions(dependable.parserObject, __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getNumberingSystem(cldr), true);
        parseOptions.symbolRegex = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getSymbolRegex(Object.keys(numOptions.symbolMatch));
        parseOptions.infinity = numOptions.symbolNumberSystem[keys[1]];
        var symbolpattern = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getSymbolPattern(parseOptions.type, numOptions.numberSystem, dependable.numericObject, parseOptions.isAccount);
        if (symbolpattern) {
            symbolpattern = symbolpattern.replace(/\u00A4/g, __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].defaultCurrency);
            var split = symbolpattern.split(';');
            parseOptions.nData = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getFormatData(split[1] || '-' + split[0], true, '');
            parseOptions.pData = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getFormatData(split[0], true, '');
        }
        return function (value) {
            return _this.getParsedNumber(value, parseOptions, numOptions);
        };
    };
    NumberParser.getParsedNumber = function (value, options, numOptions) {
        var isNegative;
        var isPercent;
        var tempValue;
        var lead;
        var end;
        var ret;
        if (value.indexOf(options.infinity) !== -1) {
            return Infinity;
        }
        else {
            value = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].convertValueParts(value, options.symbolRegex, numOptions.symbolMatch);
            value = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].convertValueParts(value, numOptions.numberParseRegex, numOptions.numericPair);
            if (value.indexOf('.') === 0) {
                value = '0' + value;
            }
            var matches = value.match(parseRegex);
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(matches)) {
                return NaN;
            }
            lead = matches[1];
            tempValue = matches[2];
            var exponent = matches[5];
            end = matches[6];
            isNegative = options.custom ? ((lead === options.nData.nlead) && (end === options.nData.nend)) :
                ((lead.indexOf(options.nData.nlead) !== -1) && (end.indexOf(options.nData.nend) !== -1));
            isPercent = isNegative ?
                options.nData.isPercent :
                options.pData.isPercent;
            tempValue = tempValue.replace(groupRegex, '');
            if (exponent) {
                tempValue += exponent;
            }
            ret = +tempValue;
            if (options.type === 'percent' || isPercent) {
                ret = ret / 100;
            }
            if (options.custom || options.fractionDigits) {
                ret = parseFloat(ret.toFixed(options.custom ?
                    (isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits) : options.fractionDigits));
            }
            if (isNegative) {
                ret *= -1;
            }
            return ret;
        }
    };
    return NumberParser;
}());



/***/ }),
/* 84 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return KeyboardEvents; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__notify_property_change__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base__ = __webpack_require__(8);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var keyCode = {
    'backspace': 8,
    'tab': 9,
    'enter': 13,
    'shift': 16,
    'control': 17,
    'alt': 18,
    'pause': 19,
    'capslock': 20,
    'space': 32,
    'escape': 27,
    'pageup': 33,
    'pagedown': 34,
    'end': 35,
    'home': 36,
    'leftarrow': 37,
    'uparrow': 38,
    'rightarrow': 39,
    'downarrow': 40,
    'insert': 45,
    'delete': 46,
    'f1': 112,
    'f2': 113,
    'f3': 114,
    'f4': 115,
    'f5': 116,
    'f6': 117,
    'f7': 118,
    'f8': 119,
    'f9': 120,
    'f10': 121,
    'f11': 122,
    'f12': 123,
    'semicolon': 186,
    'plus': 187,
    'comma': 188,
    'minus': 189,
    'dot': 190,
    'forwardslash': 191,
    'graveaccent': 192,
    'openbracket': 219,
    'backslash': 220,
    'closebracket': 221,
    'singlequote': 222
};
var KeyboardEvents = KeyboardEvents_1 = (function (_super) {
    __extends(KeyboardEvents, _super);
    function KeyboardEvents(element, options) {
        var _this = _super.call(this, options, element) || this;
        _this.keyPressHandler = function (e) {
            var isAltKey = e.altKey;
            var isCtrlKey = e.ctrlKey;
            var isShiftKey = e.shiftKey;
            var curkeyCode = e.which;
            var keys = Object.keys(_this.keyConfigs);
            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                var key = keys_1[_i];
                var configCollection = _this.keyConfigs[key].split(',');
                for (var _a = 0, configCollection_1 = configCollection; _a < configCollection_1.length; _a++) {
                    var rconfig = configCollection_1[_a];
                    var rKeyObj = KeyboardEvents_1.getKeyConfigData(rconfig.trim());
                    if (isAltKey === rKeyObj.altKey && isCtrlKey === rKeyObj.ctrlKey &&
                        isShiftKey === rKeyObj.shiftKey && curkeyCode === rKeyObj.keyCode) {
                        e.action = key;
                        if (_this.keyAction) {
                            _this.keyAction(e);
                        }
                    }
                }
            }
        };
        _this.bind();
        return _this;
    }
    KeyboardEvents.prototype.destroy = function () {
        this.unwireEvents();
        _super.prototype.destroy.call(this);
    };
    KeyboardEvents.prototype.onPropertyChanged = function (newProp, oldProp) {
    };
    ;
    KeyboardEvents.prototype.bind = function () {
        this.wireEvents();
    };
    KeyboardEvents.prototype.getModuleName = function () {
        return 'keyboard';
    };
    KeyboardEvents.prototype.wireEvents = function () {
        this.element.addEventListener(this.eventName, this.keyPressHandler);
    };
    KeyboardEvents.prototype.unwireEvents = function () {
        this.element.removeEventListener(this.eventName, this.keyPressHandler);
    };
    KeyboardEvents.getKeyConfigData = function (config) {
        if (config in this.configCache) {
            return this.configCache[config];
        }
        var keys = config.toLowerCase().split('+');
        var keyData = {
            altKey: (keys.indexOf('alt') !== -1 ? true : false),
            ctrlKey: (keys.indexOf('ctrl') !== -1 ? true : false),
            shiftKey: (keys.indexOf('shift') !== -1 ? true : false),
            keyCode: null
        };
        if (keys[keys.length - 1].length > 1 && !!Number(keys[keys.length - 1])) {
            keyData.keyCode = Number(keys[keys.length - 1]);
        }
        else {
            keyData.keyCode = KeyboardEvents_1.getKeyCode(keys[keys.length - 1]);
        }
        KeyboardEvents_1.configCache[config] = keyData;
        return keyData;
    };
    KeyboardEvents.getKeyCode = function (keyVal) {
        return keyCode[keyVal] || keyVal.toUpperCase().charCodeAt(0);
    };
    return KeyboardEvents;
}(__WEBPACK_IMPORTED_MODULE_1__base__["a" /* Base */]));
KeyboardEvents.configCache = {};
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__notify_property_change__["a" /* Property */])({})
], KeyboardEvents.prototype, "keyConfigs", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__notify_property_change__["a" /* Property */])('keyup')
], KeyboardEvents.prototype, "eventName", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__notify_property_change__["f" /* Event */])()
], KeyboardEvents.prototype, "keyAction", void 0);
KeyboardEvents = KeyboardEvents_1 = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__notify_property_change__["g" /* NotifyPropertyChanges */]
], KeyboardEvents);

var KeyboardEvents_1;


/***/ }),
/* 85 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return L10n; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__internationalization__ = __webpack_require__(24);


var L10n = (function () {
    function L10n(controlName, localeStrings, locale) {
        this.controlName = controlName;
        this.localeStrings = localeStrings;
        this.setLocale(locale || __WEBPACK_IMPORTED_MODULE_1__internationalization__["d" /* defaultCulture */]);
    }
    L10n.prototype.setLocale = function (locale) {
        var intLocale = this.intGetControlConstant(L10n.locale, locale);
        if (!intLocale) {
            if (locale !== 'en-US') {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["q" /* throwError */])('The specified locale or controlname not found in the locale object');
            }
            else {
                this.currentLocale = this.localeStrings;
            }
        }
        else {
            this.currentLocale = intLocale;
        }
    };
    L10n.load = function (localeObject) {
        this.locale = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(this.locale, localeObject, {}, true);
    };
    L10n.prototype.getConstant = function (prop) {
        return this.currentLocale[prop] || this.localeStrings[prop] || '';
    };
    L10n.prototype.intGetControlConstant = function (curObject, locale) {
        if (curObject[locale]) {
            return curObject[locale][this.controlName];
        }
        return null;
    };
    return L10n;
}());

L10n.locale = {};


/***/ }),
/* 86 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SvgRenderer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

var SvgRenderer = (function () {
    function SvgRenderer(rootID) {
        this.svgLink = 'http://www.w3.org/2000/svg';
        this.rootId = rootID;
    }
    SvgRenderer.prototype.getOptionValue = function (options, key) {
        return options[key];
    };
    SvgRenderer.prototype.createSvg = function (options) {
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(options.id)) {
            options.id = this.rootId + '_svg';
        }
        this.svgObj = document.getElementById(options.id);
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(document.getElementById(options.id))) {
            this.svgObj = document.createElementNS(this.svgLink, 'svg');
        }
        this.svgObj = this.setElementAttributes(options, this.svgObj);
        this.setSVGSize(options.width, options.height);
        return this.svgObj;
    };
    SvgRenderer.prototype.setSVGSize = function (width, height) {
        var element = document.getElementById(this.rootId);
        var size = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(element) ? element.getBoundingClientRect() : null;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.width) || this.width <= 0) {
            this.svgObj.setAttribute('width', width ? width.toString() : size.width.toString());
        }
        else {
            this.svgObj.setAttribute('width', this.width.toString());
        }
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.height) || this.height <= 0) {
            this.svgObj.setAttribute('height', height ? height.toString() : '450');
        }
        else {
            this.svgObj.setAttribute('height', this.height.toString());
        }
    };
    SvgRenderer.prototype.drawPath = function (options) {
        var path = document.getElementById(options.id);
        if (path === null) {
            path = document.createElementNS(this.svgLink, 'path');
        }
        path = this.setElementAttributes(options, path);
        return path;
    };
    SvgRenderer.prototype.drawLine = function (options) {
        var line = document.getElementById(options.id);
        if (line === null) {
            line = document.createElementNS(this.svgLink, 'line');
        }
        line = this.setElementAttributes(options, line);
        return line;
    };
    SvgRenderer.prototype.drawRectangle = function (options) {
        var rectangle = document.getElementById(options.id);
        if (rectangle === null) {
            rectangle = document.createElementNS(this.svgLink, 'rect');
        }
        rectangle = this.setElementAttributes(options, rectangle);
        return rectangle;
    };
    SvgRenderer.prototype.drawCircle = function (options) {
        var circle = document.getElementById(options.id);
        if (circle === null) {
            circle = document.createElementNS(this.svgLink, 'circle');
        }
        circle = this.setElementAttributes(options, circle);
        return circle;
    };
    SvgRenderer.prototype.drawPolyline = function (options) {
        var polyline = document.getElementById(options.id);
        if (polyline === null) {
            polyline = document.createElementNS(this.svgLink, 'polyline');
        }
        polyline = this.setElementAttributes(options, polyline);
        return polyline;
    };
    SvgRenderer.prototype.drawEllipse = function (options) {
        var ellipse = document.getElementById(options.id);
        if (ellipse === null) {
            ellipse = document.createElementNS(this.svgLink, 'ellipse');
        }
        ellipse = this.setElementAttributes(options, ellipse);
        return ellipse;
    };
    SvgRenderer.prototype.drawPolygon = function (options) {
        var polygon = document.getElementById(options.id);
        if (polygon === null) {
            polygon = document.createElementNS(this.svgLink, 'polygon');
        }
        polygon = this.setElementAttributes(options, polygon);
        return polygon;
    };
    SvgRenderer.prototype.drawImage = function (options) {
        var img = document.createElementNS(this.svgLink, 'image');
        img.setAttributeNS(null, 'height', options.height.toString());
        img.setAttributeNS(null, 'width', options.width.toString());
        img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', options.href);
        img.setAttributeNS(null, 'x', options.x.toString());
        img.setAttributeNS(null, 'y', options.y.toString());
        img.setAttributeNS(null, 'id', options.id);
        img.setAttributeNS(null, 'visibility', options.visibility);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.getOptionValue(options, 'clip-path'))) {
            img.setAttributeNS(null, 'clip-path', this.getOptionValue(options, 'clip-path'));
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(options.preserveAspectRatio)) {
            img.setAttributeNS(null, 'preserveAspectRatio', options.preserveAspectRatio);
        }
        return img;
    };
    SvgRenderer.prototype.createText = function (options, label) {
        var text = document.createElementNS(this.svgLink, 'text');
        text = this.setElementAttributes(options, text);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(label)) {
            text.textContent = label;
        }
        return text;
    };
    SvgRenderer.prototype.createTSpan = function (options, label) {
        var tSpan = document.createElementNS(this.svgLink, 'tspan');
        tSpan = this.setElementAttributes(options, tSpan);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(label)) {
            tSpan.textContent = label;
        }
        return tSpan;
    };
    SvgRenderer.prototype.createTitle = function (text) {
        var title = document.createElementNS(this.svgLink, 'title');
        title.textContent = text;
        return title;
    };
    SvgRenderer.prototype.createDefs = function () {
        var defs = document.createElementNS(this.svgLink, 'defs');
        return defs;
    };
    SvgRenderer.prototype.createClipPath = function (options) {
        var clipPath = document.createElementNS(this.svgLink, 'clipPath');
        clipPath = this.setElementAttributes(options, clipPath);
        return clipPath;
    };
    SvgRenderer.prototype.createForeignObject = function (options) {
        var foreignObject = document.createElementNS(this.svgLink, 'foreignObject');
        foreignObject = this.setElementAttributes(options, foreignObject);
        return foreignObject;
    };
    SvgRenderer.prototype.createGroup = function (options) {
        var group = document.createElementNS(this.svgLink, 'g');
        group = this.setElementAttributes(options, group);
        return group;
    };
    SvgRenderer.prototype.createPattern = function (options, element) {
        var pattern = document.createElementNS(this.svgLink, element);
        pattern = this.setElementAttributes(options, pattern);
        return pattern;
    };
    SvgRenderer.prototype.createRadialGradient = function (colors, name, options) {
        var colorName;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(colors[0].colorStop)) {
            var newOptions = {
                'id': this.rootId + '_' + name + 'radialGradient',
                'cx': options.cx + '%',
                'cy': options.cy + '%',
                'r': options.r + '%',
                'fx': options.fx + '%',
                'fy': options.fy + '%'
            };
            this.drawGradient('radialGradient', newOptions, colors);
            colorName = 'url(#' + this.rootId + '_' + name + 'radialGradient)';
        }
        else {
            colorName = colors[0].color.toString();
        }
        return colorName;
    };
    SvgRenderer.prototype.createLinearGradient = function (colors, name, options) {
        var colorName;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(colors[0].colorStop)) {
            var newOptions = {
                'id': this.rootId + '_' + name + 'linearGradient',
                'x1': options.x1 + '%',
                'y1': options.y1 + '%',
                'x2': options.x2 + '%',
                'y2': options.y2 + '%'
            };
            this.drawGradient('linearGradient', newOptions, colors);
            colorName = 'url(#' + this.rootId + '_' + name + 'linearGradient)';
        }
        else {
            colorName = colors[0].color.toString();
        }
        return colorName;
    };
    SvgRenderer.prototype.drawGradient = function (gradientType, options, colors) {
        var defs = this.createDefs();
        var gradient = document.createElementNS(this.svgLink, gradientType);
        gradient = this.setElementAttributes(options, gradient);
        for (var i = 0; i < colors.length; i++) {
            var stop_1 = document.createElementNS(this.svgLink, 'stop');
            stop_1.setAttribute('offset', colors[i].colorStop);
            stop_1.setAttribute('stop-color', colors[i].color);
            stop_1.setAttribute('stop-opacity', '1');
            gradient.appendChild(stop_1);
        }
        defs.appendChild(gradient);
        return defs;
    };
    SvgRenderer.prototype.drawClipPath = function (options) {
        var defs = this.createDefs();
        var clipPath = this.createClipPath({ 'id': options.id });
        var rect = this.drawRectangle(options);
        clipPath.appendChild(rect);
        defs.appendChild(clipPath);
        return defs;
    };
    SvgRenderer.prototype.drawCircularClipPath = function (options) {
        var defs = this.createDefs();
        var clipPath = this.createClipPath({ 'id': options.id });
        var circle = this.drawCircle(options);
        clipPath.appendChild(circle);
        defs.appendChild(clipPath);
        return defs;
    };
    SvgRenderer.prototype.setElementAttributes = function (options, element) {
        var keys = Object.keys(options);
        for (var i = 0; i < keys.length; i++) {
            element.setAttribute(keys[i], options[keys[i]]);
        }
        return element;
    };
    return SvgRenderer;
}());



/***/ }),
/* 87 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = compile;
/* harmony export (immutable) */ __webpack_exports__["b"] = setTemplateEngine;
/* harmony export (immutable) */ __webpack_exports__["c"] = getTemplateEngine;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__template__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dom__ = __webpack_require__(11);


var HAS_ROW = /^[\n\r.]+\<tr|^\<tr/;
function compile(templateString, helper) {
    var compiler = engineObj.compile(templateString, helper);
    return function (data) {
        var result = compiler(data);
        if (typeof result === 'string') {
            var ele = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__dom__["a" /* createElement */])((HAS_ROW.test(result) ? 'table' : 'div'), { innerHTML: result });
            return ele.childNodes;
        }
        else {
            return result;
        }
    };
}
function setTemplateEngine(classObj) {
    engineObj.compile = classObj.compile;
}
function getTemplateEngine() {
    return engineObj.compile;
}
var Engine = (function () {
    function Engine() {
    }
    Engine.prototype.compile = function (templateString, helper) {
        if (helper === void 0) { helper = {}; }
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__template__["a" /* compile */])(templateString, helper);
    };
    return Engine;
}());
var engineObj = { compile: new Engine().compile };


/***/ }),
/* 88 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export expression */
/* harmony export (immutable) */ __webpack_exports__["a"] = compile;
var LINES = new RegExp('\\n|\\r|\\s\\s+', 'g');
var QUOTES = new RegExp(/'|"/g);
var IF_STMT = new RegExp('if ?\\(');
var ELSE_STMT = new RegExp('else');
var FOR_STMT = new RegExp('for ?\\(');
var IF_OR_FOR = new RegExp('(\/if|\/for)');
var CALL_FUNCTION = new RegExp('\\((.*)\\)', '');
var NOT_NUMBER = new RegExp('^[0-9]+$', 'g');
var WORD = new RegExp('[\\w"\'.\\s+]+', 'g');
var DBL_QUOTED_STR = new RegExp('"(.*?)"', 'g');
var exp = new RegExp('\\${([^}]*)}', 'g');
function expression(value) {
    if (value) {
        exp = value;
    }
    return exp;
}
function compile(template, helper) {
    var argName = 'data';
    var evalExpResult = evalExp(template, argName, helper);
    var fnCode = "var str=\"" + evalExpResult + "\"; return str;";
    var fn = new Function(argName, fnCode);
    return fn.bind(helper);
}
function evalExp(str, nameSpace, helper) {
    var localKeys = [];
    return str.replace(LINES, '').replace(DBL_QUOTED_STR, '\'$1\'').replace(exp, function (match, cnt, offset, matchStr) {
        var matches = cnt.match(CALL_FUNCTION);
        if (matches) {
            var rlStr = matches[1];
            if (IF_STMT.test(cnt)) {
                cnt = '"; ' + cnt.replace(matches[1], rlStr.replace(WORD, function (str) {
                    str = str.trim();
                    return addNameSpace(str, !(QUOTES.test(str)) && (localKeys.indexOf(str) === -1), nameSpace, localKeys);
                })) + '{ \n str = str + "';
            }
            else if (FOR_STMT.test(cnt)) {
                var rlStr_1 = matches[1].split(' of ');
                cnt = '"; ' + cnt.replace(matches[1], function (mtc) {
                    localKeys.push(rlStr_1[0]);
                    localKeys.push(rlStr_1[0] + 'Index');
                    return 'var i=0; i < ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys) + '.length; i++';
                }) + '{ \n ' + rlStr_1[0] + '= ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys)
                    + '[i]; \n var ' + rlStr_1[0] + 'Index=i; \n str = str + "';
            }
            else {
                var fnStr = cnt.split('(');
                var fNameSpace = (helper && helper.hasOwnProperty(fnStr[0]) ? 'this.' : 'global');
                fNameSpace = (/\./.test(fnStr[0]) ? '' : fNameSpace);
                cnt = '" + ' + (fNameSpace === 'global' ? '' : fNameSpace) +
                    cnt.replace(rlStr, addNameSpace(matches[1].replace(',', nameSpace + '.'), (fNameSpace === 'global' ? false : true), nameSpace, localKeys)) +
                    '+"';
            }
        }
        else if (ELSE_STMT.test(cnt)) {
            cnt = '"; ' + cnt.replace(ELSE_STMT, '} else { \n str = str + "');
        }
        else if (!!cnt.match(IF_OR_FOR)) {
            cnt = cnt.replace(IF_OR_FOR, '"; \n } \n str = str + "');
        }
        else {
            cnt = '"+' + addNameSpace(cnt, (localKeys.indexOf(cnt) === -1), nameSpace, localKeys) + '+"';
        }
        return cnt;
    });
}
function addNameSpace(str, addNS, nameSpace, ignoreList) {
    return ((addNS && !(NOT_NUMBER.test(str)) && ignoreList.indexOf(str.split('.')[0]) === -1) ? nameSpace + '.' + str : str);
}


/***/ }),
/* 89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SwipeSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Touch; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__notify_property_change__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__browser__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__base__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__child_property__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__event_handler__ = __webpack_require__(16);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






var SwipeSettings = (function (_super) {
    __extends(SwipeSettings, _super);
    function SwipeSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SwipeSettings;
}(__WEBPACK_IMPORTED_MODULE_4__child_property__["a" /* ChildProperty */]));

__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["a" /* Property */])(50)
], SwipeSettings.prototype, "swipeThresholdDistance", void 0);
var swipeRegex = /(Up|Down)/;
var Touch = (function (_super) {
    __extends(Touch, _super);
    function Touch(element, options) {
        var _this = _super.call(this, options, element) || this;
        _this.startEvent = function (evt) {
            var point = (evt.changedTouches ? evt.changedTouches[0] : evt);
            _this.isTouchMoved = false;
            _this.movedDirection = '';
            _this.startPoint = _this.lastMovedPoint = { clientX: point.clientX, clientY: point.clientY };
            _this.startEventData = point;
            _this.hScrollLocked = _this.vScrollLocked = false;
            _this.tStampStart = Date.now();
            _this.timeOutTapHold = setTimeout(function () { _this.tapHoldEvent(evt); }, _this.tapHoldThreshold);
            __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].add(_this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchMoveEvent, _this.moveEvent, _this);
            __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].add(_this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchEndEvent, _this.endEvent, _this);
        };
        _this.moveEvent = function (evt) {
            var point = evt.changedTouches ? evt.changedTouches[0] : evt;
            _this.movedPoint = point;
            _this.isTouchMoved = !(point.clientX === _this.startPoint.clientX && point.clientY === _this.startPoint.clientY);
            var eScrollArgs = {};
            if (_this.isTouchMoved) {
                clearTimeout(_this.timeOutTapHold);
                _this.calcScrollPoints(evt);
                var scrollArg = {
                    startEvents: _this.startEventData,
                    originalEvent: evt, startX: _this.startPoint.clientX,
                    startY: _this.startPoint.clientY, distanceX: _this.distanceX,
                    distanceY: _this.distanceY, scrollDirection: _this.scrollDirection,
                    velocity: _this.getVelocity(point)
                };
                eScrollArgs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(eScrollArgs, {}, scrollArg);
                _this.trigger('scroll', eScrollArgs);
                _this.lastMovedPoint = { clientX: point.clientX, clientY: point.clientY };
            }
        };
        _this.endEvent = function (evt) {
            clearTimeout(_this.timeOutTapHold);
            var point = evt;
            if (evt.changedTouches) {
                point = evt.changedTouches[0];
            }
            _this.isTouchMoved = !(point.clientX === _this.startPoint.clientX && point.clientY === _this.startPoint.clientY);
            _this.endPoint = point;
            var dblTapTriggred = false;
            var eDblTapArgs;
            var eTapArgs;
            var eSwipeArgs;
            var tDistance = _this.swipeSettings.swipeThresholdDistance;
            _this.calcPoints(evt);
            var swipeArgs = {
                originalEvent: evt,
                startEvents: _this.startEventData,
                startX: _this.startPoint.clientX,
                startY: _this.startPoint.clientY,
                distanceX: _this.distanceX, distanceY: _this.distanceY, swipeDirection: _this.movedDirection,
                velocity: _this.getVelocity(point)
            };
            if (!_this.isTouchMoved) {
                eDblTapArgs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(eDblTapArgs, _this.defaultArgs, {});
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(_this.lastTapTime) && (new Date().getTime() - _this.lastTapTime) < _this.doubleTapThreshold) {
                    clearTimeout(_this.timeOutTap);
                    dblTapTriggred = true;
                    _this.trigger('doubleTap', eDblTapArgs);
                }
                if (!dblTapTriggred) {
                    eTapArgs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(eTapArgs, _this.defaultArgs, {});
                    _this.timeOutTap = setTimeout(function () {
                        _this.trigger('tap', eTapArgs);
                    }, (typeof _this.doubleTap !== 'function' ? 0 : _this.doubleTapThreshold));
                }
            }
            else {
                eSwipeArgs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(eSwipeArgs, _this.defaultArgs, swipeArgs);
                var canTrigger = false;
                var ele = _this.element;
                var scrollBool = _this.isScrollable(ele);
                var moved = swipeRegex.test(_this.movedDirection);
                if ((tDistance < _this.distanceX && !moved) || (tDistance < _this.distanceY && moved)) {
                    if (!scrollBool) {
                        canTrigger = true;
                    }
                    else {
                        canTrigger = _this.checkSwipe(ele, moved);
                    }
                }
                if (canTrigger) {
                    _this.trigger('swipe', eSwipeArgs);
                }
            }
            _this.lastTapTime = new Date().getTime();
            __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].remove(_this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchMoveEvent, _this.moveEvent);
            __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].remove(_this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchEndEvent, _this.endEvent);
        };
        _this.bind();
        return _this;
    }
    Touch.prototype.onPropertyChanged = function (newProp, oldProp) {
    };
    Touch.prototype.bind = function () {
        this.wireEvents();
        if (__WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].isIE) {
            this.element.classList.add('e-block-touch');
        }
    };
    Touch.prototype.destroy = function () {
        this.unwireEvents();
        _super.prototype.destroy.call(this);
    };
    Touch.prototype.wireEvents = function () {
        __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].add(this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchStartEvent, this.startEvent, this);
    };
    Touch.prototype.unwireEvents = function () {
        __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].remove(this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchStartEvent, this.startEvent);
    };
    Touch.prototype.getModuleName = function () {
        return 'touch';
    };
    Touch.prototype.isScrollable = function (element) {
        var eleStyle = getComputedStyle(element);
        var style = eleStyle.overflow + eleStyle.overflowX + eleStyle.overflowY;
        if ((/(auto|scroll)/).test(style)) {
            return true;
        }
        return false;
    };
    Touch.prototype.tapHoldEvent = function (evt) {
        var eTapArgs;
        __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].remove(this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchMoveEvent, this.moveEvent);
        __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].remove(this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchEndEvent, this.endEvent);
        eTapArgs = { originalEvent: evt };
        this.trigger('tapHold', eTapArgs);
    };
    Touch.prototype.calcPoints = function (evt) {
        var point = evt.changedTouches ? evt.changedTouches[0] : evt;
        this.defaultArgs = { originalEvent: evt };
        this.distanceX = Math.abs((Math.abs(point.clientX) - Math.abs(this.startPoint.clientX)));
        this.distanceY = Math.abs((Math.abs(point.clientY) - Math.abs(this.startPoint.clientY)));
        if (this.distanceX > this.distanceY) {
            this.movedDirection = (point.clientX > this.startPoint.clientX) ? 'Right' : 'Left';
        }
        else {
            this.movedDirection = (point.clientY < this.startPoint.clientY) ? 'Up' : 'Down';
        }
    };
    Touch.prototype.calcScrollPoints = function (evt) {
        var point = evt.changedTouches ? evt.changedTouches[0] : evt;
        this.defaultArgs = { originalEvent: evt };
        this.distanceX = Math.abs((Math.abs(point.clientX) - Math.abs(this.lastMovedPoint.clientX)));
        this.distanceY = Math.abs((Math.abs(point.clientY) - Math.abs(this.lastMovedPoint.clientY)));
        if ((this.distanceX > this.distanceY || this.hScrollLocked === true) && this.vScrollLocked === false) {
            this.scrollDirection = (point.clientX > this.lastMovedPoint.clientX) ? 'Right' : 'Left';
            this.hScrollLocked = true;
        }
        else {
            this.scrollDirection = (point.clientY < this.lastMovedPoint.clientY) ? 'Up' : 'Down';
            this.vScrollLocked = true;
        }
    };
    Touch.prototype.getVelocity = function (pnt) {
        var newX = pnt.clientX;
        var newY = pnt.clientY;
        var newT = Date.now();
        var xDist = newX - this.startPoint.clientX;
        var yDist = newY - this.startPoint.clientX;
        var interval = newT - this.tStampStart;
        return Math.sqrt(xDist * xDist + yDist * yDist) / interval;
    };
    Touch.prototype.checkSwipe = function (ele, flag) {
        var keys = ['scroll', 'offset'];
        var temp = flag ? ['Height', 'Top'] : ['Width', 'Left'];
        if ((ele[keys[0] + temp[0]] <= ele[keys[1] + temp[0]])) {
            return true;
        }
        return (ele[keys[0] + temp[1]] === 0) ||
            (ele[keys[1] + temp[0]] + ele[keys[0] + temp[1]] >= ele[keys[0] + temp[0]]);
    };
    return Touch;
}(__WEBPACK_IMPORTED_MODULE_3__base__["a" /* Base */]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["f" /* Event */])()
], Touch.prototype, "tap", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["f" /* Event */])()
], Touch.prototype, "doubleTap", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["f" /* Event */])()
], Touch.prototype, "tapHold", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["f" /* Event */])()
], Touch.prototype, "swipe", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["f" /* Event */])()
], Touch.prototype, "scroll", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["a" /* Property */])(500)
], Touch.prototype, "doubleTapThreshold", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["a" /* Property */])(750)
], Touch.prototype, "tapHoldThreshold", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["b" /* Complex */])({}, SwipeSettings)
], Touch.prototype, "swipeSettings", void 0);
Touch = __decorate([
    __WEBPACK_IMPORTED_MODULE_1__notify_property_change__["g" /* NotifyPropertyChanges */]
], Touch);



/***/ }),
/* 90 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = wrapperInitialize;
/* harmony export (immutable) */ __webpack_exports__["b"] = getTextNode;
/* harmony export (immutable) */ __webpack_exports__["c"] = createCheckBox;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);


function wrapperInitialize(tag, type, element, WRAPPER) {
    if (element.tagName === tag) {
        var ejInstance = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getValue"])('ej2_instances', element);
        var input = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('input', { attrs: { 'type': type } });
        var props = ['change', 'cssClass', 'label', 'labelPosition'];
        var wrapper = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])(tag, {
            className: WRAPPER, attrs: { 'role': type, 'aria-checked': 'false' }
        });
        for (var index = 0, len = element.attributes.length; index < len; index++) {
            if (props.indexOf(element.attributes[index].nodeName) === -1) {
                input.setAttribute(element.attributes[index].nodeName, element.attributes[index].nodeValue);
            }
        }
        element.parentNode.insertBefore(input, element);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(element);
        element = input;
        element.parentNode.insertBefore(wrapper, element);
        wrapper.appendChild(element);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setValue"])('ej2_instances', ejInstance, element);
    }
    return element;
}
function getTextNode(element) {
    var node;
    var childnode = element.childNodes;
    for (var i = 0; i < childnode.length; i++) {
        node = childnode[i];
        if (node.nodeType === 3) {
            return node;
        }
    }
    return null;
}
function createCheckBox() {
    var wrapper = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: 'e-checkbox-wrapper' });
    var frameSpan = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: 'e-frame e-icons' });
    var rippleSpan = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: 'e-ripple-container' });
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["rippleEffect"])(rippleSpan, { isCenterRipple: true, duration: 400 });
    frameSpan.appendChild(rippleSpan);
    wrapper.appendChild(frameSpan);
    return wrapper;
}


/***/ }),
/* 91 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_index__ = __webpack_require__(207);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "wrapperInitialize", function() { return __WEBPACK_IMPORTED_MODULE_0__common_index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getTextNode", function() { return __WEBPACK_IMPORTED_MODULE_0__common_index__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "createCheckBox", function() { return __WEBPACK_IMPORTED_MODULE_0__common_index__["c"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__button_index__ = __webpack_require__(204);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Button", function() { return __WEBPACK_IMPORTED_MODULE_1__button_index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "buttonBuilder", function() { return __WEBPACK_IMPORTED_MODULE_1__button_index__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__check_box_index__ = __webpack_require__(206);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "CheckBox", function() { return __WEBPACK_IMPORTED_MODULE_2__check_box_index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "checkBoxBuilder", function() { return __WEBPACK_IMPORTED_MODULE_2__check_box_index__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__radio_button_index__ = __webpack_require__(208);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RadioButton", function() { return __WEBPACK_IMPORTED_MODULE_3__radio_button_index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "radioButtonBuilder", function() { return __WEBPACK_IMPORTED_MODULE_3__radio_button_index__["b"]; });






/***/ }),
/* 92 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return dropDownListClasses; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return DropDownList; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_popups__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_incremental_search__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__ = __webpack_require__(128);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__syncfusion_ej2_data__ = __webpack_require__(14);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};









var dropDownListClasses = {
    root: 'e-dropdownlist',
    hover: __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].hover,
    selected: __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].selected,
    rtl: __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].rtl,
    li: __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].li,
    disable: __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].disabled,
    base: __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].root,
    focus: __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].focus,
    input: 'e-input-group',
    inputFocus: 'e-input-focus',
    icon: 'e-input-group-icon e-ddl-icon',
    iconAnimation: 'e-icon-anim',
    value: 'e-input-value',
    device: 'e-ddl-device',
    backIcon: 'e-input-group-icon e-back-icon e-icons',
    filterBarClearIcon: 'e-input-group-icon e-clear-icon e-icons',
    filterInput: 'e-input-filter',
    filterParent: 'e-filter-parent',
    mobileFilter: 'e-ddl-device-filter',
    footer: 'e-ddl-footer',
    header: 'e-ddl-header',
    clearIcon: 'e-clear-icon',
    clearIconHide: 'e-clear-icon-hide',
    popupFullScreen: 'e-popup-full-page'
};
var inputObject = {
    container: null,
    buttons: []
};
var DropDownList = (function (_super) {
    __extends(DropDownList, _super);
    function DropDownList(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.isPopupOpen = false;
        _this.isDocumentClick = false;
        _this.isInteracted = false;
        _this.isFilterFocus = false;
        _this.beforePopupOpen = false;
        _this.initial = true;
        _this.initRemoteRender = false;
        _this.isNotSearchList = false;
        _this.isTyped = false;
        _this.isSelected = false;
        _this.preventFocus = false;
        _this.preventAutoFill = false;
        _this.isValidKey = false;
        _this.typedString = '';
        _this.isEscapeKey = false;
        _this.isPreventBlur = false;
        _this.isTabKey = false;
        _this.actionCompleteData = { isUpdated: false };
        _this.prevSelectPoints = {};
        _this.isSelectCustom = false;
        _this.isDropDownClick = false;
        _this.preventAltUp = false;
        _this.keyConfigure = {
            tab: 'tab',
            enter: '13',
            escape: '27',
            end: '35',
            home: '36',
            down: '40',
            up: '38',
            pageUp: '33',
            pageDown: '34',
            open: 'alt+40',
            close: 'shift+tab',
            hide: 'alt+38',
            space: '32'
        };
        return _this;
    }
    ;
    DropDownList.prototype.preRender = function () {
        this.element.style.opacity = '0';
        _super.prototype.preRender.call(this);
        this.activeIndex = this.index;
        this.queryString = '';
    };
    DropDownList.prototype.renderList = function (isEmptyData) {
        _super.prototype.render.call(this, isEmptyData);
        this.wireListEvents();
    };
    DropDownList.prototype.floatLabelChange = function () {
        if (this.getModuleName() === 'dropdownlist' && this.floatLabelType === 'Auto') {
            var floatElement = this.inputWrapper.container.querySelector('.e-float-text');
            if (this.inputElement.value !== '' || this.isInteracted) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["classList"])(floatElement, ['e-label-top'], ['e-label-bottom']);
            }
            else {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["classList"])(floatElement, ['e-label-bottom'], ['e-label-top']);
            }
        }
    };
    DropDownList.prototype.resetHandler = function (e) {
        e.preventDefault();
        this.clear();
    };
    DropDownList.prototype.resetFocusElement = function () {
        this.removeHover();
        this.removeSelection();
        this.removeFocus();
        this.list.scrollTop = 0;
        if (this.getModuleName() !== 'autocomplete') {
            var li = this.ulElement.querySelector('.' + dropDownListClasses.li);
            if (li) {
                li.classList.add(dropDownListClasses.focus);
            }
        }
    };
    DropDownList.prototype.clear = function () {
        this.resetSelection();
        this.onChangeEvent(null);
    };
    DropDownList.prototype.resetSelection = function () {
        if (this.list) {
            if (this.allowFiltering && this.getModuleName() !== 'autocomplete') {
                this.onActionComplete(this.actionCompleteData.ulElement.cloneNode(true), this.actionCompleteData.list);
            }
            this.resetFocusElement();
        }
        this.hiddenElement.innerHTML = '';
        this.inputElement.value = '';
        this.value = null;
        this.text = null;
        this.index = null;
        this.activeIndex = null;
        this.item = null;
        this.itemData = null;
        this.queryString = '';
        if (this.valueTempElement) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.valueTempElement);
            this.inputElement.style.display = 'block';
            this.valueTempElement = null;
        }
        this.setSelection(null, null);
        this.isSelectCustom = false;
        this.updateIconState();
    };
    DropDownList.prototype.setHTMLAttributes = function () {
        if (Object.keys(this.htmlAttributes).length) {
            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {
                var htmlAttr = _a[_i];
                if (htmlAttr === 'class') {
                    this.inputWrapper.container.classList.add(this.htmlAttributes[htmlAttr]);
                }
                else if (htmlAttr === 'disabled' && this.htmlAttributes[htmlAttr] === 'disabled') {
                    this.enabled = false;
                    this.setEnable();
                }
                else if (htmlAttr === 'readonly' && this.htmlAttributes[htmlAttr] === 'readonly') {
                    this.readonly = true;
                    this.dataBind();
                }
                else if (htmlAttr === 'style') {
                    this.inputWrapper.container.setAttribute('style', this.htmlAttributes[htmlAttr]);
                }
                else {
                    var defaultAttr = ['title', 'id', 'name', 'placeholder', 'required'];
                    if (defaultAttr.indexOf(htmlAttr) > -1) {
                        htmlAttr === 'placeholder' ? __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].setPlaceholder(this.htmlAttributes[htmlAttr], this.inputElement) :
                            this.element.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);
                    }
                    else {
                        this.inputWrapper.container.setAttribute(htmlAttr, this.htmlAttributes[htmlAttr]);
                    }
                }
            }
        }
    };
    DropDownList.prototype.getAriaAttributes = function () {
        return {
            'aria-disabled': 'false',
            'aria-owns': this.element.id + '_options',
            'role': 'listbox',
            'aria-haspopup': 'true',
            'aria-expanded': 'false',
            'aria-activedescendant': 'null'
        };
    };
    DropDownList.prototype.setEnableRtl = function () {
        __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].setEnableRtl(this.enableRtl, [this.inputElement.parentElement]);
        if (this.popupObj) {
            this.popupObj.enableRtl = this.enableRtl;
            this.popupObj.dataBind();
        }
    };
    DropDownList.prototype.setEnable = function () {
        __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].setEnabled(this.enabled, this.inputElement);
        if (this.enabled) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.inputWrapper.container], dropDownListClasses.disable);
            this.inputElement.setAttribute('aria-disabled', 'false');
            this.targetElement().setAttribute('tabindex', this.tabIndex);
        }
        else {
            this.hidePopup();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.inputWrapper.container], dropDownListClasses.disable);
            this.inputElement.setAttribute('aria-disabled', 'true');
            this.targetElement().tabIndex = -1;
        }
    };
    DropDownList.prototype.getPersistData = function () {
        return this.addOnPersist(['value']);
    };
    ;
    DropDownList.prototype.preventTabIndex = function (element) {
        if (this.getModuleName() === 'dropdownlist') {
            element.tabIndex = -1;
        }
    };
    DropDownList.prototype.targetElement = function () {
        return this.inputWrapper.container;
    };
    DropDownList.prototype.getNgDirective = function () {
        return 'EJ-DROPDOWNLIST';
    };
    DropDownList.prototype.getElementByText = function (text) {
        return this.getElementByValue(this.getValueByText(text));
    };
    DropDownList.prototype.getElementByValue = function (value) {
        var item;
        var listItems = this.getItems();
        for (var _i = 0, listItems_1 = listItems; _i < listItems_1.length; _i++) {
            var liItem = listItems_1[_i];
            if (this.getFormattedValue(liItem.getAttribute('data-value')) === value) {
                item = liItem;
                break;
            }
        }
        return item;
    };
    ;
    DropDownList.prototype.getValueByText = function (text, ignoreCase) {
        var value = null;
        var dataSource = this.listData;
        var fields = this.fields;
        if (ignoreCase) {
            if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {
                for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {
                    var item = dataSource_1[_i];
                    if (String(item).toLowerCase() === text.toString().toLowerCase()) {
                        value = typeof dataSource[0] === 'string' ? String(item) : this.getFormattedValue(String(item));
                        break;
                    }
                }
            }
            else {
                dataSource.filter(function (item) {
                    var itemText = item[fields.text].toString();
                    if (itemText.toLowerCase() === text.toLowerCase()) {
                        value = item[fields.value];
                    }
                });
            }
        }
        else {
            if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {
                for (var _a = 0, dataSource_2 = dataSource; _a < dataSource_2.length; _a++) {
                    var item = dataSource_2[_a];
                    if (String(item) === text.toString()) {
                        value = typeof dataSource[0] === 'string' ? text : this.getFormattedValue(text);
                        break;
                    }
                }
            }
            else {
                dataSource.filter(function (item) {
                    if (item[fields.text] === text) {
                        value = item[fields.value];
                    }
                });
            }
        }
        return value;
    };
    ;
    DropDownList.prototype.initValue = function () {
        this.renderList();
        if (this.dataSource instanceof __WEBPACK_IMPORTED_MODULE_5__syncfusion_ej2_data__["DataManager"]) {
            this.initRemoteRender = true;
        }
        else {
            this.updateValues();
        }
    };
    DropDownList.prototype.updateValues = function () {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.value)) {
            this.setSelection(this.getElementByValue(this.value), null);
        }
        else if (this.text && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.value)) {
            this.setSelection(this.getElementByText(this.text), null);
        }
        else {
            this.setSelection(this.liCollections[this.activeIndex], null);
        }
        this.setHiddenValue();
        __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);
    };
    DropDownList.prototype.onBlur = function (e) {
        var target = e.relatedTarget;
        var currentTarget = e.target;
        var isPreventBlur = this.isPreventBlur;
        this.isPreventBlur = false;
        if (isPreventBlur && !this.isDocumentClick && this.isPopupOpen && (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(currentTarget) ||
            !this.isFilterLayout() && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(target))) {
            if (this.getModuleName() === 'dropdownlist' && this.allowFiltering && this.isPopupOpen) {
                this.filterInput.focus();
            }
            else {
                this.targetElement().focus();
            }
            return;
        }
        if (this.isDocumentClick || (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.popupObj)
            && document.body.contains(this.popupObj.element) &&
            this.popupObj.element.classList.contains(dropDownListClasses.mobileFilter))) {
            if (!this.beforePopupOpen) {
                this.isDocumentClick = false;
            }
            return;
        }
        if (((this.getModuleName() === 'dropdownlist' && !this.isFilterFocus && target !== this.inputElement)
            && (document.activeElement !== target || (document.activeElement === target &&
                currentTarget.classList.contains(dropDownListClasses.inputFocus)))) ||
            (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(target) && this.getModuleName() === 'dropdownlist' && this.allowFiltering &&
                currentTarget !== this.inputWrapper.container) || this.getModuleName() !== 'dropdownlist' &&
            !this.inputWrapper.container.contains(target) || this.isTabKey) {
            this.isDocumentClick = this.isPopupOpen ? true : false;
            this.focusOutAction();
            this.isTabKey = false;
        }
    };
    DropDownList.prototype.focusOutAction = function () {
        this.isInteracted = false;
        this.focusOut();
        this.onFocusOut();
    };
    DropDownList.prototype.onFocusOut = function () {
        if (this.isSelected) {
            this.isSelectCustom = false;
            this.onChangeEvent(null);
        }
        this.floatLabelChange();
        this.dispatchEvent(this.hiddenElement, 'change');
        if (this.inputWrapper.clearButton) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);
        }
        this.trigger('blur');
    };
    DropDownList.prototype.onFocus = function () {
        if (!this.isInteracted) {
            this.isInteracted = true;
            this.trigger('focus');
        }
        this.updateIconState();
    };
    DropDownList.prototype.wireEvent = function () {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.inputWrapper.container, 'mousedown', this.dropDownClick, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.inputWrapper.container, 'focus', this.focusIn, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.inputWrapper.container, 'keypress', this.onSearch, this);
        this.bindCommonEvent();
    };
    DropDownList.prototype.bindCommonEvent = function () {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.targetElement(), 'blur', this.onBlur, this);
        if (!__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
            this.keyboardModule = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["KeyboardEvents"](this.targetElement(), {
                keyAction: this.keyActionHandler.bind(this), keyConfigs: this.keyConfigure, eventName: 'keydown'
            });
        }
        this.bindClearEvent();
    };
    DropDownList.prototype.bindClearEvent = function () {
        if (this.showClearButton) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.inputWrapper.clearButton, 'mousedown', this.resetHandler, this);
        }
    };
    DropDownList.prototype.unBindCommonEvent = function () {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.targetElement(), 'blur', this.onBlur);
        if (!__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
            this.keyboardModule.destroy();
        }
        if (this.showClearButton) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.inputWrapper.clearButton, 'mousedown', this.resetHandler);
        }
    };
    DropDownList.prototype.updateIconState = function () {
        if (this.showClearButton) {
            if (this.inputElement.value !== '') {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);
            }
            else {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);
            }
        }
    };
    DropDownList.prototype.wireListEvents = function () {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.list, 'click', this.onMouseClick, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.list, 'mouseover', this.onMouseOver, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.list, 'mouseout', this.onMouseLeave, this);
    };
    ;
    DropDownList.prototype.onSearch = function (e) {
        if (e.charCode !== 32 && e.charCode !== 13) {
            if (this.list === undefined) {
                this.renderList();
            }
            this.searchKeyEvent = e;
            if (!this.isRequested && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.list.querySelector('li'))) {
                this.incrementalSearch(e);
            }
        }
    };
    DropDownList.prototype.onMouseClick = function (e) {
        var target = e.target;
        var classList = target.classList;
        var li = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(target, '.' + __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].li);
        if (!this.isValidLI(li)) {
            return;
        }
        this.setSelection(li, e);
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && this.isFilterLayout()) {
            history.back();
        }
        else {
            var delay = 100;
            this.closePopup(delay);
        }
    };
    DropDownList.prototype.onMouseOver = function (e) {
        var currentLi = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(e.target, '.' + __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].li);
        this.setHover(currentLi);
    };
    ;
    DropDownList.prototype.setHover = function (li) {
        if (this.enabled && this.isValidLI(li) && !li.classList.contains(__WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].hover)) {
            this.removeHover();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([li], __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].hover);
        }
    };
    ;
    DropDownList.prototype.onMouseLeave = function (e) {
        this.removeHover();
    };
    ;
    DropDownList.prototype.removeHover = function () {
        var hoveredItem = this.list.querySelectorAll('.' + __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].hover);
        if (hoveredItem && hoveredItem.length) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])(hoveredItem, __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].hover);
        }
    };
    ;
    DropDownList.prototype.isValidLI = function (li) {
        return (li && li.hasAttribute('role') && li.getAttribute('role') === 'option');
    };
    ;
    DropDownList.prototype.incrementalSearch = function (e) {
        if (this.liCollections.length > 0) {
            var li = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_incremental_search__["b" /* incrementalSearch */])(e.charCode, this.liCollections, this.activeIndex, true);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(li)) {
                this.setSelection(li, e);
                this.setScrollPosition();
            }
        }
    };
    ;
    DropDownList.prototype.keyActionHandler = function (e) {
        var preventAction = e.action === 'pageUp' || e.action === 'pageDown';
        var preventHomeEnd = this.getModuleName() !== 'dropdownlist' && (e.action === 'home' || e.action === 'end');
        this.isEscapeKey = e.action === 'escape';
        this.isTabKey = !this.isPopupOpen && e.action === 'tab';
        var isNavigation = (e.action === 'down' || e.action === 'up' || e.action === 'pageUp' || e.action === 'pageDown'
            || e.action === 'home' || e.action === 'end');
        if ((this.isEditTextBox() || preventAction || preventHomeEnd) && !this.isPopupOpen) {
            return;
        }
        if (!this.readonly) {
            var isTabAction = e.action === 'tab' || e.action === 'close';
            if (this.list === undefined && !this.isRequested && !isTabAction && e.action !== 'escape') {
                this.searchKeyEvent = e;
                this.renderList();
            }
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.list) || (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.liCollections) &&
                isNavigation && this.liCollections.length === 0) || this.isRequested) {
                return;
            }
            if (isTabAction && this.isPopupOpen || e.action === 'escape') {
                e.preventDefault();
            }
            this.isSelected = e.action === 'escape' ? false : this.isSelected;
            this.isTyped = (isNavigation || e.action === 'escape') ? false : this.isTyped;
            switch (e.action) {
                case 'down':
                case 'up':
                    var focusEle = this.list.querySelector('.' + dropDownListClasses.focus);
                    if (this.isSelectFocusItem(focusEle)) {
                        this.setSelection(focusEle, e);
                    }
                    else {
                        var nextItem = void 0;
                        var index = e.action === 'down' ? this.activeIndex + 1 : this.activeIndex - 1;
                        var startIndex = 0;
                        if (this.getModuleName() === 'autocomplete') {
                            startIndex = e.action === 'down' && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.activeIndex) ? 0 : this.liCollections.length - 1;
                            index = index < 0 ? this.liCollections.length - 1 : index === this.liCollections.length ? 0 : index;
                        }
                        nextItem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.activeIndex) ? this.liCollections[startIndex] : this.liCollections[index];
                        this.setSelection(nextItem, e);
                    }
                    e.preventDefault();
                    break;
                case 'pageUp':
                    this.pageUpSelection(this.activeIndex - this.getPageCount(), e);
                    e.preventDefault();
                    break;
                case 'pageDown':
                    this.pageDownSelection(this.activeIndex + this.getPageCount(), e);
                    e.preventDefault();
                    break;
                case 'home':
                    e.preventDefault();
                    if (this.activeIndex === 0) {
                        return;
                    }
                    this.setSelection(this.liCollections[0], e);
                    break;
                case 'end':
                    e.preventDefault();
                    var lastLi = this.getItems().length - 1;
                    if (this.activeIndex === lastLi) {
                        return;
                    }
                    this.setSelection(this.liCollections[lastLi], e);
                    break;
                case 'space':
                    if (this.getModuleName() === 'dropdownlist') {
                        if (!this.beforePopupOpen) {
                            this.showPopup();
                        }
                        else {
                            e.preventDefault();
                        }
                    }
                    break;
                case 'open':
                    this.showPopup();
                    break;
                case 'hide':
                    this.preventAltUp = this.isPopupOpen;
                    this.hidePopup();
                    this.focusDropDown(e);
                    break;
                case 'enter':
                    this.selectCurrentItem(e);
                    break;
                case 'escape':
                case 'tab':
                case 'close':
                    if (this.isPopupOpen) {
                        this.hidePopup();
                        this.focusDropDown(e);
                    }
                    break;
            }
        }
    };
    DropDownList.prototype.selectCurrentItem = function (e) {
        if (this.isPopupOpen) {
            var li = this.list.querySelector('.' + dropDownListClasses.focus);
            if (li) {
                this.setSelection(li, e);
                this.isTyped = false;
            }
            if (this.isSelected) {
                this.isSelectCustom = false;
                this.onChangeEvent(e);
            }
            this.hidePopup();
            this.focusDropDown(e);
        }
        else {
            this.showPopup();
        }
    };
    DropDownList.prototype.isSelectFocusItem = function (element) {
        return !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(element);
    };
    DropDownList.prototype.getPageCount = function () {
        var liHeight = this.list.classList.contains(__WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].noData) ? null :
            getComputedStyle(this.getItems()[0], null).getPropertyValue('height');
        return Math.round(this.list.getBoundingClientRect().height / parseInt(liHeight, 10));
    };
    DropDownList.prototype.pageUpSelection = function (steps, event) {
        var previousItem = steps >= 0 ? this.liCollections[steps + 1] : this.liCollections[0];
        this.setSelection(previousItem, event);
    };
    ;
    DropDownList.prototype.pageDownSelection = function (steps, event) {
        var list = this.getItems();
        var previousItem = steps <= list.length ? this.liCollections[steps - 1] : this.liCollections[list.length - 1];
        this.setSelection(previousItem, event);
    };
    ;
    DropDownList.prototype.unWireEvent = function () {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.inputWrapper.container, 'mousedown', this.dropDownClick);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.inputWrapper.container, 'keypress', this.onSearch);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.inputWrapper.container, 'focus', this.focusIn);
        this.unBindCommonEvent();
    };
    DropDownList.prototype.unWireListEvents = function () {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.list, 'click', this.onMouseClick);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.list, 'mouseover', this.onMouseOver);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.list, 'mouseout', this.onMouseLeave);
    };
    ;
    DropDownList.prototype.onDocumentClick = function (e) {
        var target = e.target;
        if (!(!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.popupObj) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(target, '#' + this.popupObj.element.id)) &&
            !this.inputWrapper.container.contains(e.target)) {
            if (this.inputWrapper.container.classList.contains(dropDownListClasses.inputFocus) || this.isPopupOpen) {
                this.isDocumentClick = true;
                var isActive = this.isRequested;
                this.isInteracted = false;
                this.hidePopup();
                if (!isActive) {
                    this.onFocusOut();
                    this.inputWrapper.container.classList.remove(dropDownListClasses.inputFocus);
                }
            }
        }
        else if (target !== this.inputElement && !(this.allowFiltering && target === this.filterInput)
            && !(this.getModuleName() === 'combobox' &&
                !this.allowFiltering && __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && target === this.inputWrapper.buttons[0])) {
            this.isPreventBlur = (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isIE || __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].info.name === 'edge') && (document.activeElement === this.targetElement() ||
                document.activeElement === this.filterInput);
            e.preventDefault();
        }
    };
    DropDownList.prototype.activeStateChange = function () {
        if (this.isDocumentClick) {
            this.hidePopup();
            this.onFocusOut();
            this.inputWrapper.container.classList.remove(dropDownListClasses.inputFocus);
        }
    };
    DropDownList.prototype.focusDropDown = function (e) {
        if (!this.initial && this.isFilterLayout()) {
            this.focusIn();
        }
    };
    DropDownList.prototype.dropDownClick = function (e) {
        if (this.targetElement().classList.contains(dropDownListClasses.disable) || this.inputWrapper.clearButton === e.target) {
            return;
        }
        var target = e.target;
        if (target !== this.inputElement && !(this.allowFiltering && target === this.filterInput) && this.getModuleName() !== 'combobox') {
            e.preventDefault();
        }
        if (!this.readonly) {
            if (this.isPopupOpen) {
                this.hidePopup();
                if (this.isFilterLayout()) {
                    this.focusDropDown(e);
                }
            }
            else {
                this.focusIn();
                this.floatLabelChange();
                this.queryString = this.inputElement.value.trim() === '' ? null : this.inputElement.value;
                this.isDropDownClick = true;
                this.showPopup();
            }
        }
    };
    DropDownList.prototype.updateSelectedItem = function (li, e, preventSelect) {
        this.removeSelection();
        li.classList.add(__WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].selected);
        this.removeHover();
        var value = this.getFormattedValue(li.getAttribute('data-value'));
        this.item = li;
        this.itemData = this.getDataByValue(value);
        if (!this.initial && !preventSelect) {
            this.isSelected = true;
            var eventArgs = {
                e: e,
                item: this.item,
                itemData: this.itemData,
                isInteracted: e ? true : false
            };
            this.trigger('select', eventArgs);
        }
        var focusedItem = this.list.querySelector('.' + __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].focus);
        if (focusedItem) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([focusedItem], __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].focus);
        }
        li.setAttribute('aria-selected', 'true');
        this.activeIndex = this.getIndexByValue(value);
    };
    DropDownList.prototype.activeItem = function (li) {
        if (this.isValidLI(li) && !li.classList.contains(__WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].selected)) {
            this.removeSelection();
            li.classList.add(__WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].selected);
            this.removeHover();
            li.setAttribute('aria-selected', 'true');
        }
    };
    DropDownList.prototype.setValue = function (e) {
        var dataItem = this.getItemData();
        if (dataItem.value === null) {
            __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].setValue(null, this.inputElement, this.floatLabelType, this.showClearButton);
        }
        else {
            __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].setValue(dataItem.text, this.inputElement, this.floatLabelType, this.showClearButton);
        }
        if (this.previousValue === dataItem.value) {
            this.isSelected = false;
            return true;
        }
        else {
            this.isSelected = !this.initial ? true : false;
            this.isSelectCustom = false;
            if (this.getModuleName() === 'dropdownlist') {
                this.updateIconState();
            }
            return false;
        }
    };
    DropDownList.prototype.setSelection = function (li, e) {
        if (this.isValidLI(li) && !li.classList.contains(__WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].selected)) {
            this.updateSelectedItem(li, e, false);
        }
        if (this.list) {
            this.removeHover();
        }
        this.selectedLI = li;
        if (this.setValue(e)) {
            return;
        }
        if (this.valueTemplate && this.itemData !== null) {
            this.setValueTemplate();
        }
        else if (this.inputElement.previousSibling === this.valueTempElement) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.valueTempElement);
            this.inputElement.style.display = 'block';
        }
        if (this.isPopupOpen) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.targetElement(), { 'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null });
            if (this.isFilterLayout()) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.filterInput, { 'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null });
            }
        }
        if ((!this.isPopupOpen && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(li)) || (this.isPopupOpen && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(e) &&
            (e.type !== 'keydown' || e.type === 'keydown' && e.action === 'enter'))) {
            this.isSelectCustom = false;
            this.onChangeEvent(e);
        }
        if (this.isPopupOpen && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.selectedLI) && this.itemData !== null && (!e || e.type !== 'click')) {
            this.setScrollPosition(e);
        }
    };
    DropDownList.prototype.setValueTemplate = function () {
        var compiledString;
        if (!this.valueTempElement) {
            this.valueTempElement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: dropDownListClasses.value });
            this.inputElement.parentElement.insertBefore(this.valueTempElement, this.inputElement);
            this.inputElement.style.display = 'none';
            this.inputWrapper.container.focus();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.inputWrapper.container], [dropDownListClasses.inputFocus]);
        }
        this.valueTempElement.innerHTML = '';
        compiledString = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["compile"])(this.valueTemplate);
        for (var _i = 0, _a = compiledString(this.itemData); _i < _a.length; _i++) {
            var item = _a[_i];
            this.valueTempElement.appendChild(item);
        }
    };
    DropDownList.prototype.removeSelection = function () {
        var selectedItems = this.list.querySelectorAll('.' + __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].selected);
        if (selectedItems.length) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])(selectedItems, __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].selected);
            selectedItems[0].removeAttribute('aria-selected');
        }
    };
    ;
    DropDownList.prototype.getItemData = function () {
        var fields = this.fields;
        var dataItem = {};
        dataItem = this.itemData;
        var value = (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(dataItem) &&
            (dataItem[fields.value] === null || dataItem[fields.value]) ? dataItem[fields.value] : dataItem);
        var text = (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(dataItem) &&
            (dataItem[fields.text] === null || dataItem[fields.text]) ? dataItem[fields.text] : dataItem);
        return { value: value, text: text };
    };
    DropDownList.prototype.onChangeEvent = function (eve) {
        var dataItem = this.getItemData();
        var index = this.isSelectCustom ? null : this.activeIndex;
        this.setProperties({ 'value': dataItem.value, 'index': index, 'text': dataItem.text }, true);
        this.detachChangeEvent(eve);
    };
    ;
    DropDownList.prototype.detachChangeEvent = function (eve) {
        this.isSelected = false;
        this.previousValue = this.value;
        this.activeIndex = this.index;
        this.typedString = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.text) ? this.text : '';
        if (!this.initial) {
            this.setHiddenValue();
            var eventArgs = {
                e: eve,
                item: this.item,
                itemData: this.itemData,
                isInteracted: eve ? true : false,
                value: this.value
            };
            this.trigger('change', eventArgs);
        }
    };
    DropDownList.prototype.setHiddenValue = function () {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.value)) {
            this.hiddenElement.innerHTML = '<option selected value =' + this.value + '>' + this.text + '</option>';
        }
        else {
            this.hiddenElement.innerHTML = '';
        }
    };
    DropDownList.prototype.onFilterUp = function (e) {
        this.isValidKey = e.keyCode === 40 || e.keyCode === 38 || this.isValidKey;
        if (this.isValidKey) {
            this.isValidKey = false;
            switch (e.keyCode) {
                case 38:
                case 40:
                    if (this.getModuleName() === 'autocomplete' && !this.isPopupOpen && !this.preventAltUp && !this.isRequested) {
                        this.preventAutoFill = true;
                        this.searchLists(e);
                    }
                    else {
                        this.preventAutoFill = false;
                    }
                    this.preventAltUp = false;
                    e.preventDefault();
                    break;
                case 46:
                case 8:
                    this.typedString = this.filterInput.value;
                    if (!this.isPopupOpen && this.typedString !== '' || this.isPopupOpen && this.queryString.length > 0) {
                        this.preventAutoFill = true;
                        this.searchLists(e);
                    }
                    else if (this.typedString === '') {
                        this.resetFocusElement();
                        this.activeIndex = null;
                        if (this.getModuleName() === 'autocomplete') {
                            this.hidePopup();
                        }
                    }
                    e.preventDefault();
                    break;
                default:
                    this.typedString = this.filterInput.value;
                    this.preventAutoFill = false;
                    this.searchLists(e);
                    break;
            }
        }
    };
    DropDownList.prototype.onFilterDown = function (e) {
        switch (e.keyCode) {
            case 13:
                break;
            case 40:
            case 38:
                this.queryString = this.filterInput.value;
                e.preventDefault();
                break;
            case 9:
                if (this.isPopupOpen) {
                    e.preventDefault();
                }
                break;
            default:
                this.prevSelectPoints = this.getSelectionPoints();
                this.queryString = this.filterInput.value;
                break;
        }
    };
    DropDownList.prototype.removeFillSelection = function () {
        if (this.isInteracted) {
            var selection = this.getSelectionPoints();
            this.inputElement.setSelectionRange(selection.end, selection.end);
        }
    };
    DropDownList.prototype.getSelectionPoints = function () {
        var input = this.inputElement;
        return { start: Math.abs(input.selectionStart), end: Math.abs(input.selectionEnd) };
    };
    DropDownList.prototype.searchLists = function (e) {
        var _this = this;
        this.isTyped = true;
        this.activeIndex = null;
        if (this.filterInput.parentElement.querySelector('.' + dropDownListClasses.clearIcon)) {
            var clearElement = this.filterInput.parentElement.querySelector('.' + dropDownListClasses.clearIcon);
            clearElement.style.visibility = this.filterInput.value === '' ? 'hidden' : 'visible';
        }
        if (this.isFiltering()) {
            this.trigger('filtering', {
                text: this.filterInput.value,
                updateData: function (dataSource, query, fields) {
                    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(_this.filterInput)) {
                        _this.beforePopupOpen = true;
                        if (_this.filterInput.value.trim() === '') {
                            _this.actionCompleteData.isUpdated = false;
                            _this.isTyped = false;
                            _this.onActionComplete(_this.actionCompleteData.ulElement, _this.actionCompleteData.list);
                            _this.isTyped = true;
                            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(_this.itemData) && _this.getModuleName() === 'dropdownlist') {
                                _this.focusIndexItem();
                                _this.setScrollPosition();
                            }
                            _this.isNotSearchList = true;
                        }
                        else {
                            _this.isNotSearchList = false;
                            _this.resetList(dataSource, fields, query);
                        }
                    }
                },
                event: e
            });
        }
    };
    DropDownList.prototype.setSearchBox = function (popupElement) {
        if (this.isFiltering()) {
            var parentElement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', {
                className: dropDownListClasses.filterParent
            });
            this.filterInput = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('input', {
                attrs: { type: 'text' },
                className: dropDownListClasses.filterInput
            });
            this.element.parentNode.insertBefore(this.filterInput, this.element);
            var backIcon = false;
            if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
                backIcon = true;
            }
            var input = __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].createInput({
                element: this.filterInput,
                buttons: backIcon ?
                    [dropDownListClasses.backIcon, dropDownListClasses.filterBarClearIcon] : [dropDownListClasses.filterBarClearIcon],
                properties: { placeholder: this.filterBarPlaceholder }
            });
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["append"])([input.container], parentElement);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["prepend"])([parentElement], popupElement);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.filterInput, {
                'aria-disabled': 'false',
                'aria-owns': this.element.id + '_options',
                'role': 'listbox',
                'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null,
                'autocomplete': 'off',
                'autocorrect': 'off',
                'autocapitalize': 'off',
                'spellcheck': 'false'
            });
            this.clearIconElement = this.filterInput.parentElement.querySelector('.' + dropDownListClasses.clearIcon);
            if (!__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && this.clearIconElement) {
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.clearIconElement, 'click', this.clearText, this);
                this.clearIconElement.style.visibility = 'hidden';
            }
            if (!__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
                this.searchKeyModule = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["KeyboardEvents"](this.filterInput, {
                    keyAction: this.keyActionHandler.bind(this),
                    keyConfigs: this.keyConfigure,
                    eventName: 'keydown'
                });
            }
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.filterInput, 'input', this.onInput, this);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.filterInput, 'keyup', this.onFilterUp, this);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.filterInput, 'keydown', this.onFilterDown, this);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.filterInput, 'blur', this.onBlur, this);
            return input;
        }
        else {
            return inputObject;
        }
    };
    ;
    DropDownList.prototype.onInput = function () {
        this.isValidKey = true;
    };
    DropDownList.prototype.onActionFailure = function (e) {
        _super.prototype.onActionFailure.call(this, e);
        this.renderPopup();
    };
    DropDownList.prototype.onActionComplete = function (ulElement, list, e, isUpdated) {
        if (this.isNotSearchList) {
            this.isNotSearchList = false;
            return;
        }
        if (this.isActive) {
            var selectedItem = this.selectedLI ? this.selectedLI.cloneNode(true) : null;
            _super.prototype.onActionComplete.call(this, ulElement, list, e);
            if (this.isRequested && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.searchKeyEvent) && this.searchKeyEvent.type === 'keydown') {
                this.isRequested = false;
                this.keyActionHandler(this.searchKeyEvent);
                this.searchKeyEvent = null;
            }
            if (this.isRequested && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.searchKeyEvent)) {
                this.incrementalSearch(this.searchKeyEvent);
                this.searchKeyEvent = null;
            }
            this.list.scrollTop = 0;
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(ulElement)) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(ulElement, { 'id': this.element.id + '_options', 'role': 'listbox', 'aria-hidden': 'false' });
            }
            if (this.initRemoteRender) {
                this.initial = true;
                this.activeIndex = this.index;
                this.updateValues();
                this.initRemoteRender = false;
                this.initial = false;
            }
            if (this.getModuleName() !== 'autocomplete' && this.isFiltering() && !this.isTyped) {
                if (!this.actionCompleteData.isUpdated) {
                    this.actionCompleteData = { ulElement: ulElement.cloneNode(true), list: list, isUpdated: true };
                }
                this.addNewItem(list, selectedItem);
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.itemData)) {
                    this.focusIndexItem();
                }
            }
            if (this.beforePopupOpen) {
                this.renderPopup();
            }
        }
    };
    DropDownList.prototype.addNewItem = function (listData, newElement) {
        var _this = this;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.itemData) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(newElement)) {
            var value_1 = this.getItemData().value;
            var isExist = listData.some(function (data) {
                return data[_this.fields.value] === value_1;
            });
            if (!isExist) {
                this.addItem(this.itemData);
                this.actionCompleteData.list.push(this.itemData);
                this.actionCompleteData.ulElement.appendChild(newElement);
            }
            var selectedItems = void 0;
            var ulElement = this.actionCompleteData.ulElement;
            selectedItems = ulElement.querySelectorAll('.' + __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].selected);
            if (selectedItems.length) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])(selectedItems, __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].selected);
                selectedItems[0].removeAttribute('aria-selected');
            }
        }
    };
    DropDownList.prototype.focusIndexItem = function () {
        var value = this.getItemData().value;
        this.activeIndex = this.getIndexByValue(value);
        var element = this.list.querySelector('[data-value="' + value + '"]');
        this.selectedLI = element;
        this.activeItem(element);
        this.removeFocus();
    };
    DropDownList.prototype.updateSelection = function () {
        var selectedItem = this.list.querySelector('.' + __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].selected);
        if (selectedItem) {
            this.setProperties({ 'index': this.getIndexByValue(selectedItem.getAttribute('data-value')) });
            this.activeIndex = this.index;
        }
        else {
            this.removeFocus();
            this.list.querySelector('.' + __WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].li).classList.add(dropDownListClasses.focus);
        }
    };
    DropDownList.prototype.removeFocus = function () {
        var highlightedItem = this.list.querySelectorAll('.' + dropDownListClasses.focus);
        if (highlightedItem && highlightedItem.length) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])(highlightedItem, dropDownListClasses.focus);
        }
    };
    ;
    DropDownList.prototype.renderPopup = function () {
        if (this.popupObj && document.body.contains(this.popupObj.element)) {
            this.refreshPopup();
            return;
        }
        var popupEle = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { id: this.element.id + '_popup', className: 'e-ddl e-popup' });
        var searchBox = this.setSearchBox(popupEle);
        this.listHeight = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(this.popupHeight);
        if (this.headerTemplate) {
            var compiledString = void 0;
            this.header = document.createElement('div');
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.header], dropDownListClasses.header);
            compiledString = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["compile"])(this.headerTemplate);
            for (var _i = 0, _a = compiledString({}); _i < _a.length; _i++) {
                var item = _a[_i];
                this.header.appendChild(item);
            }
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["append"])([this.header], popupEle);
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["append"])([this.list], popupEle);
        if (this.footerTemplate) {
            this.setFooterTemplate(popupEle);
        }
        document.body.appendChild(popupEle);
        popupEle.style.visibility = 'hidden';
        if (this.popupHeight !== 'auto') {
            this.searchBoxHeight = 0;
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(searchBox.container)) {
                this.searchBoxHeight = (searchBox.container.parentElement).getBoundingClientRect().height;
                this.listHeight = (parseInt(this.listHeight, 10) - (this.searchBoxHeight)).toString() + 'px';
            }
            if (this.headerTemplate) {
                var height = Math.round(this.header.getBoundingClientRect().height);
                this.listHeight = (parseInt(this.listHeight, 10) - (height + this.searchBoxHeight)).toString() + 'px';
            }
            if (this.footerTemplate) {
                var height = Math.round(this.footer.getBoundingClientRect().height);
                this.listHeight = (parseInt(this.listHeight, 10) - (height + this.searchBoxHeight)).toString() + 'px';
            }
            this.list.style.maxHeight = (parseInt(this.listHeight, 10) - 2).toString() + 'px';
            popupEle.style.maxHeight = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(this.popupHeight);
        }
        else {
            popupEle.style.height = 'auto';
        }
        var offsetValue = 0;
        var left;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.selectedLI) && (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.activeIndex) && this.activeIndex >= 0)) {
            this.setScrollPosition();
        }
        else {
            this.list.scrollTop = 0;
        }
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && (!this.allowFiltering && (this.getModuleName() === 'dropdownlist' ||
            (this.isDropDownClick && this.getModuleName() === 'combobox')))) {
            offsetValue = this.getOffsetValue(popupEle);
            var firstItem = this.isEmptyList() ? this.list : this.liCollections[0];
            left = -(parseInt(getComputedStyle(firstItem).textIndent, 10) -
                parseInt(getComputedStyle(this.inputElement).paddingLeft, 10) +
                parseInt(getComputedStyle(this.inputElement.parentElement).borderLeftWidth, 10));
        }
        this.getFocusElement();
        this.createPopup(popupEle, offsetValue, left);
        this.checkCollision(popupEle);
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
            this.popupObj.element.classList.add(dropDownListClasses.device);
            if (this.getModuleName() === 'dropdownlist' || (this.getModuleName() === 'combobox'
                && !this.allowFiltering && this.isDropDownClick)) {
                this.popupObj.collision = { X: 'none', Y: 'fit' };
            }
            if (this.isFilterLayout()) {
                this.popupObj.element.classList.add(dropDownListClasses.mobileFilter);
                this.popupObj.position = { X: 0, Y: 0 };
                this.popupObj.dataBind();
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.popupObj.element, { style: 'left:0px;right:0px;top:0px;bottom:0px;' });
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([document.body, this.popupObj.element], dropDownListClasses.popupFullScreen);
                this.setSearchBoxPosition();
                this.backIconElement = searchBox.container.querySelector('.e-back-icon');
                this.clearIconElement = searchBox.container.querySelector('.' + dropDownListClasses.clearIcon);
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.backIconElement, 'click', this.clickOnBackIcon, this);
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.clearIconElement, 'click', this.clearText, this);
            }
        }
        popupEle.style.visibility = 'visible';
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([popupEle], 'e-popup-close');
        var scrollParentElements = this.popupObj.getScrollableParent(this.inputWrapper.container);
        for (var _b = 0, scrollParentElements_1 = scrollParentElements; _b < scrollParentElements_1.length; _b++) {
            var element = scrollParentElements_1[_b];
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(element, 'scroll', this.scrollHandler, this);
        }
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && this.isFilterLayout()) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.list, 'scroll', this.listScroll, this);
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.targetElement(), { 'aria-expanded': 'true' });
        var inputParent = this.isFiltering() ? this.filterInput.parentElement : this.inputWrapper.container;
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([inputParent], [dropDownListClasses.inputFocus]);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.inputWrapper.container], [dropDownListClasses.iconAnimation]);
        var animModel = { name: 'FadeIn', duration: 100 };
        this.beforePopupOpen = true;
        var eventArgs = { popup: this.popupObj };
        this.trigger('open', eventArgs);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(document, 'mousedown', this.onDocumentClick, this);
        this.popupObj.show(new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Animation"](animModel));
    };
    DropDownList.prototype.checkCollision = function (popupEle) {
        if (!__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice || (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && !(this.getModuleName() === 'dropdownlist' || this.isDropDownClick))) {
            var collision = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_popups__["isCollide"])(popupEle);
            if (collision.length > 0 && collision[0] === 'bottom') {
                popupEle.style.marginTop = -parseInt(getComputedStyle(popupEle).marginTop, 10) + 'px';
            }
        }
    };
    DropDownList.prototype.getOffsetValue = function (popupEle) {
        var popupStyles = getComputedStyle(popupEle);
        var borderTop = parseInt(popupStyles.borderTop, 10);
        var borderBottom = parseInt(popupStyles.borderBottom, 10);
        return this.setPopupPosition(borderTop + borderBottom);
    };
    DropDownList.prototype.createPopup = function (element, offsetValue, left) {
        var _this = this;
        this.popupObj = new __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_popups__["Popup"](element, {
            width: this.setWidth(), targetType: 'relative',
            relateTo: this.inputWrapper.container, collision: { X: 'none', Y: 'flip' }, offsetY: offsetValue,
            enableRtl: this.enableRtl, offsetX: left, position: { X: 'left', Y: 'bottom' },
            close: function () {
                if (!_this.isDocumentClick) {
                    _this.focusDropDown();
                }
                _this.isDocumentClick = false;
                _this.destroyPopup();
            },
            open: function () {
                _this.isPopupOpen = true;
                if (_this.isFilterLayout()) {
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([_this.inputWrapper.container], [dropDownListClasses.inputFocus]);
                    _this.isFilterFocus = true;
                    _this.filterInput.focus();
                    if (_this.inputWrapper.clearButton) {
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([_this.inputWrapper.clearButton], dropDownListClasses.clearIconHide);
                    }
                }
                _this.activeStateChange();
            }
        });
    };
    DropDownList.prototype.isEmptyList = function () {
        return !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.liCollections) && this.liCollections.length === 0;
    };
    DropDownList.prototype.getFocusElement = function () {
    };
    DropDownList.prototype.isFilterLayout = function () {
        return this.getModuleName() === 'dropdownlist' && this.allowFiltering;
    };
    DropDownList.prototype.scrollHandler = function () {
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && ((this.getModuleName() === 'dropdownlist' &&
            !this.isFilterLayout()) || (this.getModuleName() === 'combobox' && !this.allowFiltering && this.isDropDownClick))) {
            this.hidePopup();
        }
    };
    DropDownList.prototype.setSearchBoxPosition = function () {
        var searchBoxHeight = this.filterInput.parentElement.getBoundingClientRect().height;
        this.popupObj.element.style.maxHeight = '100%';
        this.popupObj.element.style.width = '100%';
        this.list.style.maxHeight = (window.innerHeight - searchBoxHeight) + 'px';
        this.list.style.height = (window.innerHeight - searchBoxHeight) + 'px';
        var clearElement = this.filterInput.parentElement.querySelector('.' + dropDownListClasses.clearIcon);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.filterInput);
        clearElement.parentElement.insertBefore(this.filterInput, clearElement);
    };
    DropDownList.prototype.setPopupPosition = function (border) {
        var offsetValue;
        var popupOffset = border;
        var selectedLI = this.list.querySelector('.' + dropDownListClasses.focus) || this.selectedLI;
        var firstItem = this.isEmptyList() ? this.list : this.liCollections[0];
        var lastItem = this.isEmptyList() ? this.list : this.liCollections[this.getItems().length - 1];
        var liHeight = firstItem.getBoundingClientRect().height;
        var listHeight = this.list.offsetHeight / 2;
        var height = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(selectedLI) ? firstItem.offsetTop : selectedLI.offsetTop;
        var lastItemOffsetValue = lastItem.offsetTop;
        if (lastItemOffsetValue - listHeight < height && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.liCollections) &&
            this.liCollections.length > 0 && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(selectedLI)) {
            var count = this.list.offsetHeight / liHeight;
            var paddingBottom = parseInt(getComputedStyle(this.list).paddingBottom, 10);
            offsetValue = (count - (this.liCollections.length - this.activeIndex)) * liHeight - popupOffset + paddingBottom;
            this.list.scrollTop = selectedLI.offsetTop;
        }
        else if (height > listHeight) {
            offsetValue = listHeight - liHeight / 2;
            this.list.scrollTop = height - listHeight + liHeight / 2;
        }
        else {
            offsetValue = height;
        }
        var inputHeight = this.inputWrapper.container.offsetHeight;
        offsetValue = offsetValue + liHeight + popupOffset - ((liHeight - inputHeight) / 2);
        return -offsetValue;
    };
    DropDownList.prototype.setWidth = function () {
        var width = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(this.popupWidth);
        if (width.indexOf('%') > -1) {
            var inputWidth = this.inputWrapper.container.offsetWidth * parseFloat(width) / 100;
            width = inputWidth.toString() + 'px';
        }
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && (!this.allowFiltering && (this.getModuleName() === 'dropdownlist' ||
            (this.isDropDownClick && this.getModuleName() === 'combobox')))) {
            var firstItem = this.isEmptyList() ? this.list : this.liCollections[0];
            width = (parseInt(width, 10) + (parseInt(getComputedStyle(firstItem).textIndent, 10) -
                parseInt(getComputedStyle(this.inputElement).paddingLeft, 10) +
                parseInt(getComputedStyle(this.inputElement.parentElement).borderLeftWidth, 10)) * 2) + 'px';
        }
        return width;
    };
    DropDownList.prototype.scrollBottom = function (isInitial) {
        var currentOffset = this.list.offsetHeight;
        var nextBottom = this.selectedLI.offsetTop + this.selectedLI.offsetHeight - this.list.scrollTop;
        var nextOffset = this.list.scrollTop + nextBottom - currentOffset;
        nextOffset = isInitial ? nextOffset + parseInt(getComputedStyle(this.list).paddingTop, 10) * 2 : nextOffset;
        var boxRange = this.selectedLI.offsetTop + this.selectedLI.offsetHeight - this.list.scrollTop;
        boxRange = this.fields.groupBy && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.fixedHeaderElement) ?
            boxRange - this.fixedHeaderElement.offsetHeight : boxRange;
        if (this.activeIndex === 0) {
            this.list.scrollTop = 0;
        }
        else if (nextBottom > currentOffset || !(boxRange > 0 && this.list.offsetHeight > boxRange)) {
            this.list.scrollTop = nextOffset;
        }
    };
    DropDownList.prototype.scrollTop = function () {
        var nextOffset = this.selectedLI.offsetTop - this.list.scrollTop;
        var nextBottom = this.selectedLI.offsetTop + this.selectedLI.offsetHeight - this.list.scrollTop;
        nextOffset = this.fields.groupBy && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.fixedHeaderElement) ?
            nextOffset - this.fixedHeaderElement.offsetHeight : nextOffset;
        var boxRange = (this.selectedLI.offsetTop + this.selectedLI.offsetHeight - this.list.scrollTop);
        if (this.activeIndex === 0) {
            this.list.scrollTop = 0;
        }
        else if (nextOffset < 0) {
            this.list.scrollTop = this.list.scrollTop + nextOffset;
        }
        else if (!(boxRange > 0 && this.list.offsetHeight > boxRange)) {
            this.list.scrollTop = this.selectedLI.offsetTop - (this.fields.groupBy && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.fixedHeaderElement) ?
                this.fixedHeaderElement.offsetHeight : 0);
        }
    };
    DropDownList.prototype.isEditTextBox = function () {
        return false;
    };
    DropDownList.prototype.isFiltering = function () {
        return this.allowFiltering;
    };
    DropDownList.prototype.isPopupButton = function () {
        return true;
    };
    DropDownList.prototype.setScrollPosition = function (e) {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(e)) {
            switch (e.action) {
                case 'pageDown':
                case 'down':
                case 'end':
                    this.scrollBottom();
                    break;
                default:
                    this.scrollTop();
                    break;
            }
        }
        else {
            this.scrollBottom(true);
        }
    };
    DropDownList.prototype.clearText = function () {
        this.filterInput.value = '';
        this.searchLists(null);
    };
    DropDownList.prototype.listScroll = function () {
        this.filterInput.blur();
    };
    DropDownList.prototype.closePopup = function (delay) {
        this.isTyped = false;
        if (!(this.popupObj && document.body.contains(this.popupObj.element))) {
            return;
        }
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(document, 'mousedown', this.onDocumentClick);
        this.isActive = false;
        this.isDropDownClick = false;
        this.preventAutoFill = false;
        var scrollableParentElements = this.popupObj.getScrollableParent(this.inputWrapper.container);
        for (var _i = 0, scrollableParentElements_1 = scrollableParentElements; _i < scrollableParentElements_1.length; _i++) {
            var element = scrollableParentElements_1[_i];
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(element, 'scroll', this.scrollHandler);
        }
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && this.isFilterLayout()) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([document.body, this.popupObj.element], dropDownListClasses.popupFullScreen);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.list, 'scroll', this.listScroll);
        }
        if (this.isFilterLayout()) {
            if (!__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
                this.searchKeyModule.destroy();
                if (this.clearIconElement) {
                    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.clearIconElement, 'click', this.clearText);
                }
            }
            if (this.backIconElement) {
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.backIconElement, 'click', this.clickOnBackIcon);
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.clearIconElement, 'click', this.clearText);
            }
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.filterInput, 'input', this.onInput);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.filterInput, 'keyup', this.onFilterUp);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.filterInput, 'keydown', this.onFilterDown);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.filterInput, 'blur', this.onBlur);
            this.filterInput = null;
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.targetElement(), { 'aria-expanded': 'false', 'aria-activedescendant': null });
        this.inputWrapper.container.classList.remove(dropDownListClasses.iconAnimation);
        if (this.isFiltering()) {
            this.actionCompleteData.isUpdated = false;
        }
        this.beforePopupOpen = false;
        var eventArgs = { popup: this.popupObj };
        this.trigger('close', eventArgs);
        var animModel = {
            name: 'FadeOut',
            duration: 100,
            delay: delay ? delay : 0
        };
        if (this.getModuleName() === 'autocomplete') {
            this.rippleFun();
        }
        if (this.isPopupOpen) {
            this.popupObj.hide(new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Animation"](animModel));
        }
        else {
            this.destroyPopup();
        }
    };
    DropDownList.prototype.destroyPopup = function () {
        this.isPopupOpen = false;
        this.isFilterFocus = false;
        this.popupObj.destroy();
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.popupObj.element);
    };
    DropDownList.prototype.clickOnBackIcon = function () {
        this.hidePopup();
        this.focusIn();
    };
    DropDownList.prototype.render = function () {
        if (this.element.tagName === 'INPUT') {
            this.inputElement = this.element;
        }
        else {
            this.inputElement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('input');
            if (this.element.tagName !== this.getNgDirective()) {
                this.element.style.display = 'none';
            }
            this.element.parentElement.insertBefore(this.inputElement, this.element);
            this.preventTabIndex(this.inputElement);
        }
        this.inputWrapper = __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].createInput({
            element: this.inputElement,
            buttons: this.isPopupButton() ? [dropDownListClasses.icon] : null,
            floatLabelType: this.floatLabelType,
            properties: {
                readonly: this.getModuleName() === 'dropdownlist' ? true : this.readonly,
                placeholder: this.placeholder,
                cssClass: this.cssClass,
                enabled: this.enabled,
                enableRtl: this.enableRtl,
                showClearButton: this.showClearButton
            },
        });
        if (this.element.tagName === this.getNgDirective()) {
            this.element.appendChild(this.inputWrapper.container);
        }
        else {
            this.inputElement.parentElement.insertBefore(this.element, this.inputElement);
        }
        var name = this.element.getAttribute('name') ? this.element.getAttribute('name') : this.element.getAttribute('id');
        this.hiddenElement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('select', {
            attrs: { 'name': name, 'aria-hidden': 'true' }, styles: 'display:none'
        });
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["prepend"])([this.hiddenElement], this.inputWrapper.container);
        this.element.removeAttribute('name');
        this.setFields();
        this.inputWrapper.container.style.width = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(this.width);
        this.inputWrapper.container.classList.add('e-ddl');
        this.wireEvent();
        this.tabIndex = this.element.hasAttribute('tabindex') ? this.element.getAttribute('tabindex') : '0';
        this.element.removeAttribute('tabindex');
        var id = this.element.getAttribute('id') ? this.element.getAttribute('id') : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getUniqueID"])('ej2_dropdownlist');
        this.element.id = id;
        this.targetElement().setAttribute('tabindex', this.tabIndex);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.targetElement(), this.getAriaAttributes());
        this.setHTMLAttributes();
        if (this.value !== null || this.activeIndex !== null || this.text !== null) {
            this.initValue();
        }
        else if (this.element.tagName === 'SELECT' && this.element.options[0]) {
            var selectElement = this.element;
            this.value = selectElement.options[selectElement.selectedIndex].value;
            this.text = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.value) ? null : selectElement.options[selectElement.selectedIndex].textContent;
            this.initValue();
        }
        this.preventTabIndex(this.element);
        if (!this.enabled) {
            this.targetElement().tabIndex = -1;
        }
        this.initial = false;
        this.element.style.opacity = '';
    };
    ;
    DropDownList.prototype.setFooterTemplate = function (popupEle) {
        var compiledString;
        if (this.footer) {
            this.footer.innerHTML = '';
        }
        else {
            this.footer = document.createElement('div');
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.footer], dropDownListClasses.footer);
        }
        compiledString = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["compile"])(this.footerTemplate);
        for (var _i = 0, _a = compiledString({}); _i < _a.length; _i++) {
            var item = _a[_i];
            this.footer.appendChild(item);
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["append"])([this.footer], popupEle);
    };
    DropDownList.prototype.setOldText = function (text) {
        this.text = text;
    };
    DropDownList.prototype.setOldValue = function (value) {
        this.value = value;
    };
    DropDownList.prototype.refreshPopup = function () {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.popupObj) && document.body.contains(this.popupObj.element) &&
            ((this.allowFiltering && !(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && this.isFilterLayout())) || this.getModuleName() === 'autocomplete')) {
            this.popupObj.refreshPosition();
        }
    };
    DropDownList.prototype.onPropertyChanged = function (newProp, oldProp) {
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'htmlAttributes':
                    this.setHTMLAttributes();
                    break;
                case 'width':
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.inputWrapper.container, { 'width': __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(newProp.width) });
                    break;
                case 'placeholder':
                    __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].setPlaceholder(newProp.placeholder, this.inputElement);
                    break;
                case 'filterBarPlaceholder':
                    __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].setPlaceholder(newProp.filterBarPlaceholder, this.filterInput);
                    break;
                case 'readonly':
                    __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].setReadonly(newProp.readonly, this.inputElement);
                    break;
                case 'cssClass':
                    __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].setCssClass(newProp.cssClass, [this.inputWrapper.container]);
                    if (this.popupObj) {
                        this.popupObj.element.classList.add(newProp.cssClass);
                    }
                    break;
                case 'enableRtl':
                    this.setEnableRtl();
                    break;
                case 'enabled':
                    this.setEnable();
                    break;
                case 'text':
                    if (newProp.text === null) {
                        this.clear();
                        return;
                    }
                    if (!this.list) {
                        if (this.dataSource instanceof __WEBPACK_IMPORTED_MODULE_5__syncfusion_ej2_data__["DataManager"]) {
                            this.initRemoteRender = true;
                        }
                        this.renderList();
                    }
                    if (!this.initRemoteRender) {
                        var li = this.getElementByText(newProp.text);
                        if (this.isValidLI(li)) {
                            this.setSelection(li, null);
                        }
                        else {
                            this.setOldText(oldProp.text);
                        }
                    }
                    break;
                case 'value':
                    if (newProp.value === null) {
                        this.clear();
                        return;
                    }
                    if (!this.list) {
                        if (this.dataSource instanceof __WEBPACK_IMPORTED_MODULE_5__syncfusion_ej2_data__["DataManager"]) {
                            this.initRemoteRender = true;
                        }
                        this.renderList();
                    }
                    if (!this.initRemoteRender) {
                        var item = this.getElementByValue(newProp.value);
                        if (this.isValidLI(item)) {
                            this.setSelection(item, null);
                        }
                        else {
                            this.setOldValue(oldProp.value);
                        }
                    }
                    break;
                case 'index':
                    if (newProp.index === null) {
                        this.clear();
                        return;
                    }
                    if (!this.list) {
                        if (this.dataSource instanceof __WEBPACK_IMPORTED_MODULE_5__syncfusion_ej2_data__["DataManager"]) {
                            this.initRemoteRender = true;
                        }
                        this.renderList();
                    }
                    if (!this.initRemoteRender) {
                        var element = this.liCollections[newProp.index];
                        if (this.isValidLI(element)) {
                            this.setSelection(element, null);
                        }
                        else {
                            this.index = oldProp.index;
                        }
                    }
                    break;
                case 'query':
                case 'dataSource':
                    this.clear();
                    this.resetList(this.dataSource);
                    break;
                case 'footerTemplate':
                    if (this.popupObj) {
                        this.setFooterTemplate(this.popupObj.element);
                    }
                    break;
                case 'floatLabelType':
                    __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].removeFloating(this.inputWrapper);
                    __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].addFloating(this.inputElement, newProp.floatLabelType, this.placeholder);
                    break;
                default:
                    var ddlProps = void 0;
                    ddlProps = this.getPropObject(prop, newProp, oldProp);
                    _super.prototype.onPropertyChanged.call(this, ddlProps.newProperty, ddlProps.oldProperty);
                    break;
            }
        }
    };
    DropDownList.prototype.getModuleName = function () {
        return 'dropdownlist';
    };
    DropDownList.prototype.showPopup = function () {
        if (this.beforePopupOpen) {
            this.refreshPopup();
            return;
        }
        this.beforePopupOpen = true;
        if (this.isFiltering() && !this.isActive && this.actionCompleteData.list && this.actionCompleteData.list[0]) {
            this.isActive = true;
            this.onActionComplete(this.actionCompleteData.ulElement, this.actionCompleteData.list, null, true);
        }
        else if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.list) || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isUndefined"])(this.list) && this.list.classList.contains(__WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].noData)) {
            this.renderList();
        }
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && this.isFilterLayout()) {
            var proxy_1 = this;
            window.onpopstate = function () {
                proxy_1.hidePopup();
            };
            history.pushState({}, '');
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.list.children[0]) || this.list.classList.contains(__WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["a" /* dropDownBaseClasses */].noData)) {
            this.renderPopup();
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.targetElement(), { 'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null });
    };
    DropDownList.prototype.hidePopup = function () {
        if (this.isEscapeKey && this.getModuleName() === 'dropdownlist') {
            __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);
            this.isEscapeKey = false;
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.index)) {
                this.selectedLI = this.liCollections[this.index];
                this.updateSelectedItem(this.selectedLI, null, true);
                if (this.valueTemplate && this.itemData !== null) {
                    this.setValueTemplate();
                }
            }
            else {
                this.resetSelection();
            }
        }
        this.closePopup();
        var dataItem = this.getItemData();
        if (this.inputElement.value.trim() === '' && !this.isInteracted && (this.isSelectCustom ||
            !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.selectedLI) && this.inputElement.value !== dataItem.text)) {
            this.isSelectCustom = false;
            this.clear();
        }
    };
    DropDownList.prototype.focusIn = function () {
        if (this.targetElement().classList.contains(dropDownListClasses.disable)) {
            return;
        }
        var isFocused = false;
        if (this.preventFocus && __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
            this.inputWrapper.container.tabIndex = 1;
            this.inputWrapper.container.focus();
            this.preventFocus = false;
            isFocused = true;
        }
        if (!isFocused) {
            this.targetElement().focus();
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.inputWrapper.container], [dropDownListClasses.inputFocus]);
        this.onFocus();
    };
    DropDownList.prototype.focusOut = function () {
        this.isTyped = true;
        this.hidePopup();
        this.targetElement().blur();
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.inputWrapper.container], [dropDownListClasses.inputFocus]);
    };
    DropDownList.prototype.destroy = function () {
        var _this = this;
        this.isActive = false;
        this.hidePopup();
        this.unWireEvent();
        if (this.list) {
            this.unWireListEvents();
        }
        ['readonly', 'aria-disabled', 'aria-placeholder', 'placeholder'].forEach(function (value) {
            _this.inputElement.removeAttribute(value);
        });
        this.inputElement.setAttribute('tabindex', this.tabIndex);
        this.inputElement.classList.remove('e-input');
        __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_inputs__["Input"].setValue('', this.inputElement, this.floatLabelType, this.showClearButton);
        this.element.style.display = 'block';
        if (this.inputWrapper.container.parentElement.tagName === this.getNgDirective()) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.inputWrapper.container);
        }
        else {
            this.inputWrapper.container.parentElement.insertBefore(this.element, this.inputWrapper.container);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.inputWrapper.container);
        }
        _super.prototype.destroy.call(this);
    };
    ;
    return DropDownList;
}(__WEBPACK_IMPORTED_MODULE_4__drop_down_base_drop_down_base__["b" /* DropDownBase */]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], DropDownList.prototype, "cssClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('100%')
], DropDownList.prototype, "width", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('300px')
], DropDownList.prototype, "popupHeight", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('100%')
], DropDownList.prototype, "popupWidth", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], DropDownList.prototype, "placeholder", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], DropDownList.prototype, "filterBarPlaceholder", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])({})
], DropDownList.prototype, "htmlAttributes", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], DropDownList.prototype, "query", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], DropDownList.prototype, "valueTemplate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], DropDownList.prototype, "headerTemplate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], DropDownList.prototype, "footerTemplate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], DropDownList.prototype, "allowFiltering", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], DropDownList.prototype, "readonly", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], DropDownList.prototype, "text", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], DropDownList.prototype, "value", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], DropDownList.prototype, "index", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('Never')
], DropDownList.prototype, "floatLabelType", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], DropDownList.prototype, "showClearButton", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], DropDownList.prototype, "filtering", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], DropDownList.prototype, "change", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], DropDownList.prototype, "open", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], DropDownList.prototype, "close", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], DropDownList.prototype, "blur", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], DropDownList.prototype, "focus", void 0);
DropDownList = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], DropDownList);



/***/ }),
/* 93 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mask_base__ = __webpack_require__(223);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["b"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["c"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["d"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "e", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["e"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "f", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["f"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "g", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["g"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "h", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["h"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "i", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["i"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "j", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["j"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "k", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["k"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "l", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["l"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "m", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["m"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "n", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["n"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "o", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["o"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "p", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["p"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "q", function() { return __WEBPACK_IMPORTED_MODULE_0__mask_base__["q"]; });



/***/ }),
/* 94 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfLinkAnnotation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__annotation__ = __webpack_require__(147);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_name__ = __webpack_require__(5);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var PdfLinkAnnotation = (function (_super) {
    __extends(PdfLinkAnnotation, _super);
    function PdfLinkAnnotation(rectangle) {
        var _this = this;
        if (typeof rectangle === 'undefined') {
            _this = _super.call(this) || this;
        }
        else {
            _this = _super.call(this, rectangle) || this;
        }
        return _this;
    }
    PdfLinkAnnotation.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.link));
    };
    return PdfLinkAnnotation;
}(__WEBPACK_IMPORTED_MODULE_0__annotation__["a" /* PdfAnnotation */]));



/***/ }),
/* 95 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfTextWebLink; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pages_pdf_page__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__graphics_figures_text_element__ = __webpack_require__(161);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__uri_annotation__ = __webpack_require__(148);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__graphics_fonts_string_layouter__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__graphics_fonts_enum__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__graphics_enum__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__primitives_pdf_array__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__primitives_pdf_number__ = __webpack_require__(13);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();









var PdfTextWebLink = (function (_super) {
    __extends(PdfTextWebLink, _super);
    function PdfTextWebLink() {
        var _this = _super.call(this) || this;
        _this.uniformResourceLocator = '';
        _this.uriAnnotation = null;
        _this.recalculateBounds = false;
        _this.defaultBorder = new __WEBPACK_IMPORTED_MODULE_7__primitives_pdf_array__["a" /* PdfArray */]();
        for (var i = 0; i < 3; i++) {
            _this.defaultBorder.add(new __WEBPACK_IMPORTED_MODULE_8__primitives_pdf_number__["a" /* PdfNumber */](0));
        }
        return _this;
    }
    Object.defineProperty(PdfTextWebLink.prototype, "url", {
        get: function () {
            return this.uniformResourceLocator;
        },
        set: function (value) {
            if (value.length === 0) {
                throw new Error('ArgumentException : Url - string can not be empty');
            }
            this.uniformResourceLocator = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfTextWebLink.prototype.draw = function (arg1, arg2) {
        if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_0__pages_pdf_page__["a" /* PdfPage */]) {
            var layout = new __WEBPACK_IMPORTED_MODULE_4__graphics_fonts_string_layouter__["a" /* PdfStringLayouter */]();
            var previousFontStyle = this.font.style;
            if (arg2 instanceof __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["a" /* PointF */]) {
                this.recalculateBounds = true;
                this.font.style = __WEBPACK_IMPORTED_MODULE_5__graphics_fonts_enum__["a" /* PdfFontStyle */].Underline;
                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["b" /* SizeF */]((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);
                if (layoutResult.lines.length === 1) {
                    var textSize = this.font.measureString(this.value);
                    var rect = new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["c" /* RectangleF */](arg2, textSize);
                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);
                    this.uriAnnotation = new __WEBPACK_IMPORTED_MODULE_3__uri_annotation__["a" /* PdfUriAnnotation */](rect, this.url);
                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);
                    arg1.annotations.add(this.uriAnnotation);
                    var result = this.drawText(arg1, arg2);
                    this.font.style = previousFontStyle;
                    return result;
                }
                else {
                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);
                    this.font.style = previousFontStyle;
                    return result;
                }
            }
            else {
                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["b" /* SizeF */](arg2.width, 0), false, new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["b" /* SizeF */](0, 0));
                this.font.style = __WEBPACK_IMPORTED_MODULE_5__graphics_fonts_enum__["a" /* PdfFontStyle */].Underline;
                if (layoutResult.lines.length === 1) {
                    var textSize = this.font.measureString(this.value);
                    var rect = new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["c" /* RectangleF */](new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["a" /* PointF */](arg2.x, arg2.y), textSize);
                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);
                    this.uriAnnotation = new __WEBPACK_IMPORTED_MODULE_3__uri_annotation__["a" /* PdfUriAnnotation */](rect, this.url);
                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);
                    arg1.annotations.add(this.uriAnnotation);
                    var returnValue = this.drawText(arg1, arg2);
                    this.font.style = previousFontStyle;
                    return returnValue;
                }
                else {
                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);
                    this.font.style = previousFontStyle;
                    return returnValue;
                }
            }
        }
        else {
            var page = new __WEBPACK_IMPORTED_MODULE_0__pages_pdf_page__["a" /* PdfPage */]();
            page = arg1.page;
            return this.draw(page, arg2);
        }
    };
    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {
        var layoutResult;
        for (var i = 0; i < result.layoutLines.length; i++) {
            var size = this.font.measureString(result.lines[i].text);
            var bounds = new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["c" /* RectangleF */](location, size);
            if (i !== 0) {
                bounds.x = 0;
            }
            this.text = result.lines[i].text;
            if (bounds.y + size.height > page.graphics.clientSize.height) {
                if (i !== 0) {
                    page = page.graphics.getNextPage();
                    bounds = new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["c" /* RectangleF */](0, 0, page.graphics.clientSize.width, size.height);
                    location.y = 0;
                }
                else {
                    break;
                }
            }
            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);
            this.uriAnnotation = new __WEBPACK_IMPORTED_MODULE_3__uri_annotation__["a" /* PdfUriAnnotation */](bounds, this.url);
            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);
            page.annotations.add(this.uriAnnotation);
            if (i !== 0) {
                layoutResult = this.drawText(page, new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["a" /* PointF */](0, bounds.y));
            }
            else {
                layoutResult = this.drawText(page, bounds.x, bounds.y);
            }
            location.y += size.height;
        }
        return layoutResult;
    };
    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {
        var layoutResult;
        for (var i = 0; i < result.layoutLines.length; i++) {
            var size = this.font.measureString(result.lines[i].text);
            var internalBounds = new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["c" /* RectangleF */](new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["a" /* PointF */](bounds.x, bounds.y), size);
            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);
            this.text = result.lines[i].text;
            if (bounds.y + size.height > page.graphics.clientSize.height) {
                if (i !== 0) {
                    page = page.graphics.getNextPage();
                    bounds = new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["c" /* RectangleF */](bounds.x, 0, bounds.width, size.height);
                    internalBounds.y = 0;
                }
                else {
                    break;
                }
            }
            this.uriAnnotation = new __WEBPACK_IMPORTED_MODULE_3__uri_annotation__["a" /* PdfUriAnnotation */](internalBounds, this.url);
            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);
            page.annotations.add(this.uriAnnotation);
            layoutResult = this.drawText(page, bounds);
            bounds.y += size.height;
        }
        return layoutResult;
    };
    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {
        var shift = 0;
        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === __WEBPACK_IMPORTED_MODULE_6__graphics_enum__["c" /* PdfTextAlignment */].Center) {
            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;
            currentBounds.width = lineWidth;
        }
        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === __WEBPACK_IMPORTED_MODULE_6__graphics_enum__["c" /* PdfTextAlignment */].Right) {
            currentBounds.x = startPosition + (maximumWidth - lineWidth);
            currentBounds.width = lineWidth;
        }
        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === __WEBPACK_IMPORTED_MODULE_6__graphics_enum__["c" /* PdfTextAlignment */].Justify) {
            currentBounds.x = startPosition;
            currentBounds.width = maximumWidth;
        }
        else {
            currentBounds.width = startPosition;
            currentBounds.width = lineWidth;
        }
        return currentBounds;
    };
    return PdfTextWebLink;
}(__WEBPACK_IMPORTED_MODULE_2__graphics_figures_text_element__["a" /* PdfTextElement */]));



/***/ }),
/* 96 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfAutomaticField; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__graphics_brushes_pdf_solid_brush__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__graphics_pdf_color__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pdf_document__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__graphics_figures_base_graphics_element__ = __webpack_require__(243);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__automatic_field_info__ = __webpack_require__(150);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






var PdfAutomaticField = (function (_super) {
    __extends(PdfAutomaticField, _super);
    function PdfAutomaticField() {
        var _this = _super.call(this) || this;
        _this.internalBounds = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["c" /* RectangleF */](0, 0, 0, 0);
        _this.internalTemplateSize = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](0, 0);
        return _this;
    }
    Object.defineProperty(PdfAutomaticField.prototype, "bounds", {
        get: function () {
            return this.internalBounds;
        },
        set: function (value) {
            this.internalBounds = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticField.prototype, "size", {
        get: function () {
            return new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](this.bounds.width, this.bounds.height);
        },
        set: function (value) {
            this.bounds.width = value.width;
            this.bounds.height = value.height;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticField.prototype, "location", {
        get: function () {
            return new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */](this.bounds.x, this.bounds.y);
        },
        set: function (value) {
            this.bounds.x = value.x;
            this.bounds.y = value.y;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticField.prototype, "font", {
        get: function () {
            return this.internalFont;
        },
        set: function (value) {
            this.internalFont = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticField.prototype, "brush", {
        get: function () {
            return this.internalBrush;
        },
        set: function (value) {
            this.internalBrush = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticField.prototype, "pen", {
        get: function () {
            return this.internalPen;
        },
        set: function (value) {
            this.internalPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticField.prototype, "stringFormat", {
        get: function () {
            return this.internalStringFormat;
        },
        set: function (value) {
            this.internalStringFormat = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {
        if (this.bounds.height === 0 || this.bounds.width === 0) {
            var text = this.getValue(graphics);
            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);
        }
    };
    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {
        if (typeof arg2 === 'undefined') {
            var location_1 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */](0, 0);
            this.draw(arg1, location_1);
        }
        else if (arg2 instanceof __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */]) {
            this.draw(arg1, arg2.x, arg2.y);
        }
        else {
            this.drawHelper(arg1, arg2, arg3);
            var info = new __WEBPACK_IMPORTED_MODULE_5__automatic_field_info__["a" /* PdfAutomaticFieldInfo */](this, new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */](arg2, arg3));
            arg1.automaticFields.add(info);
        }
    };
    PdfAutomaticField.prototype.getSize = function () {
        if (this.bounds.height === 0 || this.bounds.width === 0) {
            return this.internalTemplateSize;
        }
        else {
            return this.size;
        }
    };
    PdfAutomaticField.prototype.drawInternal = function (graphics) {
    };
    PdfAutomaticField.prototype.getBrush = function () {
        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new __WEBPACK_IMPORTED_MODULE_1__graphics_brushes_pdf_solid_brush__["a" /* PdfSolidBrush */](new __WEBPACK_IMPORTED_MODULE_2__graphics_pdf_color__["a" /* PdfColor */](0, 0, 0)) : this.internalBrush;
    };
    PdfAutomaticField.prototype.getFont = function () {
        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? __WEBPACK_IMPORTED_MODULE_3__pdf_document__["a" /* PdfDocument */].defaultFont : this.internalFont;
    };
    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {
        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {
            var page = graphics.page;
            return page;
        }
        else {
            var page = graphics.currentPage;
            return page;
        }
    };
    return PdfAutomaticField;
}(__WEBPACK_IMPORTED_MODULE_4__graphics_figures_base_graphics_element__["a" /* PdfGraphicsElement */]));



/***/ }),
/* 97 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfCatalog; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__input_output_pdf_dictionary_properties__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_reference__ = __webpack_require__(17);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var PdfCatalog = (function (_super) {
    __extends(PdfCatalog, _super);
    function PdfCatalog() {
        var _this = _super.call(this) || this;
        _this.sections = null;
        _this.tempDictionaryProperties = new __WEBPACK_IMPORTED_MODULE_1__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        _this.items.setValue(new __WEBPACK_IMPORTED_MODULE_1__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]().type, new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_name__["a" /* PdfName */]('Catalog'));
        return _this;
    }
    Object.defineProperty(PdfCatalog.prototype, "pages", {
        get: function () {
            return this.sections;
        },
        set: function (value) {
            var dictionary = value.element;
            this.sections = value;
            this.items.setValue(this.tempDictionaryProperties.pages, new __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_reference__["b" /* PdfReferenceHolder */](value));
        },
        enumerable: true,
        configurable: true
    });
    return PdfCatalog;
}(__WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__["a" /* PdfDictionary */]));



/***/ }),
/* 98 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfDocumentTemplate; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pages_enum__ = __webpack_require__(26);

var PdfDocumentTemplate = (function () {
    function PdfDocumentTemplate() {
    }
    Object.defineProperty(PdfDocumentTemplate.prototype, "left", {
        get: function () {
            return this.leftTemplate;
        },
        set: function (value) {
            this.leftTemplate = this.checkElement(value, __WEBPACK_IMPORTED_MODULE_0__pages_enum__["f" /* TemplateType */].Left);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "top", {
        get: function () {
            return this.topTemplate;
        },
        set: function (value) {
            this.topTemplate = this.checkElement(value, __WEBPACK_IMPORTED_MODULE_0__pages_enum__["f" /* TemplateType */].Top);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "right", {
        get: function () {
            return this.rightTemplate;
        },
        set: function (value) {
            this.rightTemplate = this.checkElement(value, __WEBPACK_IMPORTED_MODULE_0__pages_enum__["f" /* TemplateType */].Right);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "bottom", {
        get: function () {
            return this.bottomTemplate;
        },
        set: function (value) {
            this.bottomTemplate = this.checkElement(value, __WEBPACK_IMPORTED_MODULE_0__pages_enum__["f" /* TemplateType */].Bottom);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "EvenLeft", {
        get: function () {
            return this.evenLeft;
        },
        set: function (value) {
            this.evenLeft = this.checkElement(value, __WEBPACK_IMPORTED_MODULE_0__pages_enum__["f" /* TemplateType */].Left);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "EvenTop", {
        get: function () {
            return this.evenTop;
        },
        set: function (value) {
            this.evenTop = this.checkElement(value, __WEBPACK_IMPORTED_MODULE_0__pages_enum__["f" /* TemplateType */].Top);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "EvenRight", {
        get: function () {
            return this.evenRight;
        },
        set: function (value) {
            this.evenRight = this.checkElement(value, __WEBPACK_IMPORTED_MODULE_0__pages_enum__["f" /* TemplateType */].Right);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "EvenBottom", {
        get: function () {
            return this.evenBottom;
        },
        set: function (value) {
            this.evenBottom = this.checkElement(value, __WEBPACK_IMPORTED_MODULE_0__pages_enum__["f" /* TemplateType */].Bottom);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "OddLeft", {
        get: function () {
            return this.oddLeft;
        },
        set: function (value) {
            this.oddLeft = this.checkElement(value, __WEBPACK_IMPORTED_MODULE_0__pages_enum__["f" /* TemplateType */].Left);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "OddTop", {
        get: function () {
            return this.oddTop;
        },
        set: function (value) {
            this.oddTop = this.checkElement(value, __WEBPACK_IMPORTED_MODULE_0__pages_enum__["f" /* TemplateType */].Top);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "OddRight", {
        get: function () {
            return this.oddRight;
        },
        set: function (value) {
            this.oddRight = this.checkElement(value, __WEBPACK_IMPORTED_MODULE_0__pages_enum__["f" /* TemplateType */].Right);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "OddBottom", {
        get: function () {
            return this.oddBottom;
        },
        set: function (value) {
            this.oddBottom = this.checkElement(value, __WEBPACK_IMPORTED_MODULE_0__pages_enum__["f" /* TemplateType */].Bottom);
        },
        enumerable: true,
        configurable: true
    });
    PdfDocumentTemplate.prototype.getLeft = function (page) {
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var template = null;
        var even = this.isEven(page);
        if (even) {
            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;
        }
        else {
            template = (this.OddLeft != null) ? this.OddLeft : this.left;
        }
        return template;
    };
    PdfDocumentTemplate.prototype.getTop = function (page) {
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var template = null;
        var even = this.isEven(page);
        if (even) {
            template = (this.EvenTop != null) ? this.EvenTop : this.top;
        }
        else {
            template = (this.OddTop != null) ? this.OddTop : this.top;
        }
        return template;
    };
    PdfDocumentTemplate.prototype.getRight = function (page) {
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var template = null;
        var even = this.isEven(page);
        if (even) {
            template = (this.EvenRight != null) ? this.EvenRight : this.right;
        }
        else {
            template = (this.OddRight != null) ? this.OddRight : this.right;
        }
        return template;
    };
    PdfDocumentTemplate.prototype.getBottom = function (page) {
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var template = null;
        var even = this.isEven(page);
        if (even) {
            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;
        }
        else {
            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;
        }
        return template;
    };
    PdfDocumentTemplate.prototype.isEven = function (page) {
        var pages = page.section.document.pages;
        var index = 0;
        if (pages.pageCollectionIndex.containsKey(page)) {
            index = pages.pageCollectionIndex.getValue(page) + 1;
        }
        else {
            index = pages.indexOf(page) + 1;
        }
        var even = ((index % 2) === 0);
        return even;
    };
    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {
        if (templateElement != null) {
            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== __WEBPACK_IMPORTED_MODULE_0__pages_enum__["f" /* TemplateType */].None)) {
                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');
            }
            templateElement.type = type;
        }
        return templateElement;
    };
    return PdfDocumentTemplate;
}());



/***/ }),
/* 99 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfLayoutElement; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base_element_layouter__ = __webpack_require__(38);


var PdfLayoutElement = (function () {
    function PdfLayoutElement() {
    }
    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {
        if (arg3 instanceof __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */] && typeof arg3.width === 'undefined' && typeof arg3 === 'undefined') {
            return this.drawHelper(arg2, arg3.x, arg3.y);
        }
        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {
            return this.drawHelper(arg2, arg3, arg4, null);
        }
        else if (arg3 instanceof __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["c" /* RectangleF */] && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {
            return this.drawHelper(arg2, arg3, null);
        }
        else if (arg3 instanceof __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */] && typeof arg3.width === 'undefined' && arg4 instanceof __WEBPACK_IMPORTED_MODULE_1__base_element_layouter__["b" /* PdfLayoutFormat */]) {
            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);
        }
        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof __WEBPACK_IMPORTED_MODULE_1__base_element_layouter__["b" /* PdfLayoutFormat */] || arg5 == null)) {
            var width = (arg2.graphics.clientSize.width - arg3);
            var layoutRectangle = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["c" /* RectangleF */](arg3, arg4, width, 0);
            return this.drawHelper(arg2, layoutRectangle, arg5);
        }
        else if (arg3 instanceof __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["c" /* RectangleF */] && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {
            this.bEmbedFonts = arg4;
            return this.drawHelper(arg2, arg3, null);
        }
        else {
            var param = new __WEBPACK_IMPORTED_MODULE_1__base_element_layouter__["c" /* PdfLayoutParams */]();
            var temparg3 = arg3;
            var temparg4 = arg4;
            param.page = arg2;
            param.bounds = temparg3;
            param.format = (temparg4 != null) ? temparg4 : new __WEBPACK_IMPORTED_MODULE_1__base_element_layouter__["b" /* PdfLayoutFormat */]();
            var result = this.layout(param);
            return result;
        }
    };
    return PdfLayoutElement;
}());



/***/ }),
/* 100 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ByteArray; });
var ByteArray = (function () {
    function ByteArray(length) {
        this.mPosition = 0;
        this.buffer = new Uint8Array(length);
        this.dataView = new DataView(this.buffer.buffer);
    }
    Object.defineProperty(ByteArray.prototype, "position", {
        get: function () {
            return this.mPosition;
        },
        set: function (value) {
            this.mPosition = value;
        },
        enumerable: true,
        configurable: true
    });
    ByteArray.prototype.read = function (buffer, offset, count) {
        for (var index = offset; index < count; index++) {
            var position = this.position;
            buffer.buffer[index] = this.readByte(position);
            this.position++;
        }
    };
    ByteArray.prototype.getBuffer = function (index) {
        return this.buffer[index];
    };
    ByteArray.prototype.writeFromBase64String = function (base64) {
        var arr = this.encodedString(base64);
        this.buffer = arr;
    };
    ByteArray.prototype.encodedString = function (input) {
        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
        var chr1;
        var chr2;
        var chr3;
        var enc1;
        var enc2;
        var enc3;
        var enc4;
        var i = 0;
        var resultIndex = 0;
        var dataUrlPrefix = 'data:';
        input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');
        var totalLength = input.length * 3 / 4;
        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {
            totalLength--;
        }
        var output = new Uint8Array(totalLength | 0);
        while (i < input.length) {
            enc1 = keyStr.indexOf(input.charAt(i++));
            enc2 = keyStr.indexOf(input.charAt(i++));
            enc3 = keyStr.indexOf(input.charAt(i++));
            enc4 = keyStr.indexOf(input.charAt(i++));
            chr1 = (enc1 << 2) | (enc2 >> 4);
            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
            chr3 = ((enc3 & 3) << 6) | enc4;
            output[resultIndex++] = chr1;
            output[resultIndex++] = chr2;
            output[resultIndex++] = chr3;
        }
        return output;
    };
    ByteArray.prototype.readByte = function (offset) {
        return (this.buffer[offset]);
    };
    Object.defineProperty(ByteArray.prototype, "internalBuffer", {
        get: function () {
            return this.buffer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ByteArray.prototype, "count", {
        get: function () {
            return this.buffer.byteLength;
        },
        enumerable: true,
        configurable: true
    });
    return ByteArray;
}());



/***/ }),
/* 101 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfBitmap; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__graphics_images_image_decoder__ = __webpack_require__(164);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__graphics_images_byte_array__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__input_output_pdf_dictionary_properties__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pdf_image__ = __webpack_require__(65);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var PdfBitmap = (function (_super) {
    __extends(PdfBitmap, _super);
    function PdfBitmap(encodedString) {
        var _this = _super.call(this) || this;
        _this.imageStatus = true;
        _this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_2__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        _this.loadImage(encodedString);
        return _this;
    }
    PdfBitmap.prototype.loadImage = function (encodedString) {
        var task = this.initializeAsync(encodedString);
    };
    PdfBitmap.prototype.initializeAsync = function (encodedString) {
        var byteArray = new __WEBPACK_IMPORTED_MODULE_1__graphics_images_byte_array__["a" /* ByteArray */](encodedString.length);
        byteArray.writeFromBase64String(encodedString);
        this.decoder = new __WEBPACK_IMPORTED_MODULE_0__graphics_images_image_decoder__["b" /* ImageDecoder */](byteArray);
        this.height = this.decoder.height;
        this.width = this.decoder.width;
        this.bitsPerComponent = this.decoder.bitsPerComponent;
    };
    PdfBitmap.prototype.save = function () {
        this.imageStatus = true;
        this.imageStream = this.decoder.getImageDictionary();
    };
    return PdfBitmap;
}(__WEBPACK_IMPORTED_MODULE_3__pdf_image__["a" /* PdfImage */]));



/***/ }),
/* 102 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfResources; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Guid; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__collections_object_object_pair_dictionary__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_array__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_reference__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__input_output_pdf_cross_table__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__fonts_pdf_font__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__figures_pdf_template__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__brushes_pdf_brush__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__pdf_transparency__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__graphics_images_pdf_bitmap__ = __webpack_require__(101);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__graphics_images_pdf_image__ = __webpack_require__(65);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();












var PdfResources = (function (_super) {
    __extends(PdfResources, _super);
    function PdfResources(baseDictionary) {
        var _this = _super.call(this) || this;
        _this.properties = new __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__["a" /* PdfDictionary */]();
        if (baseDictionary instanceof __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__["a" /* PdfDictionary */]) {
            _this = _super.call(this, baseDictionary) || this;
        }
        return _this;
    }
    Object.defineProperty(PdfResources.prototype, "names", {
        get: function () {
            return this.getNames();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfResources.prototype, "document", {
        get: function () {
            return this.pdfDocument;
        },
        set: function (value) {
            this.pdfDocument = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfResources.prototype.getName = function (obj) {
        var primitive = obj.element;
        var name = null;
        if (this.names.containsKey(primitive)) {
            name = this.names.getValue(primitive);
        }
        if (name == null) {
            var sName = this.generateName();
            name = new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_name__["a" /* PdfName */](sName);
            this.names.setValue(primitive, name);
            if (obj instanceof __WEBPACK_IMPORTED_MODULE_6__fonts_pdf_font__["a" /* PdfFont */]) {
                this.add(obj, name);
            }
            else if (obj instanceof __WEBPACK_IMPORTED_MODULE_7__figures_pdf_template__["a" /* PdfTemplate */]) {
                this.add(obj, name);
            }
            else if (obj instanceof __WEBPACK_IMPORTED_MODULE_9__pdf_transparency__["a" /* PdfTransparency */]) {
                this.add(obj, name);
            }
            else if (obj instanceof __WEBPACK_IMPORTED_MODULE_11__graphics_images_pdf_image__["a" /* PdfImage */] || obj instanceof __WEBPACK_IMPORTED_MODULE_10__graphics_images_pdf_bitmap__["a" /* PdfBitmap */]) {
                this.add(obj, name);
            }
        }
        return name;
    };
    PdfResources.prototype.getNames = function () {
        if (this.pdfNames == null) {
            this.pdfNames = new __WEBPACK_IMPORTED_MODULE_1__collections_object_object_pair_dictionary__["a" /* TemporaryDictionary */]();
        }
        var fonts = this.items.getValue(this.dictionaryProperties.font);
        if (fonts != null) {
            var reference = fonts;
            var dictionary = fonts;
            dictionary = __WEBPACK_IMPORTED_MODULE_5__input_output_pdf_cross_table__["a" /* PdfCrossTable */].dereference(fonts);
        }
        return this.pdfNames;
    };
    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {
        if (procedureSetName == null) {
            throw new Error('ArgumentNullException:procedureSetName');
        }
        var procSets = this.items.getValue(this.dictionaryProperties.procset);
        if (procSets == null) {
            procSets = new __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_array__["a" /* PdfArray */]();
            this.items.setValue(this.dictionaryProperties.procset, procSets);
        }
        var name = new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_name__["a" /* PdfName */](procedureSetName);
        if (!procSets.contains(name)) {
            procSets.add(name);
        }
    };
    PdfResources.prototype.removeFont = function (name) {
        var key = null;
        var keys = this.pdfNames.keys();
        for (var index = 0; index < this.pdfNames.size(); index++) {
            if (this.pdfNames.getValue(keys[index]) === new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_name__["a" /* PdfName */](name)) {
                key = keys[index];
                break;
            }
        }
        if (key != null) {
            this.pdfNames.remove(key);
        }
    };
    PdfResources.prototype.generateName = function () {
        var name = Guid.getNewGuidString();
        return name;
    };
    PdfResources.prototype.add = function (arg1, arg2) {
        if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_6__fonts_pdf_font__["a" /* PdfFont */]) {
            var dictionary = null;
            var fonts = this.items.getValue(this.dictionaryProperties.font);
            if (fonts != null) {
                var reference = fonts;
                dictionary = fonts;
                dictionary = fonts;
            }
            else {
                dictionary = new __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__["a" /* PdfDictionary */]();
                this.items.setValue(this.dictionaryProperties.font, dictionary);
            }
            dictionary.items.setValue(arg2.value, new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_reference__["b" /* PdfReferenceHolder */](arg1.element));
        }
        else if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_7__figures_pdf_template__["a" /* PdfTemplate */]) {
            var xobjects = void 0;
            xobjects = this.items.getValue(this.dictionaryProperties.xObject);
            if (xobjects == null) {
                xobjects = new __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__["a" /* PdfDictionary */]();
                this.items.setValue(this.dictionaryProperties.xObject, xobjects);
            }
            xobjects.items.setValue(arg2.value, new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_reference__["b" /* PdfReferenceHolder */](arg1.element));
        }
        else if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_8__brushes_pdf_brush__["a" /* PdfBrush */]) {
        }
        else if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_9__pdf_transparency__["a" /* PdfTransparency */]) {
            var savable = arg1.element;
            var transDic = null;
            transDic = this.items.getValue(this.dictionaryProperties.extGState);
            if (transDic == null) {
                transDic = new __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__["a" /* PdfDictionary */]();
                this.items.setValue(this.dictionaryProperties.extGState, transDic);
            }
            transDic.items.setValue(arg2.value, new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_reference__["b" /* PdfReferenceHolder */](savable));
        }
        else {
            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);
            var parentXObjects = void 0;
            if (typeof this.pdfDocument !== 'undefined') {
                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);
            }
            var values = this.Dictionary.items.values();
            var hasSameImageStream = false;
            var oldReference = void 0;
            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {
                parentXObjects = new __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__["a" /* PdfDictionary */]();
                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);
            }
            else if (typeof this.pdfDocument !== 'undefined') {
                var values_1 = parentXObjects.items.values();
                for (var i = 0; i < values_1.length; i++) {
                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {
                        if (values_1[i].element.data[0] === arg1.element.data[0]) {
                            oldReference = values_1[i];
                            hasSameImageStream = true;
                        }
                    }
                }
            }
            if (xobjects == null) {
                xobjects = new __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__["a" /* PdfDictionary */]();
                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);
            }
            if (hasSameImageStream && typeof oldReference !== 'undefined') {
                xobjects.items.setValue(arg2.value, oldReference);
            }
            else {
                var reference = new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_reference__["b" /* PdfReferenceHolder */](arg1.element);
                xobjects.items.setValue(arg2.value, reference);
                if (typeof this.pdfDocument !== 'undefined') {
                    parentXObjects.items.setValue(arg2.value, reference);
                }
            }
        }
    };
    return PdfResources;
}(__WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__["a" /* PdfDictionary */]));

var Guid = (function () {
    function Guid(stringValue) {
        this.stringValue = stringValue || Guid.getNewGuidString();
    }
    Object.defineProperty(Guid, "randomNumber", {
        get: function () {
            Guid.guid = Guid.guid + 1;
            Guid.guid = Guid.guid > 999999999999 ? 0 : Guid.guid;
            return Guid.guid;
        },
        enumerable: true,
        configurable: true
    });
    Guid.prototype.toString = function () {
        return this.stringValue;
    };
    Guid.getNewGuidString = function () {
        var guid = 'abc7def4-ghi9-jkl2-m6n3-';
        var temproaryString = 'opqrstuvwxyz';
        var randomString = Guid.randomNumber.toString();
        randomString = guid + temproaryString.substr(0, (12 - randomString.length)) + randomString;
        return randomString;
    };
    return Guid;
}());

Guid.guid = 0;


/***/ }),
/* 103 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfTransparency; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__input_output_pdf_dictionary_properties__ = __webpack_require__(6);




var PdfTransparency = (function () {
    function PdfTransparency(stroke, fill, mode) {
        this.dictionary = new __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__["a" /* PdfDictionary */]();
        this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_3__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        this.dictionary.items.setValue(this.dictionaryProperties.CA, new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__["a" /* PdfNumber */](stroke));
        this.dictionary.items.setValue(this.dictionaryProperties.ca, new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__["a" /* PdfNumber */](fill));
        this.dictionary.items.setValue(this.dictionaryProperties.BM, new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_name__["a" /* PdfName */](mode.toString()));
    }
    Object.defineProperty(PdfTransparency.prototype, "element", {
        get: function () {
            return this.dictionary;
        },
        enumerable: true,
        configurable: true
    });
    return PdfTransparency;
}());



/***/ }),
/* 104 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ObjectStatus; });
var ObjectStatus;
(function (ObjectStatus) {
    ObjectStatus[ObjectStatus["None"] = 0] = "None";
    ObjectStatus[ObjectStatus["Registered"] = 1] = "Registered";
})(ObjectStatus || (ObjectStatus = {}));


/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfCrossTable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return RegisteredObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__input_output_enum__ = __webpack_require__(104);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_dictionary__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pdf_dictionary_properties__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pdf_operators__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__collections_dictionary__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_reference__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__cross_table__ = __webpack_require__(167);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__primitives_pdf_stream__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__primitives_pdf_number__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__document_pdf_catalog__ = __webpack_require__(97);










var PdfCrossTable = (function () {
    function PdfCrossTable() {
        this.objects = new __WEBPACK_IMPORTED_MODULE_4__collections_dictionary__["a" /* Dictionary */]();
        this.maxGenNumIndex = 0;
        this.objectCount = 0;
        this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_2__pdf_dictionary_properties__["a" /* DictionaryProperties */]();
    }
    Object.defineProperty(PdfCrossTable.prototype, "isMerging", {
        get: function () {
            return this.merging;
        },
        set: function (value) {
            this.merging = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCrossTable.prototype, "trailer", {
        get: function () {
            if (this.internalTrailer == null) {
                this.internalTrailer = new __WEBPACK_IMPORTED_MODULE_7__primitives_pdf_stream__["a" /* PdfStream */]();
            }
            return this.internalTrailer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCrossTable.prototype, "document", {
        get: function () {
            return this.pdfDocument;
        },
        set: function (value) {
            this.pdfDocument = value;
            this.items = this.pdfDocument.pdfObjects;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCrossTable.prototype, "pdfObjects", {
        get: function () {
            return this.items;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCrossTable.prototype, "objectCollection", {
        get: function () {
            return this.pdfDocument.pdfObjects;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCrossTable.prototype, "count", {
        get: function () {
            return this.objectCount;
        },
        set: function (value) {
            this.objectCount = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCrossTable.prototype, "nextObjNumber", {
        get: function () {
            this.count = this.count + 1;
            return this.count;
        },
        enumerable: true,
        configurable: true
    });
    PdfCrossTable.prototype.save = function (writer, filename) {
        this.saveHead(writer);
        var state = false;
        this.mappedReferences = null;
        this.objects.clear();
        this.markTrailerReferences();
        this.saveObjects(writer);
        var saveCount = this.count;
        var xrefPos = writer.position;
        this.registerObject(0, new __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_reference__["a" /* PdfReference */](0, -1), true);
        var prevXRef = 0;
        writer.write(__WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].xref);
        writer.write(__WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].newLine);
        this.saveSections(writer);
        this.saveTrailer(writer, this.count, prevXRef);
        this.saveTheEndess(writer, xrefPos);
        this.count = saveCount;
        for (var i = 0; i < this.objectCollection.count; ++i) {
            var oi = this.objectCollection.items(i);
            oi.object.isSaving = false;
        }
        if (typeof filename === 'undefined') {
            return writer.stream.buffer;
        }
        else {
            writer.stream.save(filename);
        }
    };
    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {
        writer.write(__WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].newLine + __WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].startxref + __WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].newLine);
        writer.write(xrefPos.toString() + __WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].newLine);
        writer.write(__WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].eof + __WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].newLine);
    };
    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {
        writer.write(__WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].trailer + __WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].newLine);
        var trailer = this.trailer;
        trailer.items.setValue(this.dictionaryProperties.size, new __WEBPACK_IMPORTED_MODULE_8__primitives_pdf_number__["a" /* PdfNumber */](this.objectCount + 1));
        trailer = new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_dictionary__["a" /* PdfDictionary */](trailer);
        trailer.setEncrypt(false);
        trailer.save(writer);
    };
    PdfCrossTable.prototype.saveSections = function (writer) {
        var objectNum = 0;
        var count = 0;
        do {
            count = this.prepareSubsection(objectNum);
            this.saveSubsection(writer, objectNum, count);
            objectNum += count;
        } while (count !== 0);
    };
    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {
        if (count <= 0 || objectNum >= this.count) {
            return;
        }
        var subsectionHead = '{0} {1}{2}';
        writer.write(objectNum + ' ' + (count + 1) + __WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].newLine);
        for (var i = objectNum; i <= objectNum + count; ++i) {
            var obj = this.objects.getValue(i);
            var str = '';
            if (obj.type === __WEBPACK_IMPORTED_MODULE_6__cross_table__["a" /* ObjectType */].Free) {
                str = this.getItem(obj.offset, 65535, true);
            }
            else {
                str = this.getItem(obj.offset, obj.generation, false);
            }
            writer.write(str);
        }
    };
    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {
        var returnString = '';
        var addOffsetLength = 10 - offset.toString().length;
        if (genNumber <= 0) {
            genNumber = 0;
        }
        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);
        for (var index = 0; index < addOffsetLength; index++) {
            returnString = returnString + '0';
        }
        returnString = returnString + offset.toString() + ' ';
        for (var index = 0; index < addGenNumberLength; index++) {
            returnString = returnString + '0';
        }
        returnString = returnString + genNumber.toString() + ' ';
        returnString = returnString + ((isFree) ? __WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].f : __WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].n) + __WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].newLine;
        return returnString;
    };
    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {
        var count = 0;
        var i;
        var total = this.count;
        for (var k = 0; k < this.document.pdfObjects.count; k++) {
            var reference = this.document.pdfObjects.items(k).reference;
            var refString = reference.toString();
            var refArray = refString.split(' ');
        }
        if (objectNum >= total) {
            return count;
        }
        for (i = objectNum; i < total; ++i) {
            break;
        }
        objectNum = i;
        for (; i < total; ++i) {
            ++count;
        }
        return count;
    };
    PdfCrossTable.prototype.markTrailerReferences = function () {
        var tempArray;
        var keys = this.trailer.items.keys();
        var values = this.trailer.items.values();
    };
    PdfCrossTable.prototype.saveHead = function (writer) {
        var version = this.generateFileVersion(writer.document);
        writer.write('%PDF-' + version);
        writer.write(__WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].newLine);
    };
    PdfCrossTable.prototype.generateFileVersion = function (document) {
        var iVersion = 4;
        var version = '1.' + iVersion.toString();
        return version;
    };
    PdfCrossTable.prototype.getReference = function (obj, bNew) {
        if (typeof bNew === 'undefined') {
            var wasNew = false;
            return this.getReference(obj, wasNew);
        }
        else {
            return this.getSubReference(obj, bNew);
        }
    };
    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {
        var isNew = false;
        var wasNew;
        var reference = null;
        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {
            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);
            reference = tempObj.reference;
            wasNew = tempObj.wasNew;
        }
        if (reference == null) {
            if (obj.status === __WEBPACK_IMPORTED_MODULE_0__input_output_enum__["a" /* ObjectStatus */].Registered) {
                wasNew = false;
            }
            else {
                wasNew = true;
            }
        }
        else {
            wasNew = false;
        }
        if (reference == null) {
            var objnumber = this.nextObjNumber;
            reference = new __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_reference__["a" /* PdfReference */](objnumber, 0);
            var found = void 0;
            if (wasNew) {
                this.document.pdfObjects.add(obj);
                this.document.pdfObjects.trySetReference(obj, reference, found);
                var tempIndex = this.document.pdfObjects.count - 1;
                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;
                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];
                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);
                obj.position = -1;
            }
            else {
                this.document.pdfObjects.trySetReference(obj, reference, found);
            }
            obj.objectCollectionIndex = reference.objNumber;
            obj.status = __WEBPACK_IMPORTED_MODULE_0__input_output_enum__["a" /* ObjectStatus */].None;
            isNew = true;
        }
        bNew = isNew || this.bForceNew;
        return reference;
    };
    PdfCrossTable.prototype.saveObjects = function (writer) {
        var objectCollection = this.objectCollection;
        for (var i = 0; i < objectCollection.count; ++i) {
            var oi = objectCollection.items(i);
            var obj = oi.object;
            obj.isSaving = true;
            this.saveIndirectObject(obj, writer);
        }
    };
    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {
        var reference = this.getReference(obj);
        if (obj instanceof __WEBPACK_IMPORTED_MODULE_9__document_pdf_catalog__["a" /* PdfCatalog */]) {
            this.trailer.items.setValue(this.dictionaryProperties.root, reference);
        }
        this.pdfDocument.currentSavingObj = reference;
        var tempArchive = false;
        tempArchive = obj.getArchive();
        var allowedType = !((obj instanceof __WEBPACK_IMPORTED_MODULE_7__primitives_pdf_stream__["a" /* PdfStream */]) || !tempArchive || (obj instanceof __WEBPACK_IMPORTED_MODULE_9__document_pdf_catalog__["a" /* PdfCatalog */]));
        var sigFlag = false;
        this.registerObject(writer.position, reference);
        this.doSaveObject(obj, reference, writer);
    };
    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {
        var correctPosition = writer.length;
        writer.write(reference.objNumber.toString());
        writer.write(__WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].whiteSpace);
        writer.write(reference.genNumber.toString());
        writer.write(__WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].whiteSpace);
        writer.write(__WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].obj);
        writer.write(__WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].newLine);
        obj.save(writer);
        var stream = writer.stream;
        writer.write(__WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].endObj);
        writer.write(__WEBPACK_IMPORTED_MODULE_3__pdf_operators__["a" /* Operators */].newLine);
    };
    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {
        if (typeof free === 'boolean') {
            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));
            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);
        }
        else if (typeof free === 'undefined') {
            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));
            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);
        }
    };
    PdfCrossTable.dereference = function (obj) {
        var rh = obj;
        if (rh != null) {
            obj = rh.object;
        }
        return obj;
    };
    return PdfCrossTable;
}());

var RegisteredObject = (function () {
    function RegisteredObject(offset, reference, free) {
        if (typeof free === 'undefined') {
            var tempOffset = offset;
            this.offsetNumber = tempOffset;
            var tempReference = reference;
            this.generation = tempReference.genNumber;
            this.object = tempReference.objNumber;
            this.type = __WEBPACK_IMPORTED_MODULE_6__cross_table__["a" /* ObjectType */].Normal;
        }
        else {
            var tempOffset = offset;
            var tempReference = reference;
            this.constructor(tempOffset, tempReference);
            var tempFree = free;
            this.type = __WEBPACK_IMPORTED_MODULE_6__cross_table__["a" /* ObjectType */].Free;
        }
    }
    Object.defineProperty(RegisteredObject.prototype, "objectNumber", {
        get: function () {
            return this.object;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RegisteredObject.prototype, "offset", {
        get: function () {
            var result;
            result = this.offsetNumber;
            return result;
        },
        enumerable: true,
        configurable: true
    });
    return RegisteredObject;
}());



/***/ }),
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfPageBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_array__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pdf_page_layer_collection__ = __webpack_require__(107);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__input_output_pdf_dictionary_properties__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__graphics_pdf_resources__ = __webpack_require__(102);




var PdfPageBase = (function () {
    function PdfPageBase(dictionary) {
        this.defLayerIndex = -1;
        this.modified = false;
        this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_2__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        this.pageDictionary = dictionary;
    }
    Object.defineProperty(PdfPageBase.prototype, "section", {
        get: function () {
            return this.pdfSection;
        },
        set: function (value) {
            this.pdfSection = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageBase.prototype, "dictionary", {
        get: function () {
            return this.pageDictionary;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageBase.prototype, "element", {
        get: function () {
            return this.pageDictionary;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageBase.prototype, "defaultLayer", {
        get: function () {
            var layer = this.layers;
            var index = this.defaultLayerIndex;
            var returnlayer = layer.items(index);
            return returnlayer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageBase.prototype, "defaultLayerIndex", {
        get: function () {
            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {
                var layer = this.layerCollection.add();
                this.defLayerIndex = this.layerCollection.indexOf(layer);
            }
            return this.defLayerIndex;
        },
        set: function (value) {
            if (value < 0 || value > this.layers.count - 1) {
                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');
            }
            else {
                this.defLayerIndex = value;
                this.modified = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageBase.prototype, "layers", {
        get: function () {
            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {
                this.layerCollection = new __WEBPACK_IMPORTED_MODULE_1__pdf_page_layer_collection__["a" /* PdfPageLayerCollection */](this);
            }
            return this.layerCollection;
        },
        enumerable: true,
        configurable: true
    });
    PdfPageBase.prototype.getResources = function () {
        if (this.resources == null) {
            this.resources = new __WEBPACK_IMPORTED_MODULE_3__graphics_pdf_resources__["a" /* PdfResources */]();
            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);
        }
        return this.resources;
    };
    Object.defineProperty(PdfPageBase.prototype, "contents", {
        get: function () {
            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);
            var contents = obj;
            var rh = obj;
            if (contents == null) {
                contents = new __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_array__["a" /* PdfArray */]();
                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);
            }
            return contents;
        },
        enumerable: true,
        configurable: true
    });
    PdfPageBase.prototype.setResources = function (res) {
        this.resources = res;
        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);
        this.modified = true;
    };
    return PdfPageBase;
}());



/***/ }),
/* 107 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfPageLayerCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pdf_page_base__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_dictionary__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pdf_page_layer__ = __webpack_require__(108);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__general_pdf_collection__ = __webpack_require__(158);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_reference__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_stream__ = __webpack_require__(33);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






var PdfPageLayerCollection = (function (_super) {
    __extends(PdfPageLayerCollection, _super);
    function PdfPageLayerCollection(page) {
        var _this = _super.call(this) || this;
        _this.parentLayerCount = 0;
        _this.sublayer = false;
        _this.optionalContent = new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_dictionary__["a" /* PdfDictionary */]();
        if (page instanceof __WEBPACK_IMPORTED_MODULE_0__pdf_page_base__["a" /* PdfPageBase */]) {
            _this.page = page;
            var lPage = page;
            _this.parseLayers(lPage);
        }
        return _this;
    }
    PdfPageLayerCollection.prototype.items = function (index, value) {
        if (typeof index === 'number' && typeof value === 'undefined') {
            var obj = this.list[index];
            return obj;
        }
        else {
            if (value == null) {
                throw new Error('ArgumentNullException: layer');
            }
            if (value.page !== this.page) {
                throw new Error('ArgumentException: The layer belongs to another page');
            }
        }
    };
    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {
        if (typeof firstArgument === 'undefined') {
            var layer = new __WEBPACK_IMPORTED_MODULE_2__pdf_page_layer__["a" /* PdfPageLayer */](this.page);
            layer.name = '';
            this.add(layer);
            return layer;
        }
        else if (firstArgument instanceof __WEBPACK_IMPORTED_MODULE_2__pdf_page_layer__["a" /* PdfPageLayer */]) {
            var index = this.list.push(firstArgument);
            this.addLayer(index, firstArgument);
            return index;
        }
        else {
            return 0;
        }
    };
    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {
        var reference = new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_reference__["b" /* PdfReferenceHolder */](layer);
        this.page.contents.add(reference);
    };
    PdfPageLayerCollection.prototype.insert = function (index, layer) {
        var list = [];
        var length = this.list.length;
        for (var i = index; i < length; i++) {
            list.push(this.list.pop());
        }
        this.list.push(layer);
        for (var i = 0; i < list.length; i++) {
            this.list.push(list[i]);
        }
        this.insertLayer(index, layer);
    };
    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {
        if (layer == null) {
            throw new Error('ArgumentNullException:layer');
        }
        var reference = new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_reference__["b" /* PdfReferenceHolder */](layer);
        this.page.contents.insert(index, reference);
    };
    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {
        var contents = this.page.contents;
        var resource = this.page.getResources();
        var crossTable = null;
        var ocproperties = null;
        var propertie = null;
        var isLayerAdded = false;
        crossTable = loadedPage.crossTable;
        var saveStream = new __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_stream__["a" /* PdfStream */]();
        var restoreStream = new __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_stream__["a" /* PdfStream */]();
        var saveState = 'q';
        var newLine = '\n';
        var restoreState = 'Q';
        var saveData = [];
        saveData.push(saveState);
        saveStream.data = saveData;
        contents.insert(0, new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_reference__["b" /* PdfReferenceHolder */](saveStream));
        saveData = [];
        saveData.push(restoreState);
        restoreStream.data = saveData;
        contents.insert(contents.count, new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_reference__["b" /* PdfReferenceHolder */](restoreStream));
    };
    PdfPageLayerCollection.prototype.indexOf = function (layer) {
        if (layer == null) {
            throw new Error('ArgumentNullException: layer');
        }
        var index = this.list.indexOf(layer);
        return index;
    };
    return PdfPageLayerCollection;
}(__WEBPACK_IMPORTED_MODULE_3__general_pdf_collection__["a" /* PdfCollection */]));



/***/ }),
/* 108 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfPageLayer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_stream__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__graphics_pdf_graphics__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pdf_page_layer_collection__ = __webpack_require__(107);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__input_output_pdf_dictionary_properties__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__graphics_enum__ = __webpack_require__(9);





var PdfPageLayer = (function () {
    function PdfPageLayer(page, streamClipPageTemplates) {
        this.pdfColorSpace = __WEBPACK_IMPORTED_MODULE_4__graphics_enum__["i" /* PdfColorSpace */].Rgb;
        this.isVisible = true;
        this.sublayer = false;
        this.contentLength = 0;
        this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_3__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        if (typeof streamClipPageTemplates === 'undefined') {
            this.pdfPage = page;
            this.clipPageTemplates = true;
            this.content = new __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_stream__["a" /* PdfStream */]();
        }
        else if (streamClipPageTemplates instanceof __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_stream__["a" /* PdfStream */] || streamClipPageTemplates === null) {
            if (page == null) {
                throw new Error('ArgumentNullException:page');
            }
            if (streamClipPageTemplates == null) {
                throw new Error('ArgumentNullException:stream');
            }
            this.pdfPage = page;
            this.content = streamClipPageTemplates;
        }
        else {
            this.constructor(page);
            this.clipPageTemplates = streamClipPageTemplates;
        }
    }
    Object.defineProperty(PdfPageLayer.prototype, "colorSpace", {
        get: function () {
            return this.pdfColorSpace;
        },
        set: function (value) {
            this.pdfColorSpace = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageLayer.prototype, "page", {
        get: function () {
            return this.pdfPage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageLayer.prototype, "layerId", {
        get: function () {
            return this.layerid;
        },
        set: function (value) {
            this.layerid = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageLayer.prototype, "name", {
        get: function () {
            return this.layerName;
        },
        set: function (value) {
            this.layerName = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageLayer.prototype, "visible", {
        get: function () {
            return this.isVisible;
        },
        set: function (value) {
            this.isVisible = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageLayer.prototype, "graphics", {
        get: function () {
            if ((this.pdfGraphics == null)) {
                this.initializeGraphics(this.page);
            }
            return this.pdfGraphics;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageLayer.prototype, "layers", {
        get: function () {
            if (this.layer == null) {
                this.layer = new __WEBPACK_IMPORTED_MODULE_2__pdf_page_layer_collection__["a" /* PdfPageLayerCollection */](this.page);
                this.layer.sublayer = true;
                return this.layer;
            }
            else {
                return this.layer;
            }
        },
        enumerable: true,
        configurable: true
    });
    PdfPageLayer.prototype.add = function () {
        var layer = new PdfPageLayer(this.pdfPage);
        layer.name = '';
        return layer;
    };
    PdfPageLayer.prototype.sign = function (number) {
        if (number === 0) {
            return 0;
        }
        else if (number > 0) {
            return 1;
        }
        else {
            return -1;
        }
    };
    PdfPageLayer.prototype.initializeGraphics = function (page) {
        var oPage = page;
        var gr = new __WEBPACK_IMPORTED_MODULE_1__graphics_pdf_graphics__["b" /* GetResourceEventHandler */](this.page);
        var cropBox = null;
        this.pdfGraphics = new __WEBPACK_IMPORTED_MODULE_1__graphics_pdf_graphics__["a" /* PdfGraphics */](page.size, gr, this.content);
        this.pdfGraphics.mediaBoxUpperRightBound = 0;
        if (oPage != null) {
            var sc = oPage.section.parent;
            if (sc != null) {
                this.pdfGraphics.colorSpace = sc.document.colorSpace;
                this.colorSpace = sc.document.colorSpace;
            }
        }
        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));
        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {
            this.pdfGraphics.initializeCoordinates();
        }
        else {
        }
        var clipRect = oPage.section.getActualBounds(oPage, true);
        var margins = oPage.section.pageSettings.margins;
        if (this.clipPageTemplates) {
            if (page.origin.x >= 0 && page.origin.y >= 0) {
                this.pdfGraphics.clipTranslateMargins(clipRect);
            }
        }
        else {
            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);
        }
        this.pdfGraphics.setLayer(this);
    };
    Object.defineProperty(PdfPageLayer.prototype, "element", {
        get: function () {
            return this.content;
        },
        enumerable: true,
        configurable: true
    });
    return PdfPageLayer;
}());



/***/ }),
/* 109 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfSectionCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_number__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_array__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_dictionary__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_reference__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__pdf_section__ = __webpack_require__(177);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__input_output_pdf_dictionary_properties__ = __webpack_require__(6);








var PdfSectionCollection = (function () {
    function PdfSectionCollection(document) {
        this.sections = [];
        this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_7__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        this.pdfDocument = document.clone();
        this.initialize();
    }
    Object.defineProperty(PdfSectionCollection.prototype, "section", {
        get: function () {
            return this.sections;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSectionCollection.prototype, "document", {
        get: function () {
            return this.pdfDocument;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSectionCollection.prototype, "count", {
        get: function () {
            return this.sections.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSectionCollection.prototype, "element", {
        get: function () {
            return this.pages;
        },
        enumerable: true,
        configurable: true
    });
    PdfSectionCollection.prototype.initialize = function () {
        this.sectionCount = new __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_number__["a" /* PdfNumber */](0);
        this.sectionCollection = new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_array__["a" /* PdfArray */]();
        this.pages = new __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_dictionary__["a" /* PdfDictionary */]();
        this.pages.beginSave = new __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_dictionary__["b" /* SaveSectionCollectionEventHandler */](this);
        this.pages.items.setValue(this.dictionaryProperties.type, new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_name__["a" /* PdfName */]('Pages'));
        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);
        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);
        this.pages.items.setValue(this.dictionaryProperties.resources, new __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_dictionary__["a" /* PdfDictionary */]());
        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);
    };
    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {
        if (index < 0 || index >= this.count) {
            throw new Error('IndexOutOfRangeException()');
        }
        return this.sections[index];
    };
    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {
        var bounds = new __WEBPACK_IMPORTED_MODULE_5__drawing_pdf_drawing__["c" /* RectangleF */](new __WEBPACK_IMPORTED_MODULE_5__drawing_pdf_drawing__["a" /* PointF */](), pageSettings.size);
        container.items.setValue(this.dictionaryProperties.mediaBox, __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_array__["a" /* PdfArray */].fromRectangle(bounds));
    };
    PdfSectionCollection.prototype.add = function (section) {
        if (typeof section === 'undefined') {
            var section_1 = new __WEBPACK_IMPORTED_MODULE_6__pdf_section__["a" /* PdfSection */](this.pdfDocument);
            this.add(section_1);
            return section_1;
        }
        else {
            var r = this.checkSection(section);
            this.sections.push(section);
            section.parent = this;
            this.sectionCollection.add(r);
            return this.sections.indexOf(section);
        }
    };
    PdfSectionCollection.prototype.checkSection = function (section) {
        var r = new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_reference__["b" /* PdfReferenceHolder */](section);
        var contains = this.sectionCollection.contains(r);
        return r;
    };
    PdfSectionCollection.prototype.countPages = function () {
        var count = 0;
        this.sections.forEach(function (n) { return (count += n.count); });
        return count;
    };
    PdfSectionCollection.prototype.beginSave = function () {
        this.sectionCount.intValue = this.countPages();
    };
    return PdfSectionCollection;
}());

PdfSectionCollection.rotateFactor = 90;


/***/ }),
/* 110 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfGridCell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PdfGridCellCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__styles_style__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__graphics_fonts_string_layouter__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__document_pdf_document__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__graphics_fonts_pdf_string_format__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__graphics_enum__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__tables_light_tables_enum__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__graphics_brushes_pdf_solid_brush__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__graphics_pdf_color__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__graphics_images_pdf_image__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__graphics_images_pdf_bitmap__ = __webpack_require__(101);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__annotations_pdf_text_web_link__ = __webpack_require__(95);












var PdfGridCell = (function () {
    function PdfGridCell(row) {
        this.cellWidth = 0;
        this.cellHeight = 0;
        this.finsh = true;
        this.rowSpanRemainingHeight = 0;
        if (typeof row === 'undefined') {
            this.gridRowSpan = 1;
            this.colSpan = 1;
        }
        else {
            this.constructor();
            this.gridRow = row;
        }
    }
    Object.defineProperty(PdfGridCell.prototype, "isCellMergeContinue", {
        get: function () {
            return this.internalIsCellMergeContinue;
        },
        set: function (value) {
            this.internalIsCellMergeContinue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "isRowMergeContinue", {
        get: function () {
            return this.internalIsRowMergeContinue;
        },
        set: function (value) {
            this.internalIsRowMergeContinue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "isCellMergeStart", {
        get: function () {
            return this.internalIsCellMergeStart;
        },
        set: function (value) {
            this.internalIsCellMergeStart = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "isRowMergeStart", {
        get: function () {
            return this.internalIsRowMergeStart;
        },
        set: function (value) {
            this.internalIsRowMergeStart = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "remainingString", {
        get: function () {
            return this.remaining;
        },
        set: function (value) {
            this.remaining = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "stringFormat", {
        get: function () {
            if (this.format == null) {
                this.format = new __WEBPACK_IMPORTED_MODULE_3__graphics_fonts_pdf_string_format__["a" /* PdfStringFormat */]();
            }
            return this.format;
        },
        set: function (value) {
            this.format = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "row", {
        get: function () {
            return this.gridRow;
        },
        set: function (value) {
            this.gridRow = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "value", {
        get: function () {
            return this.objectValue;
        },
        set: function (value) {
            this.objectValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "rowSpan", {
        get: function () {
            return this.gridRowSpan;
        },
        set: function (value) {
            if (value < 1) {
                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');
            }
            else {
                this.gridRowSpan = value;
                this.row.rowSpanExists = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "style", {
        get: function () {
            if (this.cellStyle == null) {
                this.cellStyle = new __WEBPACK_IMPORTED_MODULE_0__styles_style__["c" /* PdfGridCellStyle */]();
            }
            return this.cellStyle;
        },
        set: function (value) {
            this.cellStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "height", {
        get: function () {
            if (this.cellHeight === 0) {
                this.cellHeight = this.measureHeight();
            }
            return this.cellHeight;
        },
        set: function (value) {
            this.cellHeight = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "columnSpan", {
        get: function () {
            return this.colSpan;
        },
        set: function (value) {
            if (value < 1) {
                throw Error('Invalid span specified, must be greater than or equal to 1');
            }
            else {
                this.colSpan = value;
                this.row.columnSpanExists = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "width", {
        get: function () {
            if (this.cellWidth === 0 || this.row.grid.isComplete) {
                this.cellWidth = this.measureWidth();
            }
            return this.cellWidth;
        },
        set: function (value) {
            this.cellWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridCell.prototype.measureWidth = function () {
        var width = 0;
        var layouter = new __WEBPACK_IMPORTED_MODULE_1__graphics_fonts_string_layouter__["a" /* PdfStringLayouter */]();
        if (typeof this.objectValue === 'string') {
            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["b" /* SizeF */](0, 0), false, new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["b" /* SizeF */](0, 0));
            width += slr.actualSize.width;
            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;
        }
        else if (this.objectValue instanceof __WEBPACK_IMPORTED_MODULE_9__graphics_images_pdf_image__["a" /* PdfImage */] || this.objectValue instanceof __WEBPACK_IMPORTED_MODULE_10__graphics_images_pdf_bitmap__["a" /* PdfBitmap */]) {
            width += this.objectValue.width;
        }
        else if (this.objectValue instanceof __WEBPACK_IMPORTED_MODULE_11__annotations_pdf_text_web_link__["a" /* PdfTextWebLink */]) {
            var webLink = this.objectValue;
            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["b" /* SizeF */](0, 0), false, new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["b" /* SizeF */](0, 0));
            width += result.actualSize.width;
            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;
        }
        width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);
        width += this.row.grid.style.cellSpacing;
        return width;
    };
    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {
        var backgroundBrush = this.getBackgroundBrush();
        if (backgroundBrush != null) {
            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);
        }
    };
    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {
        var returnBounds = new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["c" /* RectangleF */](bounds.x, bounds.y, bounds.width, bounds.height);
        if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {
            returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;
            returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;
            returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);
            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);
            returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);
            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);
            if (this.rowSpan === 1) {
                returnBounds.width -= (this.style.borders.left.width);
            }
        }
        else {
            returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;
            returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;
            returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);
            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);
            returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);
            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);
            if (this.rowSpan === 1) {
                returnBounds.width -= (this.style.borders.left.width);
            }
        }
        return returnBounds;
    };
    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {
        var isrowbreak = false;
        var result = null;
        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {
            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {
                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {
                    return result;
                }
            }
            else {
                return result;
            }
        }
        bounds = this.adjustOuterLayoutArea(bounds, graphics);
        var textPen = this.getTextPen();
        var textBrush = this.getTextBrush();
        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {
            textBrush = new __WEBPACK_IMPORTED_MODULE_7__graphics_brushes_pdf_solid_brush__["a" /* PdfSolidBrush */](new __WEBPACK_IMPORTED_MODULE_8__graphics_pdf_color__["a" /* PdfColor */](0, 0, 0));
        }
        var font = this.getTextFont();
        var strFormat = this.getStringFormat();
        var innerLayoutArea = this.adjustContentLayoutArea(bounds);
        this.drawCellBackground(graphics, bounds);
        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {
            var temp = void 0;
            temp = this.remaining === '' ? this.remaining : this.objectValue;
            graphics.drawString(temp, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);
            result = graphics.stringLayoutResult;
        }
        else if (this.objectValue instanceof __WEBPACK_IMPORTED_MODULE_9__graphics_images_pdf_image__["a" /* PdfImage */] || this.objectValue instanceof __WEBPACK_IMPORTED_MODULE_10__graphics_images_pdf_bitmap__["a" /* PdfBitmap */]) {
            var imageBounds = void 0;
            if (this.objectValue.width <= innerLayoutArea.width) {
                imageBounds = new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["c" /* RectangleF */](innerLayoutArea.x, innerLayoutArea.y, this.objectValue.width, innerLayoutArea.height);
            }
            else {
                imageBounds = innerLayoutArea;
            }
            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);
        }
        else if (this.objectValue instanceof __WEBPACK_IMPORTED_MODULE_11__annotations_pdf_text_web_link__["a" /* PdfTextWebLink */]) {
            this.objectValue.draw(graphics.currentPage, innerLayoutArea);
        }
        if (this.style.borders != null) {
            this.drawCellBorders(graphics, bounds);
        }
        return result;
    };
    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {
        if (this.row.grid.style.borderOverlapStyle === __WEBPACK_IMPORTED_MODULE_6__tables_light_tables_enum__["a" /* PdfBorderOverlapStyle */].Inside) {
            bounds.x += this.style.borders.left.width;
            bounds.y += this.style.borders.top.width;
            bounds.width -= this.style.borders.right.width;
            bounds.height -= this.style.borders.bottom.width;
        }
        var p1 = new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["a" /* PointF */](bounds.x, bounds.y + bounds.height);
        var p2 = new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["a" /* PointF */](bounds.x, bounds.y);
        var pen = this.cellStyle.borders.left;
        if (this.cellStyle.borders.left.dashStyle === __WEBPACK_IMPORTED_MODULE_5__graphics_enum__["g" /* PdfDashStyle */].Solid) {
            pen.lineCap = __WEBPACK_IMPORTED_MODULE_5__graphics_enum__["f" /* PdfLineCap */].Square;
        }
        graphics.drawLine(pen, p1, p2);
        p1 = new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["a" /* PointF */](bounds.x + bounds.width, bounds.y);
        p2 = new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["a" /* PointF */](bounds.x + bounds.width, bounds.y + bounds.height);
        pen = this.cellStyle.borders.right;
        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {
            p1 = new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["a" /* PointF */](graphics.clientSize.width - (pen.width / 2), bounds.y);
            p2 = new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["a" /* PointF */](graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);
        }
        if (this.cellStyle.borders.right.dashStyle === __WEBPACK_IMPORTED_MODULE_5__graphics_enum__["g" /* PdfDashStyle */].Solid) {
            pen.lineCap = __WEBPACK_IMPORTED_MODULE_5__graphics_enum__["f" /* PdfLineCap */].Square;
        }
        graphics.drawLine(pen, p1, p2);
        p1 = new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["a" /* PointF */](bounds.x, bounds.y);
        p2 = new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["a" /* PointF */](bounds.x + bounds.width, bounds.y);
        pen = this.cellStyle.borders.top;
        if (this.cellStyle.borders.top.dashStyle === __WEBPACK_IMPORTED_MODULE_5__graphics_enum__["g" /* PdfDashStyle */].Solid) {
            pen.lineCap = __WEBPACK_IMPORTED_MODULE_5__graphics_enum__["f" /* PdfLineCap */].Square;
        }
        graphics.drawLine(pen, p1, p2);
        p1 = new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["a" /* PointF */](bounds.x + bounds.width, bounds.y + bounds.height);
        p2 = new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["a" /* PointF */](bounds.x, bounds.y + bounds.height);
        pen = this.cellStyle.borders.bottom;
        if (this.cellStyle.borders.bottom.dashStyle === __WEBPACK_IMPORTED_MODULE_5__graphics_enum__["g" /* PdfDashStyle */].Solid) {
            pen.lineCap = __WEBPACK_IMPORTED_MODULE_5__graphics_enum__["f" /* PdfLineCap */].Square;
        }
        graphics.drawLine(pen, p1, p2);
    };
    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {
        var isHeader = false;
        var cellSpacing = this.row.grid.style.cellSpacing;
        if (cellSpacing > 0) {
            bounds = new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["c" /* RectangleF */](bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);
        }
        var currentColIndex = this.row.cells.indexOf(this);
        if (this.columnSpan > 1) {
            var span = this.columnSpan;
            var totalWidth = 0;
            for (var i = currentColIndex; i < currentColIndex + span; i++) {
                if (this.row.grid.style.allowHorizontalOverflow) {
                    var width = void 0;
                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;
                    if (this.row.grid.size.width > g.clientSize.width) {
                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;
                    }
                    else {
                        width = totalWidth + this.row.grid.columns.getColumn(i).width;
                    }
                    if (width > compWidth) {
                        break;
                    }
                }
                totalWidth += this.row.grid.columns.getColumn(i).width;
            }
            totalWidth -= this.row.grid.style.cellSpacing;
            bounds.width = totalWidth;
        }
        if (this.rowSpan > 1 || this.row.rowSpanExists) {
            var span = this.rowSpan;
            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);
            if (currentRowIndex == -1) {
                currentRowIndex = this.row.grid.headers.indexOf(this.row);
                if (currentRowIndex != -1) {
                    isHeader = true;
                }
            }
            var totalHeight = 0;
            var max = 0;
            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {
                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);
                var row = this.row.grid.rows.getRow(i);
                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);
            }
            var cellIndex = this.row.cells.indexOf(this);
            totalHeight -= this.row.grid.style.cellSpacing;
            bounds.height = totalHeight;
            if (!this.row.rowMergeComplete) {
                bounds.height = totalHeight;
            }
        }
        return bounds;
    };
    PdfGridCell.prototype.getTextFont = function () {
        if (typeof this.style.font !== 'undefined' && this.style.font != null) {
            return this.style.font;
        }
        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {
            return this.row.style.font;
        }
        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {
            return this.row.grid.style.font;
        }
        else {
            return __WEBPACK_IMPORTED_MODULE_2__document_pdf_document__["a" /* PdfDocument */].defaultFont;
        }
    };
    PdfGridCell.prototype.getTextBrush = function () {
        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {
            return this.style.textBrush;
        }
        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {
            return this.row.style.textBrush;
        }
        else {
            return this.row.grid.style.textBrush;
        }
    };
    PdfGridCell.prototype.getTextPen = function () {
        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {
            return this.style.textPen;
        }
        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {
            return this.row.style.textPen;
        }
        else {
            return this.row.grid.style.textPen;
        }
    };
    PdfGridCell.prototype.getBackgroundBrush = function () {
        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {
            return this.style.backgroundBrush;
        }
        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {
            return this.row.style.backgroundBrush;
        }
        else {
            return this.row.grid.style.backgroundBrush;
        }
    };
    PdfGridCell.prototype.getStringFormat = function () {
        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {
            return this.style.stringFormat;
        }
        else {
            return this.stringFormat;
        }
    };
    PdfGridCell.prototype.measureHeight = function () {
        var width = this.calculateWidth();
        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {
            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);
            width -= (this.style.borders.left.width + this.style.borders.right.width);
        }
        else {
            width -= (this.style.cellPadding.right + this.style.cellPadding.left);
            width -= (this.style.borders.left.width + this.style.borders.right.width);
        }
        var height = 0;
        var layouter = new __WEBPACK_IMPORTED_MODULE_1__graphics_fonts_string_layouter__["a" /* PdfStringLayouter */]();
        if (typeof this.objectValue === 'string' || typeof this.remainingString === 'string') {
            var currentValue = this.objectValue;
            var slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["b" /* SizeF */](width, 0), false, new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["b" /* SizeF */](0, 0));
            height += slr.actualSize.height;
        }
        else if (this.objectValue instanceof __WEBPACK_IMPORTED_MODULE_9__graphics_images_pdf_image__["a" /* PdfImage */] || this.objectValue instanceof __WEBPACK_IMPORTED_MODULE_10__graphics_images_pdf_bitmap__["a" /* PdfBitmap */]) {
            height += this.objectValue.height;
        }
        else if (this.objectValue instanceof __WEBPACK_IMPORTED_MODULE_11__annotations_pdf_text_web_link__["a" /* PdfTextWebLink */]) {
            var webLink = this.objectValue;
            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["b" /* SizeF */](width, 0), false, new __WEBPACK_IMPORTED_MODULE_4__drawing_pdf_drawing__["b" /* SizeF */](0, 0));
            height += slr.actualSize.height;
        }
        height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;
        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {
            height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);
        }
        else {
            height += (this.style.cellPadding.top + this.style.cellPadding.bottom);
        }
        height += this.row.grid.style.cellSpacing;
        return height;
    };
    PdfGridCell.prototype.calculateWidth = function () {
        var cellIndex = this.row.cells.indexOf(this);
        var columnSpan = this.columnSpan;
        var width = 0;
        for (var i = 0; i < columnSpan; i++) {
            width += this.row.grid.columns.getColumn(cellIndex + i).width;
        }
        return width;
    };
    return PdfGridCell;
}());

var PdfGridCellCollection = (function () {
    function PdfGridCellCollection(row) {
        this.cells = [];
        this.gridRow = row;
    }
    PdfGridCellCollection.prototype.getCell = function (index) {
        if (index < 0 || index >= this.count) {
            throw new Error('IndexOutOfRangeException');
        }
        return this.cells[index];
    };
    Object.defineProperty(PdfGridCellCollection.prototype, "count", {
        get: function () {
            return this.cells.length;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridCellCollection.prototype.add = function (cell) {
        if (typeof cell === 'undefined') {
            var tempcell = new PdfGridCell();
            this.add(tempcell);
            return cell;
        }
        else {
            cell.row = this.gridRow;
            this.cells.push(cell);
        }
    };
    PdfGridCellCollection.prototype.indexOf = function (cell) {
        return this.cells.indexOf(cell);
    };
    return PdfGridCellCollection;
}());



/***/ }),
/* 111 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfBorders; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PdfPaddings; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__graphics_pdf_pen__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__graphics_enum__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__graphics_pdf_color__ = __webpack_require__(25);



var PdfBorders = (function () {
    function PdfBorders() {
        var defaultBorderPenLeft = new __WEBPACK_IMPORTED_MODULE_0__graphics_pdf_pen__["a" /* PdfPen */](new __WEBPACK_IMPORTED_MODULE_2__graphics_pdf_color__["a" /* PdfColor */](0, 0, 0));
        defaultBorderPenLeft.dashStyle = __WEBPACK_IMPORTED_MODULE_1__graphics_enum__["g" /* PdfDashStyle */].Solid;
        var defaultBorderPenRight = new __WEBPACK_IMPORTED_MODULE_0__graphics_pdf_pen__["a" /* PdfPen */](new __WEBPACK_IMPORTED_MODULE_2__graphics_pdf_color__["a" /* PdfColor */](0, 0, 0));
        defaultBorderPenRight.dashStyle = __WEBPACK_IMPORTED_MODULE_1__graphics_enum__["g" /* PdfDashStyle */].Solid;
        var defaultBorderPenTop = new __WEBPACK_IMPORTED_MODULE_0__graphics_pdf_pen__["a" /* PdfPen */](new __WEBPACK_IMPORTED_MODULE_2__graphics_pdf_color__["a" /* PdfColor */](0, 0, 0));
        defaultBorderPenTop.dashStyle = __WEBPACK_IMPORTED_MODULE_1__graphics_enum__["g" /* PdfDashStyle */].Solid;
        var defaultBorderPenBottom = new __WEBPACK_IMPORTED_MODULE_0__graphics_pdf_pen__["a" /* PdfPen */](new __WEBPACK_IMPORTED_MODULE_2__graphics_pdf_color__["a" /* PdfColor */](0, 0, 0));
        defaultBorderPenBottom.dashStyle = __WEBPACK_IMPORTED_MODULE_1__graphics_enum__["g" /* PdfDashStyle */].Solid;
        this.leftPen = defaultBorderPenLeft;
        this.rightPen = defaultBorderPenRight;
        this.topPen = defaultBorderPenTop;
        this.bottomPen = defaultBorderPenBottom;
    }
    Object.defineProperty(PdfBorders.prototype, "left", {
        get: function () {
            return this.leftPen;
        },
        set: function (value) {
            this.leftPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBorders.prototype, "right", {
        get: function () {
            return this.rightPen;
        },
        set: function (value) {
            this.rightPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBorders.prototype, "top", {
        get: function () {
            return this.topPen;
        },
        set: function (value) {
            this.topPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBorders.prototype, "bottom", {
        get: function () {
            return this.bottomPen;
        },
        set: function (value) {
            this.bottomPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBorders.prototype, "all", {
        set: function (value) {
            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBorders.prototype, "isAll", {
        get: function () {
            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBorders, "default", {
        get: function () {
            return new PdfBorders();
        },
        enumerable: true,
        configurable: true
    });
    return PdfBorders;
}());

var PdfPaddings = (function () {
    function PdfPaddings(left, right, top, bottom) {
        if (typeof left === 'undefined') {
            this.leftPad = this.rightPad = 5.76;
            this.bottom = this.topPad = 0.5;
        }
        else {
            this.leftPad = left;
            this.rightPad = right;
            this.topPad = top;
            this.bottomPad = bottom;
        }
    }
    Object.defineProperty(PdfPaddings.prototype, "left", {
        get: function () {
            return this.leftPad;
        },
        set: function (value) {
            this.leftPad = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPaddings.prototype, "right", {
        get: function () {
            return this.rightPad;
        },
        set: function (value) {
            this.rightPad = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPaddings.prototype, "top", {
        get: function () {
            return this.topPad;
        },
        set: function (value) {
            this.topPad = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPaddings.prototype, "bottom", {
        get: function () {
            return this.bottomPad;
        },
        set: function (value) {
            this.bottomPad = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPaddings.prototype, "all", {
        set: function (value) {
            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfPaddings;
}());



/***/ }),
/* 112 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfBorderOverlapStyle; });
var PdfBorderOverlapStyle;
(function (PdfBorderOverlapStyle) {
    PdfBorderOverlapStyle[PdfBorderOverlapStyle["Overlap"] = 0] = "Overlap";
    PdfBorderOverlapStyle[PdfBorderOverlapStyle["Inside"] = 1] = "Inside";
})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));


/***/ }),
/* 113 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = fit;
/* harmony export (immutable) */ __webpack_exports__["a"] = isCollide;
/* harmony export (immutable) */ __webpack_exports__["c"] = flip;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__position__ = __webpack_require__(68);

var parentDocument;
var targetContainer;
function fit(element, viewPortElement, axis, position) {
    if (viewPortElement === void 0) { viewPortElement = null; }
    if (axis === void 0) { axis = { X: false, Y: false }; }
    if (!axis.Y && !axis.X) {
        return { left: 0, top: 0 };
    }
    var elemData = element.getBoundingClientRect();
    targetContainer = viewPortElement;
    parentDocument = element.ownerDocument;
    if (!position) {
        position = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__position__["a" /* calculatePosition */])(element, 'left', 'top');
    }
    if (axis.X) {
        var containerWidth = targetContainer ? getTargetContainerWidth() : getViewPortWidth();
        var containerLeft = ContainerLeft();
        var containerRight = ContainerRight();
        var overLeft = containerLeft - position.left;
        var overRight = position.left + elemData.width - containerRight;
        if (elemData.width > containerWidth) {
            if (overLeft > 0 && overRight <= 0) {
                position.left = containerRight - elemData.width;
            }
            else if (overRight > 0 && overLeft <= 0) {
                position.left = containerLeft;
            }
            else {
                position.left = overLeft > overRight ? (containerRight - elemData.width) : containerLeft;
            }
        }
        else if (overLeft > 0) {
            position.left += overLeft;
        }
        else if (overRight > 0) {
            position.left -= overRight;
        }
    }
    if (axis.Y) {
        var containerHeight = targetContainer ? getTargetContainerHeight() : getViewPortHeight();
        var containerTop = ContainerTop();
        var containerBottom = ContainerBottom();
        var overTop = containerTop - position.top;
        var overBottom = position.top + elemData.height - containerBottom;
        if (elemData.height > containerHeight) {
            if (overTop > 0 && overBottom <= 0) {
                position.top = containerBottom - elemData.height;
            }
            else if (overBottom > 0 && overTop <= 0) {
                position.top = containerTop;
            }
            else {
                position.top = overTop > overBottom ? (containerBottom - elemData.height) : containerTop;
            }
        }
        else if (overTop > 0) {
            position.top += overTop;
        }
        else if (overBottom > 0) {
            position.top -= overBottom;
        }
    }
    return position;
}
function isCollide(element, viewPortElement, x, y) {
    if (viewPortElement === void 0) { viewPortElement = null; }
    var elemOffset = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__position__["a" /* calculatePosition */])(element, 'left', 'top');
    if (x) {
        elemOffset.left = x;
    }
    if (y) {
        elemOffset.top = y;
    }
    var data = [];
    targetContainer = viewPortElement;
    parentDocument = element.ownerDocument;
    var elementRect = element.getBoundingClientRect();
    var top = elemOffset.top;
    var left = elemOffset.left;
    var right = elemOffset.left + elementRect.width;
    var bottom = elemOffset.top + elementRect.height;
    var topData = '';
    var leftData = '';
    var yAxis = topCollideCheck(top, bottom);
    var xAxis = leftCollideCheck(left, right);
    if (yAxis.topSide) {
        data.push('top');
    }
    if (xAxis.rightSide) {
        data.push('right');
    }
    if (xAxis.leftSide) {
        data.push('left');
    }
    if (yAxis.bottomSide) {
        data.push('bottom');
    }
    return data;
}
function flip(element, target, offsetX, offsetY, positionX, positionY, viewPortElement, axis) {
    if (viewPortElement === void 0) { viewPortElement = null; }
    if (axis === void 0) { axis = { X: true, Y: true }; }
    if (!target || !element || !positionX || !positionY || (!axis.X && !axis.Y)) {
        return;
    }
    var tEdge = { TL: null,
        TR: null,
        BL: null,
        BR: null };
    var eEdge = {
        TL: null,
        TR: null,
        BL: null,
        BR: null
    };
    var elementRect = element.getBoundingClientRect();
    var pos = {
        posX: positionX, posY: positionY, offsetX: offsetX, offsetY: offsetY, position: { left: 0, top: 0 }
    };
    targetContainer = viewPortElement;
    parentDocument = target.ownerDocument;
    updateElementData(target, tEdge, pos);
    setPosition(eEdge, pos, elementRect);
    if (axis.X) {
        leftFlip(target, eEdge, tEdge, pos, elementRect, true);
    }
    if (axis.Y) {
        topFlip(target, eEdge, tEdge, pos, elementRect, true);
    }
    setPopup(element, pos);
}
function setPopup(element, pos) {
    var left = 0;
    var top = 0;
    if (element.offsetParent != null
        && (getComputedStyle(element.offsetParent).position === 'absolute' ||
            getComputedStyle(element.offsetParent).position === 'relative')) {
        var data = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__position__["a" /* calculatePosition */])(element.offsetParent, 'left', 'top');
        left = data.left;
        top = data.top;
    }
    element.style.top = (pos.position.top + pos.offsetY - (top)) + 'px';
    element.style.left = (pos.position.left + pos.offsetX - (left)) + 'px';
}
function updateElementData(target, edge, pos) {
    pos.position = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__position__["a" /* calculatePosition */])(target, pos.posX, pos.posY);
    edge.TL = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__position__["a" /* calculatePosition */])(target, 'left', 'top');
    edge.TR = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__position__["a" /* calculatePosition */])(target, 'right', 'top');
    edge.BR = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__position__["a" /* calculatePosition */])(target, 'left', 'bottom');
    edge.BL = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__position__["a" /* calculatePosition */])(target, 'right', 'bottom');
}
function setPosition(eStatus, pos, elementRect) {
    eStatus.TL = { top: pos.position.top + pos.offsetY, left: pos.position.left + pos.offsetX };
    eStatus.TR = { top: eStatus.TL.top, left: eStatus.TL.left + elementRect.width };
    eStatus.BL = { top: eStatus.TL.top + elementRect.height,
        left: eStatus.TL.left };
    eStatus.BR = { top: eStatus.TL.top + elementRect.height,
        left: eStatus.TL.left + elementRect.width };
}
function leftCollideCheck(left, right) {
    var leftSide = false;
    var rightSide = false;
    if (((left - getBodyScrollLeft()) < ContainerLeft())) {
        leftSide = true;
    }
    if (right > ContainerRight()) {
        rightSide = true;
    }
    return { leftSide: leftSide, rightSide: rightSide };
}
function leftFlip(target, edge, tEdge, pos, elementRect, deepCheck) {
    var collideSide = leftCollideCheck(edge.TL.left, edge.TR.left);
    if ((tEdge.TL.left - getBodyScrollLeft()) <= ContainerLeft()) {
        collideSide.leftSide = false;
    }
    if (tEdge.TR.left >= ContainerRight()) {
        collideSide.rightSide = false;
    }
    if ((collideSide.leftSide && !collideSide.rightSide) || (!collideSide.leftSide && collideSide.rightSide)) {
        if (pos.posX === 'right') {
            pos.posX = 'left';
        }
        else {
            pos.posX = 'right';
        }
        pos.offsetX = pos.offsetX + elementRect.width;
        pos.offsetX = -1 * pos.offsetX;
        pos.position = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__position__["a" /* calculatePosition */])(target, pos.posX, pos.posY);
        setPosition(edge, pos, elementRect);
        if (deepCheck) {
            leftFlip(target, edge, tEdge, pos, elementRect, false);
        }
    }
}
function topFlip(target, edge, tEdge, pos, elementRect, deepCheck) {
    var collideSide = topCollideCheck(edge.TL.top, edge.BL.top);
    if ((tEdge.TL.top - getBodyScrollTop()) <= ContainerTop()) {
        collideSide.topSide = false;
    }
    if (tEdge.BL.top >= ContainerBottom()) {
        collideSide.bottomSide = false;
    }
    if ((collideSide.topSide && !collideSide.bottomSide) || (!collideSide.topSide && collideSide.bottomSide)) {
        if (pos.posY === 'top') {
            pos.posY = 'bottom';
        }
        else {
            pos.posY = 'top';
        }
        pos.offsetY = pos.offsetY + elementRect.height;
        pos.offsetY = -1 * pos.offsetY;
        pos.position = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__position__["a" /* calculatePosition */])(target, pos.posX, pos.posY);
        setPosition(edge, pos, elementRect);
        if (deepCheck) {
            topFlip(target, edge, tEdge, pos, elementRect, false);
        }
    }
}
function topCollideCheck(top, bottom) {
    var topSide = false;
    var bottomSide = false;
    if ((top - getBodyScrollTop()) < ContainerTop()) {
        topSide = true;
    }
    if (bottom > ContainerBottom()) {
        bottomSide = true;
    }
    return { topSide: topSide, bottomSide: bottomSide };
}
function getTargetContainerWidth() {
    return targetContainer.getBoundingClientRect().width;
}
function getTargetContainerHeight() {
    return targetContainer.getBoundingClientRect().height;
}
function getTargetContainerLeft() {
    return targetContainer.getBoundingClientRect().left;
}
function getTargetContainerTop() {
    return targetContainer.getBoundingClientRect().top;
}
function ContainerTop() {
    if (targetContainer) {
        return getTargetContainerTop();
    }
    return 0;
}
function ContainerLeft() {
    if (targetContainer) {
        return getTargetContainerLeft();
    }
    return 0;
}
function ContainerRight() {
    if (targetContainer) {
        return (getBodyScrollLeft() + getTargetContainerLeft() + getTargetContainerWidth());
    }
    return (getBodyScrollLeft() + getViewPortWidth());
}
function ContainerBottom() {
    if (targetContainer) {
        return (getBodyScrollTop() + getTargetContainerTop() + getTargetContainerHeight());
    }
    return (getBodyScrollTop() + getViewPortHeight());
}
function getBodyScrollTop() {
    return parentDocument.documentElement.scrollTop || parentDocument.body.scrollTop;
}
function getBodyScrollLeft() {
    return parentDocument.documentElement.scrollLeft || parentDocument.body.scrollLeft;
}
function getViewPortHeight() {
    return window.innerHeight;
}
function getViewPortWidth() {
    return window.innerWidth;
}


/***/ }),
/* 114 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Popup; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_position__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_collision__ = __webpack_require__(113);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};








var CLASSNAMES = {
    ROOT: 'e-popup',
    RTL: 'e-rtl',
    OPEN: 'e-popup-open',
    CLOSE: 'e-popup-close'
};
var Popup = (function (_super) {
    __extends(Popup, _super);
    function Popup(element, options) {
        return _super.call(this, options, element) || this;
    }
    Popup.prototype.onPropertyChanged = function (newProp, oldProp) {
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'width':
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.element, { 'width': __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(newProp.width) });
                    break;
                case 'height':
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.element, { 'height': __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(newProp.height) });
                    break;
                case 'zIndex':
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.element, { 'zIndex': newProp.zIndex });
                    break;
                case 'enableRtl':
                    this.setEnableRtl();
                    break;
                case 'position':
                case 'relateTo':
                    this.refreshPosition();
                    break;
                case 'offsetX':
                    var x = newProp.offsetX - oldProp.offsetX;
                    this.element.style.left = (parseInt(this.element.style.left, 10) + (x)).toString() + 'px';
                    break;
                case 'offsetY':
                    var y = newProp.offsetY - oldProp.offsetY;
                    this.element.style.top = (parseInt(this.element.style.top, 10) + (y)).toString() + 'px';
                    break;
                case 'content':
                    this.setContent();
                    break;
                case 'actionOnScroll':
                    if (newProp.actionOnScroll !== 'none') {
                        this.wireScrollEvents();
                    }
                    else {
                        this.unwireScrollEvents();
                    }
                    break;
            }
        }
    };
    Popup.prototype.getModuleName = function () {
        return 'popup';
    };
    Popup.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    Popup.prototype.destroy = function () {
        this.element.classList.remove(CLASSNAMES.ROOT, CLASSNAMES.RTL);
        this.unwireEvents();
        _super.prototype.destroy.call(this);
    };
    Popup.prototype.render = function () {
        this.element.classList.add(CLASSNAMES.ROOT);
        var styles = {};
        if (this.zIndex !== 1000) {
            styles.zIndex = this.zIndex;
        }
        if (this.width !== 'auto') {
            styles.width = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(this.width);
        }
        if (this.height !== 'auto') {
            styles.height = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(this.height);
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.element, styles);
        this.setEnableRtl();
        this.setContent();
        this.wireEvents();
    };
    Popup.prototype.wireEvents = function () {
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(window, 'orientationchange', this.orientationOnChange, this);
        }
        if (this.actionOnScroll !== 'none') {
            this.wireScrollEvents();
        }
    };
    Popup.prototype.wireScrollEvents = function () {
        if (this.getRelateToElement()) {
            for (var _i = 0, _a = this.getScrollableParent(this.getRelateToElement()); _i < _a.length; _i++) {
                var parent_1 = _a[_i];
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(parent_1, 'scroll', this.scrollRefresh, this);
            }
        }
    };
    Popup.prototype.unwireEvents = function () {
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(window, 'orientationchange', this.orientationOnChange);
        }
        if (this.actionOnScroll !== 'none') {
            this.unwireScrollEvents();
        }
    };
    Popup.prototype.unwireScrollEvents = function () {
        if (this.getRelateToElement()) {
            for (var _i = 0, _a = this.getScrollableParent(this.getRelateToElement()); _i < _a.length; _i++) {
                var parent_2 = _a[_i];
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(parent_2, 'scroll', this.scrollRefresh);
            }
        }
    };
    Popup.prototype.getRelateToElement = function () {
        return ((typeof this.relateTo) === 'string') ?
            document.querySelector(this.relateTo) : this.relateTo;
    };
    Popup.prototype.scrollRefresh = function (e) {
        if (this.actionOnScroll === 'reposition') {
            if (!(this.element.offsetParent === e.target ||
                (this.element.offsetParent && this.element.offsetParent.tagName === 'BODY' &&
                    e.target.parentElement == null))) {
                this.refreshPosition();
            }
        }
        else if (this.actionOnScroll === 'hide') {
            this.hide();
        }
        if (this.actionOnScroll !== 'none') {
            if (this.getRelateToElement()) {
                var targetVisible = this.isElementOnViewport(this.getRelateToElement(), e.target);
                if (!targetVisible && !this.targetInvisibleStatus) {
                    this.trigger('targetExitViewport');
                    this.targetInvisibleStatus = true;
                }
                else if (targetVisible) {
                    this.targetInvisibleStatus = false;
                }
            }
        }
    };
    Popup.prototype.isElementOnViewport = function (relateToElement, scrollElement) {
        var scrollParents = this.getScrollableParent(relateToElement);
        for (var parent_3 = 0; parent_3 < scrollParents.length; parent_3++) {
            if (this.isElementVisible(relateToElement, scrollParents[parent_3])) {
                continue;
            }
            else {
                return false;
            }
        }
        return true;
    };
    Popup.prototype.isElementVisible = function (relateToElement, scrollElement) {
        var rect = relateToElement.getBoundingClientRect();
        if (!rect.height || !rect.width) {
            return false;
        }
        if (scrollElement.getBoundingClientRect) {
            var parent_4 = scrollElement.getBoundingClientRect();
            return !(rect.bottom < parent_4.top) &&
                (!(rect.bottom > parent_4.bottom) &&
                    (!(rect.right > parent_4.right) &&
                        !(rect.left < parent_4.left)));
        }
        else {
            var win = window;
            var windowView = {
                top: win.scrollY,
                left: win.scrollX,
                right: win.scrollX + win.outerWidth,
                bottom: win.scrollY + win.outerHeight
            };
            var off = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_position__["a" /* calculatePosition */])(relateToElement);
            var ele = {
                top: off.top,
                left: off.left,
                right: off.left + rect.width,
                bottom: off.top + rect.height
            };
            var elementView = {
                top: windowView.bottom - ele.top,
                left: windowView.right - ele.left,
                bottom: ele.bottom - windowView.top,
                right: ele.right - windowView.left
            };
            return elementView.top > 0
                && elementView.left > 0
                && elementView.right > 0
                && elementView.bottom > 0;
        }
    };
    Popup.prototype.preRender = function () {
    };
    Popup.prototype.setEnableRtl = function () {
        this.reposition();
        this.enableRtl ? this.element.classList.add(CLASSNAMES.RTL) : this.element.classList.remove(CLASSNAMES.RTL);
    };
    Popup.prototype.setContent = function () {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.content)) {
            this.element.innerHTML = '';
            if (typeof (this.content) === 'string') {
                this.element.textContent = this.content;
            }
            else {
                this.element.appendChild(this.content);
            }
        }
    };
    Popup.prototype.orientationOnChange = function () {
        var _this = this;
        setTimeout(function () {
            _this.refreshPosition();
        }, 200);
    };
    Popup.prototype.refreshPosition = function () {
        this.reposition();
        this.checkCollision();
    };
    Popup.prototype.reposition = function () {
        var pos;
        var relateToElement = this.getRelateToElement();
        if (typeof this.position.X === 'number' && typeof this.position.Y === 'number') {
            pos = { left: this.position.X, top: this.position.Y };
        }
        else if (relateToElement) {
            var display = this.element.style.display;
            this.element.style.display = 'block';
            pos = this.getAnchorPosition(relateToElement, this.element, this.position, this.offsetX, this.offsetY);
            this.element.style.display = display;
        }
        else {
            pos = { left: 0, top: 0 };
        }
        this.element.style.left = pos.left + 'px';
        this.element.style.top = pos.top + 'px';
    };
    Popup.prototype.getAnchorPosition = function (anchorEle, ele, position, offsetX, offsetY) {
        var eleRect = ele.getBoundingClientRect();
        var anchorRect = anchorEle.getBoundingClientRect();
        var anchor = anchorEle;
        var anchorPos = { left: 0, top: 0 };
        if (ele.offsetParent && ele.offsetParent.tagName === 'BODY' && anchorEle.tagName === 'BODY') {
            anchorPos = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_position__["a" /* calculatePosition */])(anchorEle);
        }
        else {
            anchorPos = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_position__["b" /* calculateRelativeBasedPosition */])(anchor, ele);
        }
        switch (position.X) {
            default:
            case 'left':
                break;
            case 'center':
                if (this.targetType === 'container') {
                    anchorPos.left += (anchorRect.width / 2 - eleRect.width / 2);
                }
                else {
                    anchorPos.left += (anchorRect.width / 2);
                }
                break;
            case 'right':
                if (this.targetType === 'container') {
                    anchorPos.left += (anchorRect.width - eleRect.width);
                }
                else {
                    anchorPos.left += (anchorRect.width);
                }
                break;
        }
        switch (position.Y) {
            default:
            case 'top':
                break;
            case 'center':
                if (this.targetType === 'container') {
                    anchorPos.top += (anchorRect.height / 2 - eleRect.height / 2);
                }
                else {
                    anchorPos.top += (anchorRect.height / 2);
                }
                break;
            case 'bottom':
                if (this.targetType === 'container') {
                    anchorPos.top += (anchorRect.height - eleRect.height);
                }
                else {
                    anchorPos.top += (anchorRect.height);
                }
                break;
        }
        anchorPos.left += offsetX;
        anchorPos.top += offsetY;
        return anchorPos;
    };
    Popup.prototype.callFlip = function (param) {
        var relateToElement = this.getRelateToElement();
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_collision__["c" /* flip */])(this.element, relateToElement, this.offsetX, this.offsetY, this.position.X, this.position.Y, this.viewPortElement, param);
    };
    Popup.prototype.callFit = function (param) {
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_collision__["a" /* isCollide */])(this.element, this.viewPortElement).length !== 0) {
            var data = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_collision__["b" /* fit */])(this.element, this.viewPortElement, param);
            this.element.style.left = data.left + 'px';
            this.element.style.top = data.top + 'px';
        }
    };
    Popup.prototype.checkCollision = function () {
        var horz = this.collision.X;
        var vert = this.collision.Y;
        if (horz === 'none' && vert === 'none') {
            return;
        }
        if (horz === 'flip' && vert === 'flip') {
            this.callFlip({ X: true, Y: true });
        }
        else if (horz === 'fit' && vert === 'fit') {
            this.callFit({ X: true, Y: true });
        }
        else {
            if (horz === 'fit') {
                this.callFit({ X: true, Y: false });
            }
            else if (vert === 'fit') {
                this.callFit({ X: false, Y: true });
            }
            if (horz === 'flip') {
                this.callFlip({ X: true, Y: false });
            }
            else if (vert === 'flip') {
                this.callFlip({ Y: true, X: false });
            }
        }
    };
    Popup.prototype.show = function (animationOptions) {
        var _this = this;
        animationOptions = (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(animationOptions) && typeof animationOptions === 'object') ?
            animationOptions : this.showAnimation;
        if (this.collision.X !== 'none' || this.collision.Y !== 'none') {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], CLASSNAMES.CLOSE);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], CLASSNAMES.OPEN);
            this.checkCollision();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], CLASSNAMES.OPEN);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], CLASSNAMES.CLOSE);
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(animationOptions)) {
            animationOptions.begin = function () {
                if (!_this.isDestroyed) {
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([_this.element], CLASSNAMES.CLOSE);
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([_this.element], CLASSNAMES.OPEN);
                }
            };
            animationOptions.end = function () {
                if (!_this.isDestroyed) {
                    _this.trigger('open');
                }
            };
            new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Animation"](animationOptions).animate(this.element);
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], CLASSNAMES.CLOSE);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], CLASSNAMES.OPEN);
            this.trigger('open');
        }
    };
    Popup.prototype.hide = function (animationOptions) {
        var _this = this;
        animationOptions = (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(animationOptions) && typeof animationOptions === 'object') ?
            animationOptions : this.hideAnimation;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(animationOptions)) {
            animationOptions.end = function () {
                if (!_this.isDestroyed) {
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([_this.element], CLASSNAMES.OPEN);
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([_this.element], CLASSNAMES.CLOSE);
                    _this.trigger('close');
                }
            };
            new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Animation"](animationOptions).animate(this.element);
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], CLASSNAMES.OPEN);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], CLASSNAMES.CLOSE);
            this.trigger('close');
        }
    };
    Popup.prototype.getScrollableParent = function (element) {
        var eleStyle = getComputedStyle(element);
        var scrollParents = [];
        var overflowRegex = /(auto|scroll)/;
        var parent = element.parentElement;
        while (parent && parent.tagName !== 'HTML') {
            var parentStyle = getComputedStyle(parent);
            if (!(eleStyle.position === 'absolute' && parentStyle.position === 'static')
                && overflowRegex.test(parentStyle.overflow + parentStyle.overflowY + parentStyle.overflowX)) {
                scrollParents.push(parent);
            }
            parent = parent.parentElement;
        }
        scrollParents.push(document);
        return scrollParents;
    };
    return Popup;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Component"]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('auto')
], Popup.prototype, "height", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('auto')
], Popup.prototype, "width", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], Popup.prototype, "content", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('container')
], Popup.prototype, "targetType", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], Popup.prototype, "viewPortElement", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])({ X: 'none', Y: 'none' })
], Popup.prototype, "collision", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(document.body)
], Popup.prototype, "relateTo", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])({ X: 'left', Y: 'top' })
], Popup.prototype, "position", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(0)
], Popup.prototype, "offsetX", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(0)
], Popup.prototype, "offsetY", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(1000)
], Popup.prototype, "zIndex", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], Popup.prototype, "enableRtl", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('reposition')
], Popup.prototype, "actionOnScroll", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], Popup.prototype, "showAnimation", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], Popup.prototype, "hideAnimation", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Popup.prototype, "open", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Popup.prototype, "close", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Popup.prototype, "targetExitViewport", void 0);
Popup = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], Popup);



/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(42), __webpack_require__(7), __webpack_require__(0), __webpack_require__(51), __webpack_require__(72)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, row_1, enum_1, ej2_base_1, cell_1, value_formatter_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ExportHelper = (function () {
        function ExportHelper(parent) {
            this.hideColumnInclude = false;
            this.parent = parent;
        }
        ExportHelper.prototype.getHeaders = function (column, isHideColumnInclude) {
            if (isHideColumnInclude) {
                this.hideColumnInclude = true;
            }
            else {
                this.hideColumnInclude = false;
            }
            var cols = column;
            this.colDepth = this.measureColumnDepth(cols);
            var rows = [];
            var actualColumns = [];
            for (var i = 0; i < this.colDepth; i++) {
                rows[i] = new row_1.Row({});
                rows[i].cells = [];
            }
            rows = this.processColumns(rows);
            rows = this.processHeaderCells(rows);
            for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {
                var row = rows_1[_i];
                for (var i = 0; i < row.cells.length; i++) {
                    var cell = row.cells[i];
                    if (cell.visible === undefined && cell.cellType !== 9) {
                        row.cells = this.removeCellFromRow(row.cells, i);
                        i = i - 1;
                    }
                    if ((!isHideColumnInclude) && cell.visible !== undefined && (!cell.visible)) {
                        row.cells = this.removeCellFromRow(row.cells, i);
                        i = i - 1;
                    }
                }
            }
            for (var i = 0; i < cols.length; i++) {
                this.generateActualColumns(cols[i], actualColumns);
            }
            return { rows: rows, columns: actualColumns };
        };
        ExportHelper.prototype.generateActualColumns = function (column, actualColumns) {
            if (!column.columns) {
                if (column.visible || this.hideColumnInclude) {
                    actualColumns.push(column);
                }
            }
            else {
                if (column.visible || this.hideColumnInclude) {
                    var colSpan = this.getCellCount(column, 0);
                    if (colSpan !== 0) {
                        for (var i = 0; i < column.columns.length; i++) {
                            this.generateActualColumns(column.columns[i], actualColumns);
                        }
                    }
                }
            }
        };
        ExportHelper.prototype.removeCellFromRow = function (cells, cellIndex) {
            var resultCells = [];
            for (var i = 0; i < cellIndex; i++) {
                resultCells.push(cells[i]);
            }
            for (var i = (cellIndex + 1); i < cells.length; i++) {
                resultCells.push(cells[i]);
            }
            return resultCells;
        };
        ExportHelper.prototype.processHeaderCells = function (rows) {
            var columns = this.parent.enableColumnVirtualization ? this.parent.getColumns() : this.parent.columns;
            for (var i = 0; i < columns.length; i++) {
                rows = this.appendGridCells(columns[i], rows, 0, i === 0, false, i === (columns.length - 1));
            }
            return rows;
        };
        ExportHelper.prototype.appendGridCells = function (cols, gridRows, index, isFirstObj, isFirstColumn, isLastColumn) {
            var lastCol = isLastColumn ? 'e-lastcell' : '';
            if (!cols.columns) {
                gridRows[index].cells.push(this.generateCell(cols, enum_1.CellType.Header, this.colDepth - index, (isFirstObj ? '' : (isFirstColumn ? 'e-firstcell' : '')) + lastCol, index, this.parent.getColumnIndexByUid(cols.uid)));
            }
            else {
                var colSpan = this.getCellCount(cols, 0);
                if (colSpan) {
                    gridRows[index].cells.push(new cell_1.Cell({
                        cellType: enum_1.CellType.StackedHeader, column: cols, colSpan: colSpan
                    }));
                }
                var isFirstCell = void 0;
                var isIgnoreFirstCell = void 0;
                for (var i = 0, len = cols.columns.length; i < len; i++) {
                    isFirstCell = false;
                    if (cols.columns[i].visible && !isIgnoreFirstCell) {
                        isFirstCell = true;
                        isIgnoreFirstCell = true;
                    }
                    gridRows = this.appendGridCells(cols.columns[i], gridRows, index + 1, isFirstObj, i === 0, i === (len - 1) && isLastColumn);
                }
            }
            return gridRows;
        };
        ExportHelper.prototype.generateCell = function (gridColumn, cellType, rowSpan, className, rowIndex, columnIndex) {
            var option = {
                'visible': gridColumn.visible,
                'isDataCell': false,
                'isTemplate': !ej2_base_1.isNullOrUndefined(gridColumn.headerTemplate),
                'rowID': '',
                'column': gridColumn,
                'cellType': cellType,
                'rowSpan': rowSpan,
                'className': className,
                'index': rowIndex,
                'colIndex': columnIndex
            };
            if (!option.rowSpan || option.rowSpan < 2) {
                delete option.rowSpan;
            }
            return new cell_1.Cell(option);
        };
        ExportHelper.prototype.processColumns = function (rows) {
            var gridObj = this.parent;
            var columnIndexes = this.parent.getColumnIndexesInView();
            for (var i = 0, len = rows.length; i < len; i++) {
                if (gridObj.allowGrouping) {
                    for (var j = 0, len_1 = gridObj.groupSettings.columns.length; j < len_1; j++) {
                        if (this.parent.enableColumnVirtualization && columnIndexes.indexOf(j) === -1) {
                            continue;
                        }
                        rows[i].cells.push(this.generateCell({}, enum_1.CellType.HeaderIndent));
                    }
                }
                if (gridObj.detailTemplate || gridObj.childGrid) {
                    rows[i].cells.push(this.generateCell({}, enum_1.CellType.DetailHeader));
                }
            }
            return rows;
        };
        ExportHelper.prototype.getCellCount = function (column, count) {
            if (column.columns) {
                for (var i = 0; i < column.columns.length; i++) {
                    count = this.getCellCount(column.columns[i], count);
                }
            }
            else {
                if (column.visible || this.hideColumnInclude) {
                    count++;
                }
            }
            return count;
        };
        ExportHelper.prototype.measureColumnDepth = function (column) {
            var max = 0;
            for (var i = 0; i < column.length; i++) {
                var depth = this.checkDepth(column[i], 0);
                if (max < depth) {
                    max = depth;
                }
            }
            return max + 1;
        };
        ExportHelper.prototype.checkDepth = function (col, index) {
            if (col.columns) {
                index++;
                for (var i = 0; i < col.columns.length; i++) {
                    index = this.checkDepth(col.columns[i], index);
                }
            }
            return index;
        };
        ;
        return ExportHelper;
    }());
    exports.ExportHelper = ExportHelper;
    var ExportValueFormatter = (function () {
        function ExportValueFormatter() {
            this.valueFormatter = new value_formatter_1.ValueFormatter();
            this.internationalization = new ej2_base_1.Internationalization();
        }
        ExportValueFormatter.prototype.formatCellValue = function (args) {
            if (args.column.type === 'number' && args.column.format !== undefined && args.column.format !== '') {
                return this.internationalization.getNumberFormat({ format: args.column.format })(args.value);
            }
            else if (args.column.type === 'boolean') {
                return args.value ? 'true' : 'false';
            }
            else if ((args.column.type === 'date' || args.column.type === 'datetime' || args.column.type === 'time') && args.column.format !== undefined) {
                if (typeof args.column.format === 'string') {
                    var format = void 0;
                    if (args.column.type === 'date') {
                        format = { type: 'date', skeleton: args.column.format };
                    }
                    else if (args.column.type === 'time') {
                        format = { type: 'time', skeleton: args.column.format };
                    }
                    else {
                        format = { type: 'dateTime', skeleton: args.column.format };
                    }
                    return this.valueFormatter.getFormatFunction(format)(args.value);
                }
                else {
                    if (args.column.format instanceof Object && args.column.format.type === undefined) {
                        return (args.value.toString());
                    }
                    else {
                        var customFormat = void 0;
                        if (args.column.type === 'date') {
                            customFormat = { type: args.column.format.type, format: args.column.format.format, skeleton: args.column.format.skeleton };
                        }
                        else if (args.column.type === 'time') {
                            customFormat = { type: 'time', format: args.column.format.format, skeleton: args.column.format.skeleton };
                        }
                        else {
                            customFormat = { type: 'dateTime', format: args.column.format.format, skeleton: args.column.format.skeleton };
                        }
                        return this.valueFormatter.getFormatFunction(customFormat)(args.value);
                    }
                }
            }
            else {
                if (args.column.type === undefined || args.column.type === null) {
                    return '';
                }
                else {
                    return (args.value).toString();
                }
            }
        };
        return ExportValueFormatter;
    }());
    exports.ExportValueFormatter = ExportValueFormatter;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(2), __webpack_require__(3), __webpack_require__(35)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, util_1, events, row_renderer_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var NormalEdit = (function () {
        function NormalEdit(parent, serviceLocator, renderer) {
            this.parent = parent;
            this.renderer = renderer;
            this.serviceLocator = serviceLocator;
            this.addEventListener();
        }
        NormalEdit.prototype.clickHandler = function (e) {
            var target = e.target;
            var gObj = this.parent;
            if (util_1.parentsUntil(target, 'e-gridcontent')) {
                this.rowIndex = util_1.parentsUntil(target, 'e-rowcell') ? parseInt(target.parentElement.getAttribute('aria-rowindex'), 10) : -1;
                if (gObj.isEdit) {
                    gObj.editModule.endEdit();
                }
            }
        };
        NormalEdit.prototype.dblClickHandler = function (e) {
            if (util_1.parentsUntil(e.target, 'e-rowcell') && this.parent.editSettings.allowEditOnDblClick) {
                this.parent.editModule.startEdit(util_1.parentsUntil(e.target, 'e-row'));
            }
        };
        NormalEdit.prototype.editComplete = function (e) {
            switch (e.requestType) {
                case 'save':
                    this.parent.selectRow(0);
                    this.parent.trigger(events.actionComplete, ej2_base_1.extend(e, {
                        requestType: 'save',
                        type: events.actionComplete
                    }));
                    break;
                case 'delete':
                    this.parent.selectRow(this.editRowIndex);
                    this.parent.trigger(events.actionComplete, ej2_base_1.extend(e, {
                        requestType: 'delete',
                        type: events.actionComplete
                    }));
                    break;
            }
            this.parent.element.focus();
        };
        NormalEdit.prototype.startEdit = function (tr) {
            var gObj = this.parent;
            var primaryKeys = gObj.getPrimaryKeyFieldNames();
            var primaryKeyValues = [];
            this.rowIndex = this.editRowIndex = parseInt(tr.getAttribute('aria-rowindex'), 10);
            this.previousData = gObj.getCurrentViewRecords()[this.rowIndex];
            for (var i = 0; i < primaryKeys.length; i++) {
                primaryKeyValues.push(this.previousData[primaryKeys[i]]);
            }
            var args = {
                row: tr, primaryKey: primaryKeys, primaryKeyValue: primaryKeyValues, requestType: 'beginEdit',
                rowData: this.previousData, rowIndex: this.rowIndex, type: 'edit', cancel: false
            };
            gObj.trigger(events.beginEdit, args);
            args.type = 'actionBegin';
            gObj.trigger(events.actionBegin, args);
            if (args.cancel) {
                return;
            }
            gObj.clearSelection();
            gObj.isEdit = true;
            this.renderer.update(args);
            this.uid = tr.getAttribute('data-uid');
            gObj.editModule.applyFormValidation();
            args.type = 'actionComplete';
            gObj.trigger(events.actionComplete, args);
        };
        NormalEdit.prototype.endEdit = function () {
            var gObj = this.parent;
            if (!this.parent.isEdit || !gObj.editModule.formObj.validate()) {
                return;
            }
            var editedData = ej2_base_1.extend({}, this.previousData);
            var args = {
                requestType: 'save', type: events.actionBegin, data: editedData, cancel: false,
                previousData: this.previousData, selectedRow: gObj.selectedRowIndex, foreignKeyData: {}
            };
            editedData = gObj.editModule.getCurrentEditedData(gObj.element.querySelector('.e-gridform'), editedData);
            if (gObj.element.querySelectorAll('.e-editedrow').length) {
                args.action = 'edit';
                gObj.trigger(events.actionBegin, args);
                if (args.cancel) {
                    return;
                }
                gObj.notify(events.updateData, args);
            }
            else {
                args.action = 'add';
                args.selectedRow = 0;
                gObj.notify(events.modelChanged, args);
                if (args.cancel) {
                    return;
                }
            }
            this.parent.notify(events.dialogDestroy, {});
            this.stopEditStatus();
        };
        NormalEdit.prototype.editHandler = function (args) {
            var _this = this;
            if (args.promise) {
                args.promise.then(function (e) { return _this.edSucc(e, args); }).catch(function (e) { return _this.edFail(e); });
            }
            else {
                this.editSuccess({}, args);
            }
        };
        NormalEdit.prototype.edSucc = function (e, args) {
            this.editSuccess(e, args);
        };
        NormalEdit.prototype.edFail = function (e) {
            this.editFailure(e);
        };
        NormalEdit.prototype.editSuccess = function (e, args) {
            if (e.result) {
                this.parent.trigger(events.beforeDataBound, e);
                args.data = e.result;
            }
            else {
                this.parent.trigger(events.beforeDataBound, args);
            }
            args.type = events.actionComplete;
            this.refreshRow(args.data);
            this.parent.trigger(events.actionComplete, args);
            this.parent.selectRow(this.rowIndex > -1 ? this.rowIndex : this.editRowIndex);
            this.parent.element.focus();
        };
        NormalEdit.prototype.editFailure = function (e) {
            this.parent.trigger(events.actionFailure, e);
        };
        NormalEdit.prototype.refreshRow = function (data) {
            var row = new row_renderer_1.RowRenderer(this.serviceLocator, null, this.parent);
            var rowObj = this.parent.getRowObjectFromUID(this.uid);
            if (rowObj) {
                rowObj.changes = data;
                row.refresh(rowObj, this.parent.columns, true);
            }
        };
        NormalEdit.prototype.closeEdit = function () {
            var gObj = this.parent;
            var args = {
                requestType: 'cancel', type: events.actionBegin, data: this.previousData, selectedRow: gObj.selectedRowIndex
            };
            gObj.trigger(events.actionBegin, args);
            this.stopEditStatus();
            args.type = events.actionComplete;
            if (gObj.editSettings.mode !== 'dialog') {
                this.refreshRow(args.data);
            }
            gObj.selectRow(this.rowIndex);
            gObj.element.focus();
            gObj.trigger(events.actionComplete, args);
        };
        NormalEdit.prototype.addRecord = function (data) {
            var gObj = this.parent;
            if (gObj.isEdit) {
                return;
            }
            if (data) {
                gObj.notify(events.modelChanged, {
                    requestType: 'add', type: events.actionBegin, data: data
                });
                return;
            }
            this.previousData = {};
            this.uid = '';
            for (var _i = 0, _a = gObj.columns; _i < _a.length; _i++) {
                var col = _a[_i];
                this.previousData[col.field] = data && data[col.field] ? data[col.field] : col.defaultValue;
            }
            var args = {
                cancel: false, foreignKeyData: {},
                requestType: 'add', data: this.previousData, type: events.actionBegin
            };
            gObj.trigger(events.actionBegin, args);
            if (args.cancel) {
                return;
            }
            gObj.clearSelection();
            gObj.isEdit = true;
            this.renderer.addNew({ rowData: args.data, requestType: 'add' });
            gObj.editModule.applyFormValidation();
            args.type = events.actionComplete;
            args.row = gObj.element.querySelector('.e-addedrow');
            gObj.trigger(events.actionComplete, args);
        };
        NormalEdit.prototype.deleteRecord = function (fieldname, data) {
            this.editRowIndex = this.parent.selectedRowIndex;
            this.parent.notify(events.modelChanged, {
                requestType: 'delete', type: events.actionBegin, foreignKeyData: {},
                data: data ? [data] : this.parent.getSelectedRecords(), tr: this.parent.getSelectedRows(), cancel: false
            });
        };
        NormalEdit.prototype.stopEditStatus = function () {
            var gObj = this.parent;
            gObj.isEdit = false;
            var elem = gObj.element.querySelector('.e-addedrow');
            if (elem) {
                ej2_base_2.remove(elem);
            }
            elem = gObj.element.querySelector('.e-editedrow');
            if (elem) {
                elem.classList.remove('e-editedrow');
            }
        };
        NormalEdit.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.crudAction, this.editHandler, this);
            this.parent.on(events.doubleTap, this.dblClickHandler, this);
            this.parent.on(events.click, this.clickHandler, this);
            this.parent.on(events.dblclick, this.dblClickHandler, this);
            this.parent.on(events.deleteComplete, this.editComplete, this);
            this.parent.on(events.saveComplete, this.editComplete, this);
        };
        NormalEdit.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.crudAction, this.editHandler);
            this.parent.off(events.doubleTap, this.dblClickHandler);
            this.parent.off(events.click, this.clickHandler);
            this.parent.off(events.dblclick, this.dblClickHandler);
            this.parent.off(events.deleteComplete, this.editComplete);
            this.parent.off(events.saveComplete, this.editComplete);
        };
        NormalEdit.prototype.destroy = function () {
            this.removeEventListener();
        };
        return NormalEdit;
    }());
    exports.NormalEdit = NormalEdit;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(18)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, cell_renderer_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var FilterCellRenderer = (function (_super) {
        __extends(FilterCellRenderer, _super);
        function FilterCellRenderer() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.element = ej2_base_2.createElement('TH', { className: 'e-filterbarcell' });
            return _this;
        }
        FilterCellRenderer.prototype.getGui = function () {
            return ej2_base_2.createElement('div');
        };
        FilterCellRenderer.prototype.render = function (cell, data) {
            var node = this.element.cloneNode();
            var innerDIV = this.getGui();
            var input;
            var column = cell.column;
            if ((ej2_base_1.isNullOrUndefined(column.allowFiltering) || column.allowFiltering) && !ej2_base_1.isNullOrUndefined(column.filterBarTemplate)) {
                node.classList.add('e-fltrtemp');
                ej2_base_2.attributes(innerDIV, {
                    'class': 'e-fltrtempdiv'
                });
                if (ej2_base_1.isNullOrUndefined(column.filterBarTemplate.create)) {
                    input = ej2_base_2.createElement('input', {
                        id: column.field + '_filterBarcell', className: 'e-filterUi_input e-filtertext e-fltrTemp',
                        attrs: { type: 'search', title: column.headerText }
                    });
                    innerDIV.appendChild(input);
                }
                else {
                    var args = { column: column };
                    var temp = column.filterBarTemplate.create;
                    if (typeof temp === 'string') {
                        temp = ej2_base_1.getValue(temp, window);
                    }
                    input = temp(args);
                    if (typeof input === 'string') {
                        var div = ej2_base_2.createElement('div');
                        div.innerHTML = input;
                        input = div.firstChild;
                    }
                    ej2_base_2.attributes(innerDIV, {
                        class: 'e-filterUi_input e-filtertext e-fltrTemp',
                        title: column.headerText,
                        id: column.field + '_filterBarcell',
                    });
                    innerDIV.appendChild(input);
                }
            }
            else {
                ej2_base_2.attributes(innerDIV, {
                    'class': 'e-filterdiv e-fltrinputdiv'
                });
                input = ej2_base_2.createElement('input', {
                    id: column.field + '_filterBarcell', className: 'e-filtertext',
                    attrs: {
                        type: 'search', title: column.headerText + cell.attributes.title,
                        value: data[cell.column.field] ? data[cell.column.field] : '', role: 'search'
                    }
                });
                innerDIV.appendChild(input);
                innerDIV.appendChild(ej2_base_2.createElement('span', {
                    className: 'e-cancel e-hide e-icons e-icon-hide',
                    attrs: { 'aria-label': 'clear filter cell', tabindex: '-1' }
                }));
            }
            if (column.allowFiltering === false || column.field === '' || ej2_base_1.isNullOrUndefined(column.field)) {
                input.setAttribute('disabled', 'true');
                input.classList.add('e-disable');
            }
            if (!column.visible) {
                node.classList.add('e-hide');
            }
            if ((ej2_base_1.isNullOrUndefined(column.allowFiltering) || column.allowFiltering) && !ej2_base_1.isNullOrUndefined(column.filterBarTemplate)) {
                var templateRead = column.filterBarTemplate.read;
                var templateWrite = column.filterBarTemplate.write;
                var args = { element: input, column: column };
                if (typeof templateRead === 'string') {
                    templateRead = args.column = ej2_base_1.getValue(templateRead, window);
                }
                if (typeof templateWrite === 'string') {
                    templateWrite = ej2_base_1.getValue(templateWrite, window);
                }
                templateWrite.call(this, args);
            }
            this.appendHtml(node, innerDIV);
            return node;
        };
        FilterCellRenderer.prototype.appendHtml = function (node, innerHtml) {
            node.appendChild(innerHtml);
            return node;
        };
        return FilterCellRenderer;
    }(cell_renderer_1.CellRenderer));
    exports.FilterCellRenderer = FilterCellRenderer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(7), __webpack_require__(35), __webpack_require__(51), __webpack_require__(42), __webpack_require__(3), __webpack_require__(0), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, enum_1, row_renderer_1, cell_1, row_1, events, ej2_base_4, util_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var HeaderRender = (function () {
        function HeaderRender(parent, serviceLocator) {
            var _this = this;
            this.helper = function (e) {
                var gObj = _this.parent;
                if (!(gObj.allowReordering || gObj.allowGrouping)) {
                    return false;
                }
                var visualElement = ej2_base_2.createElement('div', { className: 'e-cloneproperties e-dragclone e-headerclone' });
                var target = e.sender.target;
                var element = target.classList.contains('e-headercell') ? target :
                    util_1.parentsUntil(target, 'e-headercell');
                if (!element) {
                    return false;
                }
                var height = element.offsetHeight;
                var headercelldiv = element.querySelector('.e-headercelldiv');
                visualElement.textContent = headercelldiv ?
                    gObj.getColumnByUid(headercelldiv.getAttribute('e-mappinguid')).headerText : element.innerHTML;
                visualElement.style.width = element.offsetWidth + 'px';
                visualElement.style.height = element.offsetHeight + 'px';
                visualElement.style.lineHeight = (height - 6).toString() + 'px';
                if (element.querySelector('.e-headercelldiv')) {
                    _this.column = gObj.getColumnByUid(element.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));
                    visualElement.setAttribute('e-mappinguid', _this.column.uid);
                }
                gObj.element.appendChild(visualElement);
                return visualElement;
            };
            this.dragStart = function (e) {
                var gObj = _this.parent;
                gObj.element.querySelector('.e-gridpopup').style.display = 'none';
                gObj.notify(events.columnDragStart, { target: e.target, column: _this.column, event: e.event });
            };
            this.drag = function (e) {
                var gObj = _this.parent;
                var target = e.target;
                if (target) {
                    var closest = ej2_base_2.closest(target, '.e-grid');
                    var cloneElement = _this.parent.element.querySelector('.e-cloneproperties');
                    if (!closest || closest.getAttribute('id') !== gObj.element.getAttribute('id')) {
                        ej2_base_3.classList(cloneElement, ['e-notallowedcur'], ['e-defaultcur']);
                        if (gObj.allowReordering) {
                            gObj.element.querySelector('.e-reorderuparrow').style.display = 'none';
                            gObj.element.querySelector('.e-reorderdownarrow').style.display = 'none';
                        }
                        return;
                    }
                    gObj.notify(events.columnDrag, { target: e.target, column: _this.column, event: e.event });
                }
            };
            this.dragStop = function (e) {
                var gObj = _this.parent;
                var cancel;
                gObj.element.querySelector('.e-gridpopup').style.display = 'none';
                if ((!util_1.parentsUntil(e.target, 'e-headercell') && !util_1.parentsUntil(e.target, 'e-groupdroparea')) ||
                    (!gObj.allowReordering && util_1.parentsUntil(e.target, 'e-headercell')) ||
                    (!e.helper.getAttribute('e-mappinguid') && util_1.parentsUntil(e.target, 'e-groupdroparea'))) {
                    ej2_base_2.remove(e.helper);
                    cancel = true;
                }
                gObj.notify(events.columnDragStop, { target: e.target, event: e.event, column: _this.column, cancel: cancel });
            };
            this.drop = function (e) {
                var gObj = _this.parent;
                var uid = e.droppedElement.getAttribute('e-mappinguid');
                var closest = ej2_base_2.closest(e.target, '.e-grid');
                ej2_base_2.remove(e.droppedElement);
                if (closest && closest.getAttribute('id') !== gObj.element.getAttribute('id') ||
                    !(gObj.allowReordering || gObj.allowGrouping)) {
                    return;
                }
                gObj.notify(events.headerDrop, { target: e.target, uid: uid });
            };
            this.parent = parent;
            this.serviceLocator = serviceLocator;
            this.ariaService = this.serviceLocator.getService('ariaService');
            this.widthService = this.serviceLocator.getService('widthService');
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.columnVisibilityChanged, this.setVisible, this);
            this.parent.on(events.columnPositionChanged, this.refreshUI, this);
        }
        HeaderRender.prototype.renderPanel = function () {
            var div = ej2_base_2.createElement('div', { className: 'e-gridheader' });
            var innerDiv = ej2_base_2.createElement('div', { className: 'e-headercontent' });
            div.appendChild(innerDiv);
            this.setPanel(div);
            this.parent.element.appendChild(div);
        };
        HeaderRender.prototype.renderTable = function () {
            var headerDiv = this.getPanel();
            headerDiv.appendChild(this.createHeaderTable());
            this.setTable(headerDiv.querySelector('.e-table'));
            this.initializeHeaderDrag();
            this.initializeHeaderDrop();
            this.parent.notify(events.headerRefreshed, {});
        };
        HeaderRender.prototype.getPanel = function () {
            return this.headerPanel;
        };
        HeaderRender.prototype.setPanel = function (panel) {
            this.headerPanel = panel;
        };
        HeaderRender.prototype.getTable = function () {
            return this.headerTable;
        };
        HeaderRender.prototype.setTable = function (table) {
            this.headerTable = table;
        };
        HeaderRender.prototype.getColGroup = function () {
            return this.colgroup;
        };
        HeaderRender.prototype.setColGroup = function (colGroup) {
            return this.colgroup = colGroup;
        };
        HeaderRender.prototype.getRows = function () {
            var table = this.getTable();
            return table.tHead.rows;
        };
        HeaderRender.prototype.createHeaderTable = function () {
            var table = this.createTable();
            var innerDiv = this.getPanel().firstChild;
            innerDiv.appendChild(table);
            return innerDiv;
        };
        HeaderRender.prototype.createTable = function () {
            var gObj = this.parent;
            var columns = gObj.getColumns();
            var table = ej2_base_2.createElement('table', { className: 'e-table', attrs: { cellspacing: '0.25px', role: 'grid' } });
            var innerDiv = this.getPanel().firstChild;
            var findHeaderRow = this.createHeaderContent();
            var thead = findHeaderRow.thead;
            var tbody = ej2_base_2.createElement('tbody', { className: 'e-hide' });
            var colGroup = ej2_base_2.createElement('colgroup');
            var rowBody = ej2_base_2.createElement('tr');
            var bodyCell;
            var rows = findHeaderRow.rows;
            for (var i = 0, len = rows.length; i < len; i++) {
                for (var j = 0, len_1 = rows[i].cells.length; j < len_1; j++) {
                    var cell = rows[i].cells[j];
                    bodyCell = ej2_base_2.createElement('td');
                    rowBody.appendChild(bodyCell);
                }
            }
            if (gObj.allowFiltering || gObj.allowSorting || gObj.allowGrouping) {
                table.classList.add('e-sortfilter');
            }
            this.updateColGroup(colGroup);
            tbody.appendChild(rowBody);
            table.appendChild(this.setColGroup(colGroup));
            table.appendChild(thead);
            table.appendChild(tbody);
            this.ariaService.setOptions(table, { colcount: gObj.getColumns().length.toString() });
            return table;
        };
        HeaderRender.prototype.createHeaderContent = function () {
            var gObj = this.parent;
            var columns = gObj.getColumns();
            var thead = ej2_base_2.createElement('thead');
            var colHeader = ej2_base_2.createElement('tr', { className: 'e-columnheader' });
            var rowRenderer = new row_renderer_1.RowRenderer(this.serviceLocator, enum_1.CellType.Header);
            rowRenderer.element = colHeader;
            var rows = [];
            var headerRow;
            this.colDepth = this.getObjDepth();
            for (var i = 0, len = this.colDepth; i < len; i++) {
                rows[i] = this.generateRow(i);
                rows[i].cells = [];
            }
            rows = this.ensureColumns(rows);
            rows = this.getHeaderCells(rows);
            for (var i = 0, len = this.colDepth; i < len; i++) {
                headerRow = rowRenderer.render(rows[i], columns);
                thead.appendChild(headerRow);
            }
            var findHeaderRow = {
                thead: thead,
                rows: rows
            };
            return findHeaderRow;
        };
        HeaderRender.prototype.updateColGroup = function (colGroup) {
            var cols = this.parent.getColumns();
            var col;
            var indexes = this.parent.getColumnIndexesInView();
            if (this.parent.allowGrouping) {
                for (var i = 0, len = this.parent.groupSettings.columns.length; i < len; i++) {
                    if (this.parent.enableColumnVirtualization && indexes.indexOf(i) === -1) {
                        continue;
                    }
                    col = ej2_base_2.createElement('col');
                    colGroup.appendChild(col);
                }
            }
            if (this.parent.detailTemplate || this.parent.childGrid) {
                col = ej2_base_2.createElement('col');
                colGroup.appendChild(col);
            }
            for (var i = 0, len = cols.length; i < len; i++) {
                col = ej2_base_2.createElement('col');
                if (cols[i].visible === false) {
                    ej2_base_2.setStyleAttribute(col, { 'display': 'none' });
                }
                colGroup.appendChild(col);
            }
            return colGroup;
        };
        HeaderRender.prototype.ensureColumns = function (rows) {
            var gObj = this.parent;
            var indexes = this.parent.getColumnIndexesInView();
            for (var i = 0, len = rows.length; i < len; i++) {
                if (gObj.allowGrouping) {
                    for (var c = 0, len_2 = gObj.groupSettings.columns.length; c < len_2; c++) {
                        if (this.parent.enableColumnVirtualization && indexes.indexOf(c) === -1) {
                            continue;
                        }
                        rows[i].cells.push(this.generateCell({}, enum_1.CellType.HeaderIndent));
                    }
                }
                if (gObj.detailTemplate || gObj.childGrid) {
                    rows[i].cells.push(this.generateCell({}, enum_1.CellType.DetailHeader));
                }
            }
            return rows;
        };
        HeaderRender.prototype.getHeaderCells = function (rows) {
            var cols = this.parent.enableColumnVirtualization ? this.parent.getColumns() : this.parent.columns;
            for (var i = 0, len = cols.length; i < len; i++) {
                rows = this.appendCells(cols[i], rows, 0, i === 0, false, i === (len - 1));
            }
            return rows;
        };
        HeaderRender.prototype.appendCells = function (cols, rows, index, isFirstObj, isFirstCol, isLastCol) {
            var lastCol = isLastCol ? 'e-lastcell' : '';
            if (!cols.columns) {
                rows[index].cells.push(this.generateCell(cols, enum_1.CellType.Header, this.colDepth - index, (isFirstObj ? '' : (isFirstCol ? 'e-firstcell' : '')) + lastCol, index, this.parent.getColumnIndexByUid(cols.uid)));
            }
            else {
                var colSpan = this.getCellCnt(cols, 0);
                if (colSpan) {
                    rows[index].cells.push(new cell_1.Cell({
                        cellType: enum_1.CellType.StackedHeader, column: cols, colSpan: colSpan
                    }));
                }
                for (var i = 0, len = cols.columns.length; i < len; i++) {
                    rows = this.appendCells(cols.columns[i], rows, index + 1, isFirstObj, i === 0, i === (len - 1) && isLastCol);
                }
            }
            return rows;
        };
        HeaderRender.prototype.generateRow = function (index) {
            return new row_1.Row({});
        };
        HeaderRender.prototype.generateCell = function (column, cellType, rowSpan, className, rowIndex, colIndex) {
            var opt = {
                'visible': column.visible,
                'isDataCell': false,
                'isTemplate': !ej2_base_1.isNullOrUndefined(column.headerTemplate),
                'rowID': '',
                'column': column,
                'cellType': cellType,
                'rowSpan': rowSpan,
                'className': className,
                'index': rowIndex,
                'colIndex': colIndex
            };
            if (!opt.rowSpan || opt.rowSpan < 2) {
                delete opt.rowSpan;
            }
            return new cell_1.Cell(opt);
        };
        HeaderRender.prototype.setVisible = function (columns) {
            var rows = [].slice.call(this.getRows());
            var displayVal = '';
            var idx;
            var className;
            var element;
            for (var c = 0, clen = columns.length; c < clen; c++) {
                var column = columns[c];
                idx = this.parent.getNormalizedColumnIndex(column.uid);
                if (column.visible === false) {
                    displayVal = 'none';
                }
                ej2_base_2.setStyleAttribute(this.getColGroup().childNodes[idx], { 'display': displayVal });
                this.refreshUI();
            }
        };
        HeaderRender.prototype.refreshUI = function () {
            var headerDiv = this.getPanel();
            var table = this.getTable();
            ej2_base_2.remove(this.getTable());
            table.removeChild(table.firstChild);
            table.removeChild(table.childNodes[0]);
            var colGroup = ej2_base_2.createElement('colgroup');
            var findHeaderRow = this.createHeaderContent();
            table.insertBefore(findHeaderRow.thead, table.firstChild);
            this.updateColGroup(colGroup);
            table.insertBefore(this.setColGroup(colGroup), table.firstChild);
            this.setTable(table);
            this.appendContent(table);
            this.parent.notify(events.colGroupRefresh, {});
            this.widthService.setWidthToColumns();
            this.initializeHeaderDrag();
            this.parent.notify(events.headerRefreshed, {});
            var rows = [].slice.call(headerDiv.querySelectorAll('tr.e-columnheader'));
            if (this.parent.allowTextWrap && this.parent.textWrapSettings.wrapMode === 'header') {
                util_1.wrap(rows, true);
            }
        };
        HeaderRender.prototype.appendContent = function (table) {
            this.getPanel().firstChild.appendChild(table);
        };
        HeaderRender.prototype.getObjDepth = function () {
            var max = 0;
            var cols = this.parent.columns;
            for (var i = 0, len = cols.length; i < len; i++) {
                var depth = this.checkDepth(cols[i], 0);
                if (max < depth) {
                    max = depth;
                }
            }
            return max + 1;
        };
        HeaderRender.prototype.checkDepth = function (col, index) {
            if (col.columns) {
                index++;
                for (var i = 0, len = col.columns.length; i < len; i++) {
                    index = this.checkDepth(col.columns[i], index);
                }
            }
            return index;
        };
        HeaderRender.prototype.getCellCnt = function (col, cnt) {
            if (col.columns) {
                for (var i = 0, len = col.columns.length; i < len; i++) {
                    cnt = this.getCellCnt(col.columns[i], cnt);
                }
            }
            else {
                if (col.visible) {
                    cnt++;
                }
            }
            return cnt;
        };
        HeaderRender.prototype.initializeHeaderDrag = function () {
            var gObj = this.parent;
            if (!(this.parent.allowReordering || (this.parent.allowGrouping && this.parent.groupSettings.showDropArea))) {
                return;
            }
            var headerRows = [].slice.call(gObj.getHeaderContent().querySelectorAll('.e-columnheader'));
            for (var i = 0, len = headerRows.length; i < len; i++) {
                var drag = new ej2_base_4.Draggable(headerRows[i], {
                    dragTarget: '.e-headercell',
                    distance: 5,
                    helper: this.helper,
                    dragStart: this.dragStart,
                    drag: this.drag,
                    dragStop: this.dragStop,
                    abort: '.e-rhandler'
                });
            }
        };
        HeaderRender.prototype.initializeHeaderDrop = function () {
            var gObj = this.parent;
            var drop = new ej2_base_4.Droppable(gObj.getHeaderContent(), {
                accept: '.e-dragclone',
                drop: this.drop
            });
        };
        return HeaderRender;
    }());
    exports.HeaderRender = HeaderRender;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(2), __webpack_require__(18)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, util_1, cell_renderer_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var IndentCellRenderer = (function (_super) {
        __extends(IndentCellRenderer, _super);
        function IndentCellRenderer() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.element = ej2_base_1.createElement('TD', { className: 'e-indentcell' });
            return _this;
        }
        IndentCellRenderer.prototype.render = function (cell, data) {
            var node = this.element.cloneNode();
            util_1.setStyleAndAttributes(node, cell.attributes);
            return node;
        };
        return IndentCellRenderer;
    }(cell_renderer_1.CellRenderer));
    exports.IndentCellRenderer = IndentCellRenderer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(42), __webpack_require__(0), __webpack_require__(7), __webpack_require__(53), __webpack_require__(54)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, row_1, ej2_base_1, enum_1, row_model_generator_1, summary_model_generator_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var GroupModelGenerator = (function (_super) {
        __extends(GroupModelGenerator, _super);
        function GroupModelGenerator(parent) {
            var _this = _super.call(this, parent) || this;
            _this.rows = [];
            _this.index = 0;
            _this.parent = parent;
            _this.summaryModelGen = new summary_model_generator_1.GroupSummaryModelGenerator(parent);
            _this.captionModelGen = new summary_model_generator_1.CaptionSummaryModelGenerator(parent);
            return _this;
        }
        GroupModelGenerator.prototype.generateRows = function (data, args) {
            if (this.parent.groupSettings.columns.length === 0) {
                return _super.prototype.generateRows.call(this, data, args);
            }
            this.rows = [];
            this.index = this.parent.enableVirtualization ? (this.parent.pageSettings.currentPage - 1) * data.records.length : 0;
            for (var i = 0, len = data.length; i < len; i++) {
                this.getGroupedRecords(0, data[i], data.level);
            }
            this.index = 0;
            return this.rows;
        };
        GroupModelGenerator.prototype.getGroupedRecords = function (index, data, raw) {
            var level = raw;
            if (ej2_base_1.isNullOrUndefined(data.items)) {
                if (ej2_base_1.isNullOrUndefined(data.GroupGuid)) {
                    this.rows = this.rows.concat(this.generateDataRows(data, index));
                }
                else {
                    for (var j = 0, len = data.length; j < len; j++) {
                        this.getGroupedRecords(index, data[j], data.level);
                    }
                }
            }
            else {
                this.rows = this.rows.concat(this.generateCaptionRow(data, index));
                if (data.items && data.items.length) {
                    this.getGroupedRecords(index + 1, data.items, data.items.level);
                }
                if (this.parent.aggregates.length) {
                    (_a = this.rows).push.apply(_a, this.summaryModelGen.generateRows(data, { level: level }));
                }
            }
            var _a;
        };
        GroupModelGenerator.prototype.getCaptionRowCells = function (field, indent, data) {
            var _this = this;
            var cells = [];
            var visibles = [];
            var column = this.parent.getColumnByField(field);
            var indexes = this.parent.getColumnIndexesInView();
            if (this.parent.enableColumnVirtualization) {
                column = this.parent.columns.filter(function (c) { return c.field === field; })[0];
            }
            var groupedLen = this.parent.groupSettings.columns.length;
            var gObj = this.parent;
            if (!this.parent.enableColumnVirtualization || indexes.indexOf(indent) !== -1) {
                for (var i = 0; i < indent; i++) {
                    cells.push(this.generateIndentCell());
                }
                cells.push(this.generateCell({}, null, enum_1.CellType.Expand));
            }
            indent = this.parent.enableColumnVirtualization ? 1 :
                (this.parent.getVisibleColumns().length + groupedLen + (gObj.detailTemplate || gObj.childGrid ? 1 : 0) -
                    indent + (this.parent.getVisibleColumns().length ? -1 : 0));
            if (this.parent.aggregates.length && !this.captionModelGen.isEmpty()) {
                var captionCells = this.captionModelGen.generateRows(data)[0];
                ej2_base_1.extend(data, captionCells.data);
                visibles = captionCells.cells.filter(function (cell) { return cell.visible; });
                visibles = visibles.slice(groupedLen + 1, visibles.length);
                indent = indent - visibles.length;
            }
            var cols = (!this.parent.enableColumnVirtualization ? [column] : this.parent.getColumns());
            var wFlag = true;
            cols.forEach(function (col, index) {
                var tmpFlag = wFlag && indexes.indexOf(indent) !== -1;
                if (tmpFlag) {
                    wFlag = false;
                }
                var cellType = !_this.parent.enableColumnVirtualization || tmpFlag ?
                    enum_1.CellType.GroupCaption : enum_1.CellType.GroupCaptionEmpty;
                indent = _this.parent.enableColumnVirtualization && cellType === enum_1.CellType.GroupCaption ? indent + groupedLen : indent;
                cells.push(_this.generateCell(column, null, cellType, indent));
            });
            cells.push.apply(cells, visibles);
            return cells;
        };
        GroupModelGenerator.prototype.generateCaptionRow = function (data, indent) {
            var options = {};
            var tmp = [];
            var col = this.parent.getColumnByField(data.field);
            options.data = ej2_base_1.extend({}, data);
            if (col) {
                options.data.field = data.field;
            }
            options.isDataRow = false;
            var row = new row_1.Row(options);
            row.indent = indent;
            row.cells = this.getCaptionRowCells(data.field, indent, row.data);
            return row;
        };
        GroupModelGenerator.prototype.generateDataRows = function (data, indent) {
            var rows = [];
            var indexes = this.parent.getColumnIndexesInView();
            for (var i = 0, len = data.length; i < len; i++) {
                rows[i] = this.generateRow(data[i], this.index, i ? undefined : 'e-firstchildrow', indent);
                for (var j = 0; j < indent; j++) {
                    if (this.parent.enableColumnVirtualization && indexes.indexOf(indent) === -1) {
                        continue;
                    }
                    rows[i].cells.unshift(this.generateIndentCell());
                }
                this.index++;
            }
            return rows;
        };
        GroupModelGenerator.prototype.generateIndentCell = function () {
            return this.generateCell({}, null, enum_1.CellType.Indent);
        };
        GroupModelGenerator.prototype.refreshRows = function (input) {
            var _this = this;
            var indexes = this.parent.getColumnIndexesInView();
            input.forEach(function (row) {
                if (row.isDataRow) {
                    row.cells = _this.generateCells(row);
                    for (var j = 0; j < row.indent; j++) {
                        if (_this.parent.enableColumnVirtualization && indexes.indexOf(row.indent) === -1) {
                            continue;
                        }
                        row.cells.unshift(_this.generateIndentCell());
                    }
                }
                else {
                    var cRow = _this.generateCaptionRow(row.data, row.indent);
                    row.cells = cRow.cells;
                }
            });
            return input;
        };
        return GroupModelGenerator;
    }(row_model_generator_1.RowModelGenerator));
    exports.GroupModelGenerator = GroupModelGenerator;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(3), __webpack_require__(70)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, constant_1, column_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ColumnWidthService = (function () {
        function ColumnWidthService(parent) {
            this.parent = parent;
        }
        ColumnWidthService.prototype.setWidthToColumns = function () {
            var _this = this;
            var i = 0;
            var indexes = this.parent.getColumnIndexesInView();
            var wFlag = true;
            if (this.parent.allowGrouping) {
                for (var len = this.parent.groupSettings.columns.length; i < len; i++) {
                    if (this.parent.enableColumnVirtualization && indexes.indexOf(i) === -1) {
                        wFlag = false;
                        continue;
                    }
                    this.setColumnWidth(new column_1.Column({ width: '30px' }), i);
                }
            }
            if (this.parent.detailTemplate || this.parent.childGrid) {
                this.setColumnWidth(new column_1.Column({ width: '30px' }), i);
            }
            this.parent.getColumns().forEach(function (column, index) {
                _this.setColumnWidth(column, wFlag ? undefined : index);
            });
        };
        ColumnWidthService.prototype.setColumnWidth = function (column, index, module) {
            var columnIndex = ej2_base_1.isNullOrUndefined(index) ? this.parent.getNormalizedColumnIndex(column.uid) : index;
            var cWidth = this.getWidth(column);
            if (cWidth !== null) {
                this.setWidth(cWidth, columnIndex);
                if (this.parent.allowResizing) {
                    this.setWidthToTable();
                }
                this.parent.notify(constant_1.columnWidthChanged, { index: columnIndex, width: cWidth, column: column, module: module });
            }
        };
        ColumnWidthService.prototype.setWidth = function (width, index) {
            var header = this.parent.getHeaderTable();
            var content = this.parent.getContentTable();
            var fWidth = ej2_base_2.formatUnit(width);
            var headerCol = header.querySelector('colgroup').children[index];
            if (headerCol) {
                headerCol.style.width = fWidth;
                content.querySelector('colgroup').children[index].style.width = fWidth;
            }
            var edit = content.querySelector('.e-table.e-inline-edit');
            if (edit) {
                edit.querySelector('colgroup').children[index].style.width = fWidth;
            }
        };
        ColumnWidthService.prototype.getSiblingsHeight = function (element) {
            var previous = this.getHeightFromDirection(element, 'previous');
            var next = this.getHeightFromDirection(element, 'next');
            return previous + next;
        };
        ColumnWidthService.prototype.getHeightFromDirection = function (element, direction) {
            var sibling = element[direction + 'ElementSibling'];
            var result = 0;
            while (sibling) {
                result += sibling.offsetHeight;
                sibling = sibling[direction + 'ElementSibling'];
            }
            return result;
        };
        ColumnWidthService.prototype.getWidth = function (column) {
            if (ej2_base_1.isNullOrUndefined(column.width) && this.parent.allowResizing) {
                column.width = 200;
            }
            if (!column.width) {
                return null;
            }
            var width = parseInt(column.width.toString(), 10);
            if (column.minWidth && width < parseInt(column.minWidth.toString(), 10)) {
                return column.minWidth;
            }
            else if ((column.maxWidth && width > parseInt(column.maxWidth.toString(), 10))) {
                return column.maxWidth;
            }
            else {
                return column.width;
            }
        };
        ColumnWidthService.prototype.getTableWidth = function (columns) {
            var tWidth = 0;
            for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {
                var column = columns_1[_i];
                var cWidth = this.getWidth(column);
                if (column.visible !== false && cWidth !== null) {
                    tWidth += parseInt(cWidth.toString(), 10);
                }
            }
            return tWidth;
        };
        ColumnWidthService.prototype.setWidthToTable = function () {
            var tWidth = ej2_base_2.formatUnit(this.getTableWidth(this.parent.getColumns()));
            this.parent.getHeaderTable().style.width = tWidth;
            this.parent.getContentTable().style.width = tWidth;
            var edit = this.parent.element.querySelector('.e-table.e-inline-edit');
            if (edit) {
                edit.style.width = tWidth;
            }
        };
        return ColumnWidthService;
    }());
    exports.ColumnWidthService = ColumnWidthService;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 122 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompressedStreamWriter; });
/* unused harmony export CompressorHuffmanTree */
/* unused harmony export ChecksumCalculator */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_file_utils__ = __webpack_require__(60);

var arrLiteralCodes = new Int16Array(286);
var arrLiteralLengths = new Uint8Array(286);
var arrDistanceCodes = new Int16Array(30);
var arrDistanceLengths = new Uint8Array(30);
var CompressedStreamWriter = (function () {
    function CompressedStreamWriter(noWrap) {
        this.pendingBuffer = new Uint8Array(1 << 16);
        this.pendingBufLength = 0;
        this.pendingBufCache = 0;
        this.pendingBufBitsInCache = 0;
        this.bufferPosition = 0;
        this.extraBits = 0;
        this.currentHash = 0;
        this.matchStart = 0;
        this.matchLength = 0;
        this.matchPrevAvail = false;
        this.blockStart = 0;
        this.stringStart = 0;
        this.lookAhead = 0;
        this.totalBytesIn = 0;
        this.inputOffset = 0;
        this.inputEnd = 0;
        this.windowSize = 1 << 15;
        this.windowMask = this.windowSize - 1;
        this.hashSize = 1 << 15;
        this.hashMask = this.hashSize - 1;
        this.hashShift = Math.floor((15 + 3 - 1) / 3);
        this.maxDist = this.windowSize - 262;
        this.checkSum = 1;
        this.noWrap = false;
        this.treeLiteral = new CompressorHuffmanTree(this, 286, 257, 15);
        this.treeDistances = new CompressorHuffmanTree(this, 30, 1, 15);
        this.treeCodeLengths = new CompressorHuffmanTree(this, 19, 4, 7);
        this.arrDistances = new Uint16Array((1 << 14));
        this.arrLiterals = new Uint8Array((1 << 14));
        this.stream = [];
        this.dataWindow = new Uint8Array(2 * this.windowSize);
        this.hashHead = new Int16Array(this.hashSize);
        this.hashPrevious = new Int16Array(this.windowSize);
        this.blockStart = this.stringStart = 1;
        this.noWrap = noWrap;
        if (!noWrap) {
            this.writeZLibHeader();
        }
    }
    Object.defineProperty(CompressedStreamWriter.prototype, "compressedData", {
        get: function () {
            return this.stream;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CompressedStreamWriter.prototype, "getCompressedString", {
        get: function () {
            var compressedString = '';
            if (this.stream !== undefined) {
                for (var i = 0; i < this.stream.length; i++) {
                    compressedString += String.fromCharCode.apply(null, this.stream[i]);
                }
            }
            return compressedString;
        },
        enumerable: true,
        configurable: true
    });
    CompressedStreamWriter.prototype.write = function (data, offset, length) {
        if (data === undefined || data === null) {
            throw new Error('ArgumentException: data cannot null or undefined');
        }
        var end = offset + length;
        if (0 > offset || offset > end || end > data.length) {
            throw new Error('ArgumentOutOfRangeException: Offset or length is incorrect');
        }
        if (typeof data === 'string') {
            var encode = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_file_utils__["a" /* Encoding */](false);
            encode.type = 'Utf8';
            data = new Uint8Array(encode.getBytes(data, 0, data.length));
            end = offset + data.length;
        }
        this.inputBuffer = data;
        this.inputOffset = offset;
        this.inputEnd = end;
        if (!this.noWrap) {
            this.checkSum = ChecksumCalculator.checksumUpdate(this.checkSum, this.inputBuffer, this.inputOffset, end);
        }
        while (!(this.inputEnd === this.inputOffset) || !(this.pendingBufLength === 0)) {
            this.pendingBufferFlush();
            this.compressData(false);
        }
    };
    CompressedStreamWriter.prototype.writeZLibHeader = function () {
        var headerDate = (8 + (7 << 4)) << 8;
        headerDate |= ((5 >> 2) & 3) << 6;
        headerDate += 31 - (headerDate % 31);
        this.pendingBufferWriteShortBytes(headerDate);
    };
    CompressedStreamWriter.prototype.pendingBufferWriteShortBytes = function (s) {
        this.pendingBuffer[this.pendingBufLength++] = s >> 8;
        this.pendingBuffer[this.pendingBufLength++] = s;
    };
    CompressedStreamWriter.prototype.compressData = function (finish) {
        var success;
        do {
            this.fillWindow();
            var canFlush = (finish && this.inputEnd === this.inputOffset);
            success = this.compressSlow(canFlush, finish);
        } while (this.pendingBufLength === 0 && success);
        return success;
    };
    CompressedStreamWriter.prototype.compressSlow = function (flush, finish) {
        if (this.lookAhead < 262 && !flush) {
            return false;
        }
        while (this.lookAhead >= 262 || flush) {
            if (this.lookAhead === 0) {
                return this.lookAheadCompleted(finish);
            }
            if (this.stringStart >= 2 * this.windowSize - 262) {
                this.slideWindow();
            }
            var prevMatch = this.matchStart;
            var prevLen = this.matchLength;
            if (this.lookAhead >= 3) {
                this.discardMatch();
            }
            if (prevLen >= 3 && this.matchLength <= prevLen) {
                prevLen = this.matchPreviousBest(prevMatch, prevLen);
            }
            else {
                this.matchPreviousAvailable();
            }
            if (this.bufferPosition >= (1 << 14)) {
                return this.huffmanIsFull(finish);
            }
        }
        return true;
    };
    CompressedStreamWriter.prototype.discardMatch = function () {
        var hashHead = this.insertString();
        if (hashHead !== 0 && this.stringStart - hashHead <= this.maxDist && this.findLongestMatch(hashHead)) {
            if (this.matchLength <= 5 && (this.matchLength === 3 && this.stringStart - this.matchStart > 4096)) {
                this.matchLength = 3 - 1;
            }
        }
    };
    CompressedStreamWriter.prototype.matchPreviousAvailable = function () {
        if (this.matchPrevAvail) {
            this.huffmanTallyLit(this.dataWindow[this.stringStart - 1] & 0xff);
        }
        this.matchPrevAvail = true;
        this.stringStart++;
        this.lookAhead--;
    };
    CompressedStreamWriter.prototype.matchPreviousBest = function (prevMatch, prevLen) {
        this.huffmanTallyDist(this.stringStart - 1 - prevMatch, prevLen);
        prevLen -= 2;
        do {
            this.stringStart++;
            this.lookAhead--;
            if (this.lookAhead >= 3) {
                this.insertString();
            }
        } while (--prevLen > 0);
        this.stringStart++;
        this.lookAhead--;
        this.matchPrevAvail = false;
        this.matchLength = 3 - 1;
        return prevLen;
    };
    CompressedStreamWriter.prototype.lookAheadCompleted = function (finish) {
        if (this.matchPrevAvail) {
            this.huffmanTallyLit(this.dataWindow[this.stringStart - 1] & 0xff);
        }
        this.matchPrevAvail = false;
        this.huffmanFlushBlock(this.dataWindow, this.blockStart, this.stringStart - this.blockStart, finish);
        this.blockStart = this.stringStart;
        return false;
    };
    CompressedStreamWriter.prototype.huffmanIsFull = function (finish) {
        var len = this.stringStart - this.blockStart;
        if (this.matchPrevAvail) {
            len--;
        }
        var lastBlock = (finish && this.lookAhead === 0 && !this.matchPrevAvail);
        this.huffmanFlushBlock(this.dataWindow, this.blockStart, len, lastBlock);
        this.blockStart += len;
        return !lastBlock;
    };
    CompressedStreamWriter.prototype.fillWindow = function () {
        if (this.stringStart >= this.windowSize + this.maxDist) {
            this.slideWindow();
        }
        while (this.lookAhead < 262 && this.inputOffset < this.inputEnd) {
            var more = 2 * this.windowSize - this.lookAhead - this.stringStart;
            if (more > this.inputEnd - this.inputOffset) {
                more = this.inputEnd - this.inputOffset;
            }
            this.dataWindow.set(this.inputBuffer.subarray(this.inputOffset, this.inputOffset + more), this.stringStart + this.lookAhead);
            this.inputOffset += more;
            this.totalBytesIn += more;
            this.lookAhead += more;
        }
        if (this.lookAhead >= 3) {
            this.updateHash();
        }
    };
    CompressedStreamWriter.prototype.slideWindow = function () {
        this.dataWindow.set(this.dataWindow.subarray(this.windowSize, this.windowSize + this.windowSize), 0);
        this.matchStart -= this.windowSize;
        this.stringStart -= this.windowSize;
        this.blockStart -= this.windowSize;
        for (var i = 0; i < this.hashSize; ++i) {
            var m = this.hashHead[i] & 0xffff;
            this.hashHead[i] = (((m >= this.windowSize) ? (m - this.windowSize) : 0));
        }
        for (var i = 0; i < this.windowSize; i++) {
            var m = this.hashPrevious[i] & 0xffff;
            this.hashPrevious[i] = ((m >= this.windowSize) ? (m - this.windowSize) : 0);
        }
    };
    CompressedStreamWriter.prototype.insertString = function () {
        var match;
        var hash = ((this.currentHash << this.hashShift) ^ this.dataWindow[this.stringStart + (3 - 1)]) & this.hashMask;
        this.hashPrevious[this.stringStart & this.windowMask] = match = this.hashHead[hash];
        this.hashHead[hash] = this.stringStart;
        this.currentHash = hash;
        return match & 0xffff;
    };
    CompressedStreamWriter.prototype.findLongestMatch = function (curMatch) {
        var chainLen = 4096;
        var niceLen = 258;
        var scan = this.stringStart;
        var match;
        var bestEnd = this.stringStart + this.matchLength;
        var bestLength = Math.max(this.matchLength, 3 - 1);
        var limit = Math.max(this.stringStart - this.maxDist, 0);
        var stringEnd = this.stringStart + 258 - 1;
        var scanEnd1 = this.dataWindow[bestEnd - 1];
        var scanEnd = this.dataWindow[bestEnd];
        var data = this.dataWindow;
        if (bestLength >= 32) {
            chainLen >>= 2;
        }
        if (niceLen > this.lookAhead) {
            niceLen = this.lookAhead;
        }
        do {
            if (data[curMatch + bestLength] !== scanEnd ||
                data[curMatch + bestLength - 1] !== scanEnd1 ||
                data[curMatch] !== data[scan] ||
                data[curMatch + 1] !== data[scan + 1]) {
                continue;
            }
            match = curMatch + 2;
            scan += 2;
            while (data[++scan] === data[++match] && data[++scan] === data[++match] &&
                data[++scan] === data[++match] && data[++scan] === data[++match] &&
                data[++scan] === data[++match] && data[++scan] === data[++match] &&
                data[++scan] === data[++match] && data[++scan] === data[++match] && scan < stringEnd) {
            }
            if (scan > bestEnd) {
                this.matchStart = curMatch;
                bestEnd = scan;
                bestLength = scan - this.stringStart;
                if (bestLength >= niceLen) {
                    break;
                }
                scanEnd1 = data[bestEnd - 1];
                scanEnd = data[bestEnd];
            }
            scan = this.stringStart;
        } while ((curMatch = (this.hashPrevious[curMatch & this.windowMask] & 0xffff)) > limit && --chainLen !== 0);
        this.matchLength = Math.min(bestLength, this.lookAhead);
        return this.matchLength >= 3;
    };
    CompressedStreamWriter.prototype.updateHash = function () {
        this.currentHash = (this.dataWindow[this.stringStart] << this.hashShift) ^ this.dataWindow[this.stringStart + 1];
    };
    CompressedStreamWriter.prototype.huffmanTallyLit = function (literal) {
        this.arrDistances[this.bufferPosition] = 0;
        this.arrLiterals[this.bufferPosition++] = literal;
        this.treeLiteral.codeFrequencies[literal]++;
        return this.bufferPosition >= (1 << 14);
    };
    CompressedStreamWriter.prototype.huffmanTallyDist = function (dist, len) {
        this.arrDistances[this.bufferPosition] = dist;
        this.arrLiterals[this.bufferPosition++] = (len - 3);
        var lc = this.huffmanLengthCode(len - 3);
        this.treeLiteral.codeFrequencies[lc]++;
        if (lc >= 265 && lc < 285) {
            this.extraBits += Math.floor((lc - 261) / 4);
        }
        var dc = this.huffmanDistanceCode(dist - 1);
        this.treeDistances.codeFrequencies[dc]++;
        if (dc >= 4) {
            this.extraBits += Math.floor((dc / 2 - 1));
        }
        return this.bufferPosition >= (1 << 14);
    };
    CompressedStreamWriter.prototype.huffmanFlushBlock = function (stored, storedOffset, storedLength, lastBlock) {
        this.treeLiteral.codeFrequencies[256]++;
        this.treeLiteral.buildTree();
        this.treeDistances.buildTree();
        this.treeLiteral.calculateBLFreq(this.treeCodeLengths);
        this.treeDistances.calculateBLFreq(this.treeCodeLengths);
        this.treeCodeLengths.buildTree();
        var blTreeCodes = 4;
        for (var i = 18; i > blTreeCodes; i--) {
            if (this.treeCodeLengths.codeLengths[CompressorHuffmanTree.huffCodeLengthOrders[i]] > 0) {
                blTreeCodes = i + 1;
            }
        }
        var opt_len = 14 + blTreeCodes * 3 + this.treeCodeLengths.getEncodedLength() +
            this.treeLiteral.getEncodedLength() + this.treeDistances.getEncodedLength() + this.extraBits;
        var static_len = this.extraBits;
        for (var i = 0; i < 286; i++) {
            static_len += this.treeLiteral.codeFrequencies[i] * arrLiteralLengths[i];
        }
        for (var i = 0; i < 30; i++) {
            static_len += this.treeDistances.codeFrequencies[i] * arrDistanceLengths[i];
        }
        if (opt_len >= static_len) {
            opt_len = static_len;
        }
        if (storedOffset >= 0 && storedLength + 4 < opt_len >> 3) {
            this.huffmanFlushStoredBlock(stored, storedOffset, storedLength, lastBlock);
        }
        else if (opt_len == static_len) {
            this.pendingBufferWriteBits((1 << 1) + (lastBlock ? 1 : 0), 3);
            this.treeLiteral.setStaticCodes(arrLiteralCodes, arrLiteralLengths);
            this.treeDistances.setStaticCodes(arrDistanceCodes, arrDistanceLengths);
            this.huffmanCompressBlock();
            this.huffmanReset();
        }
        else {
            this.pendingBufferWriteBits((2 << 1) + (lastBlock ? 1 : 0), 3);
            this.huffmanSendAllTrees(blTreeCodes);
            this.huffmanCompressBlock();
            this.huffmanReset();
        }
    };
    CompressedStreamWriter.prototype.huffmanFlushStoredBlock = function (stored, storedOffset, storedLength, lastBlock) {
        this.pendingBufferWriteBits((0 << 1) + (lastBlock ? 1 : 0), 3);
        this.pendingBufferAlignToByte();
        this.pendingBufferWriteShort(storedLength);
        this.pendingBufferWriteShort(~storedLength);
        this.pendingBufferWriteByteBlock(stored, storedOffset, storedLength);
        this.huffmanReset();
    };
    CompressedStreamWriter.prototype.huffmanLengthCode = function (len) {
        if (len === 255) {
            return 285;
        }
        var code = 257;
        while (len >= 8) {
            code += 4;
            len >>= 1;
        }
        return code + len;
    };
    CompressedStreamWriter.prototype.huffmanDistanceCode = function (distance) {
        var code = 0;
        while (distance >= 4) {
            code += 2;
            distance >>= 1;
        }
        return code + distance;
    };
    CompressedStreamWriter.prototype.huffmanSendAllTrees = function (blTreeCodes) {
        this.treeCodeLengths.buildCodes();
        this.treeLiteral.buildCodes();
        this.treeDistances.buildCodes();
        this.pendingBufferWriteBits(this.treeLiteral.treeLength - 257, 5);
        this.pendingBufferWriteBits(this.treeDistances.treeLength - 1, 5);
        this.pendingBufferWriteBits(blTreeCodes - 4, 4);
        for (var rank = 0; rank < blTreeCodes; rank++) {
            this.pendingBufferWriteBits(this.treeCodeLengths.codeLengths[CompressorHuffmanTree.huffCodeLengthOrders[rank]], 3);
        }
        this.treeLiteral.writeTree(this.treeCodeLengths);
        this.treeDistances.writeTree(this.treeCodeLengths);
    };
    CompressedStreamWriter.prototype.huffmanReset = function () {
        this.bufferPosition = 0;
        this.extraBits = 0;
        this.treeLiteral.reset();
        this.treeDistances.reset();
        this.treeCodeLengths.reset();
    };
    CompressedStreamWriter.prototype.huffmanCompressBlock = function () {
        for (var i = 0; i < this.bufferPosition; i++) {
            var literalLen = this.arrLiterals[i] & 255;
            var dist = this.arrDistances[i];
            if (dist-- !== 0) {
                var lc = this.huffmanLengthCode(literalLen);
                this.treeLiteral.writeCodeToStream(lc);
                var bits = Math.floor((lc - 261) / 4);
                if (bits > 0 && bits <= 5) {
                    this.pendingBufferWriteBits(literalLen & ((1 << bits) - 1), bits);
                }
                var dc = this.huffmanDistanceCode(dist);
                this.treeDistances.writeCodeToStream(dc);
                bits = Math.floor(dc / 2 - 1);
                if (bits > 0) {
                    this.pendingBufferWriteBits(dist & ((1 << bits) - 1), bits);
                }
            }
            else {
                this.treeLiteral.writeCodeToStream(literalLen);
            }
        }
        this.treeLiteral.writeCodeToStream(256);
    };
    CompressedStreamWriter.prototype.pendingBufferWriteBits = function (b, count) {
        var uint = new Uint32Array(1);
        uint[0] = this.pendingBufCache | (b << this.pendingBufBitsInCache);
        this.pendingBufCache = uint[0];
        this.pendingBufBitsInCache += count;
        this.pendingBufferFlushBits();
    };
    CompressedStreamWriter.prototype.pendingBufferFlush = function (isClose) {
        this.pendingBufferFlushBits();
        if (this.pendingBufLength > 0) {
            var array = new Uint8Array(this.pendingBufLength);
            array.set(this.pendingBuffer.subarray(0, this.pendingBufLength), 0);
            this.stream.push(array);
        }
        this.pendingBufLength = 0;
    };
    CompressedStreamWriter.prototype.pendingBufferFlushBits = function () {
        var result = 0;
        while (this.pendingBufBitsInCache >= 8 && this.pendingBufLength < (1 << 16)) {
            this.pendingBuffer[this.pendingBufLength++] = this.pendingBufCache;
            this.pendingBufCache >>= 8;
            this.pendingBufBitsInCache -= 8;
            result++;
        }
        return result;
    };
    CompressedStreamWriter.prototype.pendingBufferWriteByteBlock = function (data, offset, length) {
        var array = data.subarray(offset, offset + length);
        this.pendingBuffer.set(array, this.pendingBufLength);
        this.pendingBufLength += length;
    };
    CompressedStreamWriter.prototype.pendingBufferWriteShort = function (s) {
        this.pendingBuffer[this.pendingBufLength++] = s;
        this.pendingBuffer[this.pendingBufLength++] = (s >> 8);
    };
    CompressedStreamWriter.prototype.pendingBufferAlignToByte = function () {
        if (this.pendingBufBitsInCache > 0) {
            this.pendingBuffer[this.pendingBufLength++] = this.pendingBufCache;
        }
        this.pendingBufCache = 0;
        this.pendingBufBitsInCache = 0;
    };
    CompressedStreamWriter.prototype.close = function () {
        do {
            this.pendingBufferFlush(true);
            if (!this.compressData(true)) {
                this.pendingBufferFlush(true);
                this.pendingBufferAlignToByte();
                if (!this.noWrap) {
                    this.pendingBufferWriteShortBytes(this.checkSum >> 16);
                    this.pendingBufferWriteShortBytes(this.checkSum & 0xffff);
                }
                this.pendingBufferFlush(true);
            }
        } while (!(this.inputEnd === this.inputOffset) ||
            !(this.pendingBufLength === 0));
    };
    CompressedStreamWriter.prototype.destroy = function () {
        this.stream = [];
        this.stream = undefined;
        this.pendingBuffer = undefined;
        this.treeLiteral = undefined;
        this.treeDistances = undefined;
        this.treeCodeLengths = undefined;
        this.arrLiterals = undefined;
        this.arrDistances = undefined;
        this.hashHead = undefined;
        this.hashPrevious = undefined;
        this.dataWindow = undefined;
        this.inputBuffer = undefined;
        this.pendingBufLength = undefined;
        this.pendingBufCache = undefined;
        this.pendingBufBitsInCache = undefined;
        this.bufferPosition = undefined;
        this.extraBits = undefined;
        this.currentHash = undefined;
        this.matchStart = undefined;
        this.matchLength = undefined;
        this.matchPrevAvail = undefined;
        this.blockStart = undefined;
        this.stringStart = undefined;
        this.lookAhead = undefined;
        this.totalBytesIn = undefined;
        this.inputOffset = undefined;
        this.inputEnd = undefined;
        this.windowSize = undefined;
        this.windowMask = undefined;
        this.hashSize = undefined;
        this.hashMask = undefined;
        this.hashShift = undefined;
        this.maxDist = undefined;
        this.checkSum = undefined;
        this.noWrap = undefined;
    };
    return CompressedStreamWriter;
}());

var CompressorHuffmanTree = (function () {
    function CompressorHuffmanTree(writer, elementCount, minCodes, maxLength) {
        this.writer = writer;
        this.codeMinCount = minCodes;
        this.maxLength = maxLength;
        this.codeFrequency = new Int16Array(elementCount);
        this.lengthCount = new Int32Array(maxLength);
    }
    Object.defineProperty(CompressorHuffmanTree.prototype, "treeLength", {
        get: function () {
            return this.codeCount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CompressorHuffmanTree.prototype, "codeLengths", {
        get: function () {
            return this.codeLength;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CompressorHuffmanTree.prototype, "codeFrequencies", {
        get: function () {
            return this.codeFrequency;
        },
        enumerable: true,
        configurable: true
    });
    CompressorHuffmanTree.prototype.setStaticCodes = function (codes, lengths) {
        var temp = new Int16Array(codes.length);
        temp.set(codes, 0);
        this.codes = temp;
        var lengthTemp = new Uint8Array(lengths.length);
        lengthTemp.set(lengths, 0);
        this.codeLength = lengthTemp;
    };
    CompressorHuffmanTree.prototype.reset = function () {
        for (var i = 0; i < this.codeFrequency.length; i++) {
            this.codeFrequency[i] = 0;
        }
        this.codes = undefined;
        this.codeLength = undefined;
    };
    CompressorHuffmanTree.prototype.writeCodeToStream = function (code) {
        this.writer.pendingBufferWriteBits(this.codes[code] & 0xffff, this.codeLength[code]);
    };
    CompressorHuffmanTree.prototype.buildCodes = function () {
        var nextCode = new Int32Array(this.maxLength);
        this.codes = new Int16Array(this.codeCount);
        var code = 0;
        for (var bitsCount = 0; bitsCount < this.maxLength; bitsCount++) {
            nextCode[bitsCount] = code;
            code += this.lengthCount[bitsCount] << (15 - bitsCount);
        }
        for (var i = 0; i < this.codeCount; i++) {
            var bits = this.codeLength[i];
            if (bits > 0) {
                this.codes[i] = CompressorHuffmanTree.bitReverse(nextCode[bits - 1]);
                nextCode[bits - 1] += 1 << (16 - bits);
            }
        }
    };
    CompressorHuffmanTree.bitReverse = function (value) {
        return (CompressorHuffmanTree.reverseBits[value & 15] << 12
            | CompressorHuffmanTree.reverseBits[(value >> 4) & 15] << 8
            | CompressorHuffmanTree.reverseBits[(value >> 8) & 15] << 4
            | CompressorHuffmanTree.reverseBits[value >> 12]);
    };
    CompressorHuffmanTree.prototype.getEncodedLength = function () {
        var len = 0;
        for (var i = 0; i < this.codeFrequency.length; i++) {
            len += this.codeFrequency[i] * this.codeLength[i];
        }
        return len;
    };
    CompressorHuffmanTree.prototype.calculateBLFreq = function (blTree) {
        var maxCount;
        var minCount;
        var count;
        var curLen = -1;
        var i = 0;
        while (i < this.codeCount) {
            count = 1;
            var nextLen = this.codeLength[i];
            if (nextLen === 0) {
                maxCount = 138;
                minCount = 3;
            }
            else {
                maxCount = 6;
                minCount = 3;
                if (curLen !== nextLen) {
                    blTree.codeFrequency[nextLen]++;
                    count = 0;
                }
            }
            curLen = nextLen;
            i++;
            while (i < this.codeCount && curLen === this.codeLength[i]) {
                i++;
                if (++count >= maxCount) {
                    break;
                }
            }
            if (count < minCount) {
                blTree.codeFrequency[curLen] += count;
            }
            else if (curLen !== 0) {
                blTree.codeFrequency[16]++;
            }
            else if (count <= 10) {
                blTree.codeFrequency[17]++;
            }
            else {
                blTree.codeFrequency[18]++;
            }
        }
    };
    CompressorHuffmanTree.prototype.writeTree = function (blTree) {
        var maxRepeatCount;
        var minRepeatCount;
        var currentRepeatCount;
        var currentCodeLength = -1;
        var i = 0;
        while (i < this.codeCount) {
            currentRepeatCount = 1;
            var nextLen = this.codeLength[i];
            if (nextLen === 0) {
                maxRepeatCount = 138;
                minRepeatCount = 3;
            }
            else {
                maxRepeatCount = 6;
                minRepeatCount = 3;
                if (currentCodeLength !== nextLen) {
                    blTree.writeCodeToStream(nextLen);
                    currentRepeatCount = 0;
                }
            }
            currentCodeLength = nextLen;
            i++;
            while (i < this.codeCount && currentCodeLength === this.codeLength[i]) {
                i++;
                if (++currentRepeatCount >= maxRepeatCount) {
                    break;
                }
            }
            if (currentRepeatCount < minRepeatCount) {
                while (currentRepeatCount-- > 0) {
                    blTree.writeCodeToStream(currentCodeLength);
                }
            }
            else if (currentCodeLength !== 0) {
                blTree.writeCodeToStream(16);
                this.writer.pendingBufferWriteBits(currentRepeatCount - 3, 2);
            }
            else if (currentRepeatCount <= 10) {
                blTree.writeCodeToStream(17);
                this.writer.pendingBufferWriteBits(currentRepeatCount - 3, 3);
            }
            else {
                blTree.writeCodeToStream(18);
                this.writer.pendingBufferWriteBits(currentRepeatCount - 11, 7);
            }
        }
    };
    CompressorHuffmanTree.prototype.buildTree = function () {
        var codesCount = this.codeFrequency.length;
        var arrTree = new Int32Array(codesCount);
        var treeLength = 0;
        var maxCount = 0;
        for (var n = 0; n < codesCount; n++) {
            var freq = this.codeFrequency[n];
            if (freq !== 0) {
                var pos = treeLength++;
                var pPos = 0;
                while (pos > 0 && this.codeFrequency[arrTree[pPos = Math.floor((pos - 1) / 2)]] > freq) {
                    arrTree[pos] = arrTree[pPos];
                    pos = pPos;
                }
                arrTree[pos] = n;
                maxCount = n;
            }
        }
        while (treeLength < 2) {
            arrTree[treeLength++] =
                (maxCount < 2) ? ++maxCount : 0;
        }
        this.codeCount = Math.max(maxCount + 1, this.codeMinCount);
        var leafsCount = treeLength;
        var nodesCount = leafsCount;
        var child = new Int32Array(4 * treeLength - 2);
        var values = new Int32Array(2 * treeLength - 1);
        for (var i = 0; i < treeLength; i++) {
            var node = arrTree[i];
            var iIndex = 2 * i;
            child[iIndex] = node;
            child[iIndex + 1] = -1;
            values[i] = (this.codeFrequency[node] << 8);
            arrTree[i] = i;
        }
        this.constructHuffmanTree(arrTree, treeLength, values, nodesCount, child);
        this.buildLength(child);
    };
    CompressorHuffmanTree.prototype.constructHuffmanTree = function (arrTree, treeLength, values, nodesCount, child) {
        do {
            var first = arrTree[0];
            var last = arrTree[--treeLength];
            var lastVal = values[last];
            var pPos = 0;
            var path = 1;
            while (path < treeLength) {
                if (path + 1 < treeLength && values[arrTree[path]] > values[arrTree[path + 1]]) {
                    path++;
                }
                arrTree[pPos] = arrTree[path];
                pPos = path;
                path = pPos * 2 + 1;
            }
            while ((path = pPos) > 0 && values[arrTree[pPos = Math.floor((path - 1) / 2)]] > lastVal) {
                arrTree[path] = arrTree[pPos];
            }
            arrTree[path] = last;
            var second = arrTree[0];
            last = nodesCount++;
            child[2 * last] = first;
            child[2 * last + 1] = second;
            var minDepth = Math.min(values[first] & 0xff, values[second] & 0xff);
            values[last] = lastVal = values[first] + values[second] - minDepth + 1;
            pPos = 0;
            path = 1;
            while (path < treeLength) {
                if (path + 1 < treeLength && values[arrTree[path]] > values[arrTree[path + 1]]) {
                    path++;
                }
                arrTree[pPos] = arrTree[path];
                pPos = path;
                path = pPos * 2 + 1;
            }
            while ((path = pPos) > 0 && values[arrTree[pPos = Math.floor((path - 1) / 2)]] > lastVal) {
                arrTree[path] = arrTree[pPos];
            }
            arrTree[path] = last;
        } while (treeLength > 1);
    };
    CompressorHuffmanTree.prototype.buildLength = function (child) {
        this.codeLength = new Uint8Array(this.codeFrequency.length);
        var numNodes = Math.floor(child.length / 2);
        var numLeafs = Math.floor((numNodes + 1) / 2);
        var overflow = 0;
        for (var i = 0; i < this.maxLength; i++) {
            this.lengthCount[i] = 0;
        }
        overflow = this.calculateOptimalCodeLength(child, overflow, numNodes);
        if (overflow === 0) {
            return;
        }
        var iIncreasableLength = this.maxLength - 1;
        do {
            while (this.lengthCount[--iIncreasableLength] === 0) {
            }
            do {
                this.lengthCount[iIncreasableLength]--;
                this.lengthCount[++iIncreasableLength]++;
                overflow -= (1 << (this.maxLength - 1 - iIncreasableLength));
            } while (overflow > 0 && iIncreasableLength < this.maxLength - 1);
        } while (overflow > 0);
        this.recreateTree(child, overflow, numLeafs);
    };
    CompressorHuffmanTree.prototype.recreateTree = function (child, overflow, numLeafs) {
        this.lengthCount[this.maxLength - 1] += overflow;
        this.lengthCount[this.maxLength - 2] -= overflow;
        var nodePtr = 2 * numLeafs;
        for (var bits = this.maxLength; bits !== 0; bits--) {
            var n = this.lengthCount[bits - 1];
            while (n > 0) {
                var childPtr = 2 * child[nodePtr++];
                if (child[childPtr + 1] === -1) {
                    this.codeLength[child[childPtr]] = bits;
                    n--;
                }
            }
        }
    };
    CompressorHuffmanTree.prototype.calculateOptimalCodeLength = function (child, overflow, numNodes) {
        var lengths = new Int32Array(numNodes);
        lengths[numNodes - 1] = 0;
        for (var i = numNodes - 1; i >= 0; i--) {
            var childIndex = 2 * i + 1;
            if (child[childIndex] !== -1) {
                var bitLength = lengths[i] + 1;
                if (bitLength > this.maxLength) {
                    bitLength = this.maxLength;
                    overflow++;
                }
                lengths[child[childIndex - 1]] = lengths[child[childIndex]] = bitLength;
            }
            else {
                var bitLength = lengths[i];
                this.lengthCount[bitLength - 1]++;
                this.codeLength[child[childIndex - 1]] = lengths[i];
            }
        }
        return overflow;
    };
    return CompressorHuffmanTree;
}());

CompressorHuffmanTree.reverseBits = [0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15];
CompressorHuffmanTree.huffCodeLengthOrders = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
var ChecksumCalculator = (function () {
    function ChecksumCalculator() {
    }
    ChecksumCalculator.checksumUpdate = function (checksum, buffer, offset, length) {
        var uint = new Uint32Array(1);
        uint[0] = checksum;
        var checksum_uint = uint[0];
        var s1 = uint[0] = checksum_uint & 65535;
        var s2 = uint[0] = checksum_uint >> ChecksumCalculator.checkSumBitOffset;
        while (length > 0) {
            var steps = Math.min(length, ChecksumCalculator.checksumIterationCount);
            length -= steps;
            while (--steps >= 0) {
                s1 = s1 + (uint[0] = (buffer[offset++] & 255));
                s2 = s2 + s1;
            }
            s1 %= ChecksumCalculator.checksumBase;
            s2 %= ChecksumCalculator.checksumBase;
        }
        checksum_uint = (s2 << ChecksumCalculator.checkSumBitOffset) | s1;
        return checksum_uint;
    };
    return ChecksumCalculator;
}());

ChecksumCalculator.checkSumBitOffset = 16;
ChecksumCalculator.checksumBase = 65521;
ChecksumCalculator.checksumIterationCount = 3800;
(function () {
    var i = 0;
    while (i < 144) {
        arrLiteralCodes[i] = CompressorHuffmanTree.bitReverse((0x030 + i) << 8);
        arrLiteralLengths[i++] = 8;
    }
    while (i < 256) {
        arrLiteralCodes[i] = CompressorHuffmanTree.bitReverse((0x190 - 144 + i) << 7);
        arrLiteralLengths[i++] = 9;
    }
    while (i < 280) {
        arrLiteralCodes[i] = CompressorHuffmanTree.bitReverse((0x000 - 256 + i) << 9);
        arrLiteralLengths[i++] = 7;
    }
    while (i < 286) {
        arrLiteralCodes[i] = CompressorHuffmanTree.bitReverse((0x0c0 - 280 + i) << 8);
        arrLiteralLengths[i++] = 8;
    }
    for (i = 0; i < 30; i++) {
        arrDistanceCodes[i] = CompressorHuffmanTree.bitReverse(i << 11);
        arrDistanceLengths[i] = 5;
    }
})();


/***/ }),
/* 123 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__zip_archive__ = __webpack_require__(210);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__zip_archive__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_0__zip_archive__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__compression_writer__ = __webpack_require__(122);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__compression_writer__["a"]; });




/***/ }),
/* 124 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Adaptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return JsonAdaptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return UrlAdaptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return ODataAdaptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return ODataV4Adaptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return WebApiAdaptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return WebMethodAdaptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return RemoteSaveAdaptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return CacheAdaptor; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__query__ = __webpack_require__(57);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var Adaptor = (function () {
    function Adaptor(ds) {
        this.options = {
            from: 'table',
            requestType: 'json',
            sortBy: 'sorted',
            select: 'select',
            skip: 'skip',
            group: 'group',
            take: 'take',
            search: 'search',
            count: 'requiresCounts',
            where: 'where',
            aggregates: 'aggregates'
        };
        this.type = Adaptor;
        this.dataSource = ds;
        this.pvt = {};
    }
    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {
        return data;
    };
    return Adaptor;
}());

var JsonAdaptor = (function (_super) {
    __extends(JsonAdaptor, _super);
    function JsonAdaptor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    JsonAdaptor.prototype.processQuery = function (dataManager, query) {
        var result = dataManager.dataSource.json.slice(0);
        var count = result.length;
        var countFlg = true;
        var ret;
        var key;
        var agg = {};
        for (var i = 0; i < query.queries.length; i++) {
            key = query.queries[i];
            ret = this[key.fn].call(this, result, key.e, query);
            if (key.fn === 'onAggregates') {
                agg[key.e.field + ' - ' + key.e.type] = ret;
            }
            else {
                result = ret !== undefined ? ret : result;
            }
            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {
                countFlg = false;
            }
            if (countFlg) {
                count = result.length;
            }
        }
        if (query.requiresCounts) {
            result = {
                result: result,
                count: count,
                aggregates: agg
            };
        }
        return result;
    };
    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {
        var i;
        for (i = 0; i < changes.addedRecords.length; i++) {
            this.insert(dm, changes.addedRecords[i]);
        }
        for (i = 0; i < changes.changedRecords.length; i++) {
            this.update(dm, e.key, changes.changedRecords[i]);
        }
        for (i = 0; i < changes.deletedRecords.length; i++) {
            this.remove(dm, e.key, changes.deletedRecords[i]);
        }
        return changes;
    };
    JsonAdaptor.prototype.onWhere = function (ds, e) {
        if (!ds || !ds.length) {
            return ds;
        }
        return ds.filter(function (obj) {
            if (e) {
                return e.validate(obj);
            }
        });
    };
    JsonAdaptor.prototype.onAggregates = function (ds, e) {
        var fn = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].aggregates[e.type];
        if (!ds || !fn || ds.length === 0) {
            return null;
        }
        return fn(ds, e.field);
    };
    JsonAdaptor.prototype.onSearch = function (ds, e) {
        if (!ds || !ds.length) {
            return ds;
        }
        if (e.fieldNames.length === 0) {
            __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getFieldList(ds[0], e.fieldNames);
        }
        return ds.filter(function (obj) {
            for (var j = 0; j < e.fieldNames.length; j++) {
                if (e.comparer.call(obj, __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase)) {
                    return true;
                }
            }
            return false;
        });
    };
    JsonAdaptor.prototype.onSortBy = function (ds, e, query) {
        if (!ds || !ds.length) {
            return ds;
        }
        var fnCompare;
        var field = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(e.fieldName, query);
        if (!field) {
            return ds.sort(e.comparer);
        }
        if (field instanceof Array) {
            field = field.slice(0);
            for (var i = field.length - 1; i >= 0; i--) {
                if (!field[i]) {
                    continue;
                }
                fnCompare = e.comparer;
                if (__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].endsWith(field[i], ' desc')) {
                    fnCompare = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].fnSort('descending');
                    field[i] = field[i].replace(' desc', '');
                }
                ds = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].sort(ds, field[i], fnCompare);
            }
            return ds;
        }
        return __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].sort(ds, field, e.comparer);
    };
    JsonAdaptor.prototype.onGroup = function (ds, e, query) {
        if (!ds || !ds.length) {
            return ds;
        }
        var aggQuery = __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */].filterQueries(query.queries, 'onAggregates');
        var agg = [];
        if (aggQuery.length) {
            var tmp = void 0;
            for (var i = 0; i < aggQuery.length; i++) {
                tmp = aggQuery[i].e;
                agg.push({ type: tmp.type, field: __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(tmp.field, query) });
            }
        }
        return __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].group(ds, __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(e.fieldName, query), agg);
    };
    JsonAdaptor.prototype.onPage = function (ds, e, query) {
        var size = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(e.pageSize, query);
        var start = (__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(e.pageIndex, query) - 1) * size;
        var end = start + size;
        if (!ds || !ds.length) {
            return ds;
        }
        return ds.slice(start, end);
    };
    JsonAdaptor.prototype.onRange = function (ds, e) {
        if (!ds || !ds.length) {
            return ds;
        }
        return ds.slice(__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(e.start), __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(e.end));
    };
    JsonAdaptor.prototype.onTake = function (ds, e) {
        if (!ds || !ds.length) {
            return ds;
        }
        return ds.slice(0, __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(e.nos));
    };
    JsonAdaptor.prototype.onSkip = function (ds, e) {
        if (!ds || !ds.length) {
            return ds;
        }
        return ds.slice(__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(e.nos));
    };
    JsonAdaptor.prototype.onSelect = function (ds, e) {
        if (!ds || !ds.length) {
            return ds;
        }
        return __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].select(ds, __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(e.fieldNames));
    };
    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(position)) {
            return dm.dataSource.json.push(data);
        }
        else {
            return dm.dataSource.json.splice(position, 0, data);
        }
    };
    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {
        var ds = dm.dataSource.json;
        var i;
        if (typeof value === 'object') {
            value = value[keyField];
        }
        for (i = 0; i < ds.length; i++) {
            if (ds[i][keyField] === value) {
                break;
            }
        }
        return i !== ds.length ? ds.splice(i, 1) : null;
    };
    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {
        var ds = dm.dataSource.json;
        var i;
        var key = value[keyField];
        for (i = 0; i < ds.length; i++) {
            if (ds[i][keyField] === key) {
                break;
            }
        }
        return i < ds.length ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["merge"])(ds[i], value) : null;
    };
    return JsonAdaptor;
}(Adaptor));

var UrlAdaptor = (function (_super) {
    __extends(UrlAdaptor, _super);
    function UrlAdaptor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {
        var queries = this.getQueryRequest(query);
        var singles = __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */].filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);
        var params = query.params;
        var url = dm.dataSource.url;
        var temp;
        var skip;
        var take = null;
        var options = this.options;
        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };
        if ('onPage' in singles) {
            temp = singles.onPage;
            skip = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(temp.pageIndex, query);
            take = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(temp.pageSize, query);
            skip = (skip - 1) * take;
        }
        else if ('onRange' in singles) {
            temp = singles.onRange;
            skip = temp.start;
            take = temp.end - temp.start;
        }
        for (var i = 0; i < queries.sorts.length; i++) {
            temp = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(queries.sorts[i].e.fieldName, query);
            request.sorts.push(__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));
        }
        if (hierarchyFilters) {
            temp = this.getFiltersFrom(hierarchyFilters, query);
            if (temp) {
                request.filters.push(__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));
            }
        }
        for (var i = 0; i < queries.filters.length; i++) {
            request.filters.push(__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query));
            var keys_1 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];
            for (var _i = 0, keys_2 = keys_1; _i < keys_2.length; _i++) {
                var prop = keys_2[_i];
                if (__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].isNull((request)[prop])) {
                    delete request[prop];
                }
            }
        }
        for (var i = 0; i < queries.searches.length; i++) {
            temp = queries.searches[i].e;
            request.searches.push(__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onEachSearch', {
                fields: temp.fieldNames,
                operator: temp.operator,
                key: temp.searchKey,
                ignoreCase: temp.ignoreCase
            }, query));
        }
        for (var i = 0; i < queries.groups.length; i++) {
            request.groups.push(__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(queries.groups[i].e.fieldName, query));
        }
        for (var i = 0; i < queries.aggregates.length; i++) {
            temp = queries.aggregates[i].e;
            request.aggregates.push({ type: temp.type, field: __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(temp.field, query) });
        }
        var req = {};
        this.getRequestQuery(options, query, singles, request, req);
        __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });
        var keys = Object.keys(req);
        for (var _a = 0, keys_3 = keys; _a < keys_3.length; _a++) {
            var prop = keys_3[_a];
            if (__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {
                delete req[prop];
            }
        }
        if (!(options.skip in req && options.take in req) && take !== null) {
            req[options.skip] = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onSkip', skip, query);
            req[options.take] = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onTake', take, query);
        }
        var p = this.pvt;
        this.pvt = {};
        if (this.options.requestType === 'json') {
            return {
                data: JSON.stringify(req),
                url: url,
                pvtData: p,
                type: 'POST',
                contentType: 'application/json; charset=utf-8'
            };
        }
        temp = this.convertToQueryString(req, query, dm);
        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;
        return {
            type: 'GET', url: temp.length ? url.replace(/\/*$/, temp) : url, pvtData: p
        };
    };
    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {
        var param = 'param';
        var req = request1;
        req[options.from] = query.fromTable;
        if (options.expand) {
            req[options.expand] = query.expands;
        }
        req[options.select] = 'onSelect' in singles ?
            __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onSelect', __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(singles.onSelect.fieldNames, query), query) : '';
        req[options.count] = query.requiresCounts ? __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onCount', query.requiresCounts, query) : '';
        req[options.search] = request.searches.length ? __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onSearch', request.searches, query) : '';
        req[options.skip] = 'onSkip' in singles ?
            __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onSkip', __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(singles.onSkip.nos, query), query) : '';
        req[options.take] = 'onTake' in singles ?
            __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onTake', __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getValue(singles.onTake.nos, query), query) : '';
        req[options.where] = request.filters.length || request.searches.length ?
            __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onWhere', request.filters, query) : '';
        req[options.sortBy] = request.sorts.length ? __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';
        req[options.group] = request.groups.length ? __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onGroup', request.groups, query) : '';
        req[options.aggregates] = request.aggregates.length ?
            __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';
        req[param] = [];
    };
    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {
        return '';
    };
    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {
        var requests = request;
        var pvt = requests.pvtData || {};
        var groupDs = data.groupDs;
        if (xhr && xhr.getResponseHeader('Content-Type') &&
            xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {
            return (query.requiresCounts ? { result: [], count: 0 } : []);
        }
        var d = JSON.parse(requests.data);
        if (d && d.action === 'batch' && data.addedRecords) {
            changes.addedRecords = data.addedRecords;
            return changes;
        }
        if (data.d) {
            data = data.d;
        }
        var args = {};
        if ('count' in data) {
            args.count = data.count;
        }
        args.result = data.result ? data.result : data;
        this.getAggregateResult(pvt, data, args, groupDs);
        return __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };
    };
    UrlAdaptor.prototype.onGroup = function (e) {
        this.pvt.groups = e;
    };
    UrlAdaptor.prototype.onAggregates = function (e) {
        this.pvt.aggregates = e;
    };
    UrlAdaptor.prototype.batchRequest = function (dm, changes, e) {
        var url;
        var key;
        return {
            type: 'POST',
            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: JSON.stringify({
                changed: changes.changedRecords,
                added: changes.addedRecords,
                deleted: changes.deletedRecords,
                action: 'batch',
                table: e[url],
                key: e[key]
            })
        };
    };
    UrlAdaptor.prototype.beforeSend = function (dm, request) {
    };
    UrlAdaptor.prototype.insert = function (dm, data, tableName) {
        return {
            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,
            data: JSON.stringify({
                value: data,
                table: tableName,
                action: 'insert'
            })
        };
    };
    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName) {
        return {
            type: 'POST',
            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,
            data: JSON.stringify({
                key: value,
                keyColumn: keyField,
                table: tableName,
                action: 'remove'
            })
        };
    };
    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName) {
        return {
            type: 'POST',
            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,
            data: JSON.stringify({
                value: value,
                action: 'update',
                keyColumn: keyField,
                key: value[keyField],
                table: tableName
            })
        };
    };
    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {
        var key = query.fKey;
        var value;
        var prop = key;
        var pKey = query.key;
        var predicats = [];
        if (typeof data[0] !== 'object') {
            prop = null;
        }
        for (var i = 0; i < data.length; i++) {
            if (typeof data[0] === 'object') {
                value = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getObject(pKey || prop, data[i]);
            }
            else {
                value = data[i];
            }
            predicats.push(new __WEBPACK_IMPORTED_MODULE_2__query__["b" /* Predicate */](key, 'equal', value));
        }
        return __WEBPACK_IMPORTED_MODULE_2__query__["b" /* Predicate */].or(predicats);
    };
    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs) {
        var pData = data;
        if (data && data.result) {
            pData = data.result;
        }
        if (pvt && pvt.aggregates && pvt.aggregates.length) {
            var agg = pvt.aggregates;
            var fn = void 0;
            var aggregateData = pData;
            var res = {};
            if (data.aggregate) {
                aggregateData = data.aggregate;
            }
            for (var i = 0; i < agg.length; i++) {
                fn = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].aggregates[agg[i].type];
                if (fn) {
                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);
                }
            }
            args.aggregates = res;
        }
        if (pvt && pvt.groups && pvt.groups.length) {
            var groups = pvt.groups;
            for (var i = 0; i < groups.length; i++) {
                var level = null;
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(groupDs)) {
                    groupDs = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].group(groupDs, groups[i]);
                }
                pData = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].group(pData, groups[i], pvt.aggregates, level, groupDs);
            }
            args.result = pData;
        }
        return args;
    };
    UrlAdaptor.prototype.getQueryRequest = function (query) {
        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };
        req.sorts = __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */].filterQueries(query.queries, 'onSortBy');
        req.groups = __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */].filterQueries(query.queries, 'onGroup');
        req.filters = __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */].filterQueries(query.queries, 'onWhere');
        req.searches = __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */].filterQueries(query.queries, 'onSearch');
        req.aggregates = __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */].filterQueries(query.queries, 'onAggregates');
        return req;
    };
    UrlAdaptor.prototype.addParams = function (options) {
        var req = options.reqParams;
        if (options.params.length) {
            req.params = {};
        }
        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {
            var tmp = _a[_i];
            if (req[tmp.key]) {
                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');
            }
            req[tmp.key] = tmp.value;
            if (tmp.fn) {
                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);
            }
            req.params[tmp.key] = req[tmp.key];
        }
    };
    return UrlAdaptor;
}(Adaptor));

var ODataAdaptor = (function (_super) {
    __extends(ODataAdaptor, _super);
    function ODataAdaptor() {
        var _this = _super.call(this) || this;
        _this.options = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, _this.options, {
            requestType: 'get',
            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',
            multipartAccept: 'multipart/mixed',
            sortBy: '$orderby',
            select: '$select',
            skip: '$skip',
            take: '$top',
            count: '$inlinecount',
            where: '$filter',
            expand: '$expand',
            batch: '$batch',
            changeSet: '--changeset_',
            batchPre: 'batch_',
            contentId: 'Content-Id: ',
            batchContent: 'Content-Type: multipart/mixed; boundary=',
            changeSetContent: 'Content-Type: application/http\nContent-Transfer-Encoding: binary ',
            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 '
        });
        _this.getModuleName = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getValue"])('getModulename', _this);
        return _this;
    }
    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {
        var returnValue = '';
        var operator;
        var guid;
        var val = predicate.value;
        var type = typeof val;
        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;
        if (val instanceof Date) {
            val = 'datetime\'' + __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].parse.replacer(val) + '\'';
        }
        if (type === 'string') {
            val = '\'' + val + '\'';
            if (requiresCast) {
                field = 'cast(' + field + ', \'Edm.String\')';
            }
            if (__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].parse.isGuid(val)) {
                guid = 'guid';
            }
            if (predicate.ignoreCase) {
                if (!guid) {
                    field = 'tolower(' + field + ')';
                }
                val = val.toLowerCase();
            }
        }
        operator = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].odBiOperator[predicate.operator];
        if (operator) {
            returnValue += field;
            returnValue += operator;
            if (guid) {
                returnValue += guid;
            }
            return returnValue + val;
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.getModuleName)) {
            if (this.getModuleName() === 'ODataV4Adaptor') {
                operator = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].odv4UniOperator[predicate.operator];
            }
        }
        else {
            operator = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].odUniOperator[predicate.operator];
        }
        if (operator === 'substringof') {
            var temp = val;
            val = field;
            field = temp;
        }
        returnValue += operator + '(';
        returnValue += field + ',';
        if (guid) {
            returnValue += guid;
        }
        returnValue += val + ')';
        return returnValue;
    };
    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {
        var res = [];
        for (var i = 0; i < predicate.predicates.length; i++) {
            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');
        }
        return res.join(' ' + predicate.condition + ' ');
    };
    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {
        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);
    };
    ODataAdaptor.prototype.onWhere = function (filters) {
        if (this.pvt.search) {
            filters.push(this.onEachWhere(this.pvt.search, null, true));
        }
        return filters.join(' and ');
    };
    ODataAdaptor.prototype.onEachSearch = function (e) {
        if (e.fields && e.fields.length === 0) {
            __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].throwError('Query() - Search : oData search requires list of field names to search');
        }
        var filter = this.pvt.search || [];
        for (var i = 0; i < e.fields.length; i++) {
            filter.push(new __WEBPACK_IMPORTED_MODULE_2__query__["b" /* Predicate */](e.fields[i], e.operator, e.key, e.ignoreCase));
        }
        this.pvt.search = filter;
    };
    ODataAdaptor.prototype.onSearch = function (e) {
        this.pvt.search = __WEBPACK_IMPORTED_MODULE_2__query__["b" /* Predicate */].or(this.pvt.search);
        return '';
    };
    ODataAdaptor.prototype.onEachSort = function (e) {
        var res = [];
        if (e.name instanceof Array) {
            for (var i = 0; i < e.name.length; i++) {
                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));
            }
        }
        else {
            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));
        }
        return res.join(',');
    };
    ODataAdaptor.prototype.onSortBy = function (e) {
        return e.reverse().join(',');
    };
    ODataAdaptor.prototype.onGroup = function (e) {
        this.pvt.groups = e;
        return '';
    };
    ODataAdaptor.prototype.onSelect = function (e) {
        for (var i = 0; i < e.length; i++) {
            e[i] = ODataAdaptor.getField(e[i]);
        }
        return e.join(',');
    };
    ODataAdaptor.prototype.onAggregates = function (e) {
        this.pvt.aggregates = e;
        return '';
    };
    ODataAdaptor.prototype.onCount = function (e) {
        return e === true ? 'allpages' : '';
    };
    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {
        if (__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {
            request.setRequestHeader('Accept', this.options.multipartAccept);
            request.setRequestHeader('DataServiceVersion', '2.0');
            request.overrideMimeType('text/plain; charset=x-user-defined');
        }
        else {
            request.setRequestHeader('Accept', this.options.accept);
        }
        request.setRequestHeader('DataServiceVersion', '2.0');
        request.setRequestHeader('MaxDataServiceVersion', '2.0');
    };
    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {
        var pvtData = 'pvtData';
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(data.d)) {
            var dataCopy = (query && query.requiresCounts) ? data.d.results : data.d;
            var metaData = '__metadata';
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(dataCopy)) {
                for (var i = 0; i < dataCopy.length; i++) {
                    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(dataCopy[i][metaData])) {
                        delete dataCopy[i][metaData];
                    }
                }
            }
        }
        var pvt = request && request[pvtData];
        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);
        if (emptyAndBatch) {
            return emptyAndBatch;
        }
        var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');
        var count = null;
        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;
        if (query && query.requiresCounts) {
            var oDataCount = '__count';
            if (data[oDataCount] || data['odata.count']) {
                count = data[oDataCount] || data['odata.count'];
            }
            if (data.d) {
                data = data.d;
            }
            if (data[oDataCount] || data['odata.count']) {
                count = data[oDataCount] || data['odata.count'];
            }
        }
        if (version === 3 && data.value) {
            data = data.value;
        }
        if (data.d) {
            data = data.d;
        }
        if (version < 3 && data.results) {
            data = data.results;
        }
        var args = {};
        args.count = count;
        args.result = data;
        this.getAggregateResult(pvt, data, args);
        return __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };
    };
    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {
        var res = [];
        var table = 'table';
        var tableName = request[table] || '';
        var format = '$format';
        delete request[table];
        if (dm.dataSource.requiresFormat) {
            request[format] = 'json';
        }
        var keys = Object.keys(request);
        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {
            var prop = keys_4[_i];
            res.push(prop + '=' + request[prop]);
        }
        res = res.join('&');
        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {
            return res;
        }
        return res.length ? tableName + '?' + res : tableName || '';
    };
    ODataAdaptor.prototype.insert = function (dm, data, tableName) {
        return {
            url: dm.dataSource.url.replace(/\/*$/, tableName ? '/' + tableName : ''),
            data: JSON.stringify(data)
        };
    };
    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {
        return {
            type: 'DELETE',
            url: dm.dataSource.url.replace(/\/*$/, tableName ? '/' + tableName : '') + '(' + value + ')'
        };
    };
    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName) {
        return {
            type: 'PUT',
            url: dm.dataSource.url.replace(/\/*$/, tableName ? '/' + tableName : '') + '(' + value[keyField] + ')',
            data: JSON.stringify(value),
            accept: this.options.accept
        };
    };
    ODataAdaptor.prototype.batchRequest = function (dm, changes, e) {
        var initialGuid = e.guid = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getGuid(this.options.batchPre);
        var url = dm.dataSource.url.replace(/\/*$/, '/' + this.options.batch);
        var args = {
            url: e.url,
            key: e.key,
            cid: 1,
            cSet: __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getGuid(this.options.changeSet)
        };
        var req = '--' + initialGuid + '\n';
        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\n';
        this.pvt.changeSet = 0;
        req += this.generateInsertRequest(changes.addedRecords, args);
        req += this.generateUpdateRequest(changes.changedRecords, args);
        req += this.generateDeleteRequest(changes.deletedRecords, args);
        req += args.cSet + '--\n';
        req += '--' + initialGuid + '--';
        return {
            type: 'POST',
            url: url,
            dataType: 'json',
            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,
            data: req
        };
    };
    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e) {
        if (!arr) {
            return '';
        }
        var req = '';
        var stat = {
            'method': 'DELETE ',
            'url': function (data, i, key) { return '(' + data[i][key] + ')'; },
            'data': function (data, i) { return ''; }
        };
        req = this.generateBodyContent(arr, e, stat);
        return req + '\n';
    };
    ODataAdaptor.prototype.generateInsertRequest = function (arr, e) {
        if (!arr) {
            return '';
        }
        var req = '';
        var stat = {
            'method': 'POST ',
            'url': function (data, i, key) { return ''; },
            'data': function (data, i) { return JSON.stringify(data[i]) + '\n\n'; }
        };
        req = this.generateBodyContent(arr, e, stat);
        return req;
    };
    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e) {
        if (!arr) {
            return '';
        }
        var req = '';
        var stat = {
            'method': 'PUT ',
            'url': function (data, i, key) { return '(' + data[i][key] + ')'; },
            'data': function (data, i) { return JSON.stringify(data[i]) + '\n\n'; }
        };
        req = this.generateBodyContent(arr, e, stat);
        return req;
    };
    ODataAdaptor.getField = function (prop) {
        return prop.replace(/\./g, '/');
    };
    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat) {
        var req = '';
        for (var i = 0; i < arr.length; i++) {
            req += '\n' + e.cSet + '\n';
            req += this.options.changeSetContent + '\n\n';
            req += stat.method;
            req += e.url + stat.url(arr, i, e.key) + ' HTTP/1.1\n';
            req += 'Accept: ' + this.options.accept + '\n';
            req += 'Content-Id: ' + this.pvt.changeSet++ + '\n';
            req += this.options.batchChangeSetContentType + '\n\n';
            req += stat.data(arr, i);
        }
        return req;
    };
    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {
        if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {
            return (query.requiresCounts ? { result: [], count: 0 } : []);
        }
        if (request && this.options.batch && __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {
            var guid = xhr.getResponseHeader('Content-Type');
            var cIdx = void 0;
            var jsonObj = void 0;
            guid = guid.substring(guid.indexOf('=batchresponse') + 1);
            data = data.split(guid);
            if (data.length < 2) {
                return {};
            }
            data = data[1];
            var exVal = /(?:\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(data);
            if (exVal) {
                data.replace(exVal[0], '');
            }
            var changeGuid = exVal ? exVal[1] : '';
            data = data.split(changeGuid);
            for (var i = data.length; i > -1; i--) {
                if (!/\bContent-ID:/i.test(data[i]) || !/\bHTTP.+201/.test(data[i])) {
                    continue;
                }
                cIdx = parseInt(/\bContent-ID: (\d+)/i.exec(data[i])[1], 10);
                if (changes.addedRecords[cIdx]) {
                    jsonObj = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].parse.parseJson(/^\{.+\}/m.exec(data[i])[0]);
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));
                }
            }
            return changes;
        }
        return null;
    };
    return ODataAdaptor;
}(UrlAdaptor));

var ODataV4Adaptor = (function (_super) {
    __extends(ODataV4Adaptor, _super);
    function ODataV4Adaptor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.options = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, _this.options, {
            requestType: 'get',
            accept: 'application/json, text/javascript, */*; q=0.01',
            multipartAccept: 'multipart/mixed',
            sortBy: '$orderby',
            select: '$select',
            skip: '$skip',
            take: '$top',
            count: '$count',
            search: '$search',
            where: '$filter',
            expand: '$expand',
            batch: '$batch',
            changeSet: '--changeset_',
            batchPre: 'batch_',
            contentId: 'Content-Id: ',
            batchContent: 'Content-Type: multipart/mixed; boundary=',
            changeSetContent: 'Content-Type: application/http\nContent-Transfer-Encoding: binary ',
            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 '
        });
        return _this;
    }
    ODataV4Adaptor.prototype.getModulename = function () {
        return 'ODataV4Adaptor';
    };
    ;
    ODataV4Adaptor.prototype.onCount = function (e) {
        return e === true ? 'true' : '';
    };
    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {
        var returnValue = '';
        var val = predicate.value;
        var isDate = val instanceof Date;
        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);
        if (isDate) {
            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');
        }
        return returnValue;
    };
    ODataV4Adaptor.prototype.onEachSearch = function (e) {
        var search = this.pvt.searches || [];
        search.push(e.key);
        this.pvt.searches = search;
    };
    ODataV4Adaptor.prototype.onSearch = function (e) {
        return this.pvt.searches.join(' OR ');
    };
    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {
        request.setRequestHeader('Accept', this.options.accept);
    };
    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {
        var pvtData = 'pvtData';
        var pvt = request && request[pvtData];
        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);
        if (emptyAndBatch) {
            return emptyAndBatch;
        }
        var count = null;
        var dataCount = '@odata.count';
        if (query && query.requiresCounts) {
            if (dataCount in data) {
                count = data[dataCount];
            }
        }
        data = data.value;
        var args = {};
        args.count = count;
        args.result = data;
        this.getAggregateResult(pvt, data, args);
        return __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };
    };
    return ODataV4Adaptor;
}(ODataAdaptor));

var WebApiAdaptor = (function (_super) {
    __extends(WebApiAdaptor, _super);
    function WebApiAdaptor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {
        return {
            type: 'POST',
            url: dm.dataSource.url,
            data: JSON.stringify(data)
        };
    };
    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {
        return {
            type: 'DELETE',
            url: dm.dataSource.url + '/' + value,
            data: JSON.stringify(value)
        };
    };
    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {
        return {
            type: 'PUT',
            url: dm.dataSource.url,
            data: JSON.stringify(value)
        };
    };
    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {
        request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');
    };
    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {
        var pvtData = 'pvtData';
        var pvt = request && request[pvtData];
        var count = null;
        var args = {};
        if (request && request.type.toLowerCase() !== 'post') {
            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');
            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;
            if (query && query.requiresCounts) {
                if (!__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].isNull(data.Count)) {
                    count = data.Count;
                }
            }
            if (version < 3 && data.Items) {
                data = data.Items;
            }
            args.count = count;
            args.result = data;
            this.getAggregateResult(pvt, data, args);
        }
        args.result = args.result || data;
        return __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };
    };
    return WebApiAdaptor;
}(ODataAdaptor));

var WebMethodAdaptor = (function (_super) {
    __extends(WebMethodAdaptor, _super);
    function WebMethodAdaptor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {
        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);
        var getData = 'data';
        var data = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].parse.parseJson(obj[getData]);
        var result = {};
        var value = 'value';
        if (data.param) {
            for (var i = 0; i < data.param.length; i++) {
                var param = data.param[i];
                var key = Object.keys(param)[0];
                result[key] = param[key];
            }
        }
        result[value] = data;
        var pvtData = 'pvtData';
        var url = 'url';
        return {
            data: JSON.stringify(result),
            url: obj[url],
            pvtData: obj[pvtData],
            type: 'POST',
            contentType: 'application/json; charset=utf-8'
        };
    };
    return WebMethodAdaptor;
}(UrlAdaptor));

var RemoteSaveAdaptor = (function (_super) {
    __extends(RemoteSaveAdaptor, _super);
    function RemoteSaveAdaptor() {
        var _this = _super.call(this) || this;
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setValue"])('beforeSend', UrlAdaptor.prototype.beforeSend, _this);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setValue"])('insert', UrlAdaptor.prototype.insert, _this);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setValue"])('update', UrlAdaptor.prototype.update, _this);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setValue"])('remove', UrlAdaptor.prototype.remove, _this);
        return _this;
    }
    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e) {
        var i;
        for (i = 0; i < changes.addedRecords.length; i++) {
            JsonAdaptor.prototype.insert(dm, changes.addedRecords[i]);
        }
        for (i = 0; i < changes.changedRecords.length; i++) {
            JsonAdaptor.prototype.update(dm, e.key, changes.changedRecords[i]);
        }
        for (i = 0; i < changes.deletedRecords.length; i++) {
            JsonAdaptor.prototype.remove(dm, e.key, changes.deletedRecords[i]);
        }
        return {
            type: 'POST',
            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: JSON.stringify({
                changed: changes.changedRecords,
                added: changes.addedRecords,
                deleted: changes.deletedRecords,
                action: 'batch',
                table: e.url,
                key: e.key
            })
        };
    };
    return RemoteSaveAdaptor;
}(JsonAdaptor));

var CacheAdaptor = (function (_super) {
    __extends(CacheAdaptor, _super);
    function CacheAdaptor(adaptor, timeStamp, pageSize) {
        var _this = _super.call(this) || this;
        _this.isCrudAction = false;
        _this.isInsertAction = false;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(adaptor)) {
            _this.cacheAdaptor = adaptor;
        }
        _this.pageSize = pageSize;
        _this.guidId = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].getGuid('cacheAdaptor');
        var obj = { keys: [], results: [] };
        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));
        var guid = _this.guidId;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(timeStamp)) {
            setInterval(function () {
                var data;
                data = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].parse.parseJson(window.localStorage.getItem(guid));
                var forDel = [];
                for (var i = 0; i < data.results.length; i++) {
                    var currentTime = +new Date();
                    var requestTime = +new Date(data.results[i].timeStamp);
                    data.results[i].timeStamp = currentTime - requestTime;
                    if (currentTime - requestTime > timeStamp) {
                        forDel.push(i);
                    }
                }
                for (var i = 0; i < forDel.length; i++) {
                    data.results.splice(forDel[i], 1);
                    data.keys.splice(forDel[i], 1);
                }
                window.localStorage.removeItem(guid);
                window.localStorage.setItem(guid, JSON.stringify(data));
            }, timeStamp);
        }
        return _this;
    }
    CacheAdaptor.prototype.generateKey = function (url, query) {
        var queries = this.getQueryRequest(query);
        var singles = __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */].filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);
        var key = url;
        var page = 'onPage';
        if (page in singles) {
            key += singles[page].pageIndex;
        }
        queries.sorts.forEach(function (obj) {
            key += obj.e.direction + obj.e.fieldName;
        });
        queries.groups.forEach(function (obj) {
            key += obj.e.fieldName;
        });
        queries.searches.forEach(function (obj) {
            key += obj.e.searchKey;
        });
        for (var filter = 0; filter < queries.filters.length; filter++) {
            var currentFilter = queries.filters[filter];
            if (currentFilter.e.isComplex) {
                var newQuery = query.clone();
                newQuery.queries = [];
                for (var i = 0; i < currentFilter.e.predicates.length; i++) {
                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });
                }
                key += currentFilter.e.condition + this.generateKey(url, newQuery);
            }
            else {
                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;
            }
        }
        return key;
    };
    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {
        var key = this.generateKey(dm.dataSource.url, query);
        var cachedItems;
        cachedItems = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].parse.parseJson(window.localStorage.getItem(this.guidId));
        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;
        if (data != null && !this.isCrudAction && !this.isInsertAction) {
            return data;
        }
        this.isCrudAction = null;
        this.isInsertAction = null;
        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));
    };
    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {
        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&
            __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {
            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);
        }
        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));
        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;
        var obj = {};
        obj = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].parse.parseJson(window.localStorage.getItem(this.guidId));
        var index = obj.keys.indexOf(key);
        if (index !== -1) {
            obj.results.splice(index, 1);
            obj.keys.splice(index, 1);
        }
        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };
        while (obj.results.length > this.pageSize) {
            obj.results.splice(0, 1);
            obj.keys.splice(0, 1);
        }
        window.localStorage.setItem(this.guidId, JSON.stringify(obj));
        return data;
    };
    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {
        if (__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].endsWith(settings.url, this.cacheAdaptor.options.batch) && settings.type.toLowerCase() === 'post') {
            request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);
        }
        if (!dm.dataSource.crossDomain) {
            request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);
        }
    };
    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {
        this.isCrudAction = true;
        return this.cacheAdaptor.update(dm, keyField, value, tableName);
    };
    CacheAdaptor.prototype.insert = function (dm, data, tableName) {
        this.isInsertAction = true;
        return this.cacheAdaptor.insert(dm, data, tableName);
    };
    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {
        this.isCrudAction = true;
        return this.cacheAdaptor.remove(dm, keyField, value, tableName);
    };
    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {
        return this.cacheAdaptor.batchRequest(dm, changes, e);
    };
    return CacheAdaptor;
}(UrlAdaptor));



/***/ }),
/* 125 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DataManager; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Deferred; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__query__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__adaptors__ = __webpack_require__(124);





var DataManager = (function () {
    function DataManager(dataSource, query, adaptor) {
        var _this = this;
        this.dateParse = true;
        this.requests = [];
        if (!dataSource && !this.dataSource) {
            dataSource = [];
        }
        adaptor = adaptor || dataSource.adaptor;
        var data;
        if (dataSource instanceof Array) {
            data = {
                json: dataSource,
                offline: true
            };
        }
        else if (typeof dataSource === 'object') {
            if (!dataSource.json) {
                dataSource.json = [];
            }
            data = {
                url: dataSource.url,
                insertUrl: dataSource.insertUrl,
                removeUrl: dataSource.removeUrl,
                updateUrl: dataSource.updateUrl,
                crudUrl: dataSource.crudUrl,
                batchUrl: dataSource.batchUrl,
                json: dataSource.json,
                headers: dataSource.headers,
                accept: dataSource.accept,
                data: dataSource.data,
                timeTillExpiration: dataSource.timeTillExpiration,
                cachingPageSize: dataSource.cachingPageSize,
                enableCaching: dataSource.enableCaching,
                requestType: dataSource.requestType,
                key: dataSource.key,
                crossDomain: dataSource.crossDomain,
                jsonp: dataSource.jsonp,
                dataType: dataSource.dataType,
                offline: dataSource.offline !== undefined ? dataSource.offline
                    : dataSource.adaptor instanceof __WEBPACK_IMPORTED_MODULE_3__adaptors__["h" /* RemoteSaveAdaptor */] ? false : dataSource.url ? false : true,
                requiresFormat: dataSource.requiresFormat
            };
        }
        else {
            __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].throwError('DataManager: Invalid arguments');
        }
        if (data.requiresFormat === undefined && !__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].isCors()) {
            data.requiresFormat = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(data.crossDomain) ? true : data.crossDomain;
        }
        if (data.dataType === undefined) {
            data.dataType = 'json';
        }
        this.dataSource = data;
        this.defaultQuery = query;
        if (data.url && data.offline && !data.json.length) {
            this.isDataAvailable = false;
            this.adaptor = adaptor || new __WEBPACK_IMPORTED_MODULE_3__adaptors__["d" /* ODataAdaptor */]();
            this.dataSource.offline = false;
            this.ready = this.executeQuery(query || new __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */]());
            this.ready.then(function (e) {
                _this.dataSource.offline = true;
                _this.isDataAvailable = true;
                data.json = e.result;
                _this.adaptor = new __WEBPACK_IMPORTED_MODULE_3__adaptors__["b" /* JsonAdaptor */]();
            });
        }
        else {
            this.adaptor = data.offline ? new __WEBPACK_IMPORTED_MODULE_3__adaptors__["b" /* JsonAdaptor */]() : new __WEBPACK_IMPORTED_MODULE_3__adaptors__["d" /* ODataAdaptor */]();
        }
        if (!data.jsonp && this.adaptor instanceof __WEBPACK_IMPORTED_MODULE_3__adaptors__["d" /* ODataAdaptor */]) {
            data.jsonp = 'callback';
        }
        this.adaptor = adaptor || this.adaptor;
        if (data.enableCaching) {
            this.adaptor = new __WEBPACK_IMPORTED_MODULE_3__adaptors__["i" /* CacheAdaptor */](this.adaptor, data.timeTillExpiration, data.cachingPageSize);
        }
        return this;
    }
    DataManager.prototype.setDefaultQuery = function (query) {
        this.defaultQuery = query;
        return this;
    };
    DataManager.prototype.executeLocal = function (query) {
        if (!this.defaultQuery && !(query instanceof __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */])) {
            __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].throwError('DataManager - executeLocal() : A query is required to execute');
        }
        if (!this.dataSource.json) {
            __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].throwError('DataManager - executeLocal() : Json data is required to execute');
        }
        query = query || this.defaultQuery;
        var result = this.adaptor.processQuery(this, query);
        if (query.subQuery) {
            var from = query.subQuery.fromTable;
            var lookup = query.subQuery.lookups;
            var res = query.requiresCounts ? result.result :
                result;
            if (lookup && lookup instanceof Array) {
                __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);
            }
            for (var j = 0; j < res.length; j++) {
                if (res[j][from] instanceof Array) {
                    res[j] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, {}, res[j]);
                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);
                }
            }
        }
        return this.adaptor.processResponse(result, this, query);
    };
    DataManager.prototype.executeQuery = function (query, done, fail, always) {
        var _this = this;
        if (typeof query === 'function') {
            always = fail;
            fail = done;
            done = query;
            query = null;
        }
        if (!query) {
            query = this.defaultQuery;
        }
        if (!(query instanceof __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */])) {
            __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].throwError('DataManager - executeQuery() : A query is required to execute');
        }
        var deffered = new Deferred();
        var args = { query: query };
        if (!this.dataSource.offline && this.dataSource.url !== undefined) {
            var result = this.adaptor.processQuery(this, query);
            this.makeRequest(result, deffered, args, query);
        }
        else {
            DataManager.nextTick(function () {
                var res = _this.executeLocal(query);
                args = DataManager.getDeferedArgs(query, res, args);
                deffered.resolve(args);
            });
        }
        return deffered.promise;
    };
    DataManager.getDeferedArgs = function (query, result, args) {
        if (query.requiresCounts) {
            args.result = result.result;
            args.count = result.count;
            args.aggregates = result.aggregates;
        }
        else {
            args.result = result;
        }
        return args;
    };
    DataManager.nextTick = function (fn) {
        (window.setImmediate || window.setTimeout)(fn, 0);
    };
    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, {
            type: 'GET',
            dataType: this.dataSource.dataType,
            crossDomain: this.dataSource.crossDomain,
            jsonp: this.dataSource.jsonp,
            cache: true,
            processData: false,
            onSuccess: fnSuccess,
            onFailure: fnFail
        }, url);
    };
    DataManager.prototype.makeRequest = function (url, deffered, args, query) {
        var _this = this;
        var isSelector = !!query.subQuerySelector;
        var fnFail = function (e) {
            args.error = e;
            deffered.reject(args);
        };
        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {
            args.xhr = xhr;
            args.count = count ? parseInt(count.toString(), 10) : 0;
            args.result = data;
            args.request = request;
            args.aggregates = aggregates;
            args.actual = actual;
            args.virtualSelectRecords = virtualSelectRecords;
            deffered.resolve(args);
        };
        var fnQueryChild = function (data, selector) {
            var subDeffer = new Deferred();
            var childArgs = { parent: args };
            query.subQuery.isChild = true;
            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);
            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);
            if (!isSelector) {
                subDeffer.then(function (subData) {
                    if (data) {
                        __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);
                        process(data, subData.count, subData.xhr);
                    }
                }, fnFail);
            }
            return childReq;
        };
        var fnSuccess = function (data, request) {
            if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {
                data = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].parse.parseJson(data);
            }
            var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);
            var count = 0;
            var aggregates = null;
            var virtualSelectRecords = 'virtualSelectRecords';
            var virtualRecords = data[virtualSelectRecords];
            if (query.requiresCounts) {
                count = result.count;
                aggregates = result.aggregates;
                result = result.result;
            }
            if (!query.subQuery) {
                process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);
                return;
            }
            if (!isSelector) {
                fnQueryChild(result, request);
            }
        };
        var req = this.extendRequest(url, fnSuccess, fnFail);
        var ajax = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Ajax"](req);
        ajax.beforeSend = function () {
            _this.beforeSend(ajax.httpRequest, ajax);
        };
        req = ajax.send();
        this.requests.push(ajax);
        if (isSelector) {
            var promise = void 0;
            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });
            if (res && res.length) {
                promise = Promise.all([req, fnQueryChild(null, res)]);
                promise.then(function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    var result = args[0];
                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);
                    var count = 0;
                    if (query.requiresCounts) {
                        count = pResult.count;
                        pResult = pResult.result;
                    }
                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);
                    count = 0;
                    if (query.subQuery.requiresCounts) {
                        count = cResult.count;
                        cResult = cResult.result;
                    }
                    __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);
                    isSelector = false;
                    process(pResult, count, _this.requests[0].httpRequest);
                });
            }
            else {
                isSelector = false;
            }
        }
        return req;
    };
    DataManager.prototype.beforeSend = function (request, settings) {
        this.adaptor.beforeSend(this, request, settings);
        var headers = this.dataSource.headers;
        var props;
        for (var i = 0; headers && i < headers.length; i++) {
            props = [];
            var keys = Object.keys(headers[i]);
            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                var prop = keys_1[_i];
                props.push(prop);
                request.setRequestHeader(prop, headers[i][prop]);
            }
        }
    };
    DataManager.prototype.saveChanges = function (changes, key, tableName, query) {
        var _this = this;
        if (tableName instanceof __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */]) {
            query = tableName;
            tableName = null;
        }
        var args = {
            url: tableName,
            key: key || this.dataSource.key
        };
        var req = this.adaptor.batchRequest(this, changes, args, query);
        if (this.dataSource.offline) {
            return req;
        }
        var deff = new Deferred();
        var ajax = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Ajax"](req);
        ajax.beforeSend = function () {
            _this.beforeSend(ajax.httpRequest, ajax);
        };
        ajax.onSuccess = function (data, request) {
            deff.resolve(_this, [_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes)]);
        };
        ajax.onFailure = function (e) {
            deff.reject([{ error: e }]);
        };
        ajax.send();
        return deff.promise;
    };
    DataManager.prototype.insert = function (data, tableName, query, position) {
        data = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].parse.replacer(data);
        if (tableName instanceof __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */]) {
            query = tableName;
            tableName = null;
        }
        var req = this.adaptor.insert(this, data, tableName, query, position);
        if (this.dataSource.offline) {
            return req;
        }
        return this.doAjaxRequest(req);
    };
    DataManager.prototype.remove = function (keyField, value, tableName, query) {
        if (typeof value === 'object') {
            value = value[keyField];
        }
        if (tableName instanceof __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */]) {
            query = tableName;
            tableName = null;
        }
        var res = this.adaptor.remove(this, keyField, value, tableName, query);
        if (this.dataSource.offline) {
            return res;
        }
        return this.doAjaxRequest(res);
    };
    DataManager.prototype.update = function (keyField, value, tableName, query) {
        value = __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].parse.replacer(value, !this.dataSource.offline);
        if (tableName instanceof __WEBPACK_IMPORTED_MODULE_2__query__["a" /* Query */]) {
            query = tableName;
            tableName = null;
        }
        var res = this.adaptor.update(this, keyField, value, tableName, query);
        if (this.dataSource.offline) {
            return res;
        }
        return this.doAjaxRequest(res);
    };
    DataManager.prototype.doAjaxRequest = function (res) {
        var _this = this;
        var defer = new Deferred();
        res = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, {
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            processData: false
        }, res);
        var ajax = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Ajax"](res);
        ajax.beforeSend = function () {
            _this.beforeSend(ajax.httpRequest, ajax);
        };
        ajax.onSuccess = function (record, request) {
            try {
                __WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].parse.parseJson(record);
            }
            catch (e) {
                record = [];
            }
            record = _this.adaptor.processResponse(__WEBPACK_IMPORTED_MODULE_1__util__["a" /* DataUtil */].parse.parseJson(record), _this, null, request.httpRequest, request);
            defer.resolve(_this, [{ record: record, dataManager: _this }]);
        };
        ajax.onFailure = function (e) {
            defer.reject([{ error: e }]);
        };
        ajax.send();
        return defer.promise;
    };
    return DataManager;
}());

var Deferred = (function () {
    function Deferred() {
        var _this = this;
        this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
        this.then = this.promise.then.bind(this.promise);
        this.catch = this.promise.catch.bind(this.promise);
    }
    return Deferred;
}());



/***/ }),
/* 126 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ComboBox; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__ = __webpack_require__(92);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_incremental_search__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__syncfusion_ej2_inputs__ = __webpack_require__(36);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





__WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].root = 'e-combobox';
var inputObject = {
    container: null,
    buttons: []
};
var ComboBox = (function (_super) {
    __extends(ComboBox, _super);
    function ComboBox(options, element) {
        return _super.call(this, options, element) || this;
    }
    ;
    ComboBox.prototype.preRender = function () {
        _super.prototype.preRender.call(this);
    };
    ComboBox.prototype.wireEvent = function () {
        if (this.getModuleName() === 'combobox') {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.inputWrapper.buttons[0], 'mousedown', this.preventBlur, this);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.inputWrapper.container, 'blur', this.onBlur, this);
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.inputWrapper.buttons[0])) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.inputWrapper.buttons[0], 'mousedown', this.dropDownClick, this);
        }
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.inputElement, 'focus', this.targetFocus, this);
        if (!this.readonly) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.inputElement, 'input', this.onInput, this);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.inputElement, 'keyup', this.onFilterUp, this);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.inputElement, 'keydown', this.onFilterDown, this);
        }
        this.bindCommonEvent();
    };
    ComboBox.prototype.preventBlur = function (e) {
        if ((!this.allowFiltering && document.activeElement !== this.inputElement &&
            !document.activeElement.classList.contains(__WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].input) && __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice || !__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice)) {
            e.preventDefault();
        }
    };
    ComboBox.prototype.targetElement = function () {
        return this.inputElement;
    };
    ComboBox.prototype.setOldText = function (text) {
        __WEBPACK_IMPORTED_MODULE_3__syncfusion_ej2_inputs__["Input"].setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);
        this.customValue();
        this.removeSelection();
    };
    ComboBox.prototype.setOldValue = function (value) {
        if (this.allowCustom) {
            this.valueMuteChange(this.value);
        }
        else {
            this.valueMuteChange(null);
        }
        this.removeSelection();
        this.setHiddenValue();
    };
    ComboBox.prototype.valueMuteChange = function (value) {
        var inputValue = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(value) ? null : value.toString();
        __WEBPACK_IMPORTED_MODULE_3__syncfusion_ej2_inputs__["Input"].setValue(inputValue, this.inputElement, this.floatLabelType, this.showClearButton);
        this.setProperties({ value: value, text: value, index: null }, true);
        this.activeIndex = this.index;
        var fields = this.fields;
        var dataItem = {};
        dataItem[fields.text] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(value) ? null : value.toString();
        dataItem[fields.value] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(value) ? null : value.toString();
        this.itemData = dataItem;
        this.item = null;
        if (this.previousValue !== this.value) {
            this.detachChangeEvent(null);
        }
    };
    ComboBox.prototype.updateValues = function () {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.value)) {
            var li = this.getElementByValue(this.value);
            if (li) {
                this.setSelection(li, null);
            }
            else if (this.allowCustom) {
                this.valueMuteChange(this.value);
            }
            else {
                this.valueMuteChange(null);
            }
        }
        else if (this.text && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.value)) {
            var li = this.getElementByText(this.text);
            if (li) {
                this.setSelection(li, null);
            }
            else {
                __WEBPACK_IMPORTED_MODULE_3__syncfusion_ej2_inputs__["Input"].setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);
                this.customValue();
            }
        }
        else {
            this.setSelection(this.liCollections[this.activeIndex], null);
        }
        this.setHiddenValue();
        __WEBPACK_IMPORTED_MODULE_3__syncfusion_ej2_inputs__["Input"].setValue(this.text, this.inputElement, this.floatLabelType, this.showClearButton);
    };
    ComboBox.prototype.getAriaAttributes = function () {
        var ariaAttributes = {
            'aria-owns': this.element.id + '_options',
            'role': 'combobox',
            'aria-autocomplete': 'both',
            'aria-hasPopup': 'true',
            'aria-expanded': 'false',
            'aria-readonly': this.readonly.toString(),
            'autocomplete': 'off',
            'autocorrect': 'off',
            'autocapitalize': 'off',
            'spellcheck': 'false'
        };
        return ariaAttributes;
    };
    ComboBox.prototype.searchLists = function (e) {
        this.isTyped = true;
        if (this.isFiltering()) {
            _super.prototype.searchLists.call(this, e);
            if (this.filterInput.value.trim() === '') {
                this.setHoverList(this.ulElement.querySelector('.' + __WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].li));
            }
        }
        else {
            if (this.ulElement && this.inputElement.value === '' && this.preventAutoFill) {
                this.setHoverList(this.ulElement.querySelector('.' + __WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].li));
            }
            this.incrementalSearch(e);
        }
    };
    ComboBox.prototype.getNgDirective = function () {
        return 'EJ-COMBOBOX';
    };
    ComboBox.prototype.setSearchBox = function () {
        this.filterInput = this.inputElement;
        return (this.isFiltering() ? this.inputWrapper : inputObject);
    };
    ComboBox.prototype.onActionComplete = function (ulElement, list, e, isUpdated) {
        _super.prototype.onActionComplete.call(this, ulElement, list, e);
        if (this.isSelectCustom) {
            this.removeSelection();
        }
        if (!this.preventAutoFill && this.getModuleName() === 'combobox' && this.isTyped) {
            this.inlineSearch();
        }
    };
    ComboBox.prototype.getFocusElement = function () {
        var dataItem = this.isSelectCustom ? { text: '' } : this.getItemData();
        var selected = this.list.querySelector('.' + __WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].selected);
        var isSelected = dataItem.text === this.inputElement.value && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(selected);
        if (isSelected) {
            return selected;
        }
        if ((__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && !this.isDropDownClick || !__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) &&
            !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.liCollections) && this.liCollections.length > 0) {
            var inputValue = this.inputElement.value;
            var activeItem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_incremental_search__["a" /* Search */])(inputValue, this.liCollections, 'StartsWith', true);
            var activeElement = activeItem.item;
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(activeElement)) {
                var count = this.getIndexByValue(activeElement.getAttribute('data-value')) - 1;
                var height = parseInt(getComputedStyle(this.liCollections[0], null).getPropertyValue('height'), 10);
                if (!isNaN(height) && this.getModuleName() !== 'autocomplete') {
                    var fixedHead = this.fields.groupBy ? this.liCollections[0].offsetHeight : 0;
                    this.list.scrollTop = count * height + fixedHead;
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([activeElement], __WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].focus);
                }
            }
            else {
                if (this.isSelectCustom && this.inputElement.value.trim() !== '') {
                    this.removeFocus();
                    this.list.scrollTop = 0;
                }
            }
            return activeElement;
        }
        else {
            return null;
        }
    };
    ComboBox.prototype.setValue = function (e) {
        if (e && e.type === 'keydown' && e.action === 'enter') {
            this.removeFillSelection();
        }
        if (this.autofill && this.getModuleName() === 'combobox' && e && e.type === 'keydown' && e.action !== 'enter') {
            this.preventAutoFill = false;
            this.inlineSearch(e);
            return false;
        }
        else {
            return _super.prototype.setValue.call(this, e);
        }
    };
    ComboBox.prototype.setAutoFill = function (activeElement, isHover) {
        if (!isHover) {
            this.setHoverList(activeElement);
        }
        if (this.autofill && !this.preventAutoFill) {
            var currentValue = this.getTextByValue(activeElement.getAttribute('data-value')).toString();
            var currentFillValue = this.getFormattedValue(activeElement.getAttribute('data-value'));
            if (this.getModuleName() === 'combobox') {
                if (!this.isSelected && this.previousValue !== currentFillValue) {
                    this.updateSelectedItem(activeElement, null);
                    this.isSelected = true;
                    this.previousValue = this.getFormattedValue(activeElement.getAttribute('data-value'));
                }
                else {
                    this.updateSelectedItem(activeElement, null, true);
                }
            }
            if (!this.isAndroidAutoFill(currentValue)) {
                this.setAutoFillSelection(currentValue);
            }
        }
    };
    ComboBox.prototype.isAndroidAutoFill = function (value) {
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isAndroid) {
            var currentPoints = this.getSelectionPoints();
            var prevEnd = this.prevSelectPoints.end;
            var curEnd = currentPoints.end;
            var prevStart = this.prevSelectPoints.start;
            var curStart = currentPoints.start;
            if (prevEnd !== 0 && ((prevEnd === value.length && prevStart === value.length) ||
                (prevStart > curStart && prevEnd > curEnd) || (prevEnd === curEnd && prevStart === curStart))) {
                return true;
            }
            else {
                return false;
            }
        }
        else {
            return false;
        }
    };
    ComboBox.prototype.isSelectFocusItem = function (element) {
        return !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(element);
    };
    ComboBox.prototype.inlineSearch = function (e) {
        var isKeyNavigate = (e && (e.action === 'down' || e.action === 'up' ||
            e.action === 'home' || e.action === 'end' || e.action === 'pageUp' || e.action === 'pageDown'));
        var activeElement = isKeyNavigate ? this.liCollections[this.activeIndex] : this.getFocusElement();
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(activeElement)) {
            if (!isKeyNavigate) {
                var value = this.getFormattedValue(activeElement.getAttribute('data-value'));
                this.activeIndex = this.getIndexByValue(value);
                this.activeIndex = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.activeIndex) ? this.activeIndex : null;
            }
            this.preventAutoFill = this.inputElement.value === '' ? false : this.preventAutoFill;
            this.setAutoFill(activeElement, isKeyNavigate);
        }
        else if (this.inputElement.value === '') {
            this.activeIndex = null;
            this.list.scrollTop = 0;
            var focusItem = this.list.querySelector('.' + __WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].li);
            this.setHoverList(focusItem);
        }
        else {
            this.activeIndex = null;
            this.removeSelection();
            this.removeFocus();
        }
    };
    ComboBox.prototype.incrementalSearch = function (e) {
        this.showPopup();
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.listData)) {
            this.inlineSearch(e);
            e.preventDefault();
        }
    };
    ;
    ComboBox.prototype.setAutoFillSelection = function (currentValue) {
        var selection = this.getSelectionPoints();
        var value = this.inputElement.value.substr(0, selection.start);
        if (value && (value.toLowerCase() === currentValue.substr(0, selection.start).toLowerCase())) {
            var inputValue = value + currentValue.substr(value.length, currentValue.length);
            __WEBPACK_IMPORTED_MODULE_3__syncfusion_ej2_inputs__["Input"].setValue(inputValue, this.inputElement, this.floatLabelType, this.showClearButton);
            this.inputElement.setSelectionRange(selection.start, this.inputElement.value.length);
        }
        else {
            __WEBPACK_IMPORTED_MODULE_3__syncfusion_ej2_inputs__["Input"].setValue(currentValue, this.inputElement, this.floatLabelType, this.showClearButton);
            this.inputElement.setSelectionRange(0, this.inputElement.value.length);
        }
    };
    ;
    ComboBox.prototype.getValueByText = function (text) {
        return _super.prototype.getValueByText.call(this, text, true);
    };
    ComboBox.prototype.unWireEvent = function () {
        if (this.getModuleName() === 'combobox') {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.inputWrapper.buttons[0], 'mousedown', this.preventBlur);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.inputWrapper.container, 'blur', this.onBlur);
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.inputWrapper.buttons[0])) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.inputWrapper.buttons[0], 'mousedown', this.dropDownClick);
        }
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.inputElement, 'focus', this.targetFocus);
        if (!this.readonly) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.inputElement, 'input', this.onInput);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.inputElement, 'keyup', this.onFilterUp);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.inputElement, 'keydown', this.onFilterDown);
        }
        this.unBindCommonEvent();
    };
    ComboBox.prototype.setSelection = function (li, e) {
        _super.prototype.setSelection.call(this, li, e);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(li) && !this.autofill && !this.isDropDownClick) {
            this.removeFocus();
        }
    };
    ComboBox.prototype.selectCurrentItem = function (e) {
        var li;
        if (this.isPopupOpen) {
            li = this.list.querySelector('.' + __WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].focus);
            if (li) {
                this.setSelection(li, e);
                this.isTyped = false;
            }
            if (this.isSelected) {
                this.isSelectCustom = false;
                this.onChangeEvent(e);
            }
        }
        if (this.isTyped && !this.isSelected && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(li)) {
            this.customValue();
        }
        this.hidePopup();
    };
    ComboBox.prototype.setHoverList = function (li) {
        this.removeSelection();
        if (this.isValidLI(li) && !li.classList.contains(__WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].selected)) {
            this.removeFocus();
            li.classList.add(__WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].focus);
        }
    };
    ;
    ComboBox.prototype.targetFocus = function (e) {
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && !this.allowFiltering) {
            this.preventFocus = false;
        }
        this.onFocus();
    };
    ComboBox.prototype.dropDownClick = function (e) {
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && !this.allowFiltering) {
            this.preventFocus = true;
        }
        _super.prototype.dropDownClick.call(this, e);
    };
    ComboBox.prototype.customValue = function () {
        var value = this.getValueByText(this.inputElement.value);
        if (!this.allowCustom && this.inputElement.value !== '') {
            this.setProperties({ value: value });
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.value)) {
                __WEBPACK_IMPORTED_MODULE_3__syncfusion_ej2_inputs__["Input"].setValue('', this.inputElement, this.floatLabelType, this.showClearButton);
            }
        }
        else if (this.inputElement.value.trim() !== '') {
            var previousValue = this.value;
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(value)) {
                var value_1 = this.inputElement.value === '' ? null : this.inputElement.value;
                var fields = this.fields;
                var eventArgs = void 0;
                eventArgs = { text: value_1, item: {} };
                if (!this.initial) {
                    this.trigger('customValueSpecifier', eventArgs);
                }
                var item = eventArgs.item;
                var dataItem = {};
                if (item && item[fields.text] && item[fields.value]) {
                    dataItem = item;
                }
                else {
                    dataItem[fields.text] = value_1;
                    dataItem[fields.value] = value_1;
                }
                this.itemData = dataItem;
                this.setProperties({ text: this.itemData[fields.text], value: this.itemData[fields.value], index: null }, true);
                this.setSelection(null, null);
                this.isSelectCustom = true;
            }
            else {
                this.isSelectCustom = false;
                this.setProperties({ value: value });
            }
            if (previousValue !== this.value) {
                this.onChangeEvent(null);
            }
        }
    };
    ComboBox.prototype.onPropertyChanged = function (newProp, oldProp) {
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'readonly':
                    __WEBPACK_IMPORTED_MODULE_3__syncfusion_ej2_inputs__["Input"].setReadonly(this.readonly, this.inputElement);
                    if (this.readonly) {
                        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.inputElement, 'keyup', this.onFilterUp);
                        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.inputElement, 'keydown', this.onFilterDown);
                    }
                    else {
                        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.inputElement, 'keyup', this.onFilterUp, this);
                        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.inputElement, 'keydown', this.onFilterDown, this);
                    }
                    break;
                case 'allowFiltering':
                    this.setSearchBox();
                    break;
                case 'allowCustom':
                    break;
                default:
                    var comboProps = void 0;
                    comboProps = this.getPropObject(prop, newProp, oldProp);
                    _super.prototype.onPropertyChanged.call(this, comboProps.newProperty, comboProps.oldProperty);
                    break;
            }
        }
    };
    ComboBox.prototype.render = function () {
        _super.prototype.render.call(this);
        this.setSearchBox();
        if (this.isFiltering() && this.getModuleName() === 'combobox' && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.list)) {
            _super.prototype.renderList.call(this);
        }
    };
    ;
    ComboBox.prototype.getModuleName = function () {
        return 'combobox';
    };
    ComboBox.prototype.hidePopup = function () {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.listData)) {
            var isEscape = this.isEscapeKey;
            if (this.isEscapeKey) {
                __WEBPACK_IMPORTED_MODULE_3__syncfusion_ej2_inputs__["Input"].setValue(this.typedString, this.inputElement, this.floatLabelType, this.showClearButton);
                this.isEscapeKey = false;
            }
            if (this.autofill) {
                this.removeFillSelection();
            }
            var dataItem = this.isSelectCustom ? { text: '' } : this.getItemData();
            var selected = this.list.querySelector('.' + __WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].selected);
            if (dataItem.text === this.inputElement.value && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(selected)) {
                if (this.isSelected) {
                    this.onChangeEvent(null);
                    this.isSelectCustom = false;
                }
                _super.prototype.hidePopup.call(this);
                return;
            }
            if (this.getModuleName() === 'combobox' && this.inputElement.value.trim() !== '') {
                var searchItem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_incremental_search__["a" /* Search */])(this.inputElement.value, this.liCollections, 'Equal', true);
                this.selectedLI = searchItem.item;
                if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(searchItem.index)) {
                    searchItem.index = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_incremental_search__["a" /* Search */])(this.inputElement.value, this.liCollections, 'StartsWith', true).index;
                }
                this.activeIndex = searchItem.index;
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.selectedLI)) {
                    this.updateSelectedItem(this.selectedLI, null, true);
                }
                else if (isEscape) {
                    this.isSelectCustom = true;
                    this.removeSelection();
                }
            }
            if (!this.isEscapeKey && this.isTyped && !this.isInteracted) {
                this.customValue();
            }
        }
        _super.prototype.hidePopup.call(this);
    };
    ComboBox.prototype.focusIn = function () {
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice && !this.allowFiltering) {
            this.preventFocus = true;
        }
        _super.prototype.focusIn.call(this);
    };
    return ComboBox;
}(__WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["b" /* DropDownList */]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], ComboBox.prototype, "autofill", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(true)
], ComboBox.prototype, "allowCustom", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])({})
], ComboBox.prototype, "htmlAttributes", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], ComboBox.prototype, "allowFiltering", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], ComboBox.prototype, "query", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(true)
], ComboBox.prototype, "showClearButton", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], ComboBox.prototype, "customValueSpecifier", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], ComboBox.prototype, "filtering", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], ComboBox.prototype, "valueTemplate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], ComboBox.prototype, "filterBarPlaceholder", void 0);
ComboBox = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], ComboBox);



/***/ }),
/* 127 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = highlightSearch;
function highlightSearch(content, query, ignoreCase, type) {
    revert(content);
    if (query === '') {
        return;
    }
    else {
        var ignoreRegex = ignoreCase ? 'gim' : 'gm';
        var replaceQuery = type === 'StartsWith' ? '^(' + query + ')' : type === 'EndsWith' ? '(' + query + ')$' : '(' + query + ')';
        var pattern = new RegExp(replaceQuery, ignoreRegex);
        var li = content.querySelectorAll('ul li');
        for (var i = 0; i < li.length; i++) {
            var element = li[i];
            element.innerHTML = element.innerHTML.replace(pattern, '<span class="e-highlight">$1</span>');
        }
    }
}
function revert(content) {
    var contentElement = content.querySelectorAll('.e-highlight');
    for (var i = contentElement.length - 1; i >= 0; i--) {
        var parent_1 = contentElement[i].parentNode;
        var text = document.createTextNode(contentElement[i].textContent);
        parent_1.replaceChild(text, contentElement[i]);
    }
}


/***/ }),
/* 128 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return dropDownBaseClasses; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return DropDownBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_data__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_lists__ = __webpack_require__(230);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var dropDownBaseClasses = {
    root: 'e-dropdownbase',
    rtl: 'e-rtl',
    content: 'e-content',
    selected: 'e-active',
    hover: 'e-hover',
    noData: 'e-nodata',
    fixedHead: 'e-fixed-head',
    focus: 'e-item-focus',
    li: __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_lists__["a" /* cssClass */].li,
    group: __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_lists__["a" /* cssClass */].group,
    disabled: __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_lists__["a" /* cssClass */].disabled,
    grouping: 'e-dd-group'
};
var DropDownBase = (function (_super) {
    __extends(DropDownBase, _super);
    function DropDownBase(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.scrollTimer = -1;
        _this.enableRtlElements = [];
        _this.isRequested = false;
        return _this;
    }
    ;
    DropDownBase.prototype.getPropObject = function (prop, newProp, oldProp) {
        var newProperty = new Object();
        var oldProperty = new Object();
        var propName = new Function('prop', 'return prop');
        newProperty[propName(prop)] = newProp[propName(prop)];
        oldProperty[propName(prop)] = oldProp[propName(prop)];
        var data = new Object();
        data.newProperty = newProperty;
        data.oldProperty = oldProperty;
        return data;
    };
    DropDownBase.prototype.l10nUpdate = function (actionFailure) {
        if (this.noRecordsTemplate !== 'No Records Found' || this.actionFailureTemplate !== 'The Request Failed') {
            var template = actionFailure ? this.actionFailureTemplate : this.noRecordsTemplate;
            var compiledString = void 0;
            this.list.innerHTML = '';
            compiledString = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["compile"])(template);
            for (var _i = 0, _a = compiledString({}); _i < _a.length; _i++) {
                var item = _a[_i];
                this.list.appendChild(item);
            }
        }
        else {
            var l10nLocale = { noRecordsTemplate: 'No Records Found', actionFailureTemplate: 'The Request Failed' };
            this.l10n = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["L10n"]('dropdownlist', l10nLocale, this.locale);
            this.list.innerHTML = actionFailure ?
                this.l10n.getConstant('actionFailureTemplate') : this.l10n.getConstant('noRecordsTemplate');
        }
    };
    DropDownBase.prototype.getTextByValue = function (value) {
        var text;
        var dataSource = this.listData;
        var fields = this.fields;
        if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {
            for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {
                var item = dataSource_1[_i];
                if (item.toString() === value.toString()) {
                    text = item.toString();
                    break;
                }
            }
        }
        else {
            dataSource.filter(function (item) {
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(item[fields.value]) && item[fields.value].toString() === value.toString()) {
                    text = item[fields.text];
                }
            });
        }
        return text;
    };
    DropDownBase.prototype.getFormattedValue = function (value) {
        if (this.listData && this.listData.length) {
            if (typeof this.listData[0][this.fields.value ? this.fields.value : 'value'] === 'number' ||
                typeof this.listData[0] === 'number') {
                return parseInt(value, 10);
            }
        }
        return value;
    };
    DropDownBase.prototype.setEnableRtl = function () {
        if (this.list) {
            this.enableRtlElements.push(this.list);
        }
        this.enableRtl ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])(this.enableRtlElements, dropDownBaseClasses.rtl) :
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])(this.enableRtlElements, dropDownBaseClasses.rtl);
    };
    ;
    DropDownBase.prototype.initialize = function () {
        this.bindEvent = true;
        if (this.element.tagName === 'UL') {
            var jsonElement = __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_lists__["b" /* ListBase */].createJsonFromElement(this.element);
            this.setProperties({ fields: { text: 'text', value: 'text' } }, true);
            this.resetList(jsonElement, this.fields);
        }
        else if (this.element.tagName === 'SELECT') {
            var dataSource = this.dataSource instanceof Array ? (this.dataSource.length > 0 ? true : false)
                : !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.dataSource) ? true : false;
            if (!dataSource) {
                this.renderItemsBySelect();
            }
        }
        else {
            this.setListData(this.dataSource, this.fields, this.query);
        }
    };
    ;
    DropDownBase.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    ;
    DropDownBase.prototype.setEnabled = function () {
        if (this.enabled) {
            this.element.setAttribute('aria-disabled', 'false');
        }
        else {
            this.element.setAttribute('aria-disabled', 'true');
        }
    };
    ;
    DropDownBase.prototype.renderItemsBySelect = function () {
        var element = this.element;
        var fields = { value: 'value', text: 'text' };
        var jsonElement = [];
        var group = element.querySelectorAll('select>optgroup');
        var option = element.querySelectorAll('select>option');
        this.getJSONfromOption(jsonElement, option, fields);
        if (group.length) {
            for (var i = 0; i < group.length; i++) {
                var item = group[i];
                var optionGroup = {};
                optionGroup[fields.text] = item.label;
                optionGroup.isHeader = true;
                var child = item.querySelectorAll('option');
                jsonElement.push(optionGroup);
                this.getJSONfromOption(jsonElement, child, fields);
            }
            var items = element.querySelectorAll('select>option');
        }
        this.fields.text = fields.text;
        this.fields.value = fields.value;
        this.resetList(jsonElement, fields);
    };
    DropDownBase.prototype.getJSONfromOption = function (items, options, fields) {
        for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {
            var option = options_1[_i];
            var json = {};
            json[fields.text] = option.innerText;
            json[fields.value] = option.getAttribute(fields.value) ? option.getAttribute(fields.value) : option.innerText;
            items.push(json);
        }
    };
    DropDownBase.prototype.preRender = function () {
    };
    DropDownBase.prototype.setListData = function (dataSource, fields, query) {
        var _this = this;
        fields = fields ? fields : this.fields;
        var ulElement;
        this.isActive = true;
        if (dataSource instanceof __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_data__["DataManager"]) {
            this.isRequested = true;
            this.trigger('actionBegin');
            dataSource.executeQuery(this.getQuery(query)).then(function (e) {
                _this.trigger('actionComplete', e);
                var listItems = e.result;
                ulElement = _this.renderItems(listItems, fields);
                _this.onActionComplete(ulElement, listItems, e);
                _this.isRequested = false;
            }).catch(function (e) {
                _this.isRequested = false;
                _this.onActionFailure(e);
            });
        }
        else {
            var dataManager = new __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_data__["DataManager"](dataSource);
            var listItems = (this.getQuery(query)).executeLocal(dataManager);
            ulElement = this.renderItems(listItems, fields);
            this.onActionComplete(ulElement, listItems);
        }
    };
    DropDownBase.prototype.onActionFailure = function (e) {
        this.liCollections = [];
        this.trigger('actionFailure', e);
        this.l10nUpdate(true);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.list], dropDownBaseClasses.noData);
    };
    DropDownBase.prototype.onActionComplete = function (ulElement, list, e) {
        this.listData = list;
        this.list.innerHTML = '';
        this.list.appendChild(ulElement);
        this.liCollections = this.list.querySelectorAll('.' + dropDownBaseClasses.li);
        this.ulElement = this.list.querySelector('ul');
        this.postRender(this.list, list, this.bindEvent);
    };
    DropDownBase.prototype.postRender = function (listElement, list, bindEvent) {
        var focusItem = listElement.querySelector('.' + dropDownBaseClasses.li);
        var selectedItem = listElement.querySelector('.' + dropDownBaseClasses.selected);
        if (focusItem && !selectedItem) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([focusItem], dropDownBaseClasses.focus);
        }
        if (list.length <= 0) {
            this.l10nUpdate();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([listElement], dropDownBaseClasses.noData);
        }
        else {
            listElement.classList.remove(dropDownBaseClasses.noData);
        }
        if (this.groupTemplate) {
            this.renderGroupTemplate(listElement);
        }
    };
    DropDownBase.prototype.getQuery = function (query) {
        return query ? query : this.query ? this.query : new __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_data__["Query"]();
    };
    DropDownBase.prototype.renderGroupTemplate = function (listEle) {
        if (this.fields.groupBy !== null && this.dataSource || this.element.querySelector('.' + dropDownBaseClasses.group)) {
            var dataSource = this.dataSource;
            var headerItems = listEle.querySelectorAll('.' + dropDownBaseClasses.group);
            var tempHeaders = __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_lists__["b" /* ListBase */].renderGroupTemplate(this.groupTemplate, dataSource, this.fields, headerItems);
        }
    };
    DropDownBase.prototype.createListItems = function (dataSource, fields) {
        if (dataSource && fields.groupBy || this.element.querySelector('optgroup')) {
            if (fields.groupBy) {
                dataSource = __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_lists__["b" /* ListBase */].groupDataSource(dataSource, fields);
            }
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.list], dropDownBaseClasses.grouping);
        }
        else {
            dataSource = this.getSortedDataSource(dataSource);
        }
        var iconCss = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(fields.iconCss) ? false : true;
        var options = (fields.text !== null || fields.value !== null) ? {
            fields: fields, showIcon: iconCss, ariaAttributes: { groupItemRole: 'presentation' }
        } : { fields: { value: 'text' } };
        return __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_lists__["b" /* ListBase */].createList(dataSource, options, true);
    };
    ;
    DropDownBase.prototype.setFloatingHeader = function (e) {
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.fixedHeaderElement)) {
            this.fixedHeaderElement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: dropDownBaseClasses.fixedHead });
            if (!this.list.querySelector('li').classList.contains(dropDownBaseClasses.group)) {
                this.fixedHeaderElement.style.display = 'none';
            }
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["prepend"])([this.fixedHeaderElement], this.list);
            this.setFixedHeader();
        }
        this.scrollStop(e);
    };
    DropDownBase.prototype.scrollStop = function (e) {
        var target = e.target;
        var liHeight = parseInt(getComputedStyle(this.liCollections[0], null).getPropertyValue('height'), 10);
        var topIndex = Math.round(target.scrollTop / liHeight);
        var liCollections = this.ulElement.querySelectorAll('li');
        for (var i = topIndex; i > -1; i--) {
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(liCollections[i]) && liCollections[i].classList.contains(dropDownBaseClasses.group)) {
                var currentLi = liCollections[i];
                this.fixedHeaderElement.innerHTML = currentLi.innerHTML;
                this.fixedHeaderElement.style.display = 'block';
                break;
            }
            else {
                this.fixedHeaderElement.style.display = 'none';
            }
        }
    };
    DropDownBase.prototype.renderItems = function (listData, fields) {
        var ulElement;
        if (this.itemTemplate && listData) {
            var dataSource = listData;
            if (dataSource && fields.groupBy) {
                dataSource = __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_lists__["b" /* ListBase */].groupDataSource(dataSource, fields, this.sortOrder);
            }
            else {
                dataSource = this.getSortedDataSource(dataSource);
            }
            ulElement = __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_lists__["b" /* ListBase */].renderContentTemplate(this.itemTemplate, dataSource, fields);
        }
        else {
            ulElement = this.createListItems(listData, fields);
        }
        return ulElement;
    };
    ;
    DropDownBase.prototype.setFixedHeader = function () {
        this.list.parentElement.style.display = 'block';
        var liWidth = this.liCollections[0].offsetWidth;
        this.fixedHeaderElement.style.width = liWidth.toString() + 'px';
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.fixedHeaderElement, { zIndex: 10 });
        var firstLi = this.ulElement.querySelector('.' + dropDownBaseClasses.group);
        this.fixedHeaderElement.innerHTML = firstLi.innerHTML;
    };
    DropDownBase.prototype.getSortedDataSource = function (dataSource) {
        if (dataSource && this.sortOrder !== 'None') {
            var textField = this.fields.text ? this.fields.text : 'text';
            dataSource = __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_lists__["b" /* ListBase */].getDataSource(dataSource, __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_lists__["b" /* ListBase */].addSorting(this.sortOrder, textField));
        }
        return dataSource;
    };
    DropDownBase.prototype.getIndexByValue = function (value) {
        var index;
        var listItems = this.getItems();
        for (var i = 0; i < listItems.length; i++) {
            if (listItems[i].getAttribute('data-value') === value.toString()) {
                index = i;
                break;
            }
        }
        return index;
    };
    ;
    DropDownBase.prototype.dispatchEvent = function (element, type) {
        var evt = document.createEvent('HTMLEvents');
        evt.initEvent(type, false, true);
        element.dispatchEvent(evt);
    };
    DropDownBase.prototype.setFields = function () {
        var fields = this.fields;
        if (this.fields.value && !this.fields.text) {
            this.fields.text = this.fields.value;
        }
        else if (!fields.value && fields.text) {
            this.fields.value = this.fields.text;
        }
        else if (!this.fields.value && !this.fields.text) {
            this.fields.value = this.fields.text = 'text';
        }
    };
    DropDownBase.prototype.resetList = function (dataSource, fields, query) {
        if (this.list) {
            this.setListData(dataSource, fields, query);
        }
    };
    DropDownBase.prototype.updateSelection = function () {
    };
    DropDownBase.prototype.renderList = function () {
        this.render();
    };
    DropDownBase.prototype.onPropertyChanged = function (newProp, oldProp) {
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'enableRtl':
                    this.setEnableRtl();
                    break;
                case 'enabled':
                    this.setEnabled();
                    break;
                case 'query':
                case 'sortOrder':
                case 'dataSource':
                case 'itemTemplate':
                    this.resetList(this.dataSource);
                    break;
                case 'groupTemplate':
                    this.renderGroupTemplate(this.list);
                    break;
                case 'locale':
                    if (this.list) {
                        this.l10nUpdate();
                    }
                    break;
            }
        }
    };
    ;
    DropDownBase.prototype.render = function (isEmptyData) {
        this.list = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: dropDownBaseClasses.content, attrs: { 'tabindex': '0' } });
        this.list.classList.add(dropDownBaseClasses.root);
        this.setFields();
        var rippleModel = { duration: 300, selector: '.' + dropDownBaseClasses.li };
        this.rippleFun = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["rippleEffect"])(this.list, rippleModel);
        var group = this.element.querySelector('select>optgroup');
        if (this.fields.groupBy || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(group)) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.list, 'scroll', this.setFloatingHeader, this);
        }
        if (this.getModuleName() === 'dropdownbase') {
            if (this.element.getAttribute('tabindex')) {
                this.list.setAttribute('tabindex', this.element.getAttribute('tabindex'));
            }
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], dropDownBaseClasses.root);
            this.element.style.display = 'none';
            var wrapperElement = document.createElement('div');
            this.element.parentElement.insertBefore(wrapperElement, this.element);
            wrapperElement.appendChild(this.element);
            wrapperElement.appendChild(this.list);
        }
        this.setEnableRtl();
        this.setEnabled();
        if (!isEmptyData) {
            this.initialize();
        }
    };
    ;
    DropDownBase.prototype.getModuleName = function () {
        return 'dropdownbase';
    };
    ;
    DropDownBase.prototype.getItems = function () {
        return this.ulElement.querySelectorAll('.' + dropDownBaseClasses.li);
    };
    ;
    DropDownBase.prototype.addItem = function (items, itemIndex) {
        if (!this.list || this.list.textContent === this.noRecordsTemplate) {
            this.renderList();
        }
        var itemsCount = this.getItems().length;
        var selectedItemValue = this.list.querySelector('.' + dropDownBaseClasses.selected);
        items = items instanceof Array ? items : [items];
        var index;
        index = (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(itemIndex) || itemIndex < 0 || itemIndex > itemsCount - 1) ? itemsCount : itemIndex;
        var fields = this.fields;
        var liCollections = [];
        for (var i = 0; i < items.length; i++) {
            var item = items[i];
            var li = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('li', { className: dropDownBaseClasses.li, id: 'option-add-' + i });
            li.setAttribute('data-value', item[fields.value]);
            li.setAttribute('role', 'option');
            li.appendChild(document.createTextNode(item[fields.text]));
            liCollections.push(li);
            this.listData.push(item);
        }
        if (itemsCount === 0 && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.list.querySelector('ul'))) {
            this.list.innerHTML = '';
            this.list.appendChild(this.ulElement);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["append"])(liCollections, this.ulElement);
        }
        else {
            for (var i = 0; i < items.length; i++) {
                if (this.liCollections[index]) {
                    this.liCollections[index].parentNode.insertBefore(liCollections[i], this.liCollections[index]);
                }
                else {
                    this.ulElement.appendChild(liCollections[i]);
                }
                var tempLi = [].slice.call(this.liCollections);
                tempLi.splice(index, 0, liCollections[i]);
                this.liCollections = tempLi;
                index += 1;
            }
        }
        if (selectedItemValue || itemIndex === 0) {
            this.updateSelection();
        }
    };
    DropDownBase.prototype.getDataByValue = function (value) {
        if (typeof this.listData[0] === 'string' || typeof this.listData[0] === 'number') {
            for (var _i = 0, _a = this.listData; _i < _a.length; _i++) {
                var item = _a[_i];
                if (item === value) {
                    return item;
                }
            }
        }
        else {
            for (var _b = 0, _c = this.listData; _b < _c.length; _b++) {
                var item = _c[_b];
                if (item[this.fields.value ? this.fields.value : 'value'] === value) {
                    return item;
                }
            }
        }
        return null;
    };
    DropDownBase.prototype.destroy = function () {
        if (document.body.contains(this.list)) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.list, 'scroll', this.setFloatingHeader);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.rippleFun)) {
                this.rippleFun();
            }
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.list);
        }
        _super.prototype.destroy.call(this);
    };
    ;
    return DropDownBase;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Component"]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])({ text: null, value: null, iconCss: null, groupBy: null })
], DropDownBase.prototype, "fields", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], DropDownBase.prototype, "enableRtl", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], DropDownBase.prototype, "enablePersistence", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], DropDownBase.prototype, "itemTemplate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], DropDownBase.prototype, "groupTemplate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('No Records Found')
], DropDownBase.prototype, "noRecordsTemplate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('The Request Failed')
], DropDownBase.prototype, "actionFailureTemplate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('None')
], DropDownBase.prototype, "sortOrder", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(true)
], DropDownBase.prototype, "enabled", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])([])
], DropDownBase.prototype, "dataSource", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], DropDownBase.prototype, "query", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], DropDownBase.prototype, "actionBegin", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], DropDownBase.prototype, "actionComplete", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], DropDownBase.prototype, "actionFailure", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], DropDownBase.prototype, "select", void 0);
DropDownBase = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], DropDownBase);



/***/ }),
/* 129 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_index__ = __webpack_require__(214);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "incrementalSearch", function() { return __WEBPACK_IMPORTED_MODULE_0__common_index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Search", function() { return __WEBPACK_IMPORTED_MODULE_0__common_index__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "highlightSearch", function() { return __WEBPACK_IMPORTED_MODULE_0__common_index__["c"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__drop_down_base_index__ = __webpack_require__(215);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "dropDownBaseClasses", function() { return __WEBPACK_IMPORTED_MODULE_1__drop_down_base_index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "DropDownBase", function() { return __WEBPACK_IMPORTED_MODULE_1__drop_down_base_index__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__drop_down_list_index__ = __webpack_require__(216);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "dropDownListClasses", function() { return __WEBPACK_IMPORTED_MODULE_2__drop_down_list_index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "DropDownList", function() { return __WEBPACK_IMPORTED_MODULE_2__drop_down_list_index__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__combo_box_index__ = __webpack_require__(213);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ComboBox", function() { return __WEBPACK_IMPORTED_MODULE_3__combo_box_index__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__auto_complete_index__ = __webpack_require__(212);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "AutoComplete", function() { return __WEBPACK_IMPORTED_MODULE_4__auto_complete_index__["a"]; });







/***/ }),
/* 130 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BlobHelper; });
var BlobHelper = (function () {
    function BlobHelper() {
        this.parts = [];
    }
    BlobHelper.prototype.append = function (part) {
        this.parts.push(part);
        this.blob = undefined;
    };
    BlobHelper.prototype.getBlob = function () {
        return new Blob(this.parts, { type: 'text/plain' });
    };
    return BlobHelper;
}());



/***/ }),
/* 131 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CellStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Font; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return CellXfs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return Alignment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return CellStyleXfs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return CellStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return NumFmt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return Border; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return Borders; });
var CellStyle = (function () {
    function CellStyle() {
        this.numFmtId = 0;
        this.backColor = 'none';
        this.fontName = 'Calibri';
        this.fontSize = 14;
        this.fontColor = '#000000';
        this.italic = false;
        this.bold = false;
        this.underline = false;
        this.wrapText = false;
        this.hAlign = 'general';
        this.vAlign = 'bottom';
        this.numberFormat = 'GENERAL';
        this.type = 'datetime';
        this.borders = new Borders();
        this.isGlobalStyle = false;
    }
    return CellStyle;
}());

var Font = (function () {
    function Font() {
        this.sz = 14;
        this.name = 'Calibri';
        this.u = false;
        this.b = false;
        this.i = false;
        this.color = 'FF000000';
    }
    return Font;
}());

var CellXfs = (function () {
    function CellXfs() {
    }
    return CellXfs;
}());

var Alignment = (function () {
    function Alignment() {
    }
    return Alignment;
}());

var CellStyleXfs = (function () {
    function CellStyleXfs() {
    }
    return CellStyleXfs;
}());

var CellStyles = (function () {
    function CellStyles() {
        this.name = 'Normal';
        this.xfId = 0;
    }
    return CellStyles;
}());

var NumFmt = (function () {
    function NumFmt(id, code) {
        this.numFmtId = id;
        this.formatCode = code;
    }
    return NumFmt;
}());

var Border = (function () {
    function Border(mLine, mColor) {
        this.lineStyle = mLine;
        this.color = mColor;
    }
    return Border;
}());

var Borders = (function () {
    function Borders() {
        this.left = new Border('none', '#FFFFFF');
        this.right = new Border('none', '#FFFFFF');
        this.top = new Border('none', '#FFFFFF');
        this.bottom = new Border('none', '#FFFFFF');
        this.all = new Border('none', '#FFFFFF');
    }
    return Borders;
}());



/***/ }),
/* 132 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Cell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Cells; });
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Cell = (function () {
    function Cell() {
    }
    return Cell;
}());

var Cells = (function (_super) {
    __extends(Cells, _super);
    function Cells() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.add = function (cell) {
            var inserted = false;
            var count = 0;
            for (var _i = 0, _a = _this; _i < _a.length; _i++) {
                var c = _a[_i];
                if (c.index === cell.index) {
                    _this[count] = cell;
                    inserted = true;
                }
                count++;
            }
            if (!inserted) {
                _this.push(cell);
            }
        };
        return _this;
    }
    return Cells;
}(Array));



/***/ }),
/* 133 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Column; });
var Column = (function () {
    function Column() {
    }
    return Column;
}());



/***/ }),
/* 134 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CsvHelper; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__value_formatter__ = __webpack_require__(136);

var CsvHelper = (function () {
    function CsvHelper(json) {
        this.csvStr = '';
        this.formatter = new __WEBPACK_IMPORTED_MODULE_0__value_formatter__["a" /* ValueFormatter */]();
        this.isMicrosoftBrowser = !(!navigator.msSaveBlob);
        if (json.styles !== null && json.styles !== undefined) {
            this.globalStyles = new Map();
            for (var i = 0; i < json.styles.length; i++) {
                if (json.styles[i].name !== undefined && json.styles[i].numberFormat !== undefined) {
                    this.globalStyles.set(json.styles[i].name, json.styles[i].numberFormat);
                }
            }
        }
        if (json.worksheets !== null && json.worksheets !== undefined) {
            this.parseWorksheet(json.worksheets[0]);
        }
    }
    CsvHelper.prototype.parseWorksheet = function (json) {
        if (json.rows !== null && json.rows !== undefined) {
            this.parseRows(json.rows);
        }
    };
    CsvHelper.prototype.parseRows = function (rows) {
        var count = 1;
        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {
            var row = rows_1[_i];
            if (row.index !== null && row.index !== undefined) {
                while (count < row.index) {
                    this.csvStr += '\n';
                    count++;
                }
                this.parseRow(row);
            }
            else {
                throw Error('Row index is missing.');
            }
        }
    };
    CsvHelper.prototype.parseRow = function (row) {
        if (row.cells !== null && row.cells !== undefined) {
            var count = 1;
            for (var _i = 0, _a = row.cells; _i < _a.length; _i++) {
                var cell = _a[_i];
                if (cell.index !== null && cell.index !== undefined) {
                    while (count < cell.index) {
                        this.csvStr += ',';
                        count++;
                    }
                    this.parseCell(cell);
                }
                else {
                    throw Error('Cell index is missing.');
                }
            }
        }
    };
    CsvHelper.prototype.parseCell = function (cell) {
        var csv = this.csvStr;
        if (cell.value !== undefined) {
            if (cell.value instanceof Date) {
                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {
                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: cell.style.numberFormat }));
                }
                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {
                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: this.globalStyles.get(cell.style.name) }));
                }
                else {
                    csv += cell.value;
                }
            }
            else if (typeof (cell.value) === 'boolean') {
                csv += cell.value ? 'TRUE' : 'FALSE';
            }
            else if (typeof (cell.value) === 'number') {
                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {
                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: cell.style.numberFormat }));
                }
                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {
                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: this.globalStyles.get(cell.style.name) }));
                }
                else {
                    csv += cell.value;
                }
            }
            else {
                csv += this.parseCellValue(cell.value);
            }
        }
        this.csvStr = csv;
    };
    CsvHelper.prototype.parseCellValue = function (value) {
        if (value.indexOf(',') !== -1) {
            return value = '\"' + value + '\"';
        }
        else {
            return value;
        }
    };
    CsvHelper.prototype.save = function (fileName) {
        this.buffer = new Blob([this.csvStr], { type: 'text/plain' });
        if (this.isMicrosoftBrowser) {
            navigator.msSaveBlob(this.buffer, fileName);
        }
        else {
            var dataUrl_1 = window.URL.createObjectURL(this.buffer);
            var dwlLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');
            dwlLink.download = fileName;
            dwlLink.href = dataUrl_1;
            var event_1 = document.createEvent('MouseEvent');
            event_1.initEvent('click', true, true);
            dwlLink.dispatchEvent(event_1);
            setTimeout(function () {
                window.URL.revokeObjectURL(dataUrl_1);
            });
        }
    };
    return CsvHelper;
}());



/***/ }),
/* 135 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Row; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Rows; });
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Row = (function () {
    function Row() {
    }
    return Row;
}());

var Rows = (function (_super) {
    __extends(Rows, _super);
    function Rows() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.add = function (row) {
            var inserted = false;
            var count = 0;
            for (var _i = 0, _a = _this; _i < _a.length; _i++) {
                var r = _a[_i];
                if (r.index === row.index) {
                    _this[count] = row;
                    inserted = true;
                }
                count++;
            }
            if (!inserted) {
                _this.push(row);
            }
        };
        return _this;
    }
    return Rows;
}(Array));



/***/ }),
/* 136 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ValueFormatter; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);


var ValueFormatter = (function () {
    function ValueFormatter(cultureName) {
        this.intl = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Internationalization"]();
    }
    ValueFormatter.prototype.getFormatFunction = function (format) {
        if (format.type) {
            return this.intl.getDateFormat(format);
        }
        else {
            return this.intl.getNumberFormat(format);
        }
    };
    ValueFormatter.prototype.toView = function (value, format) {
        var result = value;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(format) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(value)) {
            result = format(value);
        }
        return result;
    };
    ValueFormatter.prototype.displayText = function (value, format) {
        return this.toView(value, this.getFormatFunction(format));
    };
    return ValueFormatter;
}());



/***/ }),
/* 137 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Worksheet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return HyperLink; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return Grouping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return FreezePane; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return MergeCell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return MergeCells; });
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Worksheet = (function () {
    function Worksheet() {
        this.isSummaryRowBelow = true;
    }
    return Worksheet;
}());

var HyperLink = (function () {
    function HyperLink() {
    }
    return HyperLink;
}());

var Grouping = (function () {
    function Grouping() {
    }
    return Grouping;
}());

var FreezePane = (function () {
    function FreezePane() {
    }
    return FreezePane;
}());

var MergeCell = (function () {
    function MergeCell() {
    }
    return MergeCell;
}());

var MergeCells = (function (_super) {
    __extends(MergeCells, _super);
    function MergeCells() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.add = function (mergeCell) {
            var inserted = false;
            var count = 0;
            for (var _i = 0, _a = _this; _i < _a.length; _i++) {
                var mCell = _a[_i];
                if (MergeCells.isIntersecting(mCell, mergeCell)) {
                    var intersectingCell = new MergeCell();
                    intersectingCell.x = Math.min(mCell.x, mergeCell.x);
                    intersectingCell.y = Math.min(mCell.Y, mergeCell.y);
                    intersectingCell.width = Math.max(mCell.Width + mCell.X, mergeCell.width + mergeCell.x);
                    intersectingCell.height = Math.max(mCell.Height + mCell.Y, mergeCell.height + mergeCell.y);
                    intersectingCell.ref = (_this[count].ref.split(':')[0]) + ':' + (mergeCell.ref.split(':')[1]);
                    _this[count] = intersectingCell;
                    inserted = true;
                }
                count++;
            }
            if (!inserted) {
                _this.push(mergeCell);
            }
        };
        return _this;
    }
    MergeCells.isIntersecting = function (base, compare) {
        return (base.x <= compare.x + compare.width)
            && (compare.x <= base.x + base.width)
            && (base.y <= compare.y + compare.height)
            && (compare.y <= base.y + base.height);
    };
    return MergeCells;
}(Array));



/***/ }),
/* 138 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Worksheets; });
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Worksheets = (function (_super) {
    __extends(Worksheets, _super);
    function Worksheets() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Worksheets;
}(Array));



/***/ }),
/* 139 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Encoding; });
/* harmony export (immutable) */ __webpack_exports__["b"] = validateNullOrUndefined;
var Encoding = (function () {
    function Encoding(includeBom) {
        this.emitBOM = true;
        this.encodingType = 'Ansi';
        this.initBOM(includeBom);
    }
    Object.defineProperty(Encoding.prototype, "includeBom", {
        get: function () {
            return this.emitBOM;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Encoding.prototype, "type", {
        get: function () {
            return this.encodingType;
        },
        set: function (value) {
            this.encodingType = value;
        },
        enumerable: true,
        configurable: true
    });
    Encoding.prototype.initBOM = function (includeBom) {
        if (includeBom === undefined || includeBom === null) {
            this.emitBOM = true;
        }
        else {
            this.emitBOM = includeBom;
        }
    };
    Encoding.prototype.getByteCount = function (chars) {
        var byteCount = 0;
        validateNullOrUndefined(chars, 'string');
        if (chars === '') {
            var byte = this.utf8Len(chars.charCodeAt(0));
            return byte;
        }
        if (this.type === null || this.type === undefined) {
            this.type = 'Ansi';
        }
        return this.getByteCountInternal(chars, 0, chars.length);
    };
    Encoding.prototype.utf8Len = function (codePoint) {
        var bytes = codePoint <= 0x7F ? 1 :
            codePoint <= 0x7FF ? 2 :
                codePoint <= 0xFFFF ? 3 :
                    codePoint <= 0x1FFFFF ? 4 : 0;
        return bytes;
    };
    Encoding.prototype.isHighSurrogate = function (codeUnit) {
        return codeUnit >= 0xD800 && codeUnit <= 0xDBFF;
    };
    Encoding.prototype.toCodepoint = function (highCodeUnit, lowCodeUnit) {
        highCodeUnit = (0x3FF & highCodeUnit) << 10;
        var u = highCodeUnit | (0x3FF & lowCodeUnit);
        return u + 0x10000;
    };
    Encoding.prototype.getByteCountInternal = function (chars, charIndex, charCount) {
        var byteCount = 0;
        if (this.encodingType === 'Utf8' || this.encodingType === 'Unicode') {
            var isUtf8 = this.encodingType === 'Utf8';
            for (var i = 0; i < charCount; i++) {
                var charCode = chars.charCodeAt(isUtf8 ? charIndex : charIndex++);
                if (this.isHighSurrogate(charCode)) {
                    if (isUtf8) {
                        var high = charCode;
                        var low = chars.charCodeAt(++charIndex);
                        byteCount += this.utf8Len(this.toCodepoint(high, low));
                    }
                    else {
                        byteCount += 4;
                        ++i;
                    }
                }
                else {
                    if (isUtf8) {
                        byteCount += this.utf8Len(charCode);
                    }
                    else {
                        byteCount += 2;
                    }
                }
                if (isUtf8) {
                    charIndex++;
                }
            }
            return byteCount;
        }
        else {
            byteCount = charCount;
            return byteCount;
        }
    };
    Encoding.prototype.getBytes = function (s, charIndex, charCount) {
        validateNullOrUndefined(s, 'string');
        validateNullOrUndefined(charIndex, 'charIndex');
        validateNullOrUndefined(charCount, 'charCount');
        if (charIndex < 0 || charCount < 0) {
            throw new RangeError('Argument Out Of Range Exception: charIndex or charCount is less than zero');
        }
        if (s.length - charIndex < charCount) {
            throw new RangeError('Argument Out Of Range Exception: charIndex and charCount do not denote a valid range in string');
        }
        var bytes;
        if (s === '') {
            bytes = new ArrayBuffer(0);
            return bytes;
        }
        if (this.type === null || this.type === undefined) {
            this.type = 'Ansi';
        }
        var byteCount = this.getByteCountInternal(s, charIndex, charCount);
        switch (this.type) {
            case 'Utf8':
                bytes = this.getBytesOfUtf8Encoding(byteCount, s, charIndex, charCount);
                return bytes;
            case 'Unicode':
                bytes = this.getBytesOfUnicodeEncoding(byteCount, s, charIndex, charCount);
                return bytes;
            default:
                bytes = this.getBytesOfAnsiEncoding(byteCount, s, charIndex, charCount);
                return bytes;
        }
    };
    Encoding.prototype.getString = function (bytes, index, count) {
        validateNullOrUndefined(bytes, 'bytes');
        validateNullOrUndefined(index, 'index');
        validateNullOrUndefined(count, 'count');
        if (index < 0 || count < 0) {
            throw new RangeError('Argument Out Of Range Exception: index or count is less than zero');
        }
        if (bytes.byteLength - index < count) {
            throw new RangeError('Argument Out Of Range Exception: index and count do not denote a valid range in bytes');
        }
        if (bytes.byteLength === 0 || count === 0) {
            return '';
        }
        if (this.type === null || this.type === undefined) {
            this.type = 'Ansi';
        }
        var out = '';
        var byteCal = new Uint8Array(bytes);
        switch (this.type) {
            case 'Utf8':
                var s = this.getStringOfUtf8Encoding(byteCal, index, count);
                return s;
            case 'Unicode':
                var byteUnicode = new Uint16Array(bytes);
                out = this.getStringofUnicodeEncoding(byteUnicode, index, count);
                return out;
            default:
                var j = index;
                for (var i = 0; i < count; i++) {
                    var c = byteCal[j];
                    out += String.fromCharCode(c);
                    j++;
                }
                return out;
        }
    };
    Encoding.prototype.getBytesOfAnsiEncoding = function (byteCount, s, charIndex, charCount) {
        var bytes = new ArrayBuffer(byteCount);
        var bufview = new Uint8Array(bytes);
        var k = 0;
        for (var i = 0; i < charCount; i++) {
            var charcode = s.charCodeAt(charIndex++);
            if (charcode < 0x800) {
                bufview[k] = charcode;
            }
            else {
                bufview[k] = 63;
            }
            k++;
        }
        return bytes;
    };
    Encoding.prototype.getBytesOfUtf8Encoding = function (byteCount, s, charIndex, charCount) {
        var bytes = new ArrayBuffer(byteCount);
        var uint = new Uint8Array(bytes);
        var index = charIndex;
        var j = 0;
        for (var i = 0; i < charCount; i++) {
            var charcode = s.charCodeAt(index);
            if (charcode <= 0x7F) {
                uint[j] = charcode;
            }
            else if (charcode < 0x800) {
                uint[j] = 0xc0 | (charcode >> 6);
                uint[++j] = 0x80 | (charcode & 0x3f);
            }
            else if ((charcode < 0xd800 || charcode >= 0xe000)) {
                uint[j] = 0xe0 | (charcode >> 12);
                uint[++j] = 0x80 | ((charcode >> 6) & 0x3f);
                uint[++j] = 0x80 | (charcode & 0x3f);
            }
            else {
                uint[j] = 0xef;
                uint[++j] = 0xbf;
                uint[++j] = 0xbd;
            }
            ++j;
            ++index;
        }
        return bytes;
    };
    Encoding.prototype.getBytesOfUnicodeEncoding = function (byteCount, s, charIndex, charCount) {
        var bytes = new ArrayBuffer(byteCount);
        var uint16 = new Uint16Array(bytes);
        for (var i = 0; i < charCount; i++) {
            var charcode = s.charCodeAt(i);
            uint16[i] = charcode;
        }
        return bytes;
    };
    Encoding.prototype.getStringOfUtf8Encoding = function (byteCal, index, count) {
        var j = 0;
        var i = index;
        var s = '';
        for (j; j < count; j++) {
            var c = byteCal[i++];
            while (i > byteCal.length) {
                return s;
            }
            if (c > 127) {
                if (c > 191 && c < 224 && i < count) {
                    c = (c & 31) << 6 | byteCal[i] & 63;
                }
                else if (c > 223 && c < 240 && i < byteCal.byteLength) {
                    c = (c & 15) << 12 | (byteCal[i] & 63) << 6 | byteCal[++i] & 63;
                }
                else if (c > 239 && c < 248 && i < byteCal.byteLength) {
                    c = (c & 7) << 18 | (byteCal[i] & 63) << 12 | (byteCal[++i] & 63) << 6 | byteCal[++i] & 63;
                }
                ++i;
            }
            s += String.fromCharCode(c);
        }
        return s;
    };
    Encoding.prototype.getStringofUnicodeEncoding = function (byteUni, index, count) {
        if (count > byteUni.length) {
            throw new RangeError('ArgumentOutOfRange_Count');
        }
        var byte16 = new Uint16Array(count);
        var out = '';
        for (var i = 0; i < count && i < byteUni.length; i++) {
            byte16[i] = byteUni[index++];
        }
        out = String.fromCharCode.apply(null, byte16);
        return out;
    };
    Encoding.prototype.destroy = function () {
        this.emitBOM = undefined;
        this.encodingType = undefined;
    };
    return Encoding;
}());

function validateNullOrUndefined(value, message) {
    if (value === null || value === undefined) {
        throw new Error('ArgumentException: ' + message + ' cannot be null or undefined');
    }
}


/***/ }),
/* 140 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Save; });
var Save = (function () {
    function Save() {
    }
    Save.save = function (fileName, buffer) {
        if (fileName === null || fileName === undefined || fileName === '') {
            throw new Error('ArgumentException: fileName cannot be undefined, null or empty');
        }
        var extension = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length);
        var mimeType = this.getMimeType(extension);
        if (mimeType !== '') {
            buffer = new Blob([buffer], { type: mimeType });
        }
        if (this.isMicrosoftBrowser) {
            navigator.msSaveBlob(buffer, fileName);
        }
        else {
            var downloadLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');
            this.saveInternal(fileName, extension, buffer, downloadLink, 'download' in downloadLink);
        }
    };
    Save.saveInternal = function (fileName, extension, buffer, downloadLink, hasDownloadAttribute) {
        if (hasDownloadAttribute) {
            downloadLink.download = fileName;
            var dataUrl_1 = window.URL.createObjectURL(buffer);
            downloadLink.href = dataUrl_1;
            var event_1 = document.createEvent('MouseEvent');
            event_1.initEvent('click', true, true);
            downloadLink.dispatchEvent(event_1);
            setTimeout(function () {
                window.URL.revokeObjectURL(dataUrl_1);
                dataUrl_1 = undefined;
            });
        }
        else {
            if (extension !== 'docx' && extension !== 'xlsx') {
                var url = window.URL.createObjectURL(buffer);
                var isPopupBlocked = window.open(url, '_blank');
                if (!isPopupBlocked) {
                    window.location.href = url;
                }
            }
            else {
                var reader_1 = new FileReader();
                reader_1.onloadend = function () {
                    var isPopupBlocked = window.open(reader_1.result, '_blank');
                    if (!isPopupBlocked) {
                        window.location.href = reader_1.result;
                    }
                };
                reader_1.readAsDataURL(buffer);
            }
        }
    };
    Save.getMimeType = function (extension) {
        var mimeType = '';
        switch (extension) {
            case 'html':
                mimeType = 'text/html';
                break;
            case 'pdf':
                mimeType = 'application/pdf';
                break;
            case 'docx':
                mimeType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';
                break;
            case 'xlsx':
                mimeType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';
                break;
            case 'txt':
                mimeType = 'text/plain';
                break;
        }
        return mimeType;
    };
    return Save;
}());



/***/ }),
/* 141 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return cssClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ListBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_data__ = __webpack_require__(14);




var cssClass = {
    li: 'e-list-item',
    ul: 'e-list-parent e-ul',
    group: 'e-list-group-item',
    icon: 'e-list-icon',
    text: 'e-list-text',
    check: 'e-list-check',
    checked: 'e-checked',
    selected: 'e-selected',
    expanded: 'e-expanded',
    textContent: 'e-text-content',
    hasChild: 'e-has-child',
    level: 'e-level',
    url: 'e-list-url',
    collapsible: 'e-icon-collapsible',
    disabled: 'e-disabled',
    image: 'e-list-img',
    iconWrapper: 'e-icon-wrapper'
};
var ListBase;
(function (ListBase) {
    ListBase.defaultMappedFields = {
        id: 'id',
        text: 'text',
        url: 'url',
        value: 'value',
        isChecked: 'isChecked',
        enabled: 'enabled',
        expanded: 'expanded',
        selected: 'selected',
        iconCss: 'iconCss',
        child: 'child',
        isVisible: 'isVisible',
        hasChildren: 'hasChildren',
        tooltip: 'tooltip',
        htmlAttributes: 'htmlAttributes',
        urlAttributes: 'urlAttributes',
        imageAttributes: 'imageAttributes',
        imageUrl: 'imageUrl',
        groupBy: null
    };
    var defaultAriaAttributes = {
        level: 1,
        listRole: 'presentation',
        itemRole: 'presentation',
        groupItemRole: 'group',
        itemText: 'list-item',
        wrapperRole: 'presentation'
    };
    var defaultListBaseOptions = {
        showCheckBox: false,
        showIcon: false,
        expandCollapse: false,
        fields: ListBase.defaultMappedFields,
        ariaAttributes: defaultAriaAttributes,
        listClass: '',
        itemClass: '',
        processSubChild: false,
        sortOrder: 'None',
        template: null,
        groupTemplate: null,
        expandIconClass: 'e-icon-collapsible',
        moduleName: 'list',
        expandIconPosition: 'right'
    };
    function createList(dataSource, options, isSingleLevel) {
        var curOpt = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultListBaseOptions, options);
        var ariaAttributes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultAriaAttributes, curOpt.ariaAttributes);
        if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {
            return createListFromArray(dataSource, isSingleLevel, options);
        }
        else {
            return createListFromJson(dataSource, options, ariaAttributes.level, isSingleLevel);
        }
    }
    ListBase.createList = createList;
    function createListFromArray(dataSource, isSingleLevel, options) {
        var subChild = createListItemFromArray(dataSource, isSingleLevel, options);
        return generateUL(subChild, null, options);
    }
    ListBase.createListFromArray = createListFromArray;
    function createListItemFromArray(dataSource, isSingleLevel, options) {
        var subChild = [];
        var curOpt = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultListBaseOptions, options);
        cssClass = getModuleClass(curOpt.moduleName);
        var id = genUID();
        for (var i = 0; i < dataSource.length; i++) {
            var li = void 0;
            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {
                var curData = {
                    dataSource: dataSource,
                    curData: dataSource[i],
                    text: dataSource[i],
                    options: curOpt
                };
                curOpt.itemCreating(curData);
            }
            if (isSingleLevel) {
                li = generateSingleLevelLI(dataSource[i], null, null, [], null, id, i, options);
            }
            else {
                li = generateLI(dataSource[i], null, null, options);
            }
            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {
                var curData = {
                    dataSource: dataSource,
                    curData: dataSource[i],
                    text: dataSource[i],
                    item: li,
                    options: curOpt
                };
                curOpt.itemCreated(curData);
            }
            subChild.push(li);
        }
        return subChild;
    }
    ListBase.createListItemFromArray = createListItemFromArray;
    function createListItemFromJson(dataSource, options, level, isSingleLevel) {
        var curOpt = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultListBaseOptions, options);
        cssClass = getModuleClass(curOpt.moduleName);
        var fields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, ListBase.defaultMappedFields, curOpt.fields);
        var ariaAttributes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultAriaAttributes, curOpt.ariaAttributes);
        var id;
        if (level) {
            ariaAttributes.level = level;
        }
        var child = [];
        var li;
        if (Object.keys(dataSource).length && !dataSource[0].hasOwnProperty(fields.id)) {
            id = genUID();
        }
        for (var i = 0; i < dataSource.length; i++) {
            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {
                var curData = {
                    dataSource: dataSource,
                    curData: dataSource[i],
                    text: dataSource[i][fields.text],
                    options: curOpt,
                    fields: fields
                };
                curOpt.itemCreating(curData);
            }
            var curItem = dataSource[i];
            if (Object.keys(dataSource).length && dataSource[i].hasOwnProperty(fields.id)
                && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(dataSource[i][fields.id])) {
                id = dataSource[i].id;
            }
            var innerEle = [];
            if (curOpt.showCheckBox) {
                innerEle.push(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('input', { className: cssClass.check, attrs: { type: 'checkbox' } }));
            }
            if (isSingleLevel === true) {
                if (curOpt.showIcon && curItem.hasOwnProperty(fields.iconCss)) {
                    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(curItem[fields.iconCss])) {
                        innerEle.push(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: cssClass.icon + ' ' + curItem[fields.iconCss] }));
                    }
                }
                li = generateSingleLevelLI(curItem, fields, curOpt.itemClass, innerEle, (curItem.hasOwnProperty('isHeader') &&
                    curItem.isHeader) ? true : false, id, i, options);
            }
            else {
                li = generateLI(curItem, fields, curOpt.itemClass, options);
                li.classList.add(cssClass.level + '-' + ariaAttributes.level);
                li.setAttribute('aria-level', ariaAttributes.level.toString());
                if (curItem.hasOwnProperty(fields.tooltip)) {
                    li.setAttribute('title', curItem[fields.tooltip]);
                }
                if (curItem.hasOwnProperty(fields.htmlAttributes) && curItem[fields.htmlAttributes]) {
                    setAttribute(li, curItem[fields.htmlAttributes]);
                }
                if (curItem.hasOwnProperty(fields.enabled) && curItem[fields.enabled] === false) {
                    li.classList.add(cssClass.disabled);
                }
                if (curItem.hasOwnProperty(fields.isVisible) && curItem[fields.isVisible] === false) {
                    li.style.display = 'none';
                }
                if (curItem.hasOwnProperty(fields.imageUrl) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(curItem[fields.imageUrl])) {
                    var attr = { src: curItem[fields.imageUrl] };
                    if (curItem.hasOwnProperty(fields.imageUrl)) {
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["merge"])(attr, curItem[fields.imageAttributes]);
                    }
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["prepend"])([__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('img', { className: cssClass.image, attrs: attr })], li.firstElementChild);
                }
                if (curOpt.showIcon && curItem.hasOwnProperty(fields.iconCss) && !curOpt.template) {
                    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(curItem[fields.iconCss])) {
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["prepend"])([__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: cssClass.icon + ' ' + curItem[fields.iconCss] })], li.firstElementChild);
                    }
                }
                if (innerEle.length) {
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["prepend"])(innerEle, li.firstElementChild);
                }
                processSubChild(curItem, fields, dataSource, curOpt, li, ariaAttributes.level);
            }
            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {
                var curData = {
                    dataSource: dataSource,
                    curData: dataSource[i],
                    text: dataSource[i][fields.text],
                    item: li,
                    options: curOpt,
                    fields: fields
                };
                curOpt.itemCreated(curData);
            }
            child.push(li);
        }
        return child;
    }
    ListBase.createListItemFromJson = createListItemFromJson;
    function createListFromJson(dataSource, options, level, isSingleLevel) {
        var curOpt = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultListBaseOptions, options);
        var li = createListItemFromJson(dataSource, options, level, isSingleLevel);
        return generateUL(li, curOpt.listClass, options);
    }
    ListBase.createListFromJson = createListFromJson;
    function getSiblingLI(elementArray, element, isPrevious) {
        cssClass = getModuleClass(defaultListBaseOptions.moduleName);
        if (!elementArray || !elementArray.length) {
            return void 0;
        }
        var siblingLI;
        var liIndex;
        var liCollections = Array.prototype.slice.call(elementArray);
        if (element) {
            liIndex = indexOf(element, liCollections);
        }
        else {
            liIndex = (isPrevious === true ? liCollections.length : -1);
        }
        siblingLI = liCollections[liIndex + (isPrevious === true ? -1 : 1)];
        while (siblingLI && (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isVisible"])(siblingLI) || siblingLI.classList.contains(cssClass.disabled))) {
            liIndex = liIndex + (isPrevious === true ? -1 : 1);
            siblingLI = liCollections[liIndex];
        }
        return siblingLI;
    }
    ListBase.getSiblingLI = getSiblingLI;
    function indexOf(item, elementArray) {
        if (!elementArray || !item) {
            return void 0;
        }
        else {
            var liCollections = elementArray;
            liCollections = Array.prototype.slice.call(elementArray);
            return liCollections.indexOf(item);
        }
    }
    ListBase.indexOf = indexOf;
    function groupDataSource(dataSource, fields, sortOrder) {
        if (sortOrder === void 0) { sortOrder = 'None'; }
        var cusQuery = new __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_data__["Query"]().group(fields.groupBy);
        cusQuery = addSorting(sortOrder, 'key', cusQuery);
        var ds = getDataSource(dataSource, cusQuery);
        dataSource = [];
        for (var j = 0; j < ds.length; j++) {
            var itemObj = ds[j].items;
            var grpItem = {};
            var hdr = 'isHeader';
            grpItem[fields.text] = ds[j].key;
            grpItem[hdr] = true;
            grpItem.items = itemObj;
            dataSource.push(grpItem);
            for (var k = 0; k < itemObj.length; k++) {
                dataSource.push(itemObj[k]);
            }
        }
        return dataSource;
    }
    ListBase.groupDataSource = groupDataSource;
    function addSorting(sortOrder, sortBy, query) {
        if (query === void 0) { query = new __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_data__["Query"](); }
        if (sortOrder === 'Ascending') {
            query.sortBy(sortBy, 'ascending', true);
        }
        else if (sortOrder === 'Descending') {
            query.sortBy(sortBy, 'descending', true);
        }
        return query;
    }
    ListBase.addSorting = addSorting;
    function getDataSource(dataSource, query) {
        return new __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_data__["DataManager"](dataSource)
            .executeLocal(query);
    }
    ListBase.getDataSource = getDataSource;
    function createJsonFromElement(element, options) {
        var curOpt = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultListBaseOptions, options);
        var fields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, ListBase.defaultMappedFields, curOpt.fields);
        var curEle = element.cloneNode(true);
        var jsonAr = [];
        curEle.classList.add('json-parent');
        var childs = curEle.querySelectorAll('.json-parent>li');
        curEle.classList.remove('json-parent');
        var _loop_1 = function (i) {
            var li = childs[i];
            var anchor = li.querySelector('a');
            var ul = li.querySelector('ul');
            var json = {};
            var childNodes = anchor ? anchor.childNodes : li.childNodes;
            Object.keys(childNodes).forEach(function (key) {
                if (!(childNodes[Number(key)]).hasChildNodes()) {
                    json[fields.text] = childNodes[Number(key)].textContent;
                }
            });
            json[fields.id] = genUID();
            var attributes_1 = getAllAttributes(li);
            if (Object.keys(attributes_1).length) {
                json[fields.htmlAttributes] = attributes_1;
            }
            if (anchor) {
                attributes_1 = getAllAttributes(anchor);
                if (Object.keys(attributes_1).length) {
                    json[fields.urlAttributes] = attributes_1;
                }
            }
            if (ul) {
                json[fields.child] = createJsonFromElement(ul, options);
            }
            jsonAr.push(json);
        };
        for (var i = 0; i < childs.length; i++) {
            _loop_1(i);
        }
        return jsonAr;
    }
    ListBase.createJsonFromElement = createJsonFromElement;
    function setAttribute(element, elementAttributes) {
        var attr = {};
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["merge"])(attr, elementAttributes);
        if (attr.class) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([element], attr.class.split(' '));
            delete attr.class;
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(element, attr);
    }
    function getAllAttributes(element) {
        var attributes = {};
        var attr = element.attributes;
        for (var index = 0; index < attr.length; index++) {
            attributes[attr[index].nodeName] = attr[index].nodeValue;
        }
        return attributes;
    }
    function renderContentTemplate(template, dataSource, fields) {
        cssClass = getModuleClass(defaultListBaseOptions.moduleName);
        var ulElement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('ul', { className: cssClass.ul, attrs: { role: 'presentation' } });
        var compiledString = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["compile"])(template);
        var liCollection = [];
        var id = genUID();
        for (var i = 0; i < dataSource.length; i++) {
            var item = dataSource[i];
            var isHeader = item.isHeader;
            var li = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('li', {
                id: id + '-' + i,
                className: isHeader ? cssClass.group : cssClass.li, attrs: { role: 'presentation' }
            });
            if (isHeader) {
                li.innerText = item[fields.text];
            }
            else {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["append"])(compiledString(item), li);
                var value = item[fields.value];
                li.setAttribute('data-value', value);
                li.setAttribute('role', 'option');
            }
            liCollection.push(li);
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["append"])(liCollection, ulElement);
        return ulElement;
    }
    ListBase.renderContentTemplate = renderContentTemplate;
    function renderGroupTemplate(groupTemplate, groupDataSource, fields, headerItems) {
        var compiledString = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["compile"])(groupTemplate);
        var category = fields.groupBy;
        var headerData = {};
        for (var _i = 0, headerItems_1 = headerItems; _i < headerItems_1.length; _i++) {
            var header = headerItems_1[_i];
            headerData[category] = header.textContent;
            header.innerHTML = '';
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["append"])(compiledString(headerData), header);
        }
        return headerItems;
    }
    ListBase.renderGroupTemplate = renderGroupTemplate;
    function genUID() {
        return Math.floor((1 + Math.random()) * 0x10000)
            .toString(16)
            .substring(1);
    }
    function processSubChild(curItem, fields, ds, options, element, level) {
        var subDS = curItem[fields.child] || [];
        var hasChildren = curItem[fields.hasChildren];
        if (subDS.length) {
            hasChildren = true;
            element.classList.add(cssClass.hasChild);
            if (options.processSubChild) {
                var subLi = createListFromJson(subDS, options, ++level);
                element.appendChild(subLi);
            }
        }
        if (!!options.expandCollapse && hasChildren && !options.template) {
            if (element.firstElementChild.classList.contains(cssClass.textContent)) {
                element.firstElementChild.classList.add(cssClass.iconWrapper);
            }
            var expandElement = options.expandIconPosition === 'left' ? __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["prepend"] : __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["append"];
            expandElement([__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: 'e-icons ' + options.expandIconClass })], element.querySelector('.' + cssClass.textContent));
        }
    }
    function generateSingleLevelLI(item, fields, className, innerElements, grpLI, id, index, options) {
        var curOpt = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultListBaseOptions, options);
        var ariaAttributes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultAriaAttributes, curOpt.ariaAttributes);
        var text = item;
        var value = item;
        var dataSource;
        if (typeof item !== 'string' && typeof item !== 'number') {
            dataSource = item;
            text = item[fields.text] || '';
            value = item[fields.value];
        }
        var elementID;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(dataSource) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(dataSource[fields.id])
            && dataSource[fields.id] !== '') {
            elementID = id;
        }
        else {
            elementID = id + '-' + index;
        }
        var li = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('li', {
            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(className) ? '' : className),
            id: elementID, attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?
                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})
        });
        if (dataSource && dataSource.hasOwnProperty(fields.enabled) && dataSource[fields.enabled].toString() === 'false') {
            li.classList.add(cssClass.disabled);
        }
        if (grpLI) {
            li.innerText = text;
        }
        else {
            if (value) {
                li.setAttribute('data-value', value);
            }
            li.setAttribute('role', 'option');
            if (dataSource && dataSource.hasOwnProperty(fields.htmlAttributes) && dataSource[fields.htmlAttributes]) {
                setAttribute(li, dataSource[fields.htmlAttributes]);
            }
            if (innerElements.length) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["append"])(innerElements, li);
            }
            if (dataSource && dataSource.hasOwnProperty(fields.url) && dataSource[fields.url]) {
                li.appendChild(anchorTag(dataSource, fields, text));
            }
            else {
                li.appendChild(document.createTextNode(text));
            }
        }
        return li;
    }
    function getModuleClass(moduleName) {
        var moduleClass;
        return moduleClass = {
            li: "e-" + moduleName + "-item",
            ul: "e-" + moduleName + "-parent e-ul",
            group: "e-" + moduleName + "-group-item",
            icon: "e-" + moduleName + "-icon",
            text: "e-" + moduleName + "-text",
            check: "e-" + moduleName + "-check",
            checked: 'e-checked',
            selected: 'e-selected',
            expanded: 'e-expanded',
            textContent: 'e-text-content',
            hasChild: 'e-has-child',
            level: 'e-level',
            url: "e-" + moduleName + "-url",
            collapsible: 'e-icon-collapsible',
            disabled: 'e-disabled',
            image: "e-" + moduleName + "-img",
            iconWrapper: 'e-icon-wrapper'
        };
    }
    function anchorTag(dataSource, fields, text) {
        var attr = { href: dataSource[fields.url] };
        if (dataSource.hasOwnProperty(fields.urlAttributes) && dataSource[fields.urlAttributes]) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["merge"])(attr, dataSource[fields.urlAttributes]);
        }
        var anchorTag = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('a', { className: cssClass.text + ' ' + cssClass.url, innerHTML: text });
        setAttribute(anchorTag, attr);
        return anchorTag;
    }
    function generateLI(item, fields, className, options) {
        var curOpt = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultListBaseOptions, options);
        var ariaAttributes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultAriaAttributes, curOpt.ariaAttributes);
        var text = item;
        var uID;
        var grpLI;
        var dataSource;
        if (typeof item !== 'string') {
            dataSource = item;
            text = item[fields.text] || '';
            uID = item[fields.id];
            grpLI = (item.hasOwnProperty('isHeader') && item.isHeader)
                ? true : false;
        }
        var li = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('li', {
            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(className) ? '' : className),
            attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?
                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})
        });
        if (uID) {
            li.setAttribute('data-uid', uID);
        }
        if (grpLI && options && options.groupTemplate) {
            var compiledString = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["compile"])(options.groupTemplate);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["append"])(compiledString(item), li);
        }
        else if (!grpLI && options && options.template) {
            var compiledString = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["compile"])(options.template);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["append"])(compiledString(item), li);
        }
        else {
            var innerDiv = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: cssClass.textContent,
                attrs: (ariaAttributes.wrapperRole !== '' ? { role: ariaAttributes.wrapperRole } : {}) });
            if (dataSource && dataSource.hasOwnProperty(fields.url) && dataSource[fields.url]) {
                innerDiv.appendChild(anchorTag(dataSource, fields, text));
            }
            else {
                innerDiv.appendChild(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: cssClass.text, innerHTML: text,
                    attrs: (ariaAttributes.itemText !== '' ? { role: ariaAttributes.itemText } : {}) }));
            }
            li.appendChild(innerDiv);
        }
        return li;
    }
    function generateUL(liElement, className, options) {
        var curOpt = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultListBaseOptions, options);
        var ariaAttributes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultAriaAttributes, curOpt.ariaAttributes);
        cssClass = getModuleClass(curOpt.moduleName);
        var ulElement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('ul', {
            className: cssClass.ul + ' ' + (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(className) ? '' : className),
            attrs: (ariaAttributes.listRole !== '' ? { role: ariaAttributes.listRole } : {})
        });
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["append"])(liElement, ulElement);
        return ulElement;
    }
    ListBase.generateUL = generateUL;
    function generateIcon(liElement, className, options) {
        var curOpt = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultListBaseOptions, options);
        var ariaAttributes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])({}, defaultAriaAttributes, curOpt.ariaAttributes);
        cssClass = getModuleClass(curOpt.moduleName);
        var expandElement = curOpt.expandIconPosition === 'left' ? __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["prepend"] : __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["append"];
        expandElement([__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: 'e-icons ' + curOpt.expandIconClass + ' ' +
                    (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(className) ? '' : className) })], liElement.querySelector('.' + cssClass.textContent));
        return liElement;
    }
    ListBase.generateIcon = generateIcon;
})(ListBase || (ListBase = {}));


/***/ }),
/* 142 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HScroll; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var CLS_ROOT = 'e-hscroll';
var CLS_RTL = 'e-rtl';
var CLS_DISABLE = 'e-overlay';
var CLS_HSCROLLBAR = 'e-hscroll-bar';
var CLS_HSCROLLCON = 'e-hscroll-content';
var CLS_NAVARROW = 'e-nav-arrow';
var CLS_NAVRIGHTARROW = 'e-nav-right-arrow';
var CLS_NAVLEFTARROW = 'e-nav-left-arrow';
var CLS_HSCROLLNAV = 'e-scroll-nav';
var CLS_HSCROLLNAVRIGHT = 'e-scroll-right-nav';
var CLS_HSCROLLNAVLEFT = 'e-scroll-left-nav';
var CLS_DEVICE = 'e-scroll-device';
var HScroll = (function (_super) {
    __extends(HScroll, _super);
    function HScroll(options, element) {
        return _super.call(this, options, element) || this;
    }
    HScroll.prototype.preRender = function () {
        this.browser = __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].info.name;
        this.browserCheck = this.browser === 'mozilla';
        this.isDevice = __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice;
        var element = this.element;
        this.ieCheck = this.browser === 'edge' || this.browser === 'msie';
        this.initialize();
        if (element.id === '') {
            element.id = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getUniqueID"])('hscroll');
            this.uniqueId = true;
        }
        element.style.display = 'block';
        if (this.enableRtl) {
            element.classList.add(CLS_RTL);
        }
    };
    HScroll.prototype.render = function () {
        this.touchModule = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Touch"](this.element, { scroll: this.touchHandler.bind(this) });
        if (!this.isDevice) {
            this.createNavIcon(this.element);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.scrollEle, 'scroll', this.scrollHandler, this);
        }
        else {
            this.element.classList.add(CLS_DEVICE);
        }
    };
    HScroll.prototype.initialize = function () {
        var scrollEle = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: CLS_HSCROLLCON });
        var scrollDiv = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: CLS_HSCROLLBAR });
        scrollDiv.setAttribute('tabindex', '-1');
        var ele = this.element;
        var innerEle = [].slice.call(ele.children);
        for (var _i = 0, innerEle_1 = innerEle; _i < innerEle_1.length; _i++) {
            var ele_1 = innerEle_1[_i];
            scrollEle.appendChild(ele_1);
        }
        scrollDiv.appendChild(scrollEle);
        ele.appendChild(scrollDiv);
        scrollDiv.style.overflowX = 'hidden';
        this.scrollEle = scrollDiv;
        this.scrollItems = scrollEle;
    };
    HScroll.prototype.getPersistData = function () {
        var keyEntity = ['scrollStep'];
        return this.addOnPersist(keyEntity);
    };
    HScroll.prototype.getModuleName = function () {
        return 'hScroll';
    };
    HScroll.prototype.destroy = function () {
        var ele = this.element;
        ele.style.display = '';
        ele.classList.remove(CLS_ROOT);
        var nav = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('#' + ele.id + '_nav.e-' + ele.id + '_nav');
        for (var _i = 0, _a = [].slice.call(this.scrollItems.children); _i < _a.length; _i++) {
            var elem = _a[_i];
            ele.appendChild(elem);
        }
        if (this.uniqueId) {
            this.element.removeAttribute('id');
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.scrollEle);
        if (nav.length > 0) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(nav[0]);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(nav[1]);
        }
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.scrollEle, 'scroll', this.scrollHandler);
        this.touchModule.destroy();
        this.touchModule = null;
        _super.prototype.destroy.call(this);
    };
    HScroll.prototype.createNavIcon = function (element) {
        var id = element.id.concat('_nav');
        var clsRight = 'e-' + element.id.concat('_nav ' + CLS_HSCROLLNAV + ' ' + CLS_HSCROLLNAVRIGHT);
        var nav = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { id: id, className: clsRight });
        nav.setAttribute('aria-disabled', 'false');
        var navItem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: CLS_NAVRIGHTARROW + ' ' + CLS_NAVARROW + ' e-icons' });
        var clsLeft = 'e-' + element.id.concat('_nav ' + CLS_HSCROLLNAV + ' ' + CLS_HSCROLLNAVLEFT);
        var navEle = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { id: id, className: clsLeft + ' ' + CLS_DISABLE });
        navEle.setAttribute('aria-disabled', 'true');
        var navLeftItem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: CLS_NAVLEFTARROW + ' ' + CLS_NAVARROW + ' e-icons' });
        navEle.appendChild(navLeftItem);
        nav.appendChild(navItem);
        nav.setAttribute('tabindex', '0');
        element.appendChild(nav);
        element.insertBefore(navEle, element.firstChild);
        if (this.ieCheck) {
            nav.classList.add('e-ie-align');
            navEle.classList.add('e-ie-align');
        }
        this.eventBinding([nav, navEle]);
    };
    HScroll.prototype.onKeyPress = function (e) {
        var _this = this;
        if (e.key === 'Enter') {
            var timeoutFun_1 = function () {
                _this.keyTimeout = true;
                _this.eleScrolling(10, e.target);
            };
            this.keyTimer = window.setTimeout(function () {
                timeoutFun_1();
            }, 100);
        }
    };
    HScroll.prototype.onKeyUp = function (e) {
        if (e.key !== 'Enter') {
            return;
        }
        if (this.keyTimeout) {
            this.keyTimeout = false;
        }
        else {
            e.target.click();
        }
        clearTimeout(this.keyTimer);
    };
    HScroll.prototype.eventBinding = function (ele) {
        var _this = this;
        ele.forEach(function (el) {
            new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Touch"](el, { tapHold: _this.tabHoldHandler.bind(_this), tapHoldThreshold: 500 });
            el.addEventListener('keydown', _this.onKeyPress.bind(_this));
            el.addEventListener('keyup', _this.onKeyUp.bind(_this));
            el.addEventListener('mouseup', _this.repeatScroll.bind(_this));
            el.addEventListener('touchend', _this.repeatScroll.bind(_this));
            el.addEventListener('contextmenu', function (e) {
                e.preventDefault();
            });
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(el, 'click', _this.clickEventHandler, _this);
        });
    };
    HScroll.prototype.repeatScroll = function () {
        clearInterval(this.timeout);
    };
    HScroll.prototype.tabHoldHandler = function (e) {
        var _this = this;
        var trgt = e.originalEvent.target;
        trgt = this.contains(trgt, CLS_HSCROLLNAV) ? trgt.firstElementChild : trgt;
        var scrollDis = 10;
        var timeoutFun = function () {
            _this.eleScrolling(scrollDis, trgt);
        };
        this.timeout = window.setInterval(function () {
            timeoutFun();
        }, 50);
    };
    HScroll.prototype.contains = function (ele, className) {
        return ele.classList.contains(className);
    };
    HScroll.prototype.eleScrolling = function (scrollDis, trgt) {
        var element = this.scrollEle;
        var rootEle = this.element;
        var classList = trgt.classList;
        if (classList.contains(CLS_HSCROLLNAV)) {
            classList = trgt.querySelector('.' + CLS_NAVARROW).classList;
        }
        if (this.contains(rootEle, CLS_RTL) && this.browserCheck) {
            scrollDis = -scrollDis;
        }
        var scrlLeft = element.scrollLeft;
        if ((!this.contains(rootEle, CLS_RTL) || this.browserCheck) || this.ieCheck) {
            if (classList.contains(CLS_NAVRIGHTARROW)) {
                element.scrollLeft = scrlLeft + scrollDis;
            }
            else {
                element.scrollLeft = scrlLeft - scrollDis;
            }
        }
        else {
            if (classList.contains(CLS_NAVLEFTARROW)) {
                element.scrollLeft = scrlLeft + scrollDis;
            }
            else {
                element.scrollLeft = scrlLeft - scrollDis;
            }
        }
    };
    HScroll.prototype.clickEventHandler = function (e) {
        this.eleScrolling(this.scrollStep, e.target);
    };
    HScroll.prototype.touchHandler = function (e) {
        var ele = this.scrollEle;
        var distance;
        distance = e.distanceX;
        if ((this.ieCheck) && this.contains(this.element, CLS_RTL)) {
            distance = -distance;
        }
        if (e.scrollDirection === 'Left') {
            ele.scrollLeft = ele.scrollLeft + distance;
        }
        else if (e.scrollDirection === 'Right') {
            ele.scrollLeft = ele.scrollLeft - distance;
        }
    };
    HScroll.prototype.arrowDisabling = function (addDisable, removeDisable) {
        addDisable.classList.add(CLS_DISABLE);
        addDisable.setAttribute('aria-disabled', 'true');
        addDisable.removeAttribute('tabindex');
        clearInterval(this.timeout);
        removeDisable.classList.remove(CLS_DISABLE);
        removeDisable.setAttribute('aria-disabled', 'false');
        removeDisable.setAttribute('tabindex', '0');
        this.repeatScroll();
    };
    HScroll.prototype.scrollHandler = function (e) {
        var target = e.target;
        var width = target.offsetWidth;
        var rootEle = this.element;
        var navLeftEle = this.element.querySelector('.' + CLS_HSCROLLNAVLEFT);
        var navRightEle = this.element.querySelector('.' + CLS_HSCROLLNAVRIGHT);
        var scrollLeft = target.scrollLeft;
        if (scrollLeft <= 0) {
            scrollLeft = -scrollLeft;
        }
        if (scrollLeft === 0) {
            if ((!this.contains(rootEle, CLS_RTL) || this.browserCheck) || this.ieCheck) {
                this.arrowDisabling(navLeftEle, navRightEle);
            }
            else {
                this.arrowDisabling(navRightEle, navLeftEle);
            }
        }
        else if (Math.ceil(width + scrollLeft + .1) >= target.scrollWidth) {
            if ((!this.contains(rootEle, CLS_RTL) || this.browserCheck) || this.ieCheck) {
                this.arrowDisabling(navRightEle, navLeftEle);
            }
            else {
                this.arrowDisabling(navLeftEle, navRightEle);
            }
        }
        else {
            var disEle = this.element.querySelector('.' + CLS_DISABLE);
            if (disEle) {
                disEle.classList.remove(CLS_DISABLE);
                disEle.setAttribute('aria-disabled', 'false');
                disEle.setAttribute('tabindex', '0');
            }
        }
    };
    HScroll.prototype.onPropertyChanged = function (newProp, oldProp) {
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'scrollStep':
                    break;
                case 'enableRtl':
                    newProp.enableRtl ? this.element.classList.add(CLS_RTL) : this.element.classList.remove(CLS_RTL);
                    break;
            }
        }
    };
    return HScroll;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Component"]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(40)
], HScroll.prototype, "scrollStep", void 0);
HScroll = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], HScroll);



/***/ }),
/* 143 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfAction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_reference__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__input_output_pdf_dictionary_properties__ = __webpack_require__(6);




var PdfAction = (function () {
    function PdfAction() {
        this.action = null;
        this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_3__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        this.initialize();
    }
    Object.defineProperty(PdfAction.prototype, "next", {
        get: function () {
            return this.action;
        },
        set: function (value) {
            this.action = value;
            this.dictionary.items.setValue(this.dictionaryProperties.next, new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_reference__["b" /* PdfReferenceHolder */](this.action));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAction.prototype, "dictionary", {
        get: function () {
            if (typeof this.pdfDictionary === 'undefined') {
                this.pdfDictionary = new __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_dictionary__["a" /* PdfDictionary */]();
            }
            return this.pdfDictionary;
        },
        enumerable: true,
        configurable: true
    });
    PdfAction.prototype.initialize = function () {
        this.dictionary.items.setValue(this.dictionaryProperties.type, new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.action));
    };
    Object.defineProperty(PdfAction.prototype, "element", {
        get: function () {
            return this.dictionary;
        },
        enumerable: true,
        configurable: true
    });
    return PdfAction;
}());



/***/ }),
/* 144 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfUriAction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__action__ = __webpack_require__(143);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_string__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_name__ = __webpack_require__(5);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var PdfUriAction = (function (_super) {
    __extends(PdfUriAction, _super);
    function PdfUriAction(uri) {
        var _this = _super.call(this) || this;
        _this.uniformResourceIdentifier = '';
        return _this;
    }
    Object.defineProperty(PdfUriAction.prototype, "uri", {
        get: function () {
            return this.uniformResourceIdentifier;
        },
        set: function (value) {
            this.uniformResourceIdentifier = value;
            this.dictionary.items.setValue(this.dictionaryProperties.uri, new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_string__["b" /* PdfString */](this.uniformResourceIdentifier));
        },
        enumerable: true,
        configurable: true
    });
    PdfUriAction.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.dictionary.items.setValue(this.dictionaryProperties.s, new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.uri));
    };
    return PdfUriAction;
}(__WEBPACK_IMPORTED_MODULE_0__action__["a" /* PdfAction */]));



/***/ }),
/* 145 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfActionLinkAnnotation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__link_annotation__ = __webpack_require__(94);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var PdfActionLinkAnnotation = (function (_super) {
    __extends(PdfActionLinkAnnotation, _super);
    function PdfActionLinkAnnotation(rectangle) {
        var _this = _super.call(this, rectangle) || this;
        _this.pdfAction = null;
        return _this;
    }
    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {
        if (typeof value === 'undefined') {
            return this.pdfAction;
        }
        else {
            this.pdfAction = value;
        }
    };
    return PdfActionLinkAnnotation;
}(__WEBPACK_IMPORTED_MODULE_0__link_annotation__["a" /* PdfLinkAnnotation */]));



/***/ }),
/* 146 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfAnnotationCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_array__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_reference__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__input_output_pdf_dictionary_properties__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__graphics_fonts_string_layouter__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__graphics_enum__ = __webpack_require__(9);






var PdfAnnotationCollection = (function () {
    function PdfAnnotationCollection(page) {
        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';
        this.missingAnnotationException = 'Annotation is not contained in collection.';
        this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_2__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        this.internalAnnotations = new __WEBPACK_IMPORTED_MODULE_0__primitives_pdf_array__["a" /* PdfArray */]();
        this.lists = [];
        if (typeof page !== 'undefined') {
            this.page = page;
        }
    }
    Object.defineProperty(PdfAnnotationCollection.prototype, "annotations", {
        get: function () {
            return this.internalAnnotations;
        },
        set: function (value) {
            this.internalAnnotations = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfAnnotationCollection.prototype.add = function (annotation) {
        this.doAdd(annotation);
    };
    PdfAnnotationCollection.prototype.doAdd = function (annotation) {
        if (typeof annotation.destination !== 'undefined') {
            var layout = new __WEBPACK_IMPORTED_MODULE_4__graphics_fonts_string_layouter__["a" /* PdfStringLayouter */]();
            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__["b" /* SizeF */]((annotation.bounds.width), 0), false, new __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__["b" /* SizeF */](0, 0));
            var lastPosition = annotation.bounds.y;
            if (layoutResult.lines.length === 1) {
                var size = annotation.font.measureString(layoutResult.lines[0].text);
                annotation.bounds = new __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__["c" /* RectangleF */](new __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__["a" /* PointF */](annotation.bounds.x, lastPosition), size);
                annotation.text = layoutResult.lines[0].text;
                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);
                annotation.setPage(this.page);
                this.setColor(annotation);
                this.internalAnnotations.add(new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_reference__["b" /* PdfReferenceHolder */](annotation));
                this.lists.push(annotation);
            }
            else {
                for (var i = 0; i < layoutResult.lines.length; i++) {
                    var size = annotation.font.measureString(layoutResult.lines[i].text);
                    if (i === 0) {
                        annotation.bounds = new __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__["c" /* RectangleF */](annotation.bounds.x, lastPosition, size.width, size.height);
                        annotation.text = layoutResult.lines[i].text;
                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);
                        annotation.setPage(this.page);
                        this.setColor(annotation);
                        this.internalAnnotations.add(new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_reference__["b" /* PdfReferenceHolder */](annotation));
                        this.lists.push(annotation);
                        lastPosition += annotation.bounds.height;
                    }
                    else {
                        var annot = annotation.clone();
                        annot.bounds = new __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__["c" /* RectangleF */](new __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__["a" /* PointF */](annotation.bounds.x, lastPosition), size);
                        annot.text = layoutResult.lines[i].text;
                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);
                        annot.setPage(this.page);
                        this.setColor(annot);
                        this.internalAnnotations.add(new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_reference__["b" /* PdfReferenceHolder */](annot));
                        this.lists.push(annot);
                        lastPosition += annot.bounds.height;
                    }
                }
            }
        }
        else {
            annotation.setPage(this.page);
            this.internalAnnotations.add(new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_reference__["b" /* PdfReferenceHolder */](annotation));
            return this.lists.push(annotation);
        }
    };
    PdfAnnotationCollection.prototype.setColor = function (annotation) {
        var cs = __WEBPACK_IMPORTED_MODULE_5__graphics_enum__["i" /* PdfColorSpace */].Rgb;
        var colours = annotation.color.toArray(cs);
        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);
    };
    Object.defineProperty(PdfAnnotationCollection.prototype, "element", {
        get: function () {
            return this.internalAnnotations;
        },
        enumerable: true,
        configurable: true
    });
    return PdfAnnotationCollection;
}());



/***/ }),
/* 147 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfAnnotation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__graphics_pdf_color__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_dictionary__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_array__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_number__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_reference__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_string__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__input_output_pdf_dictionary_properties__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__primitives_pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__graphics_brushes_pdf_solid_brush__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__graphics_fonts_pdf_standard_font__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__graphics_fonts_enum__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__graphics_fonts_pdf_string_format__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__graphics_enum__ = __webpack_require__(9);














var PdfAnnotation = (function () {
    function PdfAnnotation(arg1) {
        this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_7__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        this.pdfColor = new __WEBPACK_IMPORTED_MODULE_0__graphics_pdf_color__["a" /* PdfColor */](255, 255, 255);
        this.rectangle = new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["c" /* RectangleF */](0, 0, 0, 0);
        this.pdfPage = null;
        this.textBrush = new __WEBPACK_IMPORTED_MODULE_9__graphics_brushes_pdf_solid_brush__["a" /* PdfSolidBrush */](new __WEBPACK_IMPORTED_MODULE_0__graphics_pdf_color__["a" /* PdfColor */](0, 0, 0));
        this.textFont = new __WEBPACK_IMPORTED_MODULE_10__graphics_fonts_pdf_standard_font__["a" /* PdfStandardFont */](__WEBPACK_IMPORTED_MODULE_11__graphics_fonts_enum__["b" /* PdfFontFamily */].TimesRoman, 10);
        this.format = new __WEBPACK_IMPORTED_MODULE_12__graphics_fonts_pdf_string_format__["a" /* PdfStringFormat */](__WEBPACK_IMPORTED_MODULE_13__graphics_enum__["c" /* PdfTextAlignment */].Left);
        this.content = '';
        this.pdfDictionary = new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_dictionary__["a" /* PdfDictionary */]();
        this.internalColor = new __WEBPACK_IMPORTED_MODULE_0__graphics_pdf_color__["a" /* PdfColor */]();
        this.darkness = 1.0;
        if (typeof arg1 === 'undefined') {
            this.initialize();
        }
        else {
            this.initialize();
            this.bounds = arg1;
        }
    }
    Object.defineProperty(PdfAnnotation.prototype, "color", {
        get: function () {
            return this.pdfColor;
        },
        set: function (value) {
            this.pdfColor = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "innerColor", {
        get: function () {
            return this.internalColor;
        },
        set: function (value) {
            this.internalColor = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "bounds", {
        get: function () {
            return this.rectangle;
        },
        set: function (value) {
            this.rectangle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "page", {
        get: function () {
            return this.pdfPage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "font", {
        get: function () {
            return this.textFont;
        },
        set: function (value) {
            this.textFont = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "stringFormat", {
        get: function () {
            return this.format;
        },
        set: function (value) {
            this.format = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "brush", {
        get: function () {
            return this.textBrush;
        },
        set: function (value) {
            this.textBrush = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "text", {
        get: function () {
            return this.content;
        },
        set: function (value) {
            this.content = value;
            this.dictionary.items.setValue(this.dictionaryProperties.contents, new __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_string__["b" /* PdfString */](this.content));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "dictionary", {
        get: function () {
            return this.pdfDictionary;
        },
        set: function (value) {
            this.pdfDictionary = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfAnnotation.prototype.initialize = function () {
        this.pdfDictionary.annotationBeginSave = new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_dictionary__["c" /* SaveAnnotationEventHandler */](this);
        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new __WEBPACK_IMPORTED_MODULE_8__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.annot));
    };
    PdfAnnotation.prototype.setPage = function (page) {
        this.pdfPage = page;
        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_reference__["b" /* PdfReferenceHolder */](this.pdfPage));
    };
    PdfAnnotation.prototype.beginSave = function () {
        this.save();
    };
    PdfAnnotation.prototype.save = function () {
        var nativeRectangle = new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["c" /* RectangleF */](this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);
        var section = this.pdfPage.section;
        var initialHeight = nativeRectangle.height;
        var tempLoacation = section.pointToNativePdf(this.page, new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["a" /* PointF */](nativeRectangle.x, nativeRectangle.y));
        nativeRectangle.x = tempLoacation.x;
        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;
        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);
        nativeRectangle.height = nativeRectangle.y - initialHeight;
        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_array__["a" /* PdfArray */].fromRectangle(nativeRectangle));
        this.dictionary.items.setValue(this.dictionaryProperties.ca, new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_number__["a" /* PdfNumber */](this.darkness));
    };
    Object.defineProperty(PdfAnnotation.prototype, "element", {
        get: function () {
            return this.pdfDictionary;
        },
        enumerable: true,
        configurable: true
    });
    return PdfAnnotation;
}());



/***/ }),
/* 148 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfUriAnnotation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__action_link_annotation__ = __webpack_require__(145);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions_uri_action__ = __webpack_require__(144);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var PdfUriAnnotation = (function (_super) {
    __extends(PdfUriAnnotation, _super);
    function PdfUriAnnotation(rectangle, uri) {
        var _this = _super.call(this, rectangle) || this;
        if (typeof uri !== 'undefined') {
            _this.uri = uri;
        }
        return _this;
    }
    Object.defineProperty(PdfUriAnnotation.prototype, "uriAction", {
        get: function () {
            if (typeof this.pdfUriAction === 'undefined') {
                this.pdfUriAction = new __WEBPACK_IMPORTED_MODULE_2__actions_uri_action__["a" /* PdfUriAction */]();
            }
            return this.pdfUriAction;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfUriAnnotation.prototype, "uri", {
        get: function () {
            return this.uriAction.uri;
        },
        set: function (value) {
            if (this.uriAction.uri !== value) {
                this.uriAction.uri = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfUriAnnotation.prototype, "action", {
        get: function () {
            return this.getSetAction();
        },
        set: function (value) {
            this.getSetAction(value);
            this.uriAction.next = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfUriAnnotation.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.link));
        var tempPrimitive = this.uriAction.element;
        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);
    };
    return PdfUriAnnotation;
}(__WEBPACK_IMPORTED_MODULE_0__action_link_annotation__["a" /* PdfActionLinkAnnotation */]));



/***/ }),
/* 149 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = defaultToString;
function defaultToString(item) {
    if (Object.prototype.toString.call(item) === '[object String]') {
        return '$s' + item;
    }
    else {
        return '$o' + item.toString();
    }
}


/***/ }),
/* 150 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfAutomaticFieldInfo; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__automatic_field__ = __webpack_require__(96);


var PdfAutomaticFieldInfo = (function () {
    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {
        this.pageNumberFieldLocation = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */]();
        this.pageNumberField = null;
        this.scaleX = 1;
        this.scaleY = 1;
        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {
            this.pageNumberField = field.field;
            this.pageNumberFieldLocation = field.location;
            this.scaleX = field.scalingX;
            this.scaleY = field.scalingY;
        }
        else if (typeof scaleX === 'undefined' && location instanceof __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */] && field instanceof __WEBPACK_IMPORTED_MODULE_1__automatic_field__["a" /* PdfAutomaticField */]) {
            this.pageNumberField = field;
            this.pageNumberFieldLocation = location;
        }
        else {
            this.pageNumberField = field;
            this.pageNumberFieldLocation = location;
            this.scaleX = scaleX;
            this.scaleY = scaleY;
        }
    }
    Object.defineProperty(PdfAutomaticFieldInfo.prototype, "location", {
        get: function () {
            return this.pageNumberFieldLocation;
        },
        set: function (value) {
            this.pageNumberFieldLocation = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticFieldInfo.prototype, "field", {
        get: function () {
            return this.pageNumberField;
        },
        set: function (value) {
            this.pageNumberField = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticFieldInfo.prototype, "scalingX", {
        get: function () {
            return this.scaleX;
        },
        set: function (value) {
            this.scaleX = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticFieldInfo.prototype, "scalingY", {
        get: function () {
            return this.scaleY;
        },
        set: function (value) {
            this.scaleY = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfAutomaticFieldInfo;
}());



/***/ }),
/* 151 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfMultipleValueField; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__automatic_field__ = __webpack_require__(96);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__collections_object_object_pair_dictionary__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pdf_template_value_pair__ = __webpack_require__(154);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__graphics_figures_pdf_template__ = __webpack_require__(48);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var PdfMultipleValueField = (function (_super) {
    __extends(PdfMultipleValueField, _super);
    function PdfMultipleValueField() {
        var _this = _super.call(this) || this;
        _this.list = new __WEBPACK_IMPORTED_MODULE_1__collections_object_object_pair_dictionary__["a" /* TemporaryDictionary */]();
        return _this;
    }
    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {
        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);
        var value = this.getValue(graphics);
        var template = new __WEBPACK_IMPORTED_MODULE_4__graphics_figures_pdf_template__["a" /* PdfTemplate */](this.getSize());
        this.list.setValue(graphics, new __WEBPACK_IMPORTED_MODULE_2__pdf_template_value_pair__["a" /* PdfTemplateValuePair */](template, value));
        var g = template.graphics;
        var size = this.getSize();
        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);
        var drawLocation = new __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__["a" /* PointF */](location.x + this.location.x, location.y + this.location.y);
        graphics.drawPdfTemplate(template, drawLocation, new __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__["b" /* SizeF */](template.width * scalingX, template.height * scalingY));
    };
    return PdfMultipleValueField;
}(__WEBPACK_IMPORTED_MODULE_0__automatic_field__["a" /* PdfAutomaticField */]));



/***/ }),
/* 152 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfNumbersConvertor; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pages_enum__ = __webpack_require__(26);

var PdfNumbersConvertor = (function () {
    function PdfNumbersConvertor() {
    }
    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {
        var result = '';
        switch (numberStyle) {
            case __WEBPACK_IMPORTED_MODULE_0__pages_enum__["c" /* PdfNumberStyle */].None:
                result = '';
                break;
            case __WEBPACK_IMPORTED_MODULE_0__pages_enum__["c" /* PdfNumberStyle */].Numeric:
                result = intArabic.toString();
                break;
            case __WEBPACK_IMPORTED_MODULE_0__pages_enum__["c" /* PdfNumberStyle */].LowerLatin:
                result = this.arabicToLetter(intArabic).toLowerCase();
                break;
            case __WEBPACK_IMPORTED_MODULE_0__pages_enum__["c" /* PdfNumberStyle */].LowerRoman:
                result = this.arabicToRoman(intArabic).toLowerCase();
                break;
            case __WEBPACK_IMPORTED_MODULE_0__pages_enum__["c" /* PdfNumberStyle */].UpperLatin:
                result = this.arabicToLetter(intArabic);
                break;
            case __WEBPACK_IMPORTED_MODULE_0__pages_enum__["c" /* PdfNumberStyle */].UpperRoman:
                result = this.arabicToRoman(intArabic);
                break;
        }
        return result;
    };
    PdfNumbersConvertor.arabicToRoman = function (intArabic) {
        var retval = '';
        retval += this.generateNumber(intArabic, 1000, 'M');
        retval += this.generateNumber(intArabic, 900, 'CM');
        retval += this.generateNumber(intArabic, 500, 'D');
        retval += this.generateNumber(intArabic, 400, 'CD');
        retval += this.generateNumber(intArabic, 100, 'C');
        retval += this.generateNumber(intArabic, 90, 'XC');
        retval += this.generateNumber(intArabic, 50, 'L');
        retval += this.generateNumber(intArabic, 40, 'XL');
        retval += this.generateNumber(intArabic, 10, 'X');
        retval += this.generateNumber(intArabic, 9, 'IX');
        retval += this.generateNumber(intArabic, 5, 'V');
        retval += this.generateNumber(intArabic, 4, 'IV');
        retval += this.generateNumber(intArabic, 1, 'I');
        return retval.toString();
    };
    PdfNumbersConvertor.arabicToLetter = function (arabic) {
        var stack = this.convertToLetter(arabic);
        var result = '';
        while (stack.length > 0) {
            var num = stack.pop();
            result = this.appendChar(result, num);
        }
        return result.toString();
    };
    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {
        var numberstring = '';
        while (value >= magnitude) {
            value -= magnitude;
            numberstring += letter;
        }
        return numberstring.toString();
    };
    PdfNumbersConvertor.convertToLetter = function (arabic) {
        if (arabic <= 0) {
            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');
        }
        var stack = [];
        while (arabic > this.letterLimit) {
            var remainder = arabic % this.letterLimit;
            if (remainder === 0.0) {
                arabic = arabic / this.letterLimit - 1;
                remainder = this.letterLimit;
            }
            else {
                arabic /= this.letterLimit;
            }
            stack.push(remainder);
        }
        stack.push(arabic);
        return stack;
    };
    PdfNumbersConvertor.appendChar = function (builder, value) {
        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);
        builder += letter;
        return builder;
    };
    return PdfNumbersConvertor;
}());

PdfNumbersConvertor.letterLimit = 26.0;
PdfNumbersConvertor.acsiiStartIndex = (65 - 1);


/***/ }),
/* 153 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfPageNumberField; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__graphics_brushes_pdf_brush__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pages_enum__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pdf_numbers_convertor__ = __webpack_require__(152);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__multiple_value_field__ = __webpack_require__(151);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var PdfPageNumberField = (function (_super) {
    __extends(PdfPageNumberField, _super);
    function PdfPageNumberField(font, arg2) {
        var _this = _super.call(this) || this;
        _this.internalNumberStyle = __WEBPACK_IMPORTED_MODULE_1__pages_enum__["c" /* PdfNumberStyle */].Numeric;
        if (typeof arg2 === 'undefined') {
            _this.font = font;
        }
        else if (arg2 instanceof __WEBPACK_IMPORTED_MODULE_0__graphics_brushes_pdf_brush__["a" /* PdfBrush */]) {
            _this.font = font;
            _this.brush = arg2;
        }
        else {
            _this.font = font;
            _this.bounds = arg2;
        }
        return _this;
    }
    Object.defineProperty(PdfPageNumberField.prototype, "numberStyle", {
        get: function () {
            return this.internalNumberStyle;
        },
        set: function (value) {
            this.internalNumberStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfPageNumberField.prototype.getValue = function (graphics) {
        var result = null;
        var page = this.getPageFromGraphics(graphics);
        result = this.internalGetValue(page);
        return result;
    };
    PdfPageNumberField.prototype.internalGetValue = function (page) {
        var document = page.document;
        var pageIndex = document.pages.indexOf(page) + 1;
        return __WEBPACK_IMPORTED_MODULE_2__pdf_numbers_convertor__["a" /* PdfNumbersConvertor */].convert(pageIndex, this.numberStyle);
    };
    return PdfPageNumberField;
}(__WEBPACK_IMPORTED_MODULE_3__multiple_value_field__["a" /* PdfMultipleValueField */]));



/***/ }),
/* 154 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfTemplateValuePair; });
var PdfTemplateValuePair = (function () {
    function PdfTemplateValuePair(template, value) {
        this.pdfTemplate = null;
        this.content = '';
        if (typeof template === 'undefined') {
        }
        else {
            this.template = template;
            this.value = value;
        }
    }
    Object.defineProperty(PdfTemplateValuePair.prototype, "template", {
        get: function () {
            return this.pdfTemplate;
        },
        set: function (value) {
            this.pdfTemplate = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTemplateValuePair.prototype, "value", {
        get: function () {
            return this.content;
        },
        set: function (value) {
            this.content = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfTemplateValuePair;
}());



/***/ }),
/* 155 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfDocumentBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_file_utils__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pdf_document__ = __webpack_require__(47);



var PdfDocumentBase = (function () {
    function PdfDocumentBase(document) {
        this.isStreamCopied = false;
        if (document instanceof __WEBPACK_IMPORTED_MODULE_1__pdf_document__["a" /* PdfDocument */]) {
            this.document = document;
        }
    }
    Object.defineProperty(PdfDocumentBase.prototype, "pdfObjects", {
        get: function () {
            return this.objects;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentBase.prototype, "crossTable", {
        get: function () {
            return this.pdfCrossTable;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentBase.prototype, "currentSavingObj", {
        get: function () {
            return this.currentSavingObject;
        },
        set: function (value) {
            this.currentSavingObject = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentBase.prototype, "catalog", {
        get: function () {
            return this.pdfCatalog;
        },
        set: function (value) {
            this.pdfCatalog = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {
        this.objects = mainObjectCollection;
    };
    PdfDocumentBase.prototype.setCrossTable = function (cTable) {
        this.pdfCrossTable = cTable;
    };
    PdfDocumentBase.prototype.setCatalog = function (catalog) {
        this.pdfCatalog = catalog;
    };
    PdfDocumentBase.prototype.save = function (filename) {
        var encoding = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_file_utils__["a" /* Encoding */](true);
        var SW = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_file_utils__["c" /* StreamWriter */](encoding);
        if (typeof filename === 'undefined') {
            var encoding_1 = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_file_utils__["a" /* Encoding */](true);
            var SW_1 = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_file_utils__["c" /* StreamWriter */](encoding_1);
            return this.document.docSave(SW_1, true);
        }
        else {
            this.document.docSave(SW, filename, true);
        }
    };
    PdfDocumentBase.prototype.clone = function () {
        return this.document;
    };
    return PdfDocumentBase;
}());



/***/ }),
/* 156 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfDestinationMode; });
var PdfDestinationMode;
(function (PdfDestinationMode) {
    PdfDestinationMode[PdfDestinationMode["Location"] = 0] = "Location";
    PdfDestinationMode[PdfDestinationMode["FitToPage"] = 1] = "FitToPage";
    PdfDestinationMode[PdfDestinationMode["FitR"] = 2] = "FitR";
})(PdfDestinationMode || (PdfDestinationMode = {}));


/***/ }),
/* 157 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfCacheCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__collections_dictionary__ = __webpack_require__(31);

var PdfCacheCollection = (function () {
    function PdfCacheCollection() {
        this.referenceObjects = [];
        this.pdfFontCollection = new __WEBPACK_IMPORTED_MODULE_0__collections_dictionary__["a" /* Dictionary */]();
    }
    PdfCacheCollection.prototype.search = function (obj) {
        var result = null;
        var group = this.createNewGroup();
        group.push(obj);
        return result;
    };
    PdfCacheCollection.prototype.createNewGroup = function () {
        var group = [];
        this.referenceObjects.push(group);
        return group;
    };
    return PdfCacheCollection;
}());



/***/ }),
/* 158 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfCollection; });
var PdfCollection = (function () {
    function PdfCollection() {
    }
    Object.defineProperty(PdfCollection.prototype, "count", {
        get: function () {
            if (typeof this.collection === 'undefined') {
                this.collection = [];
            }
            return this.collection.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCollection.prototype, "list", {
        get: function () {
            if (typeof this.collection === 'undefined') {
                this.collection = [];
            }
            return this.collection;
        },
        enumerable: true,
        configurable: true
    });
    return PdfCollection;
}());



/***/ }),
/* 159 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProcedureSets; });
var ProcedureSets = (function () {
    function ProcedureSets() {
        this.pdf = 'PDF';
        this.text = 'Text';
        this.imageB = 'ImageB';
        this.imageC = 'ImageC';
        this.imageI = 'ImageI';
    }
    return ProcedureSets;
}());



/***/ }),
/* 160 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TextLayouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return TextPageLayoutResult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return PdfTextLayoutResult; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element_layouter__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fonts_string_layouter__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__figures_enum__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pdf_color__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__annotations_pdf_text_web_link__ = __webpack_require__(95);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






var TextLayouter = (function (_super) {
    __extends(TextLayouter, _super);
    function TextLayouter(element) {
        return _super.call(this, element) || this;
    }
    Object.defineProperty(TextLayouter.prototype, "element", {
        get: function () {
            return _super.prototype.getElement.call(this);
        },
        enumerable: true,
        configurable: true
    });
    TextLayouter.prototype.layoutInternal = function (param) {
        this.format = (this.element.stringFormat != null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;
        var currentPage = param.page;
        var currentBounds = param.bounds;
        var text = this.element.value;
        var result = null;
        var pageResult = new TextPageLayoutResult();
        pageResult.page = currentPage;
        pageResult.remainder = text;
        for (;;) {
            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);
            result = this.getLayoutResult(pageResult);
            break;
        }
        return result;
    };
    TextLayouter.prototype.getLayoutResult = function (pageResult) {
        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);
        return result;
    };
    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {
        var result = new TextPageLayoutResult();
        result.remainder = text;
        result.page = currentPage;
        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);
        var layouter = new __WEBPACK_IMPORTED_MODULE_2__fonts_string_layouter__["a" /* PdfStringLayouter */]();
        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["b" /* SizeF */](0, 0));
        var textFinished = (stringResult.remainder == null);
        var doesntFit = (param.format.break === __WEBPACK_IMPORTED_MODULE_3__figures_enum__["b" /* PdfLayoutBreakType */].FitElement);
        var canDraw = !(doesntFit || stringResult.empty);
        var graphics = currentPage.graphics;
        var brush = this.element.getBrush();
        if (this.element instanceof __WEBPACK_IMPORTED_MODULE_5__annotations_pdf_text_web_link__["a" /* PdfTextWebLink */]) {
            brush.color = new __WEBPACK_IMPORTED_MODULE_4__pdf_color__["a" /* PdfColor */](0, 0, 255);
        }
        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);
        var lineInfo = stringResult.lines[stringResult.lineCount - 1];
        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);
        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);
        result.remainder = stringResult.remainder;
        result.end = (textFinished);
        return result;
    };
    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {
        var pageSize = currentPage.graphics.clientSize;
        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;
        return currentBounds;
    };
    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {
        var textSize = stringResult.actualSize;
        var x = currentBounds.x;
        var y = currentBounds.y;
        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;
        var height = textSize.height;
        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);
        x = shiftedRect.x;
        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);
        y += verticalShift;
        var bounds = new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["c" /* RectangleF */](x, y, width, height);
        return bounds;
    };
    return TextLayouter;
}(__WEBPACK_IMPORTED_MODULE_0__element_layouter__["a" /* ElementLayouter */]));

var TextPageLayoutResult = (function () {
    function TextPageLayoutResult() {
    }
    return TextPageLayoutResult;
}());

var PdfTextLayoutResult = (function (_super) {
    __extends(PdfTextLayoutResult, _super);
    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {
        var _this = _super.call(this, page, bounds) || this;
        _this.remainderText = remainder;
        _this.lastLineTextBounds = lastLineBounds;
        return _this;
    }
    Object.defineProperty(PdfTextLayoutResult.prototype, "remainder", {
        get: function () {
            return this.remainderText;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTextLayoutResult.prototype, "lastLineBounds", {
        get: function () {
            return this.lastLineTextBounds;
        },
        enumerable: true,
        configurable: true
    });
    return PdfTextLayoutResult;
}(__WEBPACK_IMPORTED_MODULE_0__element_layouter__["d" /* PdfLayoutResult */]));



/***/ }),
/* 161 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfTextElement; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__figures_layout_element__ = __webpack_require__(99);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__brushes_pdf_brush__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fonts_pdf_font__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fonts_pdf_standard_font__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pdf_pen__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__figures_base_element_layouter__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__base_text_layouter__ = __webpack_require__(160);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__brushes_pdf_solid_brush__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__pdf_color__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__base_element_layouter__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__fonts_string_layouter__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__enum__ = __webpack_require__(9);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();













var PdfTextElement = (function (_super) {
    __extends(PdfTextElement, _super);
    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {
        var _this = _super.call(this) || this;
        _this.content = '';
        _this.elementValue = '';
        _this.hasPointOverload = false;
        _this.isPdfTextElement = false;
        if (typeof arg1 === 'undefined') {
        }
        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {
            _this = _super.call(this) || this;
            _this.content = arg1;
            _this.elementValue = arg1;
        }
        else if (typeof arg1 === 'string' && arg2 instanceof __WEBPACK_IMPORTED_MODULE_2__fonts_pdf_font__["a" /* PdfFont */] && typeof arg3 === 'undefined') {
            _this = _super.call(this) || this;
            _this.content = arg1;
            _this.elementValue = arg1;
            _this.pdfFont = arg2;
        }
        else if (typeof arg1 === 'string' && arg2 instanceof __WEBPACK_IMPORTED_MODULE_2__fonts_pdf_font__["a" /* PdfFont */] && arg3 instanceof __WEBPACK_IMPORTED_MODULE_4__pdf_pen__["a" /* PdfPen */] && typeof arg4 === 'undefined') {
            _this = _super.call(this) || this;
            _this.content = arg1;
            _this.elementValue = arg1;
            _this.pdfFont = arg2;
            _this.pdfPen = arg3;
        }
        else if (typeof arg1 === 'string' && arg2 instanceof __WEBPACK_IMPORTED_MODULE_2__fonts_pdf_font__["a" /* PdfFont */] && arg3 instanceof __WEBPACK_IMPORTED_MODULE_1__brushes_pdf_brush__["a" /* PdfBrush */] && typeof arg4 === 'undefined') {
            _this = _super.call(this) || this;
            _this.content = arg1;
            _this.elementValue = arg1;
            _this.pdfFont = arg2;
            _this.pdfBrush = arg3;
        }
        else {
            _this = _super.call(this) || this;
            _this.content = arg1;
            _this.elementValue = arg1;
            _this.pdfFont = arg2;
            _this.pdfPen = arg3;
            _this.pdfBrush = arg4;
            _this.format = arg5;
        }
        return _this;
    }
    Object.defineProperty(PdfTextElement.prototype, "text", {
        get: function () {
            return this.content;
        },
        set: function (value) {
            this.elementValue = value;
            this.content = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTextElement.prototype, "value", {
        get: function () {
            return this.elementValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTextElement.prototype, "pen", {
        get: function () {
            return this.pdfPen;
        },
        set: function (value) {
            this.pdfPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTextElement.prototype, "brush", {
        get: function () {
            return this.pdfBrush;
        },
        set: function (value) {
            this.pdfBrush = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTextElement.prototype, "font", {
        get: function () {
            return this.pdfFont;
        },
        set: function (value) {
            this.pdfFont = value;
            if (this.pdfFont instanceof __WEBPACK_IMPORTED_MODULE_3__fonts_pdf_standard_font__["a" /* PdfStandardFont */] && this.content != null) {
                this.elementValue = __WEBPACK_IMPORTED_MODULE_3__fonts_pdf_standard_font__["a" /* PdfStandardFont */].convert(this.content);
            }
            else {
                this.elementValue = this.content;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTextElement.prototype, "stringFormat", {
        get: function () {
            return this.format;
        },
        set: function (value) {
            this.format = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfTextElement.prototype.getBrush = function () {
        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new __WEBPACK_IMPORTED_MODULE_7__brushes_pdf_solid_brush__["a" /* PdfSolidBrush */](new __WEBPACK_IMPORTED_MODULE_8__pdf_color__["a" /* PdfColor */](0, 0, 0)) : this.pdfBrush;
    };
    PdfTextElement.prototype.layout = function (param) {
        var layouter = new __WEBPACK_IMPORTED_MODULE_6__base_text_layouter__["a" /* TextLayouter */](this);
        var result = layouter.layout(param);
        return result;
    };
    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {
        if (arg3 instanceof __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["a" /* PointF */] && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {
            this.hasPointOverload = true;
            return this.drawText(arg2, arg3.x, arg3.y);
        }
        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {
            this.hasPointOverload = true;
            return this.drawText(arg2, arg3, arg4, null);
        }
        else if (arg3 instanceof __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["c" /* RectangleF */] && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {
            return this.drawText(arg2, arg3, null);
        }
        else if (arg3 instanceof __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["a" /* PointF */] && typeof arg3.width === 'undefined' && arg4 instanceof __WEBPACK_IMPORTED_MODULE_10__base_element_layouter__["b" /* PdfLayoutFormat */]) {
            this.hasPointOverload = true;
            return this.drawText(arg2, arg3.x, arg3.y, arg4);
        }
        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof __WEBPACK_IMPORTED_MODULE_10__base_element_layouter__["b" /* PdfLayoutFormat */] || arg5 == null)) {
            this.hasPointOverload = true;
            var width = (arg2.graphics.clientSize.width - arg3);
            var layoutRectangle = new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["c" /* RectangleF */](arg3, arg4, width, 0);
            return this.drawText(arg2, layoutRectangle, arg5);
        }
        else if (arg3 instanceof __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["c" /* RectangleF */] && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {
            return this.drawText(arg2, arg3, null);
        }
        else {
            var layout = new __WEBPACK_IMPORTED_MODULE_11__fonts_string_layouter__["a" /* PdfStringLayouter */]();
            if (this.hasPointOverload) {
                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["b" /* SizeF */]((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);
                var layoutResult = void 0;
                var param = new __WEBPACK_IMPORTED_MODULE_5__figures_base_element_layouter__["c" /* PdfLayoutParams */]();
                var temparg3 = arg3;
                var temparg4 = arg4;
                param.page = arg2;
                var previousPage = arg2;
                param.bounds = temparg3;
                param.format = (temparg4 != null) ? temparg4 : new __WEBPACK_IMPORTED_MODULE_10__base_element_layouter__["b" /* PdfLayoutFormat */]();
                if (stringLayoutResult.lines.length > 1) {
                    this.text = stringLayoutResult.layoutLines[0].text;
                    if (param.bounds.y <= param.page.graphics.clientSize.height) {
                        var previousPosition = new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["a" /* PointF */](param.bounds.x, param.bounds.y);
                        layoutResult = this.layout(param);
                        var bounds = new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["c" /* RectangleF */](0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);
                        var isPaginate = false;
                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {
                            param.page = layoutResult.page;
                            param.bounds = new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["c" /* RectangleF */](new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["a" /* PointF */](bounds.x, bounds.y), new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["b" /* SizeF */](bounds.width, bounds.height));
                            this.text = stringLayoutResult.layoutLines[i].text;
                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {
                                isPaginate = true;
                                param.page = param.page.graphics.getNextPage();
                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {
                                    bounds = new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["c" /* RectangleF */](0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);
                                }
                                else {
                                    bounds = new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["c" /* RectangleF */](0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);
                                }
                                param.bounds = bounds;
                            }
                            layoutResult = this.layout(param);
                            if (i !== (stringLayoutResult.lines.length - 1)) {
                                bounds = new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["c" /* RectangleF */](0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);
                            }
                            else {
                                var lineWidth = this.font.measureString(this.text, this.format).width;
                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);
                            }
                        }
                    }
                    return layoutResult;
                }
                else {
                    var lineSize = this.font.measureString(this.text, this.format);
                    if (param.bounds.y <= param.page.graphics.clientSize.height) {
                        layoutResult = this.layout(param);
                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);
                    }
                    return layoutResult;
                }
            }
            else {
                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["b" /* SizeF */](arg3.width, 0), false, arg2.graphics.clientSize);
                var result = void 0;
                var param = new __WEBPACK_IMPORTED_MODULE_5__figures_base_element_layouter__["c" /* PdfLayoutParams */]();
                var temparg3 = arg3;
                var temparg4 = arg4;
                param.page = arg2;
                param.bounds = temparg3;
                param.format = (temparg4 != null) ? temparg4 : new __WEBPACK_IMPORTED_MODULE_10__base_element_layouter__["b" /* PdfLayoutFormat */]();
                if (layoutResult.lines.length > 1) {
                    this.text = layoutResult.layoutLines[0].text;
                    if (param.bounds.y <= param.page.graphics.clientSize.height) {
                        var previousPosition = new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["a" /* PointF */](param.bounds.x, param.bounds.y);
                        result = this.layout(param);
                        var bounds = new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["c" /* RectangleF */](temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);
                        var isPaginate = false;
                        for (var i = 1; i < layoutResult.lines.length; i++) {
                            param.page = result.page;
                            param.bounds = new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["c" /* RectangleF */](bounds.x, bounds.y, bounds.width, bounds.height);
                            this.text = layoutResult.layoutLines[i].text;
                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {
                                isPaginate = true;
                                param.page = param.page.graphics.getNextPage();
                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {
                                    bounds = new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["c" /* RectangleF */](temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);
                                }
                                else {
                                    bounds = new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["c" /* RectangleF */](temparg3.x, 0, temparg3.width, layoutResult.lineHeight);
                                }
                                param.bounds = bounds;
                            }
                            result = this.layout(param);
                            if (i !== (layoutResult.lines.length - 1)) {
                                bounds = new __WEBPACK_IMPORTED_MODULE_9__drawing_pdf_drawing__["c" /* RectangleF */](temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);
                            }
                            else {
                                var lineWidth = this.font.measureString(this.text, this.format).width;
                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);
                            }
                        }
                    }
                    return result;
                }
                else {
                    var lineSize = this.font.measureString(this.text, this.format);
                    if (param.bounds.y <= param.page.graphics.clientSize.height) {
                        result = this.layout(param);
                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);
                    }
                    return result;
                }
            }
        }
    };
    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {
        var shift = 0;
        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === __WEBPACK_IMPORTED_MODULE_12__enum__["c" /* PdfTextAlignment */].Center) {
            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;
            result.bounds.width = lineWidth;
        }
        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === __WEBPACK_IMPORTED_MODULE_12__enum__["c" /* PdfTextAlignment */].Right) {
            result.bounds.x = startPosition + (maximumWidth - lineWidth);
            result.bounds.width = lineWidth;
        }
        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === __WEBPACK_IMPORTED_MODULE_12__enum__["c" /* PdfTextAlignment */].Justify) {
            result.bounds.x = startPosition;
            result.bounds.width = maximumWidth;
        }
        else {
            result.bounds.width = startPosition;
            result.bounds.width = lineWidth;
        }
        return result;
    };
    return PdfTextElement;
}(__WEBPACK_IMPORTED_MODULE_0__figures_layout_element__["a" /* PdfLayoutElement */]));



/***/ }),
/* 162 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfFontMetrics; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return WidthTable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return StandardWidthTable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pdf_font__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enum__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_array__ = __webpack_require__(15);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var PdfFontMetrics = (function () {
    function PdfFontMetrics() {
        this.lineGap = 0;
    }
    PdfFontMetrics.prototype.getAscent = function (format) {
        var returnValue = this.ascent * __WEBPACK_IMPORTED_MODULE_0__pdf_font__["a" /* PdfFont */].charSizeMultiplier * this.getSize(format);
        return returnValue;
    };
    PdfFontMetrics.prototype.getDescent = function (format) {
        var returnValue = this.descent * __WEBPACK_IMPORTED_MODULE_0__pdf_font__["a" /* PdfFont */].charSizeMultiplier * this.getSize(format);
        return returnValue;
    };
    PdfFontMetrics.prototype.getLineGap = function (format) {
        var returnValue = this.lineGap * __WEBPACK_IMPORTED_MODULE_0__pdf_font__["a" /* PdfFont */].charSizeMultiplier * this.getSize(format);
        return returnValue;
    };
    PdfFontMetrics.prototype.getHeight = function (format) {
        var height;
        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];
        var clearTypeFontCollection = [];
        for (var index = 0; index < clearTypeFonts.length; index++) {
            var font = clearTypeFonts[index];
            clearTypeFontCollection.push(font);
        }
        if (this.getDescent(format) < 0) {
            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));
        }
        else {
            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));
        }
        return height;
    };
    PdfFontMetrics.prototype.getSize = function (format) {
        var size = this.size;
        if (format != null) {
            switch (format.subSuperScript) {
                case __WEBPACK_IMPORTED_MODULE_1__enum__["e" /* PdfSubSuperScript */].SubScript:
                    size /= this.subScriptSizeFactor;
                    break;
                case __WEBPACK_IMPORTED_MODULE_1__enum__["e" /* PdfSubSuperScript */].SuperScript:
                    size /= this.superscriptSizeFactor;
                    break;
            }
        }
        return size;
    };
    PdfFontMetrics.prototype.clone = function () {
        var metrics = this;
        metrics.widthTable = WidthTable.clone();
        return metrics;
    };
    Object.defineProperty(PdfFontMetrics.prototype, "widthTable", {
        get: function () {
            return this.internalWidthTable;
        },
        set: function (value) {
            this.internalWidthTable = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfFontMetrics;
}());

var WidthTable = (function () {
    function WidthTable() {
    }
    WidthTable.clone = function () {
        return null;
    };
    return WidthTable;
}());

var StandardWidthTable = (function (_super) {
    __extends(StandardWidthTable, _super);
    function StandardWidthTable(widths) {
        var _this = _super.call(this) || this;
        if (widths == null) {
            throw new Error('ArgumentNullException:widths');
        }
        _this.widths = widths;
        return _this;
    }
    StandardWidthTable.prototype.items = function (index) {
        if (index < 0 || index >= this.widths.length) {
            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');
        }
        var result = this.widths[index];
        return result;
    };
    Object.defineProperty(StandardWidthTable.prototype, "length", {
        get: function () {
            return this.widths.length;
        },
        enumerable: true,
        configurable: true
    });
    StandardWidthTable.prototype.clone = function () {
        var swt = this;
        swt.widths = this.widths;
        return swt;
    };
    StandardWidthTable.prototype.toArray = function () {
        var arr = new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_array__["a" /* PdfArray */](this.widths);
        return arr;
    };
    return StandardWidthTable;
}(WidthTable));



/***/ }),
/* 163 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfStandardFontMetricsFactory; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__enum__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__ = __webpack_require__(162);


var PdfStandardFontMetricsFactory = (function () {
    function PdfStandardFontMetricsFactory() {
    }
    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {
        var metrics = null;
        switch (fontFamily) {
            case __WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfFontFamily */].Helvetica:
                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfFontFamily */].Courier:
                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfFontFamily */].TimesRoman:
                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfFontFamily */].Symbol:
                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfFontFamily */].ZapfDingbats:
                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);
                break;
            default:
                metrics = this.getHelveticaMetrics(__WEBPACK_IMPORTED_MODULE_0__enum__["b" /* PdfFontFamily */].Helvetica, fontStyle, size);
                break;
        }
        metrics.name = fontFamily.toString();
        metrics.subScriptSizeFactor = this.subSuperScriptFactor;
        metrics.superscriptSizeFactor = this.subSuperScriptFactor;
        return metrics;
    };
    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {
        var metrics = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["a" /* PdfFontMetrics */]();
        if ((fontStyle & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Bold) > 0 && (fontStyle & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Italic) > 0) {
            metrics.ascent = this.helveticaBoldItalicAscent;
            metrics.descent = this.helveticaBoldItalicDescent;
            metrics.postScriptName = this.helveticaBoldItalicName;
            metrics.size = size;
            metrics.widthTable = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["c" /* StandardWidthTable */](this.arialBoldWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else if ((fontStyle & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Bold) > 0) {
            metrics.ascent = this.helveticaBoldAscent;
            metrics.descent = this.helveticaBoldDescent;
            metrics.postScriptName = this.helveticaBoldName;
            metrics.size = size;
            metrics.widthTable = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["c" /* StandardWidthTable */](this.arialBoldWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else if ((fontStyle & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Italic) > 0) {
            metrics.ascent = this.helveticaItalicAscent;
            metrics.descent = this.helveticaItalicDescent;
            metrics.postScriptName = this.helveticaItalicName;
            metrics.size = size;
            metrics.widthTable = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["c" /* StandardWidthTable */](this.arialWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else {
            metrics.ascent = this.helveticaAscent;
            metrics.descent = this.helveticaDescent;
            metrics.postScriptName = this.helveticaName;
            metrics.size = size;
            metrics.widthTable = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["c" /* StandardWidthTable */](this.arialWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        return metrics;
    };
    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {
        var metrics = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["a" /* PdfFontMetrics */]();
        if ((fontStyle & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Bold) > 0 && (fontStyle & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Italic) > 0) {
            metrics.ascent = this.courierBoldItalicAscent;
            metrics.descent = this.courierBoldItalicDescent;
            metrics.postScriptName = this.courierBoldItalicName;
            metrics.size = size;
            metrics.widthTable = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["c" /* StandardWidthTable */](this.fixedWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else if ((fontStyle & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Bold) > 0) {
            metrics.ascent = this.courierBoldAscent;
            metrics.descent = this.courierBoldDescent;
            metrics.postScriptName = this.courierBoldName;
            metrics.size = size;
            metrics.widthTable = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["c" /* StandardWidthTable */](this.fixedWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else if ((fontStyle & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Italic) > 0) {
            metrics.ascent = this.courierItalicAscent;
            metrics.descent = this.courierItalicDescent;
            metrics.postScriptName = this.courierItalicName;
            metrics.size = size;
            metrics.widthTable = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["c" /* StandardWidthTable */](this.fixedWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else {
            metrics.ascent = this.courierAscent;
            metrics.descent = this.courierDescent;
            metrics.postScriptName = this.courierName;
            metrics.size = size;
            metrics.widthTable = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["c" /* StandardWidthTable */](this.fixedWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        return metrics;
    };
    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {
        var metrics = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["a" /* PdfFontMetrics */]();
        if ((fontStyle & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Bold) > 0 && (fontStyle & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Italic) > 0) {
            metrics.ascent = this.timesBoldItalicAscent;
            metrics.descent = this.timesBoldItalicDescent;
            metrics.postScriptName = this.timesBoldItalicName;
            metrics.size = size;
            metrics.widthTable = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["c" /* StandardWidthTable */](this.timesRomanBoldItalicWidths);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else if ((fontStyle & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Bold) > 0) {
            metrics.ascent = this.timesBoldAscent;
            metrics.descent = this.timesBoldDescent;
            metrics.postScriptName = this.timesBoldName;
            metrics.size = size;
            metrics.widthTable = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["c" /* StandardWidthTable */](this.timesRomanBoldWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else if ((fontStyle & __WEBPACK_IMPORTED_MODULE_0__enum__["a" /* PdfFontStyle */].Italic) > 0) {
            metrics.ascent = this.timesItalicAscent;
            metrics.descent = this.timesItalicDescent;
            metrics.postScriptName = this.timesItalicName;
            metrics.size = size;
            metrics.widthTable = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["c" /* StandardWidthTable */](this.timesRomanItalicWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else {
            metrics.ascent = this.timesAscent;
            metrics.descent = this.timesDescent;
            metrics.postScriptName = this.timesName;
            metrics.size = size;
            metrics.widthTable = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["c" /* StandardWidthTable */](this.timesRomanWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        return metrics;
    };
    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {
        var metrics = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["a" /* PdfFontMetrics */]();
        metrics.ascent = this.symbolAscent;
        metrics.descent = this.symbolDescent;
        metrics.postScriptName = this.symbolName;
        metrics.size = size;
        metrics.widthTable = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["c" /* StandardWidthTable */](this.symbolWidth);
        metrics.height = metrics.ascent - metrics.descent;
        return metrics;
    };
    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {
        var metrics = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["a" /* PdfFontMetrics */]();
        metrics.ascent = this.zapfDingbatsAscent;
        metrics.descent = this.zapfDingbatsDescent;
        metrics.postScriptName = this.zapfDingbatsName;
        metrics.size = size;
        metrics.widthTable = new __WEBPACK_IMPORTED_MODULE_1__pdf_font_metrics__["c" /* StandardWidthTable */](this.zapfDingbatsWidth);
        metrics.height = metrics.ascent - metrics.descent;
        return metrics;
    };
    return PdfStandardFontMetricsFactory;
}());

PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;
PdfStandardFontMetricsFactory.helveticaAscent = 931;
PdfStandardFontMetricsFactory.helveticaDescent = -225;
PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';
PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;
PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;
PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';
PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;
PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;
PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';
PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;
PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;
PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';
PdfStandardFontMetricsFactory.courierAscent = 805;
PdfStandardFontMetricsFactory.courierDescent = -250;
PdfStandardFontMetricsFactory.courierName = 'Courier';
PdfStandardFontMetricsFactory.courierBoldAscent = 801;
PdfStandardFontMetricsFactory.courierBoldDescent = -250;
PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';
PdfStandardFontMetricsFactory.courierItalicAscent = 805;
PdfStandardFontMetricsFactory.courierItalicDescent = -250;
PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';
PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;
PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;
PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';
PdfStandardFontMetricsFactory.timesAscent = 898;
PdfStandardFontMetricsFactory.timesDescent = -218;
PdfStandardFontMetricsFactory.timesName = 'Times-Roman';
PdfStandardFontMetricsFactory.timesBoldAscent = 935;
PdfStandardFontMetricsFactory.timesBoldDescent = -218;
PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';
PdfStandardFontMetricsFactory.timesItalicAscent = 883;
PdfStandardFontMetricsFactory.timesItalicDescent = -217;
PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';
PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;
PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;
PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';
PdfStandardFontMetricsFactory.symbolAscent = 1010;
PdfStandardFontMetricsFactory.symbolDescent = -293;
PdfStandardFontMetricsFactory.symbolName = 'Symbol';
PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;
PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;
PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';
PdfStandardFontMetricsFactory.arialWidth = [
    278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,
    278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,
    584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,
    722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,
    469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,
    556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,
    584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,
    611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,
    500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,
    737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,
    834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,
    278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,
    667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,
    278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,
    556, 500
];
PdfStandardFontMetricsFactory.arialBoldWidth = [
    278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,
    278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,
    584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,
    722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,
    584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,
    611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,
    584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,
    611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,
    500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,
    737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,
    834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,
    278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,
    667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,
    278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,
    611, 556
];
PdfStandardFontMetricsFactory.fixedWidth = [
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600
];
PdfStandardFontMetricsFactory.timesRomanWidth = [
    250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,
    250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,
    564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,
    722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,
    469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,
    500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,
    541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,
    611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,
    444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,
    760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,
    750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,
    333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,
    556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,
    278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,
    500, 500
];
PdfStandardFontMetricsFactory.timesRomanBoldWidth = [
    250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,
    250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,
    570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,
    722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,
    581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,
    556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,
    520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,
    667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,
    444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,
    747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,
    750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,
    389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,
    611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,
    278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,
    556, 500
];
PdfStandardFontMetricsFactory.timesRomanItalicWidth = [
    250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,
    250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,
    675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,
    667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,
    422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,
    500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,
    541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,
    556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,
    389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,
    760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,
    750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,
    333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,
    611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,
    278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,
    500, 444
];
PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [
    250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,
    250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,
    570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,
    722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,
    570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,
    556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,
    570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,
    611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,
    389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,
    747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,
    750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,
    389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,
    611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,
    278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,
    500, 444
];
PdfStandardFontMetricsFactory.symbolWidth = [
    250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,
    250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,
    549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,
    631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,
    645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,
    521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,
    439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,
    549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,
    549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,
    658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,
    713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,
    1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,
    384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,
    384, 384, 384, 384, 494, 494, 494, -1
];
PdfStandardFontMetricsFactory.zapfDingbatsWidth = [
    278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,
    911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,
    754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,
    789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,
    768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,
    689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,
    892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,
    317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,
    910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,
    788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,
    788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,
    788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,
    927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,
    836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,
    888, 831, 873, 927, 970, 918
];


/***/ }),
/* 164 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImageFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ImageDecoder; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__byte_array__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_stream__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__input_output_pdf_dictionary_properties__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_number__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_boolean__ = __webpack_require__(246);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_dictionary__ = __webpack_require__(10);







var ImageFormat;
(function (ImageFormat) {
    ImageFormat[ImageFormat["Unknown"] = 0] = "Unknown";
    ImageFormat[ImageFormat["Bmp"] = 1] = "Bmp";
    ImageFormat[ImageFormat["Emf"] = 2] = "Emf";
    ImageFormat[ImageFormat["Gif"] = 3] = "Gif";
    ImageFormat[ImageFormat["Jpeg"] = 4] = "Jpeg";
    ImageFormat[ImageFormat["Png"] = 5] = "Png";
    ImageFormat[ImageFormat["Wmf"] = 6] = "Wmf";
    ImageFormat[ImageFormat["Icon"] = 7] = "Icon";
})(ImageFormat || (ImageFormat = {}));
var ImageDecoder = (function () {
    function ImageDecoder(stream) {
        this.mFormat = ImageFormat.Unknown;
        this.mbitsPerComponent = 8;
        this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_2__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        this.mStream = stream;
        this.initialize();
    }
    Object.defineProperty(ImageDecoder.prototype, "height", {
        get: function () {
            return this.mHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ImageDecoder.prototype, "width", {
        get: function () {
            return this.mWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ImageDecoder.prototype, "bitsPerComponent", {
        get: function () {
            return this.mbitsPerComponent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ImageDecoder.prototype, "size", {
        get: function () {
            return this.mImageData.count;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ImageDecoder.prototype, "imageData", {
        get: function () {
            return this.mImageData;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ImageDecoder.prototype, "imageDataAsNumberArray", {
        get: function () {
            return this.mImageData.internalBuffer.buffer;
        },
        enumerable: true,
        configurable: true
    });
    ImageDecoder.prototype.initialize = function () {
        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {
            this.mFormat = ImageFormat.Jpeg;
            this.parseJpegImage();
        }
        this.reset();
        this.mImageData = new __WEBPACK_IMPORTED_MODULE_0__byte_array__["a" /* ByteArray */](this.mStream.count);
        this.mStream.read(this.mImageData, 0, this.mImageData.count);
    };
    ImageDecoder.prototype.reset = function () {
        this.mStream.position = 0;
    };
    ImageDecoder.prototype.parseJpegImage = function () {
        this.reset();
        var imgData = new __WEBPACK_IMPORTED_MODULE_0__byte_array__["a" /* ByteArray */](this.mStream.count);
        this.mStream.read(imgData, 0, imgData.count);
        var i = 4;
        if (String.fromCharCode(imgData.getBuffer(i + 2)) === 'J' && String.fromCharCode(imgData.getBuffer(i + 3)) === 'F' && String.fromCharCode(imgData.getBuffer(i + 4)) === 'I' && String.fromCharCode(imgData.getBuffer(i + 5)) === 'F' && imgData.getBuffer(i + 6) === 0) {
            var length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);
            while (i + length_1 < imgData.count) {
                i += length_1;
                if (imgData.getBuffer(i + 1) === 192) {
                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);
                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);
                    return;
                }
                else {
                    i += 2;
                    length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);
                }
            }
        }
    };
    Object.defineProperty(ImageDecoder.prototype, "format", {
        get: function () {
            return this.mFormat;
        },
        enumerable: true,
        configurable: true
    });
    ImageDecoder.prototype.checkIfJpeg = function () {
        this.reset();
        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {
            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {
                return false;
            }
            this.mStream.position++;
        }
        return true;
    };
    ImageDecoder.prototype.getImageDictionary = function () {
        if (this.mFormat === ImageFormat.Jpeg) {
            var tempArrayBuffer = this.imageData.internalBuffer.length;
            this.imageStream = new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_stream__["a" /* PdfStream */]();
            var tempString = '';
            var decodedString = '';
            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {
                tempString += String.fromCharCode(null, this.mStream.readByte(i));
            }
            for (var i = 0; i < tempString.length; i++) {
                if (i % 2 !== 0) {
                    decodedString += tempString[i];
                }
            }
            this.imageStream.data = [decodedString];
            this.imageStream.compress = false;
            this.imageStream.items.setValue(this.dictionaryProperties.type, new __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.xObject));
            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.image));
            this.imageStream.items.setValue(this.dictionaryProperties.width, new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_number__["a" /* PdfNumber */](this.width));
            this.imageStream.items.setValue(this.dictionaryProperties.height, new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_number__["a" /* PdfNumber */](this.height));
            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_number__["a" /* PdfNumber */](this.bitsPerComponent));
            this.imageStream.items.setValue(this.dictionaryProperties.filter, new __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.dctdecode));
            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_name__["a" /* PdfName */](this.getColorSpace()));
            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());
            return this.imageStream;
        }
        else {
            return this.imageStream;
        }
    };
    ImageDecoder.prototype.getColorSpace = function () {
        return this.dictionaryProperties.deviceRgb;
    };
    ImageDecoder.prototype.getDecodeParams = function () {
        var decodeParams = new __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_dictionary__["a" /* PdfDictionary */]();
        decodeParams.items.setValue(this.dictionaryProperties.columns, new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_number__["a" /* PdfNumber */](this.width));
        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_boolean__["a" /* PdfBoolean */](true));
        decodeParams.items.setValue(this.dictionaryProperties.k, new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_number__["a" /* PdfNumber */](-1));
        decodeParams.items.setValue(this.dictionaryProperties.predictor, new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_number__["a" /* PdfNumber */](15));
        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_number__["a" /* PdfNumber */](this.bitsPerComponent));
        return decodeParams;
    };
    return ImageDecoder;
}());

ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];
ImageDecoder.mJpegHeader = [255, 216];
ImageDecoder.GIF_HEADER = 'G,I,F,8';
ImageDecoder.BMP_HEADER = 'B,M';


/***/ }),
/* 165 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfMargins; });
var PdfMargins = (function () {
    function PdfMargins() {
        this.pdfMargin = 40.0;
        this.setMargins(this.pdfMargin);
    }
    Object.defineProperty(PdfMargins.prototype, "left", {
        get: function () {
            return this.leftMargin;
        },
        set: function (value) {
            this.leftMargin = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfMargins.prototype, "top", {
        get: function () {
            return this.topMargin;
        },
        set: function (value) {
            this.topMargin = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfMargins.prototype, "right", {
        get: function () {
            return this.rightMargin;
        },
        set: function (value) {
            this.rightMargin = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfMargins.prototype, "bottom", {
        get: function () {
            return this.bottomMargin;
        },
        set: function (value) {
            this.bottomMargin = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfMargins.prototype, "all", {
        set: function (value) {
            this.setMargins(value);
        },
        enumerable: true,
        configurable: true
    });
    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {
        if (typeof margin2 === 'undefined') {
            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;
        }
        else {
            if (typeof margin3 === 'undefined') {
                this.leftMargin = this.rightMargin = margin1;
                this.bottomMargin = this.topMargin = margin2;
            }
            else {
                this.leftMargin = margin1;
                this.topMargin = margin2;
                this.rightMargin = margin3;
                this.bottomMargin = margin4;
            }
        }
    };
    PdfMargins.prototype.clone = function () {
        return this;
    };
    return PdfMargins;
}());



/***/ }),
/* 166 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfTransformationMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Matrix; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__ = __webpack_require__(13);


var PdfTransformationMatrix = (function () {
    function PdfTransformationMatrix(value) {
        this.radDegFactor = 180.0 / Math.PI;
        if (typeof value === 'undefined') {
            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);
        }
        else {
            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);
        }
    }
    Object.defineProperty(PdfTransformationMatrix.prototype, "matrix", {
        get: function () {
            return this.transformationMatrix;
        },
        set: function (value) {
            this.transformationMatrix = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {
        this.transformationMatrix.translate(offsetX, offsetY);
    };
    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {
        this.transformationMatrix.elements[0] = scaleX;
        this.transformationMatrix.elements[3] = scaleY;
    };
    PdfTransformationMatrix.prototype.rotate = function (angle) {
        angle = (angle * Math.PI) / 180;
        this.transformationMatrix.elements[0] = Math.cos(angle);
        this.transformationMatrix.elements[1] = Math.sin(angle);
        this.transformationMatrix.elements[2] = -Math.sin(angle);
        this.transformationMatrix.elements[3] = Math.cos(angle);
    };
    PdfTransformationMatrix.prototype.toString = function () {
        var builder = '';
        var whitespace = ' ';
        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {
            var temp = this.matrix.elements[i];
            builder += __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__["a" /* PdfNumber */].floatToString(this.transformationMatrix.elements[i]);
            builder += whitespace;
        }
        return builder;
    };
    PdfTransformationMatrix.prototype.multiply = function (matrix) {
        this.transformationMatrix.multiply(matrix.matrix);
    };
    PdfTransformationMatrix.degreesToRadians = function (degreesX) {
        return this.degRadFactor * degreesX;
    };
    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {
        return this.radDegFactor * radians;
    };
    PdfTransformationMatrix.prototype.clone = function () {
        return this;
    };
    return PdfTransformationMatrix;
}());

PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;
var Matrix = (function () {
    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {
        if (typeof arg1 === 'undefined') {
            this.metrixElements = [];
        }
        else if (typeof arg1 === 'number') {
            this.constructor();
            this.metrixElements.push(arg1);
            this.metrixElements.push(arg2);
            this.metrixElements.push(arg3);
            this.metrixElements.push(arg4);
            this.metrixElements.push(arg5);
            this.metrixElements.push(arg6);
        }
        else {
            this.metrixElements = arg1;
        }
    }
    Object.defineProperty(Matrix.prototype, "elements", {
        get: function () {
            return this.metrixElements;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Matrix.prototype, "offsetX", {
        get: function () {
            return this.metrixElements[4];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Matrix.prototype, "offsetY", {
        get: function () {
            return this.metrixElements[5];
        },
        enumerable: true,
        configurable: true
    });
    Matrix.prototype.translate = function (offsetX, offsetY) {
        this.metrixElements[4] = offsetX;
        this.metrixElements[5] = offsetY;
    };
    Matrix.prototype.transform = function (point) {
        var x = point.x;
        var y = point.y;
        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;
        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;
        return new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */](x2, y2);
    };
    Matrix.prototype.multiply = function (matrix) {
        var tempMatrix = [];
        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);
        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);
        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);
        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);
        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);
        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);
        for (var i = 0; i < tempMatrix.length; i++) {
            this.elements[i] = tempMatrix[i];
        }
    };
    Matrix.prototype.dispose = function () {
        this.metrixElements = null;
    };
    Matrix.prototype.clone = function () {
        var m = new Matrix(this.metrixElements);
        return m;
    };
    return Matrix;
}());



/***/ }),
/* 167 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ObjectType; });
var ObjectType;
(function (ObjectType) {
    ObjectType[ObjectType["Free"] = 0] = "Free";
    ObjectType[ObjectType["Normal"] = 1] = "Normal";
    ObjectType[ObjectType["Packed"] = 2] = "Packed";
})(ObjectType || (ObjectType = {}));


/***/ }),
/* 168 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfMainObjectCollection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ObjectInfo; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__collections_dictionary__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enum__ = __webpack_require__(104);


var PdfMainObjectCollection = (function () {
    function PdfMainObjectCollection() {
        this.objectCollections = [];
        this.mainObjectCollection = new __WEBPACK_IMPORTED_MODULE_0__collections_dictionary__["a" /* Dictionary */]();
        this.primitiveObjectCollection = new __WEBPACK_IMPORTED_MODULE_0__collections_dictionary__["a" /* Dictionary */]();
    }
    Object.defineProperty(PdfMainObjectCollection.prototype, "count", {
        get: function () {
            return this.objectCollections.length;
        },
        enumerable: true,
        configurable: true
    });
    PdfMainObjectCollection.prototype.items = function (index) {
        return this.objectCollections[index];
    };
    Object.defineProperty(PdfMainObjectCollection.prototype, "outIsNew", {
        get: function () {
            return this.isNew;
        },
        enumerable: true,
        configurable: true
    });
    PdfMainObjectCollection.prototype.add = function (element) {
        var objInfo = new ObjectInfo(element);
        this.objectCollections.push(objInfo);
        if (!this.primitiveObjectCollection.containsKey(element)) {
            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);
        }
        element.position = this.index = this.objectCollections.length - 1;
        element.status = __WEBPACK_IMPORTED_MODULE_1__enum__["a" /* ObjectStatus */].Registered;
    };
    PdfMainObjectCollection.prototype.lookFor = function (obj) {
        var index = -1;
        if (obj.position !== -1) {
            return obj.position;
        }
        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {
            index = this.primitiveObjectCollection.getValue(obj);
        }
        else {
            for (var i = this.count - 1; i >= 0; i--) {
                var oi = this.objectCollections[i];
                if (oi.object === obj) {
                    index = i;
                    break;
                }
            }
        }
        return index;
    };
    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {
        this.index = this.lookFor(index);
        var reference;
        this.isNew = false;
        var oi = this.objectCollections[this.index];
        reference = oi.reference;
        var obj = { reference: reference, wasNew: isNew };
        return obj;
    };
    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {
        var result = true;
        found = true;
        this.index = this.lookFor(obj);
        var oi = this.objectCollections[this.index];
        oi.setReference(reference);
        return result;
    };
    return PdfMainObjectCollection;
}());

var ObjectInfo = (function () {
    function ObjectInfo(obj, reference) {
        this.pdfObject = obj;
        this.pdfReference = reference;
    }
    Object.defineProperty(ObjectInfo.prototype, "object", {
        get: function () {
            return this.pdfObject;
        },
        set: function (value) {
            this.pdfObject = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ObjectInfo.prototype, "reference", {
        get: function () {
            return this.pdfReference;
        },
        enumerable: true,
        configurable: true
    });
    ObjectInfo.prototype.setReference = function (reference) {
        this.pdfReference = reference;
    };
    return ObjectInfo;
}());



/***/ }),
/* 169 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfStreamWriter; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pdf_operators__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_string__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_name__ = __webpack_require__(5);





var PdfStreamWriter = (function () {
    function PdfStreamWriter(stream) {
        if (stream == null) {
            throw new Error('ArgumentNullException:stream');
        }
        this.stream = stream;
    }
    PdfStreamWriter.prototype.clear = function () {
        this.stream.clearStream();
    };
    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {
        if (dictionaryName instanceof __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_name__["a" /* PdfName */]) {
            this.stream.write(dictionaryName.toString());
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
            this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setGraphicsState);
        }
        else {
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].slash);
            this.stream.write(dictionaryName);
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
            this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setGraphicsState);
        }
    };
    PdfStreamWriter.prototype.executeObject = function (name) {
        this.stream.write(name.toString());
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].paintXObject);
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
    };
    PdfStreamWriter.prototype.closePath = function () {
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].closePath);
    };
    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].clipPath);
        if (useEvenOddRule) {
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].evenOdd);
        }
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].endPath);
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
    };
    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].closeFillStrokePath);
        if (useEvenOddRule) {
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].evenOdd);
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
        }
        else {
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
        }
    };
    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].fillStroke);
        if (useEvenOddRule) {
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].evenOdd);
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
        }
        else {
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
        }
    };
    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].fill);
        if (useEvenOddRule) {
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].evenOdd);
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
        }
        else {
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
        }
    };
    PdfStreamWriter.prototype.endPath = function () {
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].n);
    };
    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].closePath);
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].fill);
        if (useEvenOddRule) {
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].evenOdd);
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
        }
        else {
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
        }
    };
    PdfStreamWriter.prototype.closeStrokePath = function () {
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].closeStrokePath);
    };
    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {
        this.stream.write(__WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__["a" /* PdfNumber */].floatToString(textScaling));
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setTextScaling);
    };
    PdfStreamWriter.prototype.strokePath = function () {
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].stroke);
    };
    PdfStreamWriter.prototype.restoreGraphicsState = function () {
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].restoreState);
    };
    PdfStreamWriter.prototype.saveGraphicsState = function () {
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].saveState);
    };
    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {
        if (typeof arg1 === 'undefined') {
            this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].goToNextLine);
        }
        else if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["a" /* PointF */]) {
            this.writePoint(arg1);
            this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setCoords);
        }
        else {
            this.writePoint(arg1, arg2);
            this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setCoords);
        }
    };
    PdfStreamWriter.prototype.setLeading = function (leading) {
        this.stream.write(__WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__["a" /* PdfNumber */].floatToString(leading));
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setTextLeading);
    };
    PdfStreamWriter.prototype.beginPath = function (x, y) {
        this.writePoint(x, y);
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].beginPath);
    };
    PdfStreamWriter.prototype.beginText = function () {
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].beginText);
    };
    PdfStreamWriter.prototype.endText = function () {
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].endText);
    };
    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {
        if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["c" /* RectangleF */]) {
            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);
        }
        else {
            this.writePoint(arg1, arg2);
            this.writePoint(arg3, arg4);
            this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].appendRectangle);
        }
    };
    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {
        if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["a" /* PointF */]) {
            this.appendLineSegment(arg1.x, arg1.y);
        }
        else {
            this.writePoint(arg1, arg2);
            this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].appendLineSegment);
        }
    };
    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {
        this.stream.write(renderingMode.toString());
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setRenderingMode);
    };
    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {
        this.stream.write(__WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__["a" /* PdfNumber */].floatToString(charSpacing));
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setCharacterSpace);
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
    };
    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {
        this.stream.write(__WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__["a" /* PdfNumber */].floatToString(wordSpacing));
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setWordSpace);
    };
    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {
        if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_string__["b" /* PdfString */]) {
            this.checkTextParam(arg1);
            this.writeText(arg1);
            this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setTextOnNewLine);
        }
        else {
            this.checkTextParam(arg1);
            this.writeText(arg1, arg2);
            this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setTextOnNewLine);
        }
    };
    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {
        if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_name__["a" /* PdfName */] && typeof arg2 === 'boolean') {
            var temparg1 = arg1;
            var temparg2 = arg2;
            var op = (temparg2) ? __WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].selectcolorspaceforstroking : __WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].selectcolorspacefornonstroking;
            this.stream.write(temparg1.toString());
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
            this.stream.write(op);
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
        }
        else {
            var temparg1 = arg1;
            var temparg2 = arg2;
            this.setColorSpace(new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_name__["a" /* PdfName */](temparg1), temparg2);
        }
    };
    PdfStreamWriter.prototype.modifyCtm = function (matrix) {
        if (matrix == null) {
            throw new Error('ArgumentNullException:matrix');
        }
        this.stream.write(matrix.toString());
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].modifyCtm);
    };
    PdfStreamWriter.prototype.setFont = function (font, name, size) {
        if (typeof name === 'string') {
            this.setFont(font, new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_name__["a" /* PdfName */](name), size);
        }
        else {
            if (font == null) {
                throw new Error('ArgumentNullException:font');
            }
            this.stream.write(name.toString());
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
            this.stream.write(__WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__["a" /* PdfNumber */].floatToString(size));
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
            this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setFont);
        }
    };
    PdfStreamWriter.prototype.writeOperator = function (opcode) {
        this.stream.write(opcode);
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
    };
    PdfStreamWriter.prototype.checkTextParam = function (text) {
        if (text == null) {
            throw new Error('ArgumentNullException:text');
        }
        if (typeof text === 'string' && text === '') {
            throw new Error('ArgumentException:The text can not be an empty string, text');
        }
    };
    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {
        if ((arg1 instanceof __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_string__["b" /* PdfString */]) && (typeof arg2 === 'undefined')) {
            this.stream.write(arg1.value);
        }
        else {
            var start = void 0;
            var end = void 0;
            if (arg2) {
                start = __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_string__["b" /* PdfString */].hexStringMark[0];
                end = __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_string__["b" /* PdfString */].hexStringMark[1];
            }
            else {
                start = __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_string__["b" /* PdfString */].stringMark[0];
                end = __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_string__["b" /* PdfString */].stringMark[1];
            }
            this.stream.write(start);
            this.stream.write(arg1);
            this.stream.write(end);
        }
    };
    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {
        if ((arg1 instanceof __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["a" /* PointF */]) && (typeof arg2 === 'undefined')) {
            this.writePoint(arg1.x, arg1.y);
        }
        else {
            var temparg1 = arg1;
            this.stream.write(__WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__["a" /* PdfNumber */].floatToString(temparg1));
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
            arg2 = this.updateY(arg2);
            this.stream.write(__WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__["a" /* PdfNumber */].floatToString(arg2));
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
        }
    };
    PdfStreamWriter.prototype.updateY = function (arg) {
        return -arg;
    };
    PdfStreamWriter.prototype.write = function (string) {
        var builder = '';
        builder += string;
        builder += __WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine;
        this.writeOperator(builder);
    };
    PdfStreamWriter.prototype.writeComment = function (comment) {
        if (comment != null && comment.length > 0) {
            var builder = '';
            builder += __WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].comment;
            builder += __WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace;
            builder += comment;
            this.writeOperator(builder);
        }
        else {
            throw new Error('Invalid comment');
        }
    };
    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {
        if (!color.isEmpty) {
            this.stream.write(color.toString(colorSpace, forStroking));
            this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
        }
    };
    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {
        this.setLineDashPatternHelper(pattern, patternOffset);
    };
    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {
        var tempPattern = '[';
        if (pattern.length > 1) {
            for (var index = 0; index < pattern.length; index++) {
                if (index === pattern.length - 1) {
                    tempPattern += pattern[index].toString();
                }
                else {
                    tempPattern += pattern[index].toString() + ' ';
                }
            }
        }
        tempPattern += '] ';
        tempPattern += patternOffset.toString();
        tempPattern += ' ' + __WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setDashPattern;
        this.stream.write(tempPattern);
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].newLine);
    };
    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {
        this.stream.write(__WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__["a" /* PdfNumber */].floatToString(miterLimit));
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setMiterLimit);
    };
    PdfStreamWriter.prototype.setLineWidth = function (width) {
        this.stream.write(__WEBPACK_IMPORTED_MODULE_1__primitives_pdf_number__["a" /* PdfNumber */].floatToString(width));
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setLineWidth);
    };
    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {
        this.stream.write((lineCapStyle).toString());
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setLineCapStyle);
    };
    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {
        this.stream.write((lineJoinStyle).toString());
        this.stream.write(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].whiteSpace);
        this.writeOperator(__WEBPACK_IMPORTED_MODULE_0__pdf_operators__["a" /* Operators */].setLineJoinStyle);
    };
    Object.defineProperty(PdfStreamWriter.prototype, "position", {
        get: function () {
            return this.stream.position;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStreamWriter.prototype, "length", {
        get: function () {
            var returnValue = 0;
            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {
                for (var index = 0; index < this.stream.data.length; index++) {
                    returnValue += this.stream.data[index].length;
                }
            }
            return returnValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStreamWriter.prototype, "document", {
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    return PdfStreamWriter;
}());



/***/ }),
/* 170 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfWriter; });
var PdfWriter = (function () {
    function PdfWriter(stream) {
        this.streamWriter = stream;
    }
    Object.defineProperty(PdfWriter.prototype, "document", {
        get: function () {
            return this.pdfDocument;
        },
        set: function (value) {
            this.pdfDocument = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfWriter.prototype, "position", {
        get: function () {
            return this.streamWriter.buffer.size;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfWriter.prototype, "length", {
        get: function () {
            return this.streamWriter.buffer.size;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfWriter.prototype, "stream", {
        get: function () {
            var result = this.streamWriter;
            return result;
        },
        enumerable: true,
        configurable: true
    });
    PdfWriter.prototype.write = function (overload) {
        var data = [];
        var tempOverload = overload;
        this.streamWriter.write(tempOverload);
    };
    return PdfWriter;
}());



/***/ }),
/* 171 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PageAddedEventArgs; });
var PageAddedEventArgs = (function () {
    function PageAddedEventArgs(page) {
        if (typeof page !== 'undefined') {
            this.pdfPage = page;
        }
        else {
            this.pdfPage = null;
        }
    }
    Object.defineProperty(PageAddedEventArgs.prototype, "page", {
        get: function () {
            return this.pdfPage;
        },
        enumerable: true,
        configurable: true
    });
    return PageAddedEventArgs;
}());



/***/ }),
/* 172 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfDocumentPageCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pdf_page__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__collections_dictionary__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__enum__ = __webpack_require__(26);



var PdfDocumentPageCollection = (function () {
    function PdfDocumentPageCollection(document) {
        this.pdfPageCollectionIndex = new __WEBPACK_IMPORTED_MODULE_1__collections_dictionary__["a" /* Dictionary */]();
        this.previousPageOrientation = __WEBPACK_IMPORTED_MODULE_2__enum__["a" /* PdfPageOrientation */].Portrait;
        this.document = document;
    }
    Object.defineProperty(PdfDocumentPageCollection.prototype, "count", {
        get: function () {
            return this.countPages();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentPageCollection.prototype, "pageCollectionIndex", {
        get: function () {
            return this.pdfPageCollectionIndex;
        },
        enumerable: true,
        configurable: true
    });
    PdfDocumentPageCollection.prototype.add = function (page) {
        if (typeof page === 'undefined') {
            var page_1 = new __WEBPACK_IMPORTED_MODULE_0__pdf_page__["a" /* PdfPage */]();
            this.add(page_1);
            return page_1;
        }
        else {
            var section = this.getLastSection();
            if (section.pageSettings.orientation !== this.previousPageOrientation) {
                section = this.document.sections.add();
                section.pageSettings.orientation = this.document.pageSettings.orientation;
            }
            section.add(page);
        }
    };
    PdfDocumentPageCollection.prototype.getLastSection = function () {
        var sc = this.document.sections;
        if (sc.section.length === 0) {
            sc.add();
        }
        var section = sc.section[sc.section.length - 1];
        return section;
    };
    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {
    };
    PdfDocumentPageCollection.prototype.countPages = function () {
        var sc = this.document.sections;
        var count = 0;
        for (var index = 0; index < sc.section.length; index++) {
            count += sc.section[index].count;
        }
        return count;
    };
    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {
        return this.getPage(index);
    };
    PdfDocumentPageCollection.prototype.getPage = function (index) {
        if ((index < 0) || (index >= this.count)) {
            throw Error('ArgumentOutOfRangeException("index", "Value can not be less 0")');
        }
        var page = null;
        var sectionStartIndex = 0;
        var sectionCount = 0;
        var pageIndex = 0;
        var length = this.document.sections.count;
        for (var i = 0; i < length; i++) {
            var section = this.document.sections.section[i];
            sectionCount = section.count;
            pageIndex = index - sectionStartIndex;
            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {
                page = section.getPages()[pageIndex];
                break;
            }
            sectionStartIndex += sectionCount;
        }
        return page;
    };
    PdfDocumentPageCollection.prototype.indexOf = function (page) {
        var index = -1;
        if (page == null) {
            throw new Error('ArgumentNullException: page');
        }
        else {
            var numPages = 0;
            for (var i = 0, len = this.document.sections.count; i < len; i++) {
                var section = this.document.sections.pdfSectionCollection(i);
                index = section.indexOf(page);
                if (index >= 0) {
                    index += numPages;
                    break;
                }
                else {
                    index = -1;
                }
                numPages += section.count;
            }
        }
        return index;
    };
    PdfDocumentPageCollection.prototype.remove = function (page) {
        if (page == null) {
            throw Error('ArgumentNullException("page")');
        }
        var section = null;
        var len;
        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {
            section = this.document.sections.pdfSectionCollection(i);
            if (section.pages.contains(page)) {
                section.pages.remove(page);
                break;
            }
        }
        return section;
    };
    return PdfDocumentPageCollection;
}());



/***/ }),
/* 173 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfPageSettings; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pdf_page_size__ = __webpack_require__(174);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__enum__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__graphics_pdf_margins__ = __webpack_require__(165);




var PdfPageSettings = (function () {
    function PdfPageSettings(margins) {
        this.pageMargins = new __WEBPACK_IMPORTED_MODULE_3__graphics_pdf_margins__["a" /* PdfMargins */]();
        this.pageSize = __WEBPACK_IMPORTED_MODULE_1__pdf_page_size__["a" /* PdfPageSize */].a4;
        this.rotateAngle = __WEBPACK_IMPORTED_MODULE_2__enum__["b" /* PdfPageRotateAngle */].RotateAngle0;
        this.pageOrientation = __WEBPACK_IMPORTED_MODULE_2__enum__["a" /* PdfPageOrientation */].Portrait;
        this.pageOrigin = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */](0, 0);
        this.isRotation = false;
        if (typeof margins === 'number') {
            this.pageMargins.setMargins(margins);
        }
    }
    Object.defineProperty(PdfPageSettings.prototype, "size", {
        get: function () {
            return this.pageSize;
        },
        set: function (value) {
            this.setSize(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageSettings.prototype, "orientation", {
        get: function () {
            return this.pageOrientation;
        },
        set: function (orientation) {
            if (this.pageOrientation !== orientation) {
                this.pageOrientation = orientation;
                this.updateSize(orientation);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageSettings.prototype, "margins", {
        get: function () {
            return this.pageMargins;
        },
        set: function (value) {
            this.pageMargins = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageSettings.prototype, "width", {
        get: function () {
            return this.pageSize.width;
        },
        set: function (value) {
            this.pageSize.width = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageSettings.prototype, "height", {
        get: function () {
            return this.pageSize.height;
        },
        set: function (value) {
            this.pageSize.height = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageSettings.prototype, "origin", {
        get: function () {
            return this.pageOrigin;
        },
        set: function (value) {
            this.pageOrigin = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageSettings.prototype, "rotate", {
        get: function () {
            return this.rotateAngle;
        },
        set: function (value) {
            this.rotateAngle = value;
            this.isRotation = true;
        },
        enumerable: true,
        configurable: true
    });
    PdfPageSettings.prototype.updateSize = function (orientation) {
        var min = Math.min(this.pageSize.width, this.pageSize.height);
        var max = Math.max(this.pageSize.width, this.pageSize.height);
        switch (orientation) {
            case __WEBPACK_IMPORTED_MODULE_2__enum__["a" /* PdfPageOrientation */].Portrait:
                this.pageSize = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](min, max);
                break;
            case __WEBPACK_IMPORTED_MODULE_2__enum__["a" /* PdfPageOrientation */].Landscape:
                this.pageSize = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](max, min);
                break;
        }
    };
    PdfPageSettings.prototype.clone = function () {
        var settings = this;
        settings.pageMargins = this.pageMargins.clone();
        return settings;
    };
    PdfPageSettings.prototype.getActualSize = function () {
        var width = this.width - (this.margins.left + this.margins.right);
        var height = this.height - (this.margins.top + this.margins.bottom);
        var size = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](width, height);
        return size;
    };
    PdfPageSettings.prototype.setSize = function (size) {
        var min = Math.min(size.width, size.height);
        var max = Math.max(size.width, size.height);
        if (this.orientation === __WEBPACK_IMPORTED_MODULE_2__enum__["a" /* PdfPageOrientation */].Portrait) {
            this.pageSize = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](min, max);
        }
        else {
            this.pageSize = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](max, min);
        }
    };
    return PdfPageSettings;
}());



/***/ }),
/* 174 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfPageSize; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__ = __webpack_require__(4);

var PdfPageSize = (function () {
    function PdfPageSize() {
    }
    return PdfPageSize;
}());

PdfPageSize.letter = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](612, 792);
PdfPageSize.note = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](540, 720);
PdfPageSize.legal = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](612, 1008);
PdfPageSize.a0 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](2380, 3368);
PdfPageSize.a1 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](1684, 2380);
PdfPageSize.a2 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](1190, 1684);
PdfPageSize.a3 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](842, 1190);
PdfPageSize.a4 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](595, 842);
PdfPageSize.a5 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](421, 595);
PdfPageSize.a6 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](297, 421);
PdfPageSize.a7 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](210, 297);
PdfPageSize.a8 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](148, 210);
PdfPageSize.a9 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](105, 148);
PdfPageSize.a10 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](74, 105);
PdfPageSize.b0 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](2836, 4008);
PdfPageSize.b1 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](2004, 2836);
PdfPageSize.b2 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](1418, 2004);
PdfPageSize.b3 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](1002, 1418);
PdfPageSize.b4 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](709, 1002);
PdfPageSize.b5 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](501, 709);
PdfPageSize.archE = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](2592, 3456);
PdfPageSize.archD = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](1728, 2592);
PdfPageSize.archC = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](1296, 1728);
PdfPageSize.archB = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](864, 1296);
PdfPageSize.archA = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](648, 864);
PdfPageSize.flsa = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](612, 936);
PdfPageSize.halfLetter = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](396, 612);
PdfPageSize.letter11x17 = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](792, 1224);
PdfPageSize.ledger = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["b" /* SizeF */](1224, 792);


/***/ }),
/* 175 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfSectionPageCollection; });
var PdfSectionPageCollection = (function () {
    function PdfSectionPageCollection(section) {
        this.pdfSection = null;
        if (section == null) {
            throw Error('ArgumentNullException("section")');
        }
        this.section = section;
    }
    Object.defineProperty(PdfSectionPageCollection.prototype, "section", {
        get: function () {
            return this.pdfSection;
        },
        set: function (value) {
            this.pdfSection = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfSectionPageCollection.prototype.contains = function (page) {
        return this.section.contains(page);
    };
    PdfSectionPageCollection.prototype.remove = function (page) {
        this.section.remove(page);
    };
    PdfSectionPageCollection.prototype.add = function () {
        return this.section.add();
    };
    return PdfSectionPageCollection;
}());



/***/ }),
/* 176 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfSectionTemplate; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__document_pdf_document_template__ = __webpack_require__(98);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var PdfSectionTemplate = (function (_super) {
    __extends(PdfSectionTemplate, _super);
    function PdfSectionTemplate() {
        var _this = _super.call(this) || this;
        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;
        return _this;
    }
    Object.defineProperty(PdfSectionTemplate.prototype, "applyDocumentLeftTemplate", {
        get: function () {
            return this.leftValue;
        },
        set: function (value) {
            this.leftValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSectionTemplate.prototype, "applyDocumentTopTemplate", {
        get: function () {
            return this.topValue;
        },
        set: function (value) {
            this.topValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSectionTemplate.prototype, "applyDocumentRightTemplate", {
        get: function () {
            return this.rightValue;
        },
        set: function (value) {
            this.rightValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSectionTemplate.prototype, "applyDocumentBottomTemplate", {
        get: function () {
            return this.bottomValue;
        },
        set: function (value) {
            this.bottomValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSectionTemplate.prototype, "applyDocumentStamps", {
        get: function () {
            return this.stampValue;
        },
        set: function (value) {
            this.stampValue = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfSectionTemplate;
}(__WEBPACK_IMPORTED_MODULE_0__document_pdf_document_template__["a" /* PdfDocumentTemplate */]));



/***/ }),
/* 177 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfSection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PageSettingsState; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pdf_page__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__page_added_event_arguments__ = __webpack_require__(171);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_reference__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_array__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_number__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_dictionary__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__input_output_pdf_dictionary_properties__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__pdf_section_collection__ = __webpack_require__(109);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__pdf_section_page_collection__ = __webpack_require__(175);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__pdf_section_templates__ = __webpack_require__(176);













var PdfSection = (function () {
    function PdfSection(document, pageSettings) {
        this.pageAdded = new __WEBPACK_IMPORTED_MODULE_1__page_added_event_arguments__["a" /* PageAddedEventArgs */]();
        this.pdfPages = [];
        this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_7__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        if (typeof pageSettings === 'undefined') {
            this.constructor(document, document.pageSettings);
        }
        else {
            this.pdfDocument = document;
            this.settings = pageSettings.clone();
            this.initialSettings = this.settings.clone();
            this.initialize();
        }
    }
    Object.defineProperty(PdfSection.prototype, "parent", {
        get: function () {
            return this.sectionCollection;
        },
        set: function (value) {
            this.sectionCollection = value;
            this.section.items.setValue(this.dictionaryProperties.parent, new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_reference__["b" /* PdfReferenceHolder */](value));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSection.prototype, "parentDocument", {
        get: function () {
            return this.pdfDocument;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSection.prototype, "pageSettings", {
        get: function () {
            return this.settings;
        },
        set: function (value) {
            if (value != null) {
                this.settings = value;
            }
            else {
                throw Error('Value can not be null.');
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSection.prototype, "element", {
        get: function () {
            return this.section;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSection.prototype, "count", {
        get: function () {
            return this.pagesReferences.count;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSection.prototype, "template", {
        get: function () {
            if (this.pageTemplate == null) {
                this.pageTemplate = new __WEBPACK_IMPORTED_MODULE_11__pdf_section_templates__["a" /* PdfSectionTemplate */]();
            }
            return this.pageTemplate;
        },
        set: function (value) {
            this.pageTemplate = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSection.prototype, "document", {
        get: function () {
            return this.sectionCollection.document;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSection.prototype, "pages", {
        get: function () {
            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {
                this.pagesCollection = new __WEBPACK_IMPORTED_MODULE_9__pdf_section_page_collection__["a" /* PdfSectionPageCollection */](this);
            }
            return this.pagesCollection;
        },
        enumerable: true,
        configurable: true
    });
    PdfSection.prototype.getPages = function () {
        return this.pdfPages;
    };
    PdfSection.prototype.pointToNativePdf = function (page, point) {
        var bounds = this.getActualBounds(page, true);
        point.x += bounds.x;
        point.y = this.pageSettings.height - (point.y);
        return point;
    };
    PdfSection.prototype.setPageSettings = function (settings) {
        this.settings = settings;
        this.state.orientation = settings.orientation;
        this.state.rotate = settings.rotate;
        this.state.size = settings.size;
        this.state.origin = settings.origin;
    };
    PdfSection.prototype.initialize = function () {
        this.pagesReferences = new __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_array__["a" /* PdfArray */]();
        this.section = new __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_dictionary__["a" /* PdfDictionary */]();
        this.state = new PageSettingsState(this.pdfDocument);
        this.section.sectionBeginSave = new __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_dictionary__["d" /* SaveSectionEventHandler */](this, this.state);
        this.pageCount = new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_number__["a" /* PdfNumber */](0);
        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);
        this.section.items.setValue(this.dictionaryProperties.type, new __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.pages));
        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);
    };
    PdfSection.prototype.containsTemplates = function (document, page, foreground) {
        var documentHeaders = this.getDocumentTemplates(document, page, true, foreground);
        var documentTemplates = this.getDocumentTemplates(document, page, false, foreground);
        var contains = (documentHeaders.length > 0 || documentTemplates.length > 0);
        return contains;
    };
    PdfSection.prototype.getDocumentTemplates = function (document, page, headers, foreground) {
        var templates = [];
        if (headers) {
            if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {
                if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {
                    templates.push(document.template.getTop(page));
                }
            }
            if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {
                if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {
                    templates.push(document.template.getBottom(page));
                }
            }
            if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {
                if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {
                    templates.push(document.template.getLeft(page));
                }
            }
            if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {
                if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {
                    templates.push(document.template.getRight(page));
                }
            }
        }
        return templates;
    };
    PdfSection.prototype.add = function (page) {
        if (typeof page === 'undefined') {
            var page_1 = new __WEBPACK_IMPORTED_MODULE_0__pdf_page__["a" /* PdfPage */]();
            this.add(page_1);
            return page_1;
        }
        else {
            var r = this.checkPresence(page);
            this.pdfPages.push(page);
            this.pagesReferences.add(r);
            page.setSection(this);
            page.resetProgress();
            this.pageAddedMethod(page);
        }
    };
    PdfSection.prototype.checkPresence = function (page) {
        var rh = new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_reference__["b" /* PdfReferenceHolder */](page);
        var contains = false;
        var sc = this.parent;
        for (var index = 0; index < sc.section.length; index++) {
            var section = sc.section[index];
            contains = contains || section.contains(page);
        }
        return rh;
    };
    PdfSection.prototype.contains = function (page) {
        var index = this.indexOf(page);
        return (0 <= index);
    };
    PdfSection.prototype.indexOf = function (page) {
        for (var index = 0; index < this.pdfPages.length; index++) {
            if (this.pdfPages[index] === page) {
                return this.pdfPages.indexOf(page);
            }
        }
        var r = new __WEBPACK_IMPORTED_MODULE_2__primitives_pdf_reference__["b" /* PdfReferenceHolder */](page);
        return this.pagesReferences.indexOf(r);
    };
    PdfSection.prototype.pageAddedMethod = function (page) {
        var args = new __WEBPACK_IMPORTED_MODULE_1__page_added_event_arguments__["a" /* PageAddedEventArgs */](page);
        this.onPageAdded(args);
        var parent = this.parent;
        parent.document.pages.onPageAdded(args);
        this.pageCount.intValue = this.count;
    };
    PdfSection.prototype.onPageAdded = function (args) {
    };
    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {
        if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_0__pdf_page__["a" /* PdfPage */] && typeof arg2 === 'boolean') {
            var result = void 0;
            var document_1 = this.parent.document;
            result = this.getActualBounds(document_1, arg1, arg2);
            return result;
        }
        else {
            arg1 = arg1;
            arg2 = arg2;
            arg3 = arg3;
            var bounds = new __WEBPACK_IMPORTED_MODULE_10__drawing_pdf_drawing__["c" /* RectangleF */](0, 0, 0, 0);
            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;
            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;
            var left = this.getLeftIndentWidth(arg1, arg2, arg3);
            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);
            var right = this.getRightIndentWidth(arg1, arg2, arg3);
            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);
            bounds.x += left;
            bounds.y += top_1;
            bounds.width -= (left + right);
            bounds.height -= (top_1 + bottom);
            return bounds;
        }
    };
    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {
        if (document == null) {
            throw new Error('ArgumentNullException:document');
        }
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var value = (includeMargins) ? this.pageSettings.margins.left : 0;
        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;
        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;
        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;
        return value;
    };
    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {
        if (document == null) {
            throw new Error('ArgumentNullException:document');
        }
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var value = (includeMargins) ? this.pageSettings.margins.top : 0;
        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;
        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;
        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;
        return value;
    };
    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {
        if (document == null) {
            throw new Error('ArgumentNullException:document');
        }
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var value = (includeMargins) ? this.pageSettings.margins.right : 0;
        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;
        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;
        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;
        return value;
    };
    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {
        if (document == null) {
            throw new Error('ArgumentNullException:document');
        }
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;
        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;
        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;
        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;
        return value;
    };
    PdfSection.prototype.remove = function (page) {
        if (page == null) {
            throw Error('ArgumentNullException("page")');
        }
        var index = this.pdfPages.indexOf(page);
        this.pagesReferences.removeAt(index);
        var temproaryPages = [];
        for (var j = 0; j < index; j++) {
            temproaryPages.push(this.pdfPages[j]);
        }
        for (var j = index + 1; j < this.pdfPages.length; j++) {
            temproaryPages.push(this.pdfPages[j]);
        }
        this.pdfPages = temproaryPages;
    };
    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {
        var bounds = new __WEBPACK_IMPORTED_MODULE_10__drawing_pdf_drawing__["c" /* RectangleF */](state.origin, state.size);
        container.items.setValue(this.dictionaryProperties.mediaBox, __WEBPACK_IMPORTED_MODULE_3__primitives_pdf_array__["a" /* PdfArray */].fromRectangle(bounds));
        var rotate = 0;
        rotate = __WEBPACK_IMPORTED_MODULE_8__pdf_section_collection__["a" /* PdfSectionCollection */].rotateFactor * state.rotate;
        var angle = new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_number__["a" /* PdfNumber */](rotate);
        container.items.setValue(this.dictionaryProperties.rotate, angle);
    };
    PdfSection.prototype.beginSave = function (state, writer) {
        var doc = writer.document;
        this.applyPageSettings(this.section, doc.pageSettings, state);
    };
    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {
        var documentHeaders = this.getDocumentTemplates(document, page, true, foreground);
        var documentTemplates = this.getDocumentTemplates(document, page, false, foreground);
        if (foreground) {
            this.drawTemplatesHelper(layer, document, documentHeaders);
            this.drawTemplatesHelper(layer, document, documentTemplates);
        }
        else {
            this.drawTemplatesHelper(layer, document, documentHeaders);
            this.drawTemplatesHelper(layer, document, documentTemplates);
        }
    };
    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {
        if (templates != null && templates.length > 0) {
            var len = templates.length;
            for (var i = 0; i < len; i++) {
                var template = templates[i];
                template.draw(layer, document);
            }
        }
    };
    return PdfSection;
}());

var PageSettingsState = (function () {
    function PageSettingsState(document) {
        this.pageOrientation = document.pageSettings.orientation;
        this.pageRotate = document.pageSettings.rotate;
        this.pageSize = document.pageSettings.size;
        this.pageOrigin = document.pageSettings.origin;
    }
    Object.defineProperty(PageSettingsState.prototype, "orientation", {
        get: function () {
            return this.pageOrientation;
        },
        set: function (value) {
            this.pageOrientation = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageSettingsState.prototype, "rotate", {
        get: function () {
            return this.pageRotate;
        },
        set: function (value) {
            this.pageRotate = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageSettingsState.prototype, "size", {
        get: function () {
            return this.pageSize;
        },
        set: function (value) {
            this.pageSize = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageSettingsState.prototype, "origin", {
        get: function () {
            return this.pageOrigin;
        },
        set: function (value) {
            this.pageOrigin = value;
        },
        enumerable: true,
        configurable: true
    });
    return PageSettingsState;
}());



/***/ }),
/* 178 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfGridColumn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PdfGridColumnCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pdf_grid_cell__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__graphics_fonts_pdf_string_format__ = __webpack_require__(32);


var PdfGridColumn = (function () {
    function PdfGridColumn(grid) {
        this.columnWidth = 0;
        this.grid = grid;
    }
    Object.defineProperty(PdfGridColumn.prototype, "width", {
        get: function () {
            return this.columnWidth;
        },
        set: function (value) {
            this.isCustomWidth = true;
            this.columnWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridColumn.prototype, "format", {
        get: function () {
            if (this.stringFormat == null) {
                this.stringFormat = new __WEBPACK_IMPORTED_MODULE_1__graphics_fonts_pdf_string_format__["a" /* PdfStringFormat */]();
            }
            return this.stringFormat;
        },
        set: function (value) {
            this.stringFormat = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGridColumn;
}());

var PdfGridColumnCollection = (function () {
    function PdfGridColumnCollection(grid) {
        this.internalColumns = [];
        this.columnWidth = 0;
        this.grid = grid;
        this.internalColumns = [];
    }
    PdfGridColumnCollection.prototype.add = function (count) {
        for (var i = 0; i < count; i++) {
            this.internalColumns.push(new PdfGridColumn(this.grid));
            for (var index = 0; index < this.grid.rows.count; index++) {
                var row = this.grid.rows.getRow(index);
                var cell = new __WEBPACK_IMPORTED_MODULE_0__pdf_grid_cell__["a" /* PdfGridCell */]();
                cell.value = '';
                row.cells.add(cell);
            }
        }
    };
    Object.defineProperty(PdfGridColumnCollection.prototype, "count", {
        get: function () {
            return this.internalColumns.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridColumnCollection.prototype, "width", {
        get: function () {
            if (this.columnWidth === 0) {
                this.columnWidth = this.measureColumnsWidth();
            }
            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {
                this.columnWidth = this.grid.initialWidth;
                this.grid.isPageWidth = true;
            }
            return this.columnWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridColumnCollection.prototype, "columns", {
        get: function () {
            return this.internalColumns;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridColumnCollection.prototype.getColumn = function (index) {
        if (index >= 0 && index <= this.columns.length) {
            return this.columns[index];
        }
        else {
            throw Error('can not get the column from the index: ' + index);
        }
    };
    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {
        var totalWidth = 0;
        for (var i = 0, count = this.internalColumns.length; i < count; i++) {
            totalWidth += this.internalColumns[i].width;
        }
        return totalWidth;
    };
    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {
        var widths = [];
        var summ = 0.0;
        var subFactor = this.count;
        for (var i = 0; i < this.count; i++) {
            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {
                this.internalColumns[i].width = 0;
            }
            else {
                widths[i] = this.internalColumns[i].width;
                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {
                    totalWidth -= this.internalColumns[i].width;
                    subFactor--;
                }
                else {
                    widths[i] = 0;
                }
            }
        }
        for (var i = 0; i < this.count; i++) {
            var width = totalWidth / subFactor;
            if (widths[i] <= 0) {
                widths[i] = width;
            }
        }
        return widths;
    };
    return PdfGridColumnCollection;
}());



/***/ }),
/* 179 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfGridRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PdfGridRowCollection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return PdfGridHeaderCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pdf_grid_cell__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__styles_style__ = __webpack_require__(50);


var PdfGridRow = (function () {
    function PdfGridRow(grid) {
        this.gridRowOverflowIndex = 0;
        this.isRowHeightSet = false;
        this.isRowMergeComplete = true;
        this.pdfGrid = grid;
    }
    Object.defineProperty(PdfGridRow.prototype, "rowSpanExists", {
        get: function () {
            return this.bRowSpanExists;
        },
        set: function (value) {
            this.bRowSpanExists = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "cells", {
        get: function () {
            if (this.gridCells == null) {
                this.gridCells = new __WEBPACK_IMPORTED_MODULE_0__pdf_grid_cell__["b" /* PdfGridCellCollection */](this);
            }
            return this.gridCells;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "grid", {
        get: function () {
            return this.pdfGrid;
        },
        set: function (value) {
            this.pdfGrid = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "style", {
        get: function () {
            if (typeof this.rowStyle === 'undefined') {
                this.rowStyle = new __WEBPACK_IMPORTED_MODULE_1__styles_style__["d" /* PdfGridRowStyle */]();
                this.rowStyle.setParent(this);
            }
            return this.rowStyle;
        },
        set: function (value) {
            this.rowStyle = value;
            for (var i = 0; i < this.cells.count; i++) {
                this.cells.getCell(i).style.borders = value.border;
                if (typeof value.font !== 'undefined') {
                    this.cells.getCell(i).style.font = value.font;
                }
                if (typeof value.backgroundBrush !== 'undefined') {
                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;
                }
                if (typeof value.textBrush !== 'undefined') {
                    this.cells.getCell(i).style.textBrush = value.textBrush;
                }
                if (typeof value.textPen !== 'undefined') {
                    this.cells.getCell(i).style.textPen = value.textPen;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "rowBreakHeight", {
        get: function () {
            if (typeof this.gridRowBreakHeight === 'undefined') {
                this.gridRowBreakHeight = 0;
            }
            return this.gridRowBreakHeight;
        },
        set: function (value) {
            this.gridRowBreakHeight = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "rowOverflowIndex", {
        get: function () {
            return this.gridRowOverflowIndex;
        },
        set: function (value) {
            this.gridRowOverflowIndex = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "height", {
        get: function () {
            if (!this.isRowHeightSet) {
                this.rowHeight = this.measureHeight();
            }
            return this.rowHeight;
        },
        set: function (value) {
            this.rowHeight = value;
            this.isRowHeightSet = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "columnSpanExists", {
        get: function () {
            return this.bColumnSpanExists;
        },
        set: function (value) {
            this.bColumnSpanExists = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "rowMergeComplete", {
        get: function () {
            return this.isRowMergeComplete;
        },
        set: function (value) {
            this.isRowMergeComplete = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "rowIndex", {
        get: function () {
            return this.grid.rows.rowCollection.indexOf(this);
        },
        enumerable: true,
        configurable: true
    });
    PdfGridRow.prototype.measureHeight = function () {
        var rowSpanRemainingHeight = 0;
        var rowHeight;
        var maxHeight = 0;
        rowHeight = this.cells.getCell(0).height;
        for (var i = 0; i < this.cells.count; i++) {
            var cell = this.cells.getCell(i);
            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {
                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;
            }
            this.rowMergeComplete = false;
            if (cell.rowSpan > 1) {
                if (maxHeight < cell.height) {
                    maxHeight = cell.height;
                }
                continue;
            }
            rowHeight = Math.max(rowHeight, cell.height);
        }
        if (rowHeight === 0) {
            rowHeight = maxHeight;
        }
        else if (rowSpanRemainingHeight > 0) {
            rowHeight += rowSpanRemainingHeight;
        }
        return rowHeight;
    };
    return PdfGridRow;
}());

var PdfGridRowCollection = (function () {
    function PdfGridRowCollection(grid) {
        this.rows = [];
        this.grid = grid;
    }
    Object.defineProperty(PdfGridRowCollection.prototype, "count", {
        get: function () {
            return this.rows.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRowCollection.prototype, "rowCollection", {
        get: function () {
            return this.rows;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridRowCollection.prototype.addRow = function (arg) {
        if (typeof arg === 'undefined') {
            var temprow = new PdfGridRow(this.grid);
            this.addRow(temprow);
            return temprow;
        }
        else {
            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);
            arg.style.setFont(this.grid.style.font);
            arg.style.setTextBrush(this.grid.style.textBrush);
            arg.style.setTextPen(this.grid.style.textPen);
            if (arg.cells.count === 0) {
                for (var i = 0; i < this.grid.columns.count; i++) {
                    arg.cells.add(new __WEBPACK_IMPORTED_MODULE_0__pdf_grid_cell__["a" /* PdfGridCell */]());
                }
            }
            this.rows.push(arg);
        }
    };
    PdfGridRowCollection.prototype.getRow = function (index) {
        return this.rows[index];
    };
    return PdfGridRowCollection;
}());

var PdfGridHeaderCollection = (function () {
    function PdfGridHeaderCollection(grid) {
        this.rows = [];
        this.grid = grid;
        this.rows = [];
    }
    PdfGridHeaderCollection.prototype.getHeader = function (index) {
        return (this.rows[index]);
    };
    Object.defineProperty(PdfGridHeaderCollection.prototype, "count", {
        get: function () {
            return this.rows.length;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridHeaderCollection.prototype.add = function (arg) {
        if (typeof arg === 'number') {
            var row = void 0;
            for (var i = 0; i < arg; i++) {
                row = new PdfGridRow(this.grid);
                for (var j = 0; j < this.grid.columns.count; j++) {
                    row.cells.add(new __WEBPACK_IMPORTED_MODULE_0__pdf_grid_cell__["a" /* PdfGridCell */]());
                }
                this.rows.push(row);
            }
            return this.rows;
        }
        else {
            this.rows.push(arg);
        }
    };
    PdfGridHeaderCollection.prototype.indexOf = function (row) {
        return this.rows.indexOf(row);
    };
    return PdfGridHeaderCollection;
}());



/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(2), __webpack_require__(3), __webpack_require__(35), __webpack_require__(18), __webpack_require__(53)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, util_1, events, row_renderer_1, cell_renderer_1, row_model_generator_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BatchEdit = (function () {
        function BatchEdit(parent, serviceLocator, renderer) {
            this.cellDetails = {};
            this.parent = parent;
            this.serviceLocator = serviceLocator;
            this.renderer = renderer;
            this.addEventListener();
        }
        BatchEdit.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.click, this.clickHandler, this);
            this.parent.on(events.dblclick, this.dblClickHandler, this);
            this.parent.on(events.keyPressed, this.keyPressHandler, this);
            this.parent.addEventListener(events.dataBound, this.dataBound.bind(this));
            this.parent.on(events.doubleTap, this.dblClickHandler, this);
        };
        BatchEdit.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.click, this.clickHandler);
            this.parent.off(events.dblclick, this.dblClickHandler);
            this.parent.off(events.keyPressed, this.keyPressHandler);
            this.parent.removeEventListener(events.dataBound, this.dataBound);
            this.parent.off(events.doubleTap, this.dblClickHandler);
        };
        BatchEdit.prototype.dataBound = function () {
            this.parent.notify(events.toolbarRefresh, {});
        };
        BatchEdit.prototype.destroy = function () {
            this.removeEventListener();
        };
        BatchEdit.prototype.clickHandler = function (e) {
            if (!util_1.parentsUntil(e.target, this.parent.element.id + '_add', true)) {
                this.saveCell();
                if (util_1.parentsUntil(e.target, 'e-rowcell') && !this.parent.isEdit) {
                    this.setCellIdx(e.target);
                }
            }
        };
        BatchEdit.prototype.dblClickHandler = function (e) {
            var target = e.target;
            var tr = util_1.parentsUntil(e.target, 'e-row');
            if ((util_1.parentsUntil(target, 'e-rowcell')) && tr) {
                this.editCell(parseInt(tr.getAttribute('aria-rowindex'), 10), this.parent.columns[parseInt(util_1.parentsUntil(target, 'e-rowcell').getAttribute('aria-colindex'), 10)].field);
            }
        };
        BatchEdit.prototype.keyPressHandler = function (e) {
            var isEdit = this.parent.isEdit;
            if (!document.querySelectorAll('.e-popup-open').length) {
                this.saveCell();
                isEdit = isEdit && !this.validateFormObj();
                switch (e.action) {
                    case 'tab':
                        if (isEdit) {
                            this.editNextCell();
                        }
                        break;
                    case 'shiftTab':
                        if (isEdit) {
                            this.editPrevCell();
                        }
                        break;
                    case 'enter':
                        e.preventDefault();
                        if (isEdit && this.cellDetails.rowIndex + 1 < this.parent.getDataRows().length) {
                            this.editCell(this.cellDetails.rowIndex + 1, this.cellDetails.column.field);
                        }
                        break;
                    case 'f2':
                        this.editCellFromIndex(this.cellDetails.rowIndex, this.cellDetails.cellIndex);
                        break;
                }
                if (this.parent.isEdit || !(this.cellDetails.cellIndex === 0 && this.cellDetails.rowIndex === 0) ||
                    !(this.cellDetails.rowIndex === this.parent.getDataRows().length &&
                        this.cellDetails.cellIndex === this.parent.columns.length - 1)) {
                    e.preventDefault();
                }
            }
            this.reFocusOnError(e);
        };
        BatchEdit.prototype.reFocusOnError = function (e) {
            if (this.validateFormObj() && (e.action === 'tab' || e.action === 'shiftTab')) {
                e.target.focus();
                e.preventDefault();
            }
        };
        BatchEdit.prototype.isAddRow = function (index) {
            return this.parent.getDataRows()[index].classList.contains('e-insertedrow');
        };
        BatchEdit.prototype.editNextCell = function () {
            var oldIdx = this.cellDetails.cellIndex;
            var cellIdx = this.findNextEditableCell(this.cellDetails.cellIndex + 1, this.isAddRow(this.cellDetails.rowIndex));
            if (cellIdx > -1) {
                this.cellDetails.cellIndex = cellIdx;
            }
            else if (this.cellDetails.rowIndex + 1 < this.parent.getDataRows().length) {
                this.cellDetails.rowIndex++;
                this.cellDetails.cellIndex = this.findNextEditableCell(0, this.isAddRow(this.cellDetails.rowIndex));
            }
            if (oldIdx !== this.cellDetails.cellIndex) {
                this.editCellFromIndex(this.cellDetails.rowIndex, this.cellDetails.cellIndex);
            }
        };
        BatchEdit.prototype.editPrevCell = function () {
            var oldIdx = this.cellDetails.cellIndex;
            var cellIdx = this.findPrevEditableCell(this.cellDetails.cellIndex - 1, this.isAddRow(this.cellDetails.rowIndex));
            if (cellIdx > -1) {
                this.cellDetails.cellIndex = cellIdx;
            }
            else if (this.cellDetails.rowIndex - 1 > -1) {
                this.cellDetails.rowIndex--;
                this.cellDetails.cellIndex = this.findPrevEditableCell(this.parent.columns.length - 1, this.isAddRow(this.cellDetails.rowIndex));
            }
            if (oldIdx !== this.cellDetails.cellIndex) {
                this.editCellFromIndex(this.cellDetails.rowIndex, this.cellDetails.cellIndex);
            }
        };
        BatchEdit.prototype.editCellFromIndex = function (rowIdx, cellIdx) {
            this.cellDetails.rowIndex = rowIdx;
            this.cellDetails.cellIndex = cellIdx;
            this.editCell(rowIdx, this.parent.columns[cellIdx].field);
        };
        BatchEdit.prototype.closeEdit = function () {
            var gObj = this.parent;
            var rows = gObj.contentModule.getRows();
            var rowRenderer = new row_renderer_1.RowRenderer(this.serviceLocator, null, this.parent);
            var tr;
            if (gObj.isEdit) {
                this.saveCell(true);
            }
            gObj.clearSelection();
            for (var i = 0; i < rows.length; i++) {
                if (rows[i].isDirty) {
                    tr = gObj.getContentTable().querySelector('[data-uid=' + rows[i].uid + ']');
                    if (tr) {
                        if (tr.classList.contains('e-insertedrow')) {
                            ej2_base_2.remove(tr);
                            this.removeRowObjectFromUID(rows[i].uid);
                            i--;
                        }
                        else {
                            delete rows[i].changes;
                            rows[i].isDirty = false;
                            ej2_base_2.classList(tr, [], ['e-hiddenrow', 'e-updatedtd']);
                            rowRenderer.refresh(rows[i], gObj.columns, false);
                        }
                    }
                }
            }
            gObj.selectRow(this.cellDetails.rowIndex);
            this.refreshRowIdx();
            gObj.notify(events.toolbarRefresh, {});
            this.parent.notify(events.tooltipDestroy, {});
        };
        BatchEdit.prototype.deleteRecord = function (fieldname, data) {
            this.saveCell();
            this.bulkDelete(fieldname, data);
        };
        BatchEdit.prototype.addRecord = function (data) {
            this.bulkAddRow(data);
        };
        BatchEdit.prototype.endEdit = function (data) {
            if (this.parent.isEdit && this.validateFormObj()) {
                return;
            }
            this.batchSave();
        };
        BatchEdit.prototype.validateFormObj = function () {
            return this.parent.editModule.formObj && !this.parent.editModule.formObj.validate();
        };
        BatchEdit.prototype.batchSave = function () {
            var gObj = this.parent;
            this.saveCell();
            if (gObj.isEdit) {
                return;
            }
            var changes = this.getBatchChanges();
            var args = { batchChanges: changes, cancel: false };
            gObj.trigger(events.beforeBatchSave, args);
            if (args.cancel) {
                return;
            }
            gObj.notify(events.bulkSave, { changes: changes });
        };
        BatchEdit.prototype.getBatchChanges = function () {
            var changes = {
                addedRecords: [],
                deletedRecords: [],
                changedRecords: []
            };
            var rows = this.parent.contentModule.getRows();
            for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {
                var row = rows_1[_i];
                if (row.isDirty) {
                    switch (row.edit) {
                        case 'add':
                            changes.addedRecords.push(row.changes);
                            break;
                        case 'delete':
                            changes.deletedRecords.push(row.data);
                            break;
                        default:
                            changes.changedRecords.push(row.changes);
                    }
                }
            }
            return changes;
        };
        BatchEdit.prototype.removeRowObjectFromUID = function (uid) {
            var rows = this.parent.contentModule.getRows();
            var i = 0;
            for (var len = rows.length; i < len; i++) {
                if (rows[i].uid === uid) {
                    break;
                }
            }
            rows.splice(i, 1);
        };
        BatchEdit.prototype.addRowObject = function (row) {
            this.parent.contentModule.getRows().unshift(row);
        };
        BatchEdit.prototype.bulkDelete = function (fieldname, data) {
            var gObj = this.parent;
            var index = data ? this.getIndexFromData(data) : gObj.selectedRowIndex;
            var args = {
                primaryKey: this.parent.getPrimaryKeyFieldNames(),
                rowIndex: index,
                rowData: data ? data : gObj.getSelectedRecords()[0],
                row: data ? gObj.getRows()[index] : gObj.getSelectedRows()[0], cancel: false
            };
            if (!args.row) {
                return;
            }
            gObj.trigger(events.beforeBatchDelete, args);
            if (args.cancel) {
                return;
            }
            gObj.clearSelection();
            var uid = args.row.getAttribute('data-uid');
            if (args.row.classList.contains('e-insertedrow')) {
                this.removeRowObjectFromUID(uid);
                ej2_base_2.remove(args.row);
            }
            else {
                var rowObj = gObj.getRowObjectFromUID(uid);
                rowObj.isDirty = true;
                rowObj.edit = 'delete';
                ej2_base_2.classList(args.row, ['e-hiddenrow', 'e-updatedtd'], []);
            }
            this.refreshRowIdx();
            gObj.selectRow(index);
            delete args.row;
            gObj.trigger(events.batchDelete, args);
            gObj.notify(events.toolbarRefresh, {});
            gObj.element.focus();
        };
        BatchEdit.prototype.refreshRowIdx = function () {
            var rows = [].slice.call(this.parent.getContentTable().querySelector('tbody').children);
            var dataRows = [];
            for (var i = 0, j = 0, len = rows.length; i < len; i++) {
                if (rows[i].classList.contains('e-row') && !rows[i].classList.contains('e-hiddenrow')) {
                    rows[i].setAttribute('aria-rowindex', j.toString());
                    j++;
                }
                else {
                    rows[i].removeAttribute('aria-rowindex');
                }
            }
        };
        BatchEdit.prototype.getIndexFromData = function (data) {
            return util_1.inArray(data, this.parent.getCurrentViewRecords());
        };
        BatchEdit.prototype.bulkAddRow = function (data) {
            var gObj = this.parent;
            if (!gObj.editSettings.allowAdding) {
                return;
            }
            if (gObj.isEdit) {
                this.saveCell();
            }
            if (gObj.isEdit) {
                return;
            }
            var defaultData = data ? data : this.getDefaultData();
            var args = {
                defaultData: defaultData,
                primaryKey: gObj.getPrimaryKeyFieldNames(),
                cancel: false
            };
            gObj.trigger(events.beforeBatchAdd, args);
            if (args.cancel) {
                return;
            }
            gObj.clearSelection();
            var row = new row_renderer_1.RowRenderer(this.serviceLocator, null, this.parent);
            var model = new row_model_generator_1.RowModelGenerator(this.parent);
            var modelData = model.generateRows([args.defaultData]);
            var tr = row.render(modelData[0], gObj.getColumns());
            var col;
            var index;
            for (var i = 0; i < this.parent.groupSettings.columns.length; i++) {
                tr.insertBefore(ej2_base_2.createElement('td', { className: 'e-indentcell' }), tr.firstChild);
            }
            var tbody = gObj.getContentTable().querySelector('tbody');
            tr.classList.add('e-insertedrow');
            tbody.insertBefore(tr, tbody.firstChild);
            ej2_base_1.addClass(tr.querySelectorAll('.e-rowcell'), ['e-updatedtd']);
            modelData[0].isDirty = true;
            modelData[0].changes = ej2_base_1.extend({}, modelData[0].data);
            modelData[0].edit = 'add';
            this.addRowObject(modelData[0]);
            this.refreshRowIdx();
            gObj.selectRow(0);
            if (!data) {
                index = this.findNextEditableCell(0, true);
                col = gObj.columns[index];
                this.editCell(0, col.field, true);
            }
            var args1 = {
                defaultData: args.defaultData, row: tr,
                columnObject: col, columnIndex: index, primaryKey: args.primaryKey, cell: tr.cells[index]
            };
            gObj.trigger(events.batchAdd, args1);
        };
        BatchEdit.prototype.findNextEditableCell = function (columnIndex, isAdd) {
            var cols = this.parent.columns;
            var endIndex = cols.length;
            for (var i = columnIndex; i < endIndex; i++) {
                if (!isAdd && this.checkNPCell(cols[i])) {
                    return i;
                }
                else if (isAdd && !cols[i].template && cols[i].visible && cols[i].allowEditing) {
                    return i;
                }
            }
            return -1;
        };
        BatchEdit.prototype.findPrevEditableCell = function (columnIndex, isAdd) {
            var cols = this.parent.columns;
            for (var i = columnIndex; i > -1; i--) {
                if (!isAdd && this.checkNPCell(cols[i])) {
                    return i;
                }
                else if (isAdd && !cols[i].template && cols[i].visible && cols[i].allowEditing) {
                    return i;
                }
            }
            return -1;
        };
        BatchEdit.prototype.checkNPCell = function (col) {
            return !col.template && col.visible && !col.isPrimaryKey && !col.isIdentity && col.allowEditing;
        };
        BatchEdit.prototype.getDefaultData = function () {
            var gObj = this.parent;
            var data = {};
            var dValues = { 'number': 0, 'string': null, 'boolean': false, 'date': null, 'datetime': null };
            for (var _i = 0, _a = gObj.columns; _i < _a.length; _i++) {
                var col = _a[_i];
                data[col.field] = col.defaultValue ? col.defaultValue : dValues[col.type];
            }
            return data;
        };
        BatchEdit.prototype.setCellIdx = function (target) {
            var gLen = 0;
            if (this.parent.allowGrouping) {
                gLen = this.parent.groupSettings.columns.length;
            }
            this.cellDetails.cellIndex = target.cellIndex - gLen;
            this.cellDetails.rowIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);
        };
        BatchEdit.prototype.editCell = function (index, field, isAdd) {
            var gObj = this.parent;
            var col = gObj.getColumnByField(field);
            var keys = gObj.getPrimaryKeyFieldNames();
            if (gObj.editSettings.allowEditing && col.allowEditing) {
                if (gObj.isEdit && !(this.cellDetails.column.field === field && this.cellDetails.rowIndex === index)) {
                    this.saveCell();
                }
                if (gObj.isEdit) {
                    return;
                }
                var row = gObj.getDataRows()[index];
                if ((keys[0] === col.field && !row.classList.contains('e-insertedrow')) || col.template || col.columns) {
                    return;
                }
                var rowData = ej2_base_1.extend({}, this.getDataByIndex(index));
                var args = {
                    cell: row.cells[this.getCellIdx(col.uid)], row: row,
                    columnName: col.field, columnObject: col, isForeignKey: !ej2_base_3.isNullOrUndefined(col.foreignKeyValue),
                    primaryKey: keys, rowData: rowData,
                    validationRules: ej2_base_1.extend({}, col.validationRules ? col.validationRules : {}),
                    value: rowData[col.field], type: !isAdd ? 'edit' : 'add', cancel: false
                };
                gObj.trigger(events.cellEdit, args);
                if (args.cancel) {
                    return;
                }
                this.cellDetails = {
                    rowData: rowData, column: col, value: args.value, isForeignKey: args.isForeignKey,
                };
                this.setCellIdx(args.cell);
                if (args.cell.classList.contains('e-updatedtd')) {
                    this.isColored = true;
                    args.cell.classList.remove('e-updatedtd');
                }
                gObj.clearSelection();
                gObj.selectRow(this.cellDetails.rowIndex);
                gObj.isEdit = true;
                this.renderer.update(args);
                this.form = gObj.element.querySelector('#' + gObj.element.id + 'EditForm');
                gObj.editModule.applyFormValidation([col]);
                this.parent.element.querySelector('.e-gridpopup').style.display = 'none';
            }
        };
        BatchEdit.prototype.updateCell = function (rowIndex, field, value) {
            var col = this.parent.getColumnByField(field);
            if (col && !col.isPrimaryKey) {
                var td = this.parent.getDataRows()[rowIndex].cells[this.parent.getColumnIndexByField(field)];
                var rowObj = this.parent.getRowObjectFromUID(td.parentElement.getAttribute('data-uid'));
                this.refreshTD(td, col, rowObj, value);
                this.parent.trigger(events.queryCellInfo, {
                    cell: td, column: col, data: rowObj.changes
                });
            }
        };
        BatchEdit.prototype.setChanges = function (rowObj, field, value) {
            if (!rowObj.changes) {
                rowObj.changes = ej2_base_1.extend({}, rowObj.data);
            }
            rowObj.changes[field] = value;
            rowObj.isDirty = true;
        };
        BatchEdit.prototype.updateRow = function (index, data) {
            var keys = Object.keys(data);
            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                var col = keys_1[_i];
                this.updateCell(index, col, data[col]);
            }
        };
        BatchEdit.prototype.getCellIdx = function (uid) {
            var cIdx = this.parent.getColumnIndexByUid(uid) + this.parent.groupSettings.columns.length;
            if (!ej2_base_3.isNullOrUndefined(this.parent.detailTemplate) || !ej2_base_3.isNullOrUndefined(this.parent.childGrid)) {
                cIdx++;
            }
            return cIdx;
        };
        BatchEdit.prototype.refreshTD = function (td, column, rowObj, value) {
            var cell = new cell_renderer_1.CellRenderer(this.parent, this.serviceLocator);
            this.setChanges(rowObj, column.field, value);
            cell.refreshTD(td, rowObj.cells[this.getCellIdx(column.uid)], rowObj.changes);
            td.classList.add('e-updatedtd');
            this.parent.notify(events.toolbarRefresh, {});
        };
        BatchEdit.prototype.saveCell = function (isForceSave) {
            var gObj = this.parent;
            if (!isForceSave && (!gObj.isEdit || this.validateFormObj())) {
                return;
            }
            var tr = util_1.parentsUntil(this.form, 'e-row');
            var column = this.cellDetails.column;
            var editedData = gObj.editModule.getCurrentEditedData(this.form, {});
            editedData = ej2_base_1.extend(this.cellDetails.rowData, editedData);
            var args = {
                columnName: column.field,
                value: editedData[column.field],
                rowData: this.cellDetails.rowData,
                previousValue: this.cellDetails.value,
                columnObject: column,
                cell: this.form.parentElement,
                isForeignKey: this.cellDetails.isForeignKey, cancel: false
            };
            if (!isForceSave) {
                gObj.trigger(events.cellSave, args);
            }
            if (args.cancel) {
                return;
            }
            gObj.editModule.destroyForm();
            gObj.editModule.destroyWidgets([column]);
            this.parent.notify(events.tooltipDestroy, {});
            this.refreshTD(args.cell, column, gObj.getRowObjectFromUID(tr.getAttribute('data-uid')), args.value);
            ej2_base_2.classList(tr, [], ['e-editedrow', 'e-batchrow']);
            args.cell.classList.remove('e-editedbatchcell');
            gObj.isEdit = false;
            if (!ej2_base_3.isNullOrUndefined(args.value) && args.value.toString() ===
                (!ej2_base_3.isNullOrUndefined(this.cellDetails.value) ? this.cellDetails.value : '').toString() && !this.isColored) {
                args.cell.classList.remove('e-updatedtd');
            }
            gObj.notify(events.toolbarRefresh, {});
            this.isColored = false;
        };
        BatchEdit.prototype.getDataByIndex = function (index) {
            var row = this.parent.getRowObjectFromUID(this.parent.getDataRows()[index].getAttribute('data-uid'));
            return row.changes ? row.changes : row.data;
        };
        BatchEdit.prototype.valComplete = function (args) {
            var edit = this.parent.editModule;
            edit.validationComplete(args);
        };
        BatchEdit.prototype.customPlacement = function (inputElement, error) {
            var edit = this.parent.editModule;
            edit.valErrorPlacement(inputElement, error);
        };
        return BatchEdit;
    }());
    exports.BatchEdit = BatchEdit;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(14), __webpack_require__(0), __webpack_require__(91), __webpack_require__(3), __webpack_require__(34)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_data_1, ej2_base_2, ej2_buttons_1, events, ej2_popups_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ColumnChooser = (function () {
        function ColumnChooser(parent, serviceLocator) {
            this.showColumn = [];
            this.hideColumn = [];
            this.isDlgOpen = false;
            this.dlghide = false;
            this.initialOpenDlg = true;
            this.stateChangeColumns = [];
            this.isInitialOpen = false;
            this.parent = parent;
            this.serviceLocator = serviceLocator;
            this.addEventListener();
        }
        ColumnChooser.prototype.destroy = function () {
            this.removeEventListener();
            this.unWireEvents();
        };
        ColumnChooser.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.click, this.clickHandler, this);
            this.parent.on(events.initialEnd, this.render, this);
            this.parent.addEventListener(events.dataBound, this.hideDialog.bind(this));
        };
        ColumnChooser.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.click, this.clickHandler);
            this.parent.off(events.initialEnd, this.render);
        };
        ColumnChooser.prototype.render = function () {
            this.l10n = this.serviceLocator.getService('localization');
            this.renderDlgContent();
            this.getShowHideService = this.serviceLocator.getService('showHideService');
        };
        ColumnChooser.prototype.clickHandler = function (e) {
            var targetElement = e.target;
            if (!ej2_base_1.isNullOrUndefined(ej2_base_2.closest(targetElement, '.e-cc')) || !ej2_base_1.isNullOrUndefined(ej2_base_2.closest(targetElement, '.e-cc-toolbar'))) {
                if (targetElement.classList.contains('e-columnchooser-btn') || targetElement.classList.contains('e-cc-toolbar')) {
                    if ((this.initialOpenDlg && this.dlgObj.visible) || !this.isDlgOpen) {
                        this.isDlgOpen = true;
                        return;
                    }
                }
                else if (targetElement.classList.contains('e-cc-cancel')) {
                    targetElement.parentElement.querySelector('.e-ccsearch').value = '';
                    this.columnChooserSearch('');
                    this.removeCancelIcon();
                }
            }
            else {
                if (!ej2_base_1.isNullOrUndefined(this.dlgObj) && this.dlgObj.visible) {
                    this.dlgObj.hide();
                    this.isDlgOpen = false;
                }
            }
        };
        ColumnChooser.prototype.hideDialog = function () {
            if (!ej2_base_1.isNullOrUndefined(this.dlgObj) && this.dlgObj.visible) {
                this.dlgObj.hide();
                this.isDlgOpen = false;
            }
        };
        ColumnChooser.prototype.renderColumnChooser = function (x, y, target) {
            if (!this.dlgObj.visible) {
                var pos = { X: null, Y: null };
                var args1 = {
                    requestType: 'beforeOpenColumnChooser', element: this.parent.element,
                    columns: this.parent.getColumns()
                };
                this.parent.trigger(events.beforeOpenColumnChooser, args1);
                this.refreshCheckboxState();
                this.dlgObj.dataBind();
                this.dlgObj.element.style.maxHeight = '430px';
                var elementVisible = this.dlgObj.element.style.display;
                this.dlgObj.element.style.display = 'block';
                var newpos = ej2_popups_1.calculateRelativeBasedPosition(target.closest('.e-toolbar-item'), this.dlgObj.element);
                this.dlgObj.element.style.display = elementVisible;
                this.dlgObj.element.style.top = newpos.top + target.closest('.e-cc-toolbar').getBoundingClientRect().height + 'px';
                var dlgWidth = 250;
                if (!ej2_base_1.isNullOrUndefined(ej2_base_2.closest(target, '.e-bigger'))) {
                    this.dlgObj.width = 253;
                }
                if (this.parent.element.classList.contains('e-device')) {
                    this.dlgObj.target = document.body;
                    this.dlgObj.position = { X: 'center', Y: 'center' };
                    this.dlgObj.refreshPosition();
                    this.dlgObj.open = this.mOpenDlg.bind(this);
                }
                else {
                    if (this.parent.enableRtl) {
                        this.dlgObj.element.style.left = target.offsetLeft + 'px';
                    }
                    else {
                        this.dlgObj.element.style.left = ((newpos.left - dlgWidth) + target.closest('.e-cc-toolbar').clientWidth) + 2 + 'px';
                    }
                }
                this.removeCancelIcon();
                this.dlgObj.show();
                this.wireEvents();
            }
            else {
                this.unWireEvents();
                this.hideDialog();
                this.addcancelIcon();
            }
        };
        ColumnChooser.prototype.openColumnChooser = function (X, Y) {
            if (this.dlgObj.visible) {
                this.hideDialog();
                return;
            }
            if (!this.isInitialOpen) {
                this.dlgObj.content = this.renderChooserList();
            }
            else {
                this.refreshCheckboxState();
            }
            this.dlgObj.dataBind();
            this.dlgObj.position = { X: 'center', Y: 'center' };
            if (ej2_base_1.isNullOrUndefined(X)) {
                this.dlgObj.position = { X: 'center', Y: 'center' };
                this.dlgObj.refreshPosition();
            }
            else {
                this.dlgObj.element.style.top = '';
                this.dlgObj.element.style.left = '';
                this.dlgObj.element.style.top = Y + 'px';
                this.dlgObj.element.style.left = X + 'px';
            }
            this.dlgObj.show();
            this.isInitialOpen = true;
            this.wireEvents();
        };
        ColumnChooser.prototype.renderDlgContent = function () {
            var y;
            this.dlgDiv = ej2_base_1.createElement('div', { className: 'e-ccdlg e-cc', id: this.parent.element.id + '_ccdlg' });
            this.parent.element.appendChild(this.dlgDiv);
            var xpos = this.parent.element.getBoundingClientRect().width - 250;
            var dialoPos = this.parent.enableRtl ? 'left' : 'right';
            var tarElement = this.parent.element.querySelector('.e-ccdiv');
            if (!ej2_base_1.isNullOrUndefined(tarElement)) {
                y = tarElement.getBoundingClientRect().top;
            }
            var pos = { X: null, Y: null };
            this.dlgObj = new ej2_popups_1.Dialog({
                header: this.l10n.getConstant('ChooseColumns'),
                showCloseIcon: false,
                closeOnEscape: false,
                locale: this.parent.locale,
                visible: false,
                enableRtl: this.parent.enableRtl,
                target: document.getElementById(this.parent.element.id),
                buttons: [{
                        click: this.confirmDlgBtnClick.bind(this),
                        buttonModel: {
                            content: this.l10n.getConstant('OKButton'), isPrimary: true,
                            cssClass: 'e-cc e-cc_okbtn',
                        }
                    },
                    {
                        click: this.clearActions.bind(this),
                        buttonModel: { cssClass: 'e-flat e-cc e-cc-cnbtn', content: this.l10n.getConstant('CancelButton') }
                    }],
                content: this.renderChooserList(),
                width: 250,
                cssClass: 'e-cc',
                animationSettings: { effect: 'None' },
            });
            this.dlgObj.appendTo(this.dlgDiv);
        };
        ColumnChooser.prototype.renderChooserList = function () {
            this.mainDiv = ej2_base_1.createElement('div', { className: 'e-main-div e-cc' });
            var searchDiv = ej2_base_1.createElement('div', { className: 'e-cc-searchdiv e-cc e-input-group' });
            var ccsearchele = ej2_base_1.createElement('input', {
                className: 'e-ccsearch e-cc e-input',
                attrs: { placeholder: this.l10n.getConstant('Search') }
            });
            var ccsearchicon = ej2_base_1.createElement('span', { className: 'e-ccsearch-icon e-icons e-cc e-input-group-icon' });
            var conDiv = ej2_base_1.createElement('div', { className: 'e-cc-contentdiv' });
            this.innerDiv = ej2_base_1.createElement('div', { className: 'e-innerdiv e-cc' });
            searchDiv.appendChild(ccsearchele);
            searchDiv.appendChild(ccsearchicon);
            ccsearchele.addEventListener('focus', function () {
                ccsearchele.parentElement.classList.add('e-input-focus');
            });
            ccsearchele.addEventListener('blur', function () {
                ccsearchele.parentElement.classList.remove('e-input-focus');
            });
            var innerDivContent = this.refreshCheckboxList(this.parent.getColumns());
            this.innerDiv.appendChild(innerDivContent);
            conDiv.appendChild(this.innerDiv);
            this.mainDiv.appendChild(searchDiv);
            this.mainDiv.appendChild(conDiv);
            return this.mainDiv;
        };
        ColumnChooser.prototype.confirmDlgBtnClick = function (args) {
            this.stateChangeColumns = [];
            if (!ej2_base_1.isNullOrUndefined(args)) {
                if (this.hideColumn.length) {
                    this.columnStateChange(this.hideColumn, false);
                }
                if (this.showColumn.length) {
                    this.columnStateChange(this.showColumn, true);
                }
                var params = {
                    requestType: 'columnstate', element: this.parent.element,
                    columns: this.stateChangeColumns, dialogInstance: this.dlgObj
                };
                this.parent.trigger(events.actionComplete, params);
                this.getShowHideService.setVisible(this.stateChangeColumns);
                this.clearActions();
            }
        };
        ColumnChooser.prototype.columnStateChange = function (stateColumns, state) {
            for (var index = 0; index < stateColumns.length; index++) {
                var colUid = stateColumns[index].replace('e-cc', '');
                var currentCol = this.parent.getColumnByUid(colUid);
                currentCol.visible = state;
                this.stateChangeColumns.push(currentCol);
            }
        };
        ColumnChooser.prototype.clearActions = function () {
            this.hideColumn = [];
            this.showColumn = [];
            this.unWireEvents();
            this.hideDialog();
            this.addcancelIcon();
        };
        ColumnChooser.prototype.checkstatecolumn = function (e) {
            var targetEle = e.event.target;
            var uncheckColumn = targetEle.id;
            if (e.checked) {
                if (this.hideColumn.indexOf(uncheckColumn) !== -1) {
                    this.hideColumn.splice(this.hideColumn.indexOf(uncheckColumn), 1);
                }
                if (this.showColumn.indexOf(uncheckColumn) === -1) {
                    this.showColumn.push(uncheckColumn);
                }
            }
            else {
                if (this.showColumn.indexOf(uncheckColumn) !== -1) {
                    this.showColumn.splice(this.showColumn.indexOf(uncheckColumn), 1);
                }
                if (this.hideColumn.indexOf(uncheckColumn) === -1) {
                    this.hideColumn.push(uncheckColumn);
                }
            }
        };
        ColumnChooser.prototype.columnChooserSearch = function (searchVal) {
            var clearSearch = false;
            var fltrCol;
            if (searchVal === '') {
                this.removeCancelIcon();
                fltrCol = this.parent.getColumns();
                clearSearch = true;
            }
            else {
                fltrCol = new ej2_data_1.DataManager(this.parent.getColumns()).executeLocal(new ej2_data_1.Query()
                    .where('headerText', 'startswith', searchVal, true));
            }
            if (fltrCol.length) {
                this.innerDiv.innerHTML = ' ';
                this.innerDiv.classList.remove('e-ccnmdiv');
                this.innerDiv.appendChild(this.refreshCheckboxList(fltrCol, searchVal));
                if (!clearSearch) {
                    this.addcancelIcon();
                }
            }
            else {
                var nMatchele = ej2_base_1.createElement('span', { className: 'e-cc e-nmatch' });
                nMatchele.innerHTML = this.l10n.getConstant('Matchs');
                this.innerDiv.innerHTML = ' ';
                this.innerDiv.appendChild(nMatchele);
                this.innerDiv.classList.add('e-ccnmdiv');
            }
            this.flag = true;
            this.stopTimer();
        };
        ColumnChooser.prototype.wireEvents = function () {
            var searchElement = this.dlgObj.content.querySelector('input.e-ccsearch');
            ej2_base_2.EventHandler.add(searchElement, 'keyup', this.columnChooserManualSearch, this);
        };
        ColumnChooser.prototype.unWireEvents = function () {
            var searchElement = this.dlgObj.content.querySelector('input.e-ccsearch');
            ej2_base_2.EventHandler.remove(searchElement, 'keyup', this.columnChooserManualSearch);
        };
        ColumnChooser.prototype.refreshCheckboxList = function (gdCol, searchVal) {
            this.ulElement = ej2_base_1.createElement('ul', { className: 'e-ccul-ele e-cc' });
            for (var i = 0; i < gdCol.length; i++) {
                var columns = gdCol[i];
                this.renderCheckbox(columns);
            }
            return this.ulElement;
        };
        ColumnChooser.prototype.refreshCheckboxState = function () {
            this.dlgObj.element.querySelector('.e-cc.e-input').value = '';
            this.columnChooserSearch('');
            for (var i = 0; i < this.parent.element.querySelectorAll('.e-cc-chbox').length; i++) {
                var element = this.parent.element.querySelectorAll('.e-cc-chbox')[i];
                var column = this.parent.getColumnByUid(element.id.replace('e-cc', ''));
                if (column.visible) {
                    element.checked = true;
                }
                else {
                    element.checked = false;
                }
            }
        };
        ColumnChooser.prototype.renderCheckbox = function (column) {
            var cclist;
            var hideColState;
            var showColState;
            var checkBoxObj;
            if (column.showInColumnChooser) {
                cclist = ej2_base_1.createElement('li', { className: 'e-cclist e-cc', styles: 'list-style:None', id: 'e-ccli_' + column.uid });
                var cclabe = ej2_base_1.createElement('label', { className: 'e-cc' });
                var cccheckboxlist = ej2_base_1.createElement('input', {
                    className: 'e-cc e-cc-chbox ',
                    id: 'e-cc' + column.uid, attrs: { type: 'checkbox' }
                });
                cclabe.appendChild(cccheckboxlist);
                hideColState = this.hideColumn.indexOf('e-cc' + column.uid) === -1 ? false : true;
                showColState = this.showColumn.indexOf('e-cc' + column.uid) === -1 ? false : true;
                checkBoxObj = new ej2_buttons_1.CheckBox({ label: column.headerText, checked: true, change: this.checkstatecolumn.bind(this) });
                if ((column.visible && !hideColState) || showColState) {
                    checkBoxObj.checked = true;
                }
                else {
                    checkBoxObj.checked = false;
                }
                checkBoxObj.appendTo(cccheckboxlist);
                cclist.appendChild(cclabe);
                this.ulElement.appendChild(cclist);
            }
        };
        ColumnChooser.prototype.columnChooserManualSearch = function (e) {
            this.addcancelIcon();
            this.searchValue = e.target.value;
            var proxy = this;
            this.stopTimer();
            this.startTimer(e);
        };
        ColumnChooser.prototype.startTimer = function (e) {
            var proxy = this;
            var interval = !proxy.flag && e.keyCode !== 13 ? 500 : 0;
            this.timer = window.setInterval(function () { proxy.columnChooserSearch(proxy.searchValue); }, interval);
        };
        ColumnChooser.prototype.stopTimer = function () {
            window.clearInterval(this.timer);
        };
        ColumnChooser.prototype.addcancelIcon = function () {
            this.dlgDiv.querySelector('.e-cc.e-ccsearch-icon').classList.add('e-cc-cancel');
        };
        ColumnChooser.prototype.removeCancelIcon = function () {
            this.dlgDiv.querySelector('.e-cc.e-ccsearch-icon').classList.remove('e-cc-cancel');
        };
        ColumnChooser.prototype.mOpenDlg = function () {
            this.dlgObj.element.querySelector('.e-cc-searchdiv').classList.remove('e-input-focus');
            var chele = this.dlgObj.element.querySelectorAll('.e-cc-chbox')[0];
            chele.focus();
        };
        ColumnChooser.prototype.getModuleName = function () {
            return 'ColumnChooser';
        };
        return ColumnChooser;
    }());
    exports.ColumnChooser = ColumnChooser;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(116)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, normal_edit_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DialogEdit = (function (_super) {
        __extends(DialogEdit, _super);
        function DialogEdit(parent, serviceLocator, renderer) {
            var _this = _super.call(this, parent, serviceLocator) || this;
            _this.parent = parent;
            _this.serviceLocator = serviceLocator;
            _this.renderer = renderer;
            return _this;
        }
        DialogEdit.prototype.closeEdit = function () {
            _super.prototype.closeEdit.call(this);
        };
        DialogEdit.prototype.addRecord = function (data) {
            _super.prototype.addRecord.call(this, data);
        };
        DialogEdit.prototype.endEdit = function () {
            _super.prototype.endEdit.call(this);
        };
        DialogEdit.prototype.deleteRecord = function (fieldname, data) {
            _super.prototype.deleteRecord.call(this, fieldname, data);
        };
        DialogEdit.prototype.startEdit = function (tr) {
            _super.prototype.startEdit.call(this, tr);
        };
        return DialogEdit;
    }(normal_edit_1.NormalEdit));
    exports.DialogEdit = DialogEdit;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(116)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, normal_edit_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var InlineEdit = (function (_super) {
        __extends(InlineEdit, _super);
        function InlineEdit(parent, serviceLocator, renderer) {
            var _this = _super.call(this, parent, serviceLocator) || this;
            _this.parent = parent;
            _this.serviceLocator = serviceLocator;
            _this.renderer = renderer;
            return _this;
        }
        InlineEdit.prototype.closeEdit = function () {
            _super.prototype.closeEdit.call(this);
        };
        InlineEdit.prototype.addRecord = function (data) {
            _super.prototype.addRecord.call(this, data);
        };
        InlineEdit.prototype.endEdit = function () {
            _super.prototype.endEdit.call(this);
        };
        InlineEdit.prototype.deleteRecord = function (fieldname, data) {
            _super.prototype.deleteRecord.call(this, fieldname, data);
        };
        InlineEdit.prototype.startEdit = function (tr) {
            _super.prototype.startEdit.call(this, tr);
        };
        return InlineEdit;
    }(normal_edit_1.NormalEdit));
    exports.InlineEdit = InlineEdit;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(2), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, util_1, events) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Print = (function () {
        function Print(parent, scrollModule) {
            this.parent = parent;
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.contentReady, this.contentReady.bind(this));
            this.scrollModule = scrollModule;
        }
        Print.prototype.print = function () {
            var gObj = this.parent;
            this.isPrinting = true;
            this.element = gObj.element.cloneNode(true);
            this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');
            this.printWindow.moveTo(0, 0);
            this.printWindow.resizeTo(screen.availWidth, screen.availHeight);
            if (gObj.allowPaging) {
                if (gObj.printMode === 'currentpage') {
                    this.element.querySelector('.e-gridpager').style.display = 'none';
                    this.contentReady();
                }
                else {
                    this.isPagerDisabled = true;
                    gObj.allowPaging = false;
                    gObj.dataBind();
                }
            }
            else {
                this.contentReady();
            }
        };
        Print.prototype.contentReady = function () {
            var gObj = this.parent;
            if (!this.isPrinting) {
                return;
            }
            if (this.isPagerDisabled) {
                this.element = gObj.element.cloneNode(true);
                this.isPagerDisabled = false;
                gObj.allowPaging = true;
            }
            if (gObj.height !== 'auto') {
                var cssProps = this.scrollModule.getCssProperties();
                var contentDiv = this.element.querySelector('.e-content');
                var headerDiv = this.element.querySelector('.e-gridheader');
                contentDiv.style.height = 'auto';
                contentDiv.style.overflowY = 'auto';
                headerDiv.style[cssProps.padding] = '';
                headerDiv.firstElementChild.style[cssProps.border] = '';
            }
            if (gObj.allowGrouping) {
                if (!gObj.groupSettings.columns.length) {
                    this.element.querySelector('.e-groupdroparea').style.display = 'none';
                }
                else {
                    this.removeColGroup(gObj.groupSettings.columns.length);
                    util_1.removeElement(this.element, '.e-grouptopleftcell');
                    util_1.removeElement(this.element, '.e-recordpluscollapse');
                    util_1.removeElement(this.element, '.e-indentcell');
                    util_1.removeElement(this.element, '.e-recordplusexpand');
                }
            }
            if (gObj.toolbar) {
                this.element.querySelector('.e-toolbar').style.display = 'none';
            }
            if (gObj.allowFiltering && gObj.filterSettings.type === 'filterbar') {
                this.element.querySelector('.e-filterbar').style.display = 'none';
            }
            if (gObj.allowSelection) {
                ej2_base_1.removeClass(this.element.querySelectorAll('.e-active'), 'e-active');
                ej2_base_1.removeClass(this.element.querySelectorAll('.e-cellselection1background'), 'e-cellselection1background');
            }
            var args = {
                requestType: 'print', element: this.element,
                selectedRows: gObj.getContentTable().querySelectorAll('tr[aria-selected="true"]')
            };
            gObj.trigger(events.beforePrint, args);
            ej2_base_2.print(this.element, this.printWindow);
            this.isPrinting = false;
            gObj.trigger(events.printComplete, args);
        };
        Print.prototype.removeColGroup = function (depth) {
            var groupCaption = this.element.querySelectorAll('.e-groupcaption');
            var colSpan = groupCaption[depth - 1].getAttribute('colspan');
            for (var i = 0; i < groupCaption.length; i++) {
                groupCaption[i].setAttribute('colspan', colSpan);
            }
            var colGroups = this.element.querySelectorAll('colgroup');
            for (var i = 0; i < colGroups.length; i++) {
                for (var j = 0; j < depth; j++) {
                    colGroups[i].childNodes[j].style.display = 'none';
                }
            }
        };
        Print.prototype.destroy = function () {
        };
        Print.prototype.getModuleName = function () {
            return 'print';
        };
        return Print;
    }());
    exports.Print = Print;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(2), __webpack_require__(3), __webpack_require__(121)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, util_1, constant_1, width_controller_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Scroll = (function () {
        function Scroll(parent) {
            this.lastScrollTop = 0;
            this.previousValues = { top: 0, left: 0 };
            this.oneTimeReady = true;
            this.parent = parent;
            this.widthService = new width_controller_1.ColumnWidthService(parent);
            this.addEventListener();
        }
        Scroll.prototype.getModuleName = function () {
            return 'scroll';
        };
        Scroll.prototype.setWidth = function () {
            this.parent.element.style.width = ej2_base_3.formatUnit(this.parent.width);
            if (this.parent.toolbarModule && this.parent.toolbarModule.toolbar.element) {
                this.parent.toolbarModule.toolbar.refreshOverflow();
            }
        };
        Scroll.prototype.setHeight = function () {
            var content = this.parent.getContent().firstChild;
            content.style.height = ej2_base_3.formatUnit(this.parent.height);
            this.ensureOverflow(content);
        };
        Scroll.prototype.setPadding = function () {
            var content = this.parent.getHeaderContent();
            var scrollWidth = Scroll.getScrollBarWidth() - this.getThreshold();
            var cssProps = this.getCssProperties();
            content.firstChild.style[cssProps.border] = scrollWidth > 0 ? '1px' : '0px';
            content.style[cssProps.padding] = scrollWidth > 0 ? scrollWidth + 'px' : '0px';
        };
        Scroll.prototype.removePadding = function (rtl) {
            var cssProps = this.getCssProperties(rtl);
            this.parent.getHeaderContent().firstChild.style[cssProps.border] = '';
            this.parent.getHeaderContent().firstChild.parentElement.style[cssProps.padding] = '';
        };
        Scroll.prototype.refresh = function () {
            if (this.parent.height !== '100%') {
                return;
            }
            var content = this.parent.getContent();
            this.parent.element.style.height = '100%';
            var height = this.widthService.getSiblingsHeight(content);
            content.style.height = 'calc(100% - ' + height + 'px)';
        };
        Scroll.prototype.getThreshold = function () {
            var appName = ej2_base_1.Browser.info.name;
            if (appName === 'mozilla') {
                return 0.5;
            }
            return 1;
        };
        Scroll.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(constant_1.contentReady, this.wireEvents, this);
            this.parent.on(constant_1.uiUpdate, this.onPropertyChanged, this);
        };
        Scroll.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(constant_1.contentReady, this.wireEvents);
            this.parent.off(constant_1.uiUpdate, this.onPropertyChanged);
        };
        Scroll.prototype.onContentScroll = function (scrollTarget) {
            var _this = this;
            var element = scrollTarget;
            var isHeader = element.classList.contains('e-headercontent');
            return function (e) {
                if (_this.content.querySelector('tbody') === null) {
                    return;
                }
                var target = e.target;
                var left = target.scrollLeft;
                var sLimit = target.scrollWidth;
                var isFooter = target.classList.contains('e-summarycontent');
                if (_this.previousValues.left === left) {
                    _this.previousValues.top = !isHeader ? _this.previousValues.top : target.scrollTop;
                    return;
                }
                element.scrollLeft = left;
                if (isFooter) {
                    _this.header.scrollLeft = left;
                }
                _this.previousValues.left = left;
                _this.parent.notify(constant_1.scroll, { left: left });
            };
        };
        Scroll.prototype.wireEvents = function () {
            if (this.oneTimeReady) {
                this.content = this.parent.getContent().firstChild;
                this.header = this.parent.getHeaderContent().firstChild;
                ej2_base_1.EventHandler.add(this.content, 'scroll', this.onContentScroll(this.header), this);
                ej2_base_1.EventHandler.add(this.header, 'scroll', this.onContentScroll(this.content), this);
                if (this.parent.aggregates.length) {
                    ej2_base_1.EventHandler.add(this.parent.getFooterContent().firstChild, 'scroll', this.onContentScroll(this.content), this);
                }
                this.refresh();
                this.oneTimeReady = false;
            }
            var table = this.parent.getContentTable();
            if (table.scrollHeight < this.parent.getContent().clientHeight) {
                ej2_base_2.addClass(table.querySelectorAll('tr:last-child td'), 'e-lastrowcell');
            }
            if (!this.parent.enableVirtualization) {
                this.content.scrollLeft = this.previousValues.left;
                this.content.scrollTop = this.previousValues.top;
            }
            if (!this.parent.enableColumnVirtualization) {
                this.content.scrollLeft = this.previousValues.left;
            }
        };
        Scroll.prototype.getCssProperties = function (rtl) {
            var css = {};
            var enableRtl = ej2_base_3.isNullOrUndefined(rtl) ? this.parent.enableRtl : rtl;
            css.border = enableRtl ? 'borderLeftWidth' : 'borderRightWidth';
            css.padding = enableRtl ? 'paddingLeft' : 'paddingRight';
            return css;
        };
        Scroll.prototype.ensureOverflow = function (content) {
            content.style.overflowY = this.parent.height === 'auto' ? 'auto' : 'scroll';
        };
        Scroll.prototype.onPropertyChanged = function (e) {
            if (e.module !== this.getModuleName()) {
                return;
            }
            this.setPadding();
            this.oneTimeReady = true;
            if (this.parent.height === 'auto') {
                this.removePadding();
            }
            this.wireEvents();
            this.setHeight();
            this.setWidth();
        };
        Scroll.prototype.destroy = function () {
            this.removeEventListener();
            this.removePadding();
            ej2_base_2.removeClass([this.parent.getHeaderContent().firstChild], 'e-headercontent');
            ej2_base_2.removeClass([this.parent.getContent().firstChild], 'e-content');
            this.parent.getContent().firstChild.style.height = '';
            this.parent.element.style.width = '';
            ej2_base_1.EventHandler.remove(this.parent.getContent().firstChild, 'scroll', this.onContentScroll);
        };
        Scroll.getScrollBarWidth = function () {
            return util_1.getScrollBarWidth();
        };
        return Scroll;
    }());
    exports.Scroll = Scroll;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(3), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, events, util_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Search = (function () {
        function Search(parent) {
            this.parent = parent;
            this.addEventListener();
        }
        Search.prototype.search = function (searchString) {
            var gObj = this.parent;
            if (util_1.isActionPrevent(gObj)) {
                gObj.notify(events.preventBatch, { instance: this, handler: this.search, arg1: searchString });
                return;
            }
            searchString = searchString.toLowerCase();
            if (searchString !== gObj.searchSettings.key) {
                gObj.searchSettings.key = searchString;
                gObj.dataBind();
            }
        };
        Search.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);
            this.parent.on(events.searchComplete, this.onActionComplete, this);
            this.parent.on(events.destroy, this.destroy, this);
        };
        Search.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);
            this.parent.off(events.searchComplete, this.onActionComplete);
            this.parent.off(events.destroy, this.destroy);
        };
        Search.prototype.destroy = function () {
            this.removeEventListener();
        };
        Search.prototype.onPropertyChanged = function (e) {
            if (e.module !== this.getModuleName()) {
                return;
            }
            if (!ej2_base_1.isNullOrUndefined(e.properties.key)) {
                this.parent.notify(events.modelChanged, {
                    requestType: 'searching', type: events.actionBegin, searchString: this.parent.searchSettings.key
                });
            }
            else {
                this.parent.notify(events.modelChanged, {
                    requestType: 'searching', type: events.actionBegin
                });
            }
        };
        Search.prototype.onActionComplete = function (e) {
            this.parent.trigger(events.actionComplete, ej2_base_1.extend(e, {
                searchString: this.parent.searchSettings.key, requestType: 'searching', type: events.actionComplete
            }));
        };
        Search.prototype.getModuleName = function () {
            return 'search';
        };
        return Search;
    }());
    exports.Search = Search;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(2), __webpack_require__(3), __webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, util_1, events, enum_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Selection = (function () {
        function Selection(parent, selectionSettings, locator) {
            this.selectedRowIndexes = [];
            this.selectedRowCellIndexes = [];
            this.selectedRecords = [];
            this.isMultiShiftRequest = false;
            this.isMultiCtrlRequest = false;
            this.enableSelectMultiTouch = false;
            this.parent = parent;
            this.selectionSettings = selectionSettings;
            this.factory = locator.getService('rendererFactory');
            this.addEventListener();
        }
        Selection.prototype.initializeSelection = function () {
            ej2_base_1.EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);
        };
        Selection.prototype.onActionBegin = function (args, type) {
            this.parent.trigger(type, args);
        };
        Selection.prototype.onActionComplete = function (args, type) {
            this.parent.trigger(type, args);
        };
        Selection.prototype.getModuleName = function () {
            return 'selection';
        };
        Selection.prototype.destroy = function () {
            this.hidePopUp();
            this.clearSelection();
            this.removeEventListener();
            ej2_base_1.EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);
        };
        Selection.prototype.isEditing = function () {
            return this.parent.editSettings.mode !== 'batch' && this.parent.isEdit;
        };
        Selection.prototype.selectRow = function (index) {
            var gObj = this.parent;
            var selectedRow = gObj.getRowByIndex(index);
            var selectData = gObj.getCurrentViewRecords()[index];
            if (!this.isRowType() || !selectedRow || this.isEditing()) {
                return;
            }
            var isRowSelected = selectedRow.hasAttribute('aria-selected');
            var isToogle = index === this.prevRowIndex && isRowSelected;
            if (!isToogle) {
                this.onActionBegin({
                    data: selectData, rowIndex: index, isCtrlPressed: this.isMultiCtrlRequest,
                    isShiftPressed: this.isMultiShiftRequest, row: selectedRow, previousRow: gObj.getRows()[this.prevRowIndex],
                    previousRowIndex: this.prevRowIndex, target: this.target
                }, events.rowSelecting);
            }
            this.clearRow();
            if (!isToogle) {
                this.updateRowSelection(selectedRow, index);
                this.parent.selectedRowIndex = index;
            }
            this.updateRowProps(index);
            if (!isToogle) {
                this.onActionComplete({
                    data: selectData, rowIndex: index,
                    row: selectedRow, previousRow: gObj.getRows()[this.prevRowIndex],
                    previousRowIndex: this.prevRowIndex, target: this.target
                }, events.rowSelected);
            }
        };
        Selection.prototype.selectRowsByRange = function (startIndex, endIndex) {
            this.selectRows(this.getCollectionFromIndexes(startIndex, endIndex));
            this.parent.selectedRowIndex = endIndex;
        };
        Selection.prototype.selectRows = function (rowIndexes) {
            var gObj = this.parent;
            var selectedRow = gObj.getRowByIndex(rowIndexes[0]);
            var selectedData = gObj.getCurrentViewRecords()[rowIndexes[0]];
            if (this.isSingleSel() || !this.isRowType() || this.isEditing()) {
                return;
            }
            this.onActionBegin({
                rowIndexes: rowIndexes, row: selectedRow, rowIndex: rowIndexes[0], target: this.target,
                prevRow: gObj.getRows()[this.prevRowIndex], previousRowIndex: this.prevRowIndex,
                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,
                data: selectedData
            }, events.rowSelecting);
            this.clearRow();
            for (var _i = 0, rowIndexes_1 = rowIndexes; _i < rowIndexes_1.length; _i++) {
                var rowIndex = rowIndexes_1[_i];
                this.updateRowSelection(gObj.getRowByIndex(rowIndex), rowIndex);
            }
            this.updateRowProps(rowIndexes[0]);
            this.onActionComplete({
                rowIndexes: rowIndexes, row: selectedRow, rowIndex: rowIndexes[0], target: this.target,
                prevRow: gObj.getRows()[this.prevRowIndex], previousRowIndex: this.prevRowIndex,
                data: selectedData
            }, events.rowSelected);
        };
        Selection.prototype.addRowsToSelection = function (rowIndexes) {
            var gObj = this.parent;
            var selectedRow = gObj.getRowByIndex(rowIndexes[0]);
            if (this.isSingleSel() || !this.isRowType() || this.isEditing()) {
                return;
            }
            for (var _i = 0, rowIndexes_2 = rowIndexes; _i < rowIndexes_2.length; _i++) {
                var rowIndex = rowIndexes_2[_i];
                var data = gObj.getCurrentViewRecords()[rowIndex];
                var isUnSelected = this.selectedRowIndexes.indexOf(rowIndex) > -1;
                gObj.selectedRowIndex = rowIndex;
                if (isUnSelected) {
                    this.rowDeselect(events.rowDeselecting, [rowIndex], data, [selectedRow]);
                    this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(rowIndex), 1);
                    this.selectedRecords.splice(this.selectedRecords.indexOf(selectedRow), 1);
                    selectedRow.removeAttribute('aria-selected');
                    this.addRemoveClassesForRow(selectedRow, false, null, 'e-selectionbackground', 'e-active');
                    this.rowDeselect(events.rowDeselecting, [rowIndex], data, [selectedRow]);
                }
                else {
                    this.onActionBegin({
                        data: data, rowIndex: rowIndex, row: selectedRow, target: this.target,
                        prevRow: gObj.getRows()[this.prevRowIndex], previousRowIndex: this.prevRowIndex,
                        isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest
                    }, events.rowSelecting);
                    this.updateRowSelection(selectedRow, rowIndex);
                }
                this.updateRowProps(rowIndex);
                if (!isUnSelected) {
                    this.onActionComplete({
                        data: data, rowIndex: rowIndex, row: selectedRow, target: this.target,
                        prevRow: gObj.getRows()[this.prevRowIndex], previousRowIndex: this.prevRowIndex
                    }, events.rowSelected);
                }
            }
        };
        Selection.prototype.getCollectionFromIndexes = function (startIndex, endIndex) {
            var indexes = [];
            var _a = (startIndex < endIndex) ?
                { i: startIndex, max: endIndex } : { i: endIndex, max: startIndex }, i = _a.i, max = _a.max;
            for (; i <= max; i++) {
                indexes.push(i);
            }
            if (startIndex > endIndex) {
                indexes.reverse();
            }
            return indexes;
        };
        Selection.prototype.clearRow = function () {
            this.clearRowSelection();
            this.selectedRowIndexes = [];
            this.selectedRecords = [];
            this.parent.selectedRowIndex = -1;
        };
        Selection.prototype.updateRowProps = function (startIndex) {
            this.prevRowIndex = startIndex;
            this.isRowSelected = this.selectedRowIndexes.length && true;
        };
        Selection.prototype.updateRowSelection = function (selectedRow, startIndex) {
            if (!selectedRow) {
                return;
            }
            this.selectedRowIndexes.push(startIndex);
            this.selectedRecords.push(selectedRow);
            selectedRow.setAttribute('aria-selected', 'true');
            this.addRemoveClassesForRow(selectedRow, true, null, 'e-selectionbackground', 'e-active');
        };
        Selection.prototype.clearSelection = function () {
            var span = this.parent.element.querySelector('.e-gridpopup').querySelector('span');
            if (span.classList.contains('e-rowselect')) {
                span.classList.remove('e-spanclicked');
            }
            this.clearRowSelection();
            this.clearCellSelection();
            this.enableSelectMultiTouch = false;
        };
        Selection.prototype.clearRowSelection = function () {
            if (this.isRowSelected) {
                var rows = this.parent.getDataRows();
                var data = [];
                var row = [];
                var rowIndex = [];
                var currentViewData = this.parent.getCurrentViewRecords();
                for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {
                    data.push(currentViewData[this.selectedRowIndexes[i]]);
                    row.push(this.parent.getRows()[this.selectedRowIndexes[i]]);
                    rowIndex.push(this.selectedRowIndexes[i]);
                }
                this.rowDeselect(events.rowDeselecting, rowIndex, data, row);
                for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {
                    var row_1 = this.parent.getRowByIndex(this.selectedRowIndexes[i]);
                    if (row_1) {
                        row_1.removeAttribute('aria-selected');
                    }
                    this.addRemoveClassesForRow(row_1, false, true, 'e-selectionbackground', 'e-active');
                }
                this.selectedRowIndexes = [];
                this.selectedRecords = [];
                this.isRowSelected = false;
                this.parent.selectedRowIndex = undefined;
                this.rowDeselect(events.rowDeselected, rowIndex, data, row);
            }
        };
        Selection.prototype.rowDeselect = function (type, rowIndex, data, row) {
            this.parent.trigger(type, {
                rowIndex: rowIndex, data: data, row: row
            });
        };
        Selection.prototype.selectCell = function (cellIndex) {
            if (!this.isCellType()) {
                return;
            }
            var gObj = this.parent;
            var selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, cellIndex.cellIndex);
            this.currentIndex = cellIndex.rowIndex;
            var selectedData = gObj.getCurrentViewRecords()[this.currentIndex];
            if (!this.isCellType() || !selectedCell || this.isEditing()) {
                return;
            }
            var isCellSelected = selectedCell.classList.contains('e-cellselectionbackground');
            var isUpdate = !(!ej2_base_2.isUndefined(this.prevCIdxs) &&
                cellIndex.rowIndex === this.prevCIdxs.rowIndex && cellIndex.cellIndex === this.prevCIdxs.cellIndex &&
                isCellSelected);
            if (isUpdate) {
                this.onActionBegin({
                    data: selectedData, cellIndex: cellIndex, currentCell: selectedCell,
                    isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest, previousRowCellIndex: this.prevECIdxs,
                    previousRowCell: this.prevECIdxs ?
                        gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined
                }, events.cellSelecting);
            }
            this.clearCell();
            if (isUpdate) {
                this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);
            }
            this.updateCellProps(cellIndex, cellIndex);
            if (isUpdate) {
                this.onActionComplete({
                    data: selectedData, cellIndex: cellIndex, currentCell: selectedCell,
                    previousRowCellIndex: this.prevECIdxs, selectedRowCellIndex: this.selectedRowCellIndexes,
                    previousRowCell: this.prevECIdxs ?
                        gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined
                }, events.cellSelected);
            }
        };
        Selection.prototype.selectCellsByRange = function (startIndex, endIndex) {
            if (!this.isCellType()) {
                return;
            }
            var gObj = this.parent;
            var selectedCell = gObj.getCellFromIndex(startIndex.rowIndex, startIndex.cellIndex);
            var min;
            var max;
            var stIndex = startIndex;
            var edIndex = endIndex = endIndex ? endIndex : startIndex;
            var cellIndexes;
            this.currentIndex = startIndex.rowIndex;
            var selectedData = gObj.getCurrentViewRecords()[this.currentIndex];
            if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {
                return;
            }
            this.onActionBegin({
                data: selectedData, cellIndex: startIndex, currentCell: selectedCell,
                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest, previousRowCellIndex: this.prevECIdxs,
                previousRowCell: this.prevECIdxs ? gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined
            }, events.cellSelecting);
            this.clearCell();
            if (startIndex.rowIndex > endIndex.rowIndex) {
                var temp = startIndex;
                startIndex = endIndex;
                endIndex = temp;
            }
            for (var i = startIndex.rowIndex; i <= endIndex.rowIndex; i++) {
                if (this.selectionSettings.cellSelectionMode !== 'box') {
                    min = i === startIndex.rowIndex ? (startIndex.cellIndex) : 0;
                    max = i === endIndex.rowIndex ? (endIndex.cellIndex) : gObj.getColumns().length - 1;
                }
                else {
                    min = startIndex.cellIndex;
                    max = endIndex.cellIndex;
                }
                cellIndexes = [];
                for (var j = min < max ? min : max, len = min > max ? min : max; j <= len; j++) {
                    selectedCell = gObj.getCellFromIndex(i, j);
                    if (!selectedCell) {
                        continue;
                    }
                    cellIndexes.push(j);
                    this.updateCellSelection(selectedCell);
                    this.addAttribute(selectedCell);
                }
                this.selectedRowCellIndexes.push({ rowIndex: i, cellIndexes: cellIndexes });
            }
            this.updateCellProps(stIndex, edIndex);
            this.onActionComplete({
                data: selectedData, cellIndex: startIndex, currentCell: selectedCell,
                previousRowCellIndex: this.prevECIdxs, selectedRowCellIndex: this.selectedRowCellIndexes,
                previousRowCell: this.prevECIdxs ? gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined
            }, events.cellSelected);
        };
        Selection.prototype.selectCells = function (rowCellIndexes) {
            if (!this.isCellType()) {
                return;
            }
            var gObj = this.parent;
            var selectedCell = gObj.getCellFromIndex(rowCellIndexes[0].rowIndex, rowCellIndexes[0].cellIndexes[0]);
            this.currentIndex = rowCellIndexes[0].rowIndex;
            var selectedData = gObj.getCurrentViewRecords()[this.currentIndex];
            if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {
                return;
            }
            this.onActionBegin({
                data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],
                currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,
                isShiftPressed: this.isMultiShiftRequest, previousRowCellIndex: this.prevECIdxs,
                previousRowCell: this.prevECIdxs ? gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined
            }, events.cellSelecting);
            for (var i = 0, len = rowCellIndexes.length; i < len; i++) {
                for (var j = 0, cellLen = rowCellIndexes[i].cellIndexes.length; j < cellLen; j++) {
                    selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);
                    if (!selectedCell) {
                        continue;
                    }
                    this.updateCellSelection(selectedCell);
                    this.addAttribute(selectedCell);
                    this.addRowCellIndex({ rowIndex: rowCellIndexes[i].rowIndex, cellIndex: rowCellIndexes[i].cellIndexes[j] });
                }
            }
            this.updateCellProps({ rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] }, { rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] });
            this.onActionComplete({
                data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],
                currentCell: selectedCell,
                previousRowCellIndex: this.prevECIdxs, selectedRowCellIndex: this.selectedRowCellIndexes,
                previousRowCell: this.prevECIdxs ? gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined
            }, events.cellSelected);
        };
        Selection.prototype.addCellsToSelection = function (cellIndexes) {
            if (!this.isCellType()) {
                return;
            }
            var gObj = this.parent;
            var selectedCell = gObj.getCellFromIndex(cellIndexes[0].rowIndex, cellIndexes[0].cellIndex);
            var index;
            this.currentIndex = cellIndexes[0].rowIndex;
            var selectedData = gObj.getCurrentViewRecords()[this.currentIndex];
            if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {
                return;
            }
            for (var _i = 0, cellIndexes_1 = cellIndexes; _i < cellIndexes_1.length; _i++) {
                var cellIndex = cellIndexes_1[_i];
                for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {
                    if (this.selectedRowCellIndexes[i].rowIndex === cellIndex.rowIndex) {
                        index = i;
                        break;
                    }
                }
                var args = {
                    data: selectedData, cellIndex: cellIndexes[0],
                    isShiftPressed: this.isMultiShiftRequest, previousRowCellIndex: this.prevECIdxs,
                    currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,
                    previousRowCell: this.prevECIdxs ?
                        gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined
                };
                var isUnSelected = index > -1;
                if (isUnSelected) {
                    var selectedCellIdx = this.selectedRowCellIndexes[index].cellIndexes;
                    if (selectedCellIdx.indexOf(cellIndex.cellIndex) > -1) {
                        this.cellDeselect(events.cellDeselecting, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell]);
                        selectedCellIdx.splice(selectedCellIdx.indexOf(cellIndex.cellIndex), 1);
                        selectedCell.classList.remove('e-cellselectionbackground');
                        selectedCell.removeAttribute('aria-selected');
                        this.cellDeselect(events.cellDeselected, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell]);
                    }
                    else {
                        isUnSelected = false;
                        this.onActionBegin(args, events.cellSelecting);
                        this.addRowCellIndex({ rowIndex: cellIndex.rowIndex, cellIndex: cellIndex.cellIndex });
                        this.updateCellSelection(selectedCell);
                        this.addAttribute(selectedCell);
                    }
                }
                else {
                    this.onActionBegin(args, events.cellSelecting);
                    this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);
                }
                this.updateCellProps(cellIndex, cellIndex);
                if (!isUnSelected) {
                    this.onActionComplete({
                        data: selectedData, cellIndex: cellIndexes[0], currentCell: selectedCell,
                        previousRowCell: this.prevECIdxs ? gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) :
                            undefined, previousRowCellIndex: this.prevECIdxs, selectedRowCellIndex: this.selectedRowCellIndexes
                    }, events.cellSelected);
                }
            }
        };
        Selection.prototype.clearCell = function () {
            this.clearCellSelection();
        };
        Selection.prototype.cellDeselect = function (type, cellIndexes, data, cells) {
            this.parent.trigger(type, {
                cells: cells, data: data, cellIndexes: cellIndexes
            });
        };
        Selection.prototype.updateCellSelection = function (selectedCell, rowIndex, cellIndex) {
            if (!ej2_base_2.isNullOrUndefined(rowIndex)) {
                this.addRowCellIndex({ rowIndex: rowIndex, cellIndex: cellIndex });
            }
            selectedCell.classList.add('e-cellselectionbackground');
            this.addAttribute(selectedCell);
        };
        Selection.prototype.addAttribute = function (cell) {
            this.target = cell;
            cell.setAttribute('aria-selected', 'true');
            cell.focus();
        };
        Selection.prototype.updateCellProps = function (startIndex, endIndex) {
            this.prevCIdxs = startIndex;
            this.prevECIdxs = endIndex;
            this.isCellSelected = this.selectedRowCellIndexes.length && true;
        };
        Selection.prototype.addRowCellIndex = function (rowCellIndex) {
            var isRowAvail;
            var index;
            for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {
                if (this.selectedRowCellIndexes[i].rowIndex === rowCellIndex.rowIndex) {
                    isRowAvail = true;
                    index = i;
                    break;
                }
            }
            if (isRowAvail) {
                if (this.selectedRowCellIndexes[index].cellIndexes.indexOf(rowCellIndex.cellIndex) < 0) {
                    this.selectedRowCellIndexes[index].cellIndexes.push(rowCellIndex.cellIndex);
                }
            }
            else {
                this.selectedRowCellIndexes.push({ rowIndex: rowCellIndex.rowIndex, cellIndexes: [rowCellIndex.cellIndex] });
            }
        };
        Selection.prototype.clearCellSelection = function () {
            if (this.isCellSelected) {
                var gObj = this.parent;
                var selectedCells = this.getSelectedCellsElement();
                var rowCell = this.selectedRowCellIndexes;
                var data = [];
                var cells = [];
                var currentViewData = gObj.getCurrentViewRecords();
                for (var i = 0, len = rowCell.length; i < len; i++) {
                    data.push(currentViewData[rowCell[i].rowIndex]);
                    for (var j = 0, cLen = rowCell.length; j < cLen; j++) {
                        cells.push(this.parent.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));
                    }
                }
                this.cellDeselect(events.cellDeselecting, rowCell, data, cells);
                for (var i = 0, len = selectedCells.length; i < len; i++) {
                    selectedCells[i].classList.remove('e-cellselectionbackground');
                    selectedCells[i].removeAttribute('aria-selected');
                }
                this.selectedRowCellIndexes = [];
                this.isCellSelected = false;
                this.cellDeselect(events.cellDeselected, rowCell, data, cells);
            }
        };
        Selection.prototype.getSelectedCellsElement = function () {
            var rows = this.parent.getDataRows();
            var cells = [];
            for (var i = 0, len = rows.length; i < len; i++) {
                cells = cells.concat([].slice.call(rows[i].querySelectorAll('.e-cellselectionbackground')));
            }
            return cells;
        };
        Selection.prototype.mouseMoveHandler = function (e) {
            e.preventDefault();
            var gBRect = this.parent.element.getBoundingClientRect();
            var x1 = this.x;
            var y1 = this.y;
            var position = util_1.getPosition(e);
            var x2 = position.x - gBRect.left;
            var y2 = position.y - gBRect.top;
            var tmp;
            var target = ej2_base_3.closest(e.target, 'tr');
            this.isDragged = true;
            if (!target) {
                target = ej2_base_3.closest(document.elementFromPoint(this.parent.element.offsetLeft + 2, e.clientY), 'tr');
            }
            if (x1 > x2) {
                tmp = x2;
                x2 = x1;
                x1 = tmp;
            }
            if (y1 > y2) {
                tmp = y2;
                y2 = y1;
                y1 = tmp;
            }
            this.element.style.left = x1 + 'px';
            this.element.style.top = y1 + 'px';
            this.element.style.width = x2 - x1 + 'px';
            this.element.style.height = y2 - y1 + 'px';
            if (target && !e.ctrlKey && !e.shiftKey) {
                var rowIndex = parseInt(target.getAttribute('aria-rowindex'), 10);
                this.selectRowsByRange(this.startIndex, rowIndex);
            }
        };
        Selection.prototype.mouseUpHandler = function (e) {
            document.body.classList.remove('e-disableuserselect');
            ej2_base_3.remove(this.element);
            ej2_base_1.EventHandler.remove(this.parent.getContent(), 'mousemove', this.mouseMoveHandler);
            ej2_base_1.EventHandler.remove(document.body, 'mouseup', this.mouseUpHandler);
            this.isDragged = false;
        };
        Selection.prototype.mouseDownHandler = function (e) {
            var target = e.target;
            var gridElement = util_1.parentsUntil(target, 'e-grid');
            if (gridElement && gridElement.id !== this.parent.element.id) {
                return;
            }
            if (e.shiftKey || e.ctrlKey) {
                e.preventDefault();
            }
            if (this.parent.allowRowDragAndDrop && target.classList.contains('e-rowcell') && !e.shiftKey && !e.ctrlKey) {
                if (!this.isRowType() || this.isSingleSel() || ej2_base_3.closest(target, 'td').classList.contains('e-selectionbackground')) {
                    this.isDragged = false;
                    return;
                }
                document.body.classList.add('e-disableuserselect');
                var tr = ej2_base_3.closest(e.target, 'tr');
                var gBRect = this.parent.element.getBoundingClientRect();
                var postion = util_1.getPosition(e);
                this.startIndex = parseInt(tr.getAttribute('aria-rowindex'), 10);
                this.x = postion.x - gBRect.left;
                this.y = postion.y - gBRect.top;
                this.element = ej2_base_3.createElement('div', { className: 'e-griddragarea' });
                this.parent.getContent().appendChild(this.element);
                ej2_base_1.EventHandler.add(this.parent.getContent(), 'mousemove', this.mouseMoveHandler, this);
                ej2_base_1.EventHandler.add(document.body, 'mouseup', this.mouseUpHandler, this);
            }
        };
        Selection.prototype.clearSelAfterRefresh = function (e) {
            if (e.requestType !== 'virtualscroll') {
                this.clearSelection();
            }
        };
        Selection.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.initialEnd, this.initializeSelection, this);
            this.parent.on(events.rowSelectionComplete, this.onActionComplete, this);
            this.parent.on(events.cellSelectionComplete, this.onActionComplete, this);
            this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);
            this.parent.on(events.click, this.clickHandler, this);
            this.parent.on(events.keyPressed, this.keyPressHandler, this);
            this.parent.on(events.dataReady, this.dataReady, this);
            this.parent.on(events.dataReady, this.clearSelAfterRefresh, this);
            this.parent.on(events.columnPositionChanged, this.clearSelection, this);
            this.parent.on(events.contentReady, this.initialEnd, this);
        };
        Selection.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.initialEnd, this.initializeSelection);
            this.parent.off(events.rowSelectionComplete, this.onActionComplete);
            this.parent.off(events.cellSelectionComplete, this.onActionComplete);
            this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);
            this.parent.off(events.click, this.clickHandler);
            this.parent.off(events.keyPressed, this.keyPressHandler);
            this.parent.off(events.dataReady, this.dataReady);
            this.parent.off(events.dataReady, this.clearSelAfterRefresh);
            this.parent.off(events.columnPositionChanged, this.clearSelection);
        };
        Selection.prototype.dataReady = function (e) {
            if (e.requestType !== 'virtualscroll') {
                this.clearSelection();
            }
        };
        ;
        Selection.prototype.onPropertyChanged = function (e) {
            if (e.module !== this.getModuleName()) {
                return;
            }
            var gObj = this.parent;
            if (!ej2_base_2.isNullOrUndefined(e.properties.type) && this.selectionSettings.type === 'single') {
                if (this.selectedRowCellIndexes.length > 1) {
                    this.clearCellSelection();
                }
                if (this.selectedRowIndexes.length > 1) {
                    this.clearRowSelection();
                }
                this.enableSelectMultiTouch = false;
                this.hidePopUp();
            }
            if (!ej2_base_2.isNullOrUndefined(e.properties.mode) ||
                !ej2_base_2.isNullOrUndefined(e.properties.cellSelectionMode)) {
                this.clearSelection();
            }
        };
        Selection.prototype.hidePopUp = function () {
            if (this.parent.element.querySelector('.e-gridpopup').querySelectorAll('.e-rowselect').length) {
                this.parent.element.querySelector('.e-gridpopup').style.display = 'none';
            }
        };
        Selection.prototype.initialEnd = function () {
            this.parent.off(events.contentReady, this.initialEnd);
            this.selectRow(this.parent.selectedRowIndex);
        };
        Selection.prototype.clickHandler = function (e) {
            var target = e.target;
            this.isMultiCtrlRequest = e.ctrlKey || this.enableSelectMultiTouch;
            this.isMultiShiftRequest = e.shiftKey;
            this.popUpClickHandler(e);
            if (target.classList.contains('e-rowcell')) {
                this.target = target;
                this.rowCellSelectionHandler(parseInt(target.parentElement.getAttribute('aria-rowindex'), 10), parseInt(target.getAttribute('aria-colindex'), 10));
                if (ej2_base_1.Browser.isDevice && this.parent.selectionSettings.type === 'multiple') {
                    this.showPopup(e);
                }
            }
            this.isMultiCtrlRequest = false;
            this.isMultiShiftRequest = false;
        };
        Selection.prototype.popUpClickHandler = function (e) {
            var target = e.target;
            if (ej2_base_3.closest(target, '.e-headercell') || e.target.classList.contains('e-rowcell') ||
                ej2_base_3.closest(target, '.e-gridpopup')) {
                if (target.classList.contains('e-rowselect')) {
                    if (!target.classList.contains('e-spanclicked')) {
                        target.classList.add('e-spanclicked');
                        this.enableSelectMultiTouch = true;
                    }
                    else {
                        target.classList.remove('e-spanclicked');
                        this.enableSelectMultiTouch = false;
                        this.parent.element.querySelector('.e-gridpopup').style.display = 'none';
                    }
                }
            }
            else {
                this.parent.element.querySelector('.e-gridpopup').style.display = 'none';
            }
        };
        Selection.prototype.showPopup = function (e) {
            util_1.setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-rowselect e-icons e-icon-rowselect' +
                (this.selectionSettings.type === 'multiple' &&
                    (this.selectedRecords.length > 1 || this.selectedRowCellIndexes.length > 1) ? ' e-spanclicked' : ''));
        };
        Selection.prototype.rowCellSelectionHandler = function (rowIndex, cellIndex) {
            if (!this.isMultiCtrlRequest && !this.isMultiShiftRequest) {
                if (!this.isDragged) {
                    this.selectRow(rowIndex);
                }
                this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex });
            }
            else if (this.isMultiShiftRequest) {
                this.selectRowsByRange(ej2_base_2.isUndefined(this.prevRowIndex) ? rowIndex : this.prevRowIndex, rowIndex);
                this.selectCellsByRange(ej2_base_2.isUndefined(this.prevCIdxs) ? { rowIndex: rowIndex, cellIndex: cellIndex } : this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });
            }
            else {
                this.addRowsToSelection([rowIndex]);
                this.addCellsToSelection([{ rowIndex: rowIndex, cellIndex: cellIndex }]);
            }
            this.isDragged = false;
        };
        Selection.prototype.keyPressHandler = function (e) {
            var checkScroll;
            var preventDefault;
            switch (e.action) {
                case 'downArrow':
                    checkScroll = true;
                    this.downArrowKey();
                    break;
                case 'upArrow':
                    checkScroll = true;
                    this.upArrowKey();
                    break;
                case 'rightArrow':
                    preventDefault = true;
                    this.rightArrowKey();
                    break;
                case 'leftArrow':
                    preventDefault = true;
                    this.leftArrowKey();
                    break;
                case 'home':
                    preventDefault = true;
                    this.homeKey();
                    break;
                case 'end':
                    preventDefault = true;
                    this.endKey();
                    break;
                case 'ctrlHome':
                    preventDefault = true;
                    this.ctrlHomeKey();
                    break;
                case 'ctrlEnd':
                    preventDefault = true;
                    this.ctrlEndKey();
                    break;
                case 'shiftDown':
                    this.shiftDownKey();
                    break;
                case 'shiftUp':
                    this.shiftUpKey();
                    break;
                case 'shiftRight':
                    this.shiftRightKey();
                    break;
                case 'shiftLeft':
                    this.shiftLeftKey();
                    break;
                case 'escape':
                    preventDefault = true;
                    this.clearSelection();
                    break;
                case 'ctrlPlusA':
                    preventDefault = true;
                    this.ctrlPlusA();
                    break;
            }
            if (checkScroll) {
                var scrollElem = this.parent.getContent().firstElementChild;
                if (this.selectedRecords.length || this.selectedRowCellIndexes.length) {
                    var row = this.selectedRecords.length ? this.selectedRecords[0] :
                        this.parent.getRowByIndex(this.selectedRowCellIndexes[0].rowIndex);
                    var height = row.offsetHeight;
                    var rowIndex = row.rowIndex;
                    scrollElem.scrollTop = scrollElem.scrollTop + (e.action === 'downArrow' ? height : height * -1);
                    if (this.checkVisible(row) &&
                        rowIndex !== 0 && this.parent.getContentTable().querySelector('tbody').children.length !== rowIndex + 1) {
                        e.preventDefault();
                    }
                }
            }
            if (preventDefault) {
                e.preventDefault();
            }
        };
        Selection.prototype.checkVisible = function (element) {
            var st = window.scrollY;
            var y = element.getBoundingClientRect().top + st;
            return y + 36 < (window.innerHeight + st) - this.getRowHeight(element) && y > (st - element.offsetHeight) +
                this.getRowHeight(element);
        };
        Selection.prototype.getRowHeight = function (element) {
            return element.getBoundingClientRect().height;
        };
        Selection.prototype.ctrlPlusA = function () {
            if (this.isRowType() && !this.isSingleSel()) {
                this.selectRowsByRange(0, this.parent.getRows().length - 1);
            }
            if (this.isCellType() && !this.isSingleSel()) {
                this.selectCellsByRange({ rowIndex: 0, cellIndex: 0 }, { rowIndex: this.parent.getRows().length - 1, cellIndex: this.parent.getColumns().length - 1 });
            }
        };
        Selection.prototype.downArrowKey = function () {
            this.applyDownUpKey(1, !ej2_base_2.isUndefined(this.parent.selectedRowIndex) && this.parent.selectedRowIndex + 1 < this.parent.getRows().length, !ej2_base_2.isUndefined(this.prevECIdxs) &&
                this.prevECIdxs.rowIndex + 1 < this.parent.getRows().length);
        };
        Selection.prototype.upArrowKey = function () {
            this.applyDownUpKey(-1, !ej2_base_2.isUndefined(this.parent.selectedRowIndex) && this.parent.selectedRowIndex - 1 > -1, !ej2_base_2.isUndefined(this.prevECIdxs) && this.prevECIdxs.rowIndex - 1 > -1);
        };
        Selection.prototype.applyDownUpKey = function (key, cond1, cond2) {
            var gObj = this.parent;
            if (this.isRowType() && cond1) {
                this.selectRow(gObj.selectedRowIndex + key);
                this.applyUpDown(gObj.selectedRowIndex);
            }
            if (this.isCellType() && cond2) {
                this.selectCell({ rowIndex: this.prevECIdxs.rowIndex + key, cellIndex: this.prevECIdxs.cellIndex });
            }
        };
        Selection.prototype.applyUpDown = function (rowIndex) {
            var cIndex = parseInt(this.target.getAttribute('aria-colindex'), 10);
            this.target = this.contentRenderer.getRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex];
            this.addAttribute(this.target);
        };
        Selection.prototype.rightArrowKey = function () {
            this.preSelectedCellIndex = this.prevECIdxs;
            this.applyRightLeftKey(1, 0, !ej2_base_2.isUndefined(this.prevECIdxs) && this.prevECIdxs.cellIndex + 1 < this.parent.getColumns().length);
        };
        Selection.prototype.leftArrowKey = function () {
            this.preSelectedCellIndex = this.prevECIdxs;
            this.applyRightLeftKey(-1, this.parent.getColumns().length - 1, !ej2_base_2.isUndefined(this.prevECIdxs) && this.prevECIdxs.cellIndex - 1 > -1);
        };
        Selection.prototype.applyRightLeftKey = function (key1, key2, cond) {
            var gObj = this.parent;
            var cellIndex;
            var rowIndex;
            if (!ej2_base_2.isNullOrUndefined(this.prevECIdxs)) {
                cellIndex = this.prevECIdxs.cellIndex;
                rowIndex = this.prevECIdxs.rowIndex;
            }
            if (this.isCellType()) {
                if (cond && this.prevECIdxs.cellIndex + key1 > -1 &&
                    this.prevECIdxs.cellIndex + key1 < this.parent.getColumns().length) {
                    cellIndex = this.prevECIdxs.cellIndex + key1;
                    rowIndex = this.prevECIdxs.rowIndex;
                    this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex });
                }
                else if (this.prevECIdxs.rowIndex + key1 > -1 &&
                    this.prevECIdxs.rowIndex + key1 < this.parent.getRows().length) {
                    cellIndex = key2;
                    rowIndex = this.prevECIdxs.rowIndex + key1;
                    this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex });
                }
                if (this.isCellHide({ rowIndex: rowIndex, cellIndex: cellIndex })) {
                    if (!((cellIndex === 0 && rowIndex === 0) ||
                        (cellIndex === gObj.getColumns().length - 1 && rowIndex === gObj.getRows().length - 1))) {
                        this.applyRightLeftKey(key1, key2, cond);
                    }
                    else {
                        this.selectCell(this.preSelectedCellIndex);
                    }
                }
            }
            else if (this.isRowType()) {
                var cellIndex_1 = parseInt(this.target.getAttribute('aria-colindex'), 10);
                var rowElement = ej2_base_3.closest(this.target, 'tr');
                if (cellIndex_1 + key1 > -1 && cellIndex_1 + key1 < this.parent.getColumns().length) {
                    var cell = rowElement.querySelectorAll('.e-rowcell')[cellIndex_1 + key1];
                    if (cell) {
                        if (!cell.classList.contains('e-hide')) {
                            this.addAttribute(cell);
                        }
                        else {
                            key1 += key1;
                            this.applyRightLeftKey(key1, key2, cond);
                        }
                    }
                }
                else {
                    this.addAttribute(this.target);
                }
            }
        };
        Selection.prototype.homeKey = function () {
            this.applyHomeEndKey({ rowIndex: this.currentIndex || 0, cellIndex: 0 });
        };
        Selection.prototype.endKey = function () {
            this.applyHomeEndKey({ rowIndex: this.currentIndex || 0, cellIndex: this.parent.getColumns().length - 1 });
        };
        Selection.prototype.applyHomeEndKey = function (key) {
            if (this.isCellType()) {
                this.selectCell(key);
                if (this.isCellHide(key)) {
                    if (key.cellIndex > 0) {
                        this.applyRightLeftKey(-1, this.parent.getColumns().length - 1, true);
                    }
                    else {
                        this.applyRightLeftKey(1, 0, true);
                    }
                }
            }
            else {
                this.addAttribute(this.parent.getCellFromIndex(key.rowIndex, key.cellIndex));
            }
        };
        Selection.prototype.shiftDownKey = function () {
            var gObj = this.parent;
            this.isMultiShiftRequest = true;
            if (this.isRowType() && !this.isSingleSel()) {
                if (!ej2_base_2.isUndefined(this.prevRowIndex)) {
                    var endIndex = ej2_base_2.isUndefined(gObj.selectedRowIndex) ? this.prevRowIndex + 1 :
                        (gObj.selectedRowIndex + 1 < this.parent.getRows().length ?
                            gObj.selectedRowIndex + 1 : gObj.selectedRowIndex);
                    if (endIndex < this.parent.getRows().length) {
                        this.selectRowsByRange(this.prevRowIndex, endIndex);
                        this.applyUpDown(endIndex);
                    }
                }
                else {
                    this.selectRow(0);
                }
            }
            if (this.isCellType() && !this.isSingleSel()) {
                if (!ej2_base_2.isUndefined(this.prevCIdxs)) {
                    if (this.prevECIdxs.rowIndex + 1 < this.parent.getRows().length) {
                        this.selectCellsByRange(this.prevCIdxs, { rowIndex: this.prevECIdxs.rowIndex + 1, cellIndex: this.prevECIdxs.cellIndex });
                    }
                }
                else {
                    this.selectCellsByRange({ rowIndex: 0, cellIndex: 0 }, { rowIndex: 1, cellIndex: 0 });
                }
            }
            this.isMultiShiftRequest = false;
        };
        Selection.prototype.shiftUpKey = function () {
            var gObj = this.parent;
            this.isMultiShiftRequest = true;
            if (this.isRowType() && !ej2_base_2.isUndefined(this.prevRowIndex) && !this.isSingleSel()) {
                var endIndex = ej2_base_2.isUndefined(gObj.selectedRowIndex) ? (this.prevRowIndex - 1 > -1 ? (this.prevRowIndex - 1) : 0) :
                    ((gObj.selectedRowIndex - 1) > -1 ? gObj.selectedRowIndex - 1 : gObj.selectedRowIndex);
                this.selectRowsByRange(this.prevRowIndex, endIndex);
                this.applyUpDown(endIndex);
            }
            if (this.isCellType() && !ej2_base_2.isUndefined(this.prevECIdxs) && (this.prevECIdxs.rowIndex - 1) > -1 && !this.isSingleSel()) {
                this.selectCellsByRange(this.prevCIdxs, { rowIndex: this.prevECIdxs.rowIndex - 1, cellIndex: this.prevECIdxs.cellIndex });
            }
            this.isMultiShiftRequest = false;
        };
        Selection.prototype.shiftLeftKey = function () {
            this.applyShiftLeftRightKey(-1, !ej2_base_2.isUndefined(this.prevCIdxs) && this.prevECIdxs.cellIndex - 1 > -1);
        };
        Selection.prototype.shiftRightKey = function () {
            this.applyShiftLeftRightKey(1, !ej2_base_2.isUndefined(this.prevCIdxs) && this.prevECIdxs.cellIndex + 1 < this.parent.getColumns().length);
        };
        Selection.prototype.applyShiftLeftRightKey = function (key, cond) {
            var gObj = this.parent;
            var cellIndex;
            this.isMultiShiftRequest = true;
            if (this.isCellType() && !this.isSingleSel()) {
                if (cond) {
                    cellIndex = { rowIndex: this.prevECIdxs.rowIndex, cellIndex: this.prevECIdxs.cellIndex + key };
                    this.selectCellsByRange(this.prevCIdxs, {
                        rowIndex: this.prevECIdxs.rowIndex, cellIndex: this.prevECIdxs.cellIndex + key
                    });
                }
                else if (!this.isSingleSel()) {
                    if (this.selectionSettings.cellSelectionMode === 'flow' &&
                        (key > 0 ? this.prevECIdxs.rowIndex + 1 < this.parent.pageSettings.pageSize : this.prevECIdxs.rowIndex - 1 > -1)) {
                        cellIndex = { rowIndex: this.prevECIdxs.rowIndex + key, cellIndex: key > 0 ? 0 : gObj.getColumns().length - 1 };
                        this.selectCellsByRange(this.prevCIdxs, {
                            rowIndex: this.prevECIdxs.rowIndex + key, cellIndex: key > 0 ? 0 : gObj.getColumns().length - 1
                        });
                    }
                }
                if (!ej2_base_2.isNullOrUndefined(cellIndex) && this.isCellHide(cellIndex) && !((cellIndex.rowIndex === 0 && cellIndex.cellIndex === 0) ||
                    (cellIndex.rowIndex === gObj.getRows().length - 1 && cellIndex.cellIndex === gObj.getColumns().length))) {
                    this.applyShiftLeftRightKey(key, cellIndex.cellIndex > 0);
                }
            }
            this.isMultiShiftRequest = false;
        };
        Selection.prototype.ctrlHomeKey = function () {
            this.applyCtrlHomeEndKey(0, 0);
        };
        Selection.prototype.ctrlEndKey = function () {
            this.applyCtrlHomeEndKey(this.parent.getRows().length - 1, this.parent.getColumns().length - 1);
        };
        Selection.prototype.applyCtrlHomeEndKey = function (rowIndex, colIndex) {
            if (this.isRowType()) {
                this.selectRow(rowIndex);
                this.addAttribute(this.parent.getCellFromIndex(rowIndex, colIndex));
            }
            if (this.isCellType()) {
                this.selectCell({ rowIndex: rowIndex, cellIndex: colIndex });
                if (this.isCellHide({ rowIndex: rowIndex, cellIndex: colIndex })) {
                    if (colIndex > 0) {
                        this.applyRightLeftKey(-1, this.parent.getColumns().length - 1, true);
                    }
                    else {
                        this.applyRightLeftKey(1, 0, true);
                    }
                }
            }
        };
        Selection.prototype.addRemoveClassesForRow = function (row, isAdd, clearAll) {
            var args = [];
            for (var _i = 3; _i < arguments.length; _i++) {
                args[_i - 3] = arguments[_i];
            }
            if (row) {
                var cells = [].slice.call(row.querySelectorAll('.e-rowcell'));
                var cell = row.querySelector('.e-detailrowcollapse') || row.querySelector('.e-detailrowexpand');
                if (cell) {
                    cells.push(cell);
                }
                for (var i = 0, len = cells.length; i < len; i++) {
                    if (isAdd) {
                        ej2_base_3.classList(cells[i], args.slice(), []);
                        cells[i].setAttribute('aria-selected', 'true');
                    }
                    else {
                        ej2_base_3.classList(cells[i], [], args.slice());
                        cells[i].removeAttribute('aria-selected');
                    }
                }
            }
            this.getRenderer().setSelection(row ? row.getAttribute('data-uid') : null, isAdd, clearAll);
        };
        Selection.prototype.isRowType = function () {
            return this.selectionSettings.mode === 'row' || this.selectionSettings.mode === 'both';
        };
        Selection.prototype.isCellType = function () {
            return this.selectionSettings.mode === 'cell' || this.selectionSettings.mode === 'both';
        };
        Selection.prototype.isSingleSel = function () {
            return this.selectionSettings.type === 'single';
        };
        Selection.prototype.isCellHide = function (cellIndex) {
            return !this.parent.getColumns()[cellIndex.cellIndex].visible;
        };
        Selection.prototype.getRenderer = function () {
            if (ej2_base_2.isNullOrUndefined(this.contentRenderer)) {
                this.contentRenderer = this.factory.getRenderer(enum_1.RenderType.Content);
            }
            return this.contentRenderer;
        };
        return Selection;
    }());
    exports.Selection = Selection;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(2), __webpack_require__(3), __webpack_require__(199), __webpack_require__(7), __webpack_require__(201), __webpack_require__(202), __webpack_require__(72), __webpack_require__(285), __webpack_require__(121), __webpack_require__(52), __webpack_require__(274), __webpack_require__(187), __webpack_require__(186), __webpack_require__(266), __webpack_require__(185), __webpack_require__(184), __webpack_require__(273), __webpack_require__(181)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, ej2_base_4, ej2_base_5, util_1, events, render_1, enum_1, cell_render_factory_1, service_locator_1, value_formatter_1, renderer_factory_1, width_controller_1, aria_service_1, page_settings_1, selection_1, search_1, show_hide_1, scroll_1, print_1, aggregate_1, column_chooser_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SortDescriptor = (function (_super) {
        __extends(SortDescriptor, _super);
        function SortDescriptor() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return SortDescriptor;
    }(ej2_base_1.ChildProperty));
    __decorate([
        ej2_base_4.Property()
    ], SortDescriptor.prototype, "field", void 0);
    __decorate([
        ej2_base_4.Property()
    ], SortDescriptor.prototype, "direction", void 0);
    exports.SortDescriptor = SortDescriptor;
    var SortSettings = (function (_super) {
        __extends(SortSettings, _super);
        function SortSettings() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return SortSettings;
    }(ej2_base_1.ChildProperty));
    __decorate([
        ej2_base_4.Collection([], SortDescriptor)
    ], SortSettings.prototype, "columns", void 0);
    exports.SortSettings = SortSettings;
    var Predicate = (function (_super) {
        __extends(Predicate, _super);
        function Predicate() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Predicate;
    }(ej2_base_1.ChildProperty));
    __decorate([
        ej2_base_4.Property()
    ], Predicate.prototype, "field", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Predicate.prototype, "operator", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Predicate.prototype, "value", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Predicate.prototype, "matchCase", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Predicate.prototype, "predicate", void 0);
    __decorate([
        ej2_base_4.Property({})
    ], Predicate.prototype, "actualFilterValue", void 0);
    __decorate([
        ej2_base_4.Property({})
    ], Predicate.prototype, "actualOperator", void 0);
    exports.Predicate = Predicate;
    var FilterSettings = (function (_super) {
        __extends(FilterSettings, _super);
        function FilterSettings() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return FilterSettings;
    }(ej2_base_1.ChildProperty));
    __decorate([
        ej2_base_4.Collection([], Predicate)
    ], FilterSettings.prototype, "columns", void 0);
    __decorate([
        ej2_base_4.Property('filterbar')
    ], FilterSettings.prototype, "type", void 0);
    __decorate([
        ej2_base_4.Property()
    ], FilterSettings.prototype, "mode", void 0);
    __decorate([
        ej2_base_4.Property(true)
    ], FilterSettings.prototype, "showFilterBarStatus", void 0);
    __decorate([
        ej2_base_4.Property(1500)
    ], FilterSettings.prototype, "immediateModeDelay", void 0);
    exports.FilterSettings = FilterSettings;
    var SelectionSettings = (function (_super) {
        __extends(SelectionSettings, _super);
        function SelectionSettings() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return SelectionSettings;
    }(ej2_base_1.ChildProperty));
    __decorate([
        ej2_base_4.Property('row')
    ], SelectionSettings.prototype, "mode", void 0);
    __decorate([
        ej2_base_4.Property('flow')
    ], SelectionSettings.prototype, "cellSelectionMode", void 0);
    __decorate([
        ej2_base_4.Property('single')
    ], SelectionSettings.prototype, "type", void 0);
    exports.SelectionSettings = SelectionSettings;
    var SearchSettings = (function (_super) {
        __extends(SearchSettings, _super);
        function SearchSettings() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return SearchSettings;
    }(ej2_base_1.ChildProperty));
    __decorate([
        ej2_base_4.Property([])
    ], SearchSettings.prototype, "fields", void 0);
    __decorate([
        ej2_base_4.Property('')
    ], SearchSettings.prototype, "key", void 0);
    __decorate([
        ej2_base_4.Property('contains')
    ], SearchSettings.prototype, "operator", void 0);
    __decorate([
        ej2_base_4.Property(true)
    ], SearchSettings.prototype, "ignoreCase", void 0);
    exports.SearchSettings = SearchSettings;
    var RowDropSettings = (function (_super) {
        __extends(RowDropSettings, _super);
        function RowDropSettings() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return RowDropSettings;
    }(ej2_base_1.ChildProperty));
    __decorate([
        ej2_base_4.Property()
    ], RowDropSettings.prototype, "targetID", void 0);
    exports.RowDropSettings = RowDropSettings;
    var TextWrapSettings = (function (_super) {
        __extends(TextWrapSettings, _super);
        function TextWrapSettings() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return TextWrapSettings;
    }(ej2_base_1.ChildProperty));
    __decorate([
        ej2_base_4.Property('both')
    ], TextWrapSettings.prototype, "wrapMode", void 0);
    exports.TextWrapSettings = TextWrapSettings;
    var GroupSettings = (function (_super) {
        __extends(GroupSettings, _super);
        function GroupSettings() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return GroupSettings;
    }(ej2_base_1.ChildProperty));
    __decorate([
        ej2_base_4.Property(true)
    ], GroupSettings.prototype, "showDropArea", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], GroupSettings.prototype, "showToggleButton", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], GroupSettings.prototype, "showGroupedColumn", void 0);
    __decorate([
        ej2_base_4.Property(true)
    ], GroupSettings.prototype, "showUngroupButton", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], GroupSettings.prototype, "disablePageWiseAggregates", void 0);
    __decorate([
        ej2_base_4.Property([])
    ], GroupSettings.prototype, "columns", void 0);
    exports.GroupSettings = GroupSettings;
    var EditSettings = (function (_super) {
        __extends(EditSettings, _super);
        function EditSettings() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return EditSettings;
    }(ej2_base_1.ChildProperty));
    __decorate([
        ej2_base_4.Property(false)
    ], EditSettings.prototype, "allowAdding", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], EditSettings.prototype, "allowEditing", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], EditSettings.prototype, "allowDeleting", void 0);
    __decorate([
        ej2_base_4.Property('normal')
    ], EditSettings.prototype, "mode", void 0);
    __decorate([
        ej2_base_4.Property(true)
    ], EditSettings.prototype, "allowEditOnDblClick", void 0);
    __decorate([
        ej2_base_4.Property(true)
    ], EditSettings.prototype, "showConfirmDialog", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], EditSettings.prototype, "showDeleteConfirmDialog", void 0);
    exports.EditSettings = EditSettings;
    var Grid = (function (_super) {
        __extends(Grid, _super);
        function Grid(options, element) {
            var _this = _super.call(this, options, element) || this;
            _this.isInitial = true;
            _this.sortedColumns = [];
            _this.inViewIndexes = [];
            _this.mediaCol = [];
            _this.isMediaQuery = false;
            _this.isInitialLoad = false;
            _this.filterOperators = {
                contains: 'contains', endsWith: 'endswith', equal: 'equal', greaterThan: 'greaterthan', greaterThanOrEqual: 'greaterthanorequal',
                lessThan: 'lessthan', lessThanOrEqual: 'lessthanorequal', notEqual: 'notequal', startsWith: 'startswith'
            };
            _this.defaultLocale = {
                EmptyRecord: 'No records to display',
                True: 'true',
                False: 'false',
                InvalidFilterMessage: 'Invalid Filter Data',
                GroupDropArea: 'Drag a column header here to group its column',
                UnGroup: 'Click here to ungroup',
                GroupDisable: 'Grouping is disabled for this column',
                FilterbarTitle: '\'s filter bar cell',
                EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',
                Add: 'Add',
                Edit: 'Edit',
                Cancel: 'Cancel',
                Update: 'Update',
                Delete: 'Delete',
                Print: 'Print',
                Pdfexport: 'PDF Export',
                Excelexport: 'Excel Export',
                Wordexport: 'Word Export',
                Csvexport: 'CSV Export',
                Search: 'Search',
                Item: 'item',
                Items: 'items',
                EditOperationAlert: 'No records selected for edit operation',
                DeleteOperationAlert: 'No records selected for delete operation',
                SaveButton: 'Save',
                OKButton: 'OK',
                CancelButton: 'Cancel',
                EditFormTitle: 'Details of ',
                AddFormTitle: 'Add New Record',
                BatchSaveConfirm: 'Are you sure you want to save changes?',
                BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',
                ConfirmDelete: 'Are you sure you want to Delete Record?',
                CancelEdit: 'Are you sure you want to Cancel the changes?',
                ChooseColumns: 'Choose Column',
                SearchColumns: 'search columns',
                Matchs: 'No Matches Found'
            };
            _this.keyConfigs = {
                downArrow: 'downarrow',
                upArrow: 'uparrow',
                rightArrow: 'rightarrow',
                leftArrow: 'leftarrow',
                shiftDown: 'shift+downarrow',
                shiftUp: 'shift+uparrow',
                shiftRight: 'shift+rightarrow',
                shiftLeft: 'shift+leftarrow',
                home: 'home',
                end: 'end',
                escape: 'escape',
                ctrlHome: 'ctrl+home',
                ctrlEnd: 'ctrl+end',
                pageUp: 'pageup',
                pageDown: 'pagedown',
                ctrlAltPageUp: 'ctrl+alt+pageup',
                ctrlAltPageDown: 'ctrl+alt+pagedown',
                altPageUp: 'alt+pageup',
                altPageDown: 'alt+pagedown',
                altDownArrow: 'alt+downarrow',
                altUpArrow: 'alt+uparrow',
                ctrlDownArrow: 'ctrl+downarrow',
                ctrlUpArrow: 'ctrl+uparrow',
                ctrlPlusA: 'ctrl+A',
                ctrlPlusP: 'ctrl+P',
                insert: 'insert',
                delete: 'delete',
                f2: 'f2',
                enter: 'enter',
                tab: 'tab',
                shiftTab: 'shift+tab'
            };
            return _this;
        }
        Grid.prototype.getPersistData = function () {
            var keyEntity = ['allowPaging', 'pageSettings', 'allowSorting', 'sortSettings', 'allowSelection',
                'selectionSettings', 'allowFiltering', 'filterSettings', 'gridLines',
                'created', 'destroyed', 'load', 'actionBegin', 'actionComplete', 'actionFailure', 'rowSelecting', 'rowSelected',
                'columnSelecting', 'columnSelected', 'cellSelecting', 'cellSelected', 'dataBound', 'groupSettings', 'columns', 'allowKeyboard',
                'enableAltRow', 'enableHover', 'allowTextWrap', 'textWrapSettings', 'searchSettings', 'selectedRowIndex', 'allowReordering',
                'allowRowDragAndDrop', 'rowDropSettings', 'allowGrouping', 'height', 'width', 'rowTemplate', 'printMode',
                'rowDataBound', 'queryCellInfo', 'rowDeselecting', 'rowDeselected', 'cellDeselecting', 'cellDeselected',
                'columnDragStart', 'columnDrag', 'columnDrop', 'printComplete', 'beforePrint', 'detailDataBound', 'detailTemplate',
                'childGrid', 'queryString', 'toolbar', 'toolbarClick', 'editSettings',
                'batchAdd', 'batchDelete', 'beforeBatchAdd', 'beforeBatchDelete',
                'beforeBatchSave', 'beginEdit', 'cellEdit', 'cellSave', 'endAdd', 'endDelete', 'endEdit', 'beforeDataBound',
                'beforeOpenColumnChooser', 'allowResizing', 'ExcelExport', 'PdfExport',
                'allowExcelExport', 'allowPdfExport',
                'pdfQueryCellInfo', 'excelQueryCellInfo'];
            return this.addOnPersist(keyEntity);
        };
        Grid.prototype.requiredModules = function () {
            var modules = [];
            if (this.allowFiltering) {
                modules.push({
                    member: 'filter',
                    args: [this, this.filterSettings, this.serviceLocator]
                });
            }
            if (this.allowExcelExport) {
                modules.push({
                    member: 'ExcelExport',
                    args: [this]
                });
            }
            if (this.allowPdfExport) {
                modules.push({
                    member: 'PdfExport',
                    args: [this]
                });
            }
            if (this.allowSorting) {
                modules.push({
                    member: 'sort',
                    args: [this, this.sortSettings, this.sortedColumns]
                });
            }
            if (this.allowPaging) {
                modules.push({
                    member: 'pager',
                    args: [this, this.pageSettings]
                });
            }
            if (this.allowSelection) {
                modules.push({
                    member: 'selection',
                    args: [this, this.selectionSettings, this.serviceLocator]
                });
            }
            modules.push({
                member: 'resize',
                args: [this]
            });
            if (this.allowReordering) {
                modules.push({
                    member: 'reorder',
                    args: [this]
                });
            }
            if (this.allowRowDragAndDrop) {
                modules.push({
                    member: 'rowDragAndDrop',
                    args: [this]
                });
            }
            if (this.allowGrouping) {
                modules.push({
                    member: 'group',
                    args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator]
                });
            }
            if (this.aggregates.length) {
                modules.push({ member: 'aggregate', args: [this, this.serviceLocator] });
            }
            if (this.isDetail()) {
                modules.push({
                    member: 'detailRow',
                    args: [this]
                });
            }
            if (this.toolbar || this.toolbarTemplate) {
                modules.push({
                    member: 'toolbar',
                    args: [this, this.serviceLocator]
                });
            }
            if (this.enableVirtualization || this.enableColumnVirtualization) {
                modules.push({
                    member: 'virtualscroll',
                    args: [this, this.serviceLocator]
                });
            }
            if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {
                modules.push({
                    member: 'edit',
                    args: [this, this.serviceLocator]
                });
            }
            return modules;
        };
        Grid.prototype.preRender = function () {
            this.serviceLocator = new service_locator_1.ServiceLocator;
            this.initializeServices();
        };
        Grid.prototype.render = function () {
            this.ariaService.setOptions(this.element, { role: 'grid' });
            this.renderModule = new render_1.Render(this, this.serviceLocator);
            this.getMediaColumns();
            this.searchModule = new search_1.Search(this);
            this.scrollModule = new scroll_1.Scroll(this);
            if (this.showColumnChooser) {
                this.columnChooserModule = new column_chooser_1.ColumnChooser(this, this.serviceLocator);
            }
            this.notify(events.initialLoad, {});
            this.trigger(events.load);
            util_1.prepareColumns(this.columns, this.enableColumnVirtualization);
            this.getColumns();
            this.processModel();
            this.gridRender();
            this.wireEvents();
            this.addListener();
            this.updateDefaultCursor();
            this.notify(events.initialEnd, {});
        };
        Grid.prototype.getMediaColumns = function () {
            if (!this.enableColumnVirtualization) {
                var gcol = this.getColumns();
                this.getShowHideService = this.serviceLocator.getService('showHideService');
                if (!ej2_base_2.isNullOrUndefined(gcol)) {
                    for (var index = 0; index < gcol.length; index++) {
                        if (!ej2_base_2.isNullOrUndefined(gcol[index].hideAtMedia)) {
                            this.mediaCol.push(gcol[index]);
                            var media = window.matchMedia(gcol[index].hideAtMedia);
                            this.mediaQueryUpdate(index, media);
                            media.addListener(this.mediaQueryUpdate.bind(this, index));
                        }
                    }
                }
            }
        };
        Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {
            this.isMediaQuery = true;
            var col = this.getColumns()[columnIndex];
            col.visible = e.matches;
            if (this.isInitialLoad) {
                if (col.visible) {
                    this.showHider.show(col.headerText, 'headerText');
                }
                else {
                    this.showHider.hide(col.headerText, 'headerText');
                }
            }
        };
        Grid.prototype.refreshMediaCol = function () {
            if (this.isMediaQuery) {
                this.refresh();
                this.isMediaQuery = false;
            }
            this.isInitialLoad = true;
        };
        Grid.prototype.eventInitializer = function () {
        };
        Grid.prototype.destroy = function () {
            this.unwireEvents();
            this.removeListener();
            this.notify(events.destroy, {});
            this.destroyDependentModules();
            _super.prototype.destroy.call(this);
            this.element.innerHTML = '';
            ej2_base_3.classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device']);
        };
        Grid.prototype.destroyDependentModules = function () {
            this.scrollModule.destroy();
            this.keyboardModule.destroy();
        };
        Grid.prototype.getModuleName = function () {
            return 'grid';
        };
        Grid.prototype.onPropertyChanged = function (newProp, oldProp) {
            var requireRefresh = false;
            var requireGridRefresh = false;
            var checkCursor;
            var args = { requestType: 'refresh' };
            if (this.isDestroyed) {
                return;
            }
            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
                var prop = _a[_i];
                switch (prop) {
                    case 'allowPaging':
                        this.notify(events.uiUpdate, { module: 'pager', enable: this.allowPaging });
                        requireRefresh = true;
                        break;
                    case 'pageSettings':
                        this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });
                        if (ej2_base_2.isNullOrUndefined(newProp.pageSettings.currentPage) && ej2_base_2.isNullOrUndefined(newProp.pageSettings.totalRecordsCount)) {
                            requireRefresh = true;
                        }
                        break;
                    case 'locale':
                        this.localeObj.setLocale(newProp.locale);
                        this.valueFormatterService.setCulture(newProp.locale);
                        requireRefresh = true;
                        if (this.toolbar) {
                            this.notify(events.uiUpdate, { module: 'toolbar' });
                        }
                        break;
                    case 'allowSorting':
                        this.notify(events.uiUpdate, { module: 'sort', enable: this.allowSorting });
                        requireRefresh = true;
                        checkCursor = true;
                        break;
                    case 'allowFiltering':
                        this.notify(events.uiUpdate, { module: 'filter', enable: this.allowFiltering });
                        requireRefresh = true;
                        break;
                    case 'height':
                    case 'width':
                        this.notify(events.uiUpdate, {
                            module: 'scroll',
                            properties: { width: newProp.width, height: newProp.height }
                        });
                        break;
                    case 'allowReordering':
                        this.notify(events.uiUpdate, { module: 'reorder', enable: this.allowReordering });
                        checkCursor = true;
                        break;
                    case 'allowRowDragAndDrop':
                        this.notify(events.uiUpdate, { module: 'rowDragAndDrop', enable: this.allowRowDragAndDrop });
                        break;
                    case 'rowTemplate':
                        this.rowTemplateFn = util_1.templateCompiler(this.rowTemplate);
                        requireRefresh = true;
                        break;
                    case 'detailTemplate':
                        this.detailTemplateFn = util_1.templateCompiler(this.detailTemplate);
                        requireRefresh = true;
                        break;
                    case 'allowGrouping':
                        this.notify(events.uiUpdate, { module: 'group', enable: this.allowGrouping });
                        this.headerModule.refreshUI();
                        requireRefresh = true;
                        checkCursor = true;
                        break;
                    case 'childGrid':
                        requireRefresh = true;
                        break;
                    case 'toolbar':
                        this.notify(events.uiUpdate, { module: 'toolbar' });
                        break;
                    case 'groupSettings':
                        if (!(ej2_base_2.isNullOrUndefined(newProp.groupSettings.showDropArea))) {
                            this.headerModule.refreshUI();
                            requireRefresh = true;
                            checkCursor = true;
                        }
                        this.notify(events.inBoundModelChanged, { module: 'group', properties: newProp.groupSettings });
                        break;
                    case 'aggregates':
                        this.notify(events.uiUpdate, { module: 'aggregate', properties: newProp });
                        break;
                    case 'columns':
                        this.updateColumnObject();
                        requireGridRefresh = true;
                        break;
                    default:
                        this.extendedPropertyChange(prop, newProp);
                }
            }
            if (checkCursor) {
                this.updateDefaultCursor();
            }
            if (requireGridRefresh) {
                this.refresh();
            }
            else if (requireRefresh) {
                this.notify(events.modelChanged, args);
                requireRefresh = false;
            }
        };
        Grid.prototype.extendedPropertyChange = function (prop, newProp) {
            switch (prop) {
                case 'enableRtl':
                    this.updateRTL();
                    if (this.allowPaging) {
                        this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;
                        this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();
                    }
                    if (this.height !== 'auto') {
                        this.scrollModule.removePadding(!newProp.enableRtl);
                        this.scrollModule.setPadding();
                    }
                    if (this.toolbar) {
                        this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;
                        this.toolbarModule.getToolbar().ej2_instances[0].dataBind();
                    }
                    break;
                case 'enableAltRow':
                    this.renderModule.refresh();
                    break;
                case 'allowResizing':
                    this.headerModule.refreshUI();
                    break;
                case 'gridLines':
                    this.updateGridLines();
                    break;
                case 'filterSettings':
                    this.notify(events.inBoundModelChanged, { module: 'filter', properties: newProp.filterSettings });
                    break;
                case 'searchSettings':
                    this.notify(events.inBoundModelChanged, { module: 'search', properties: newProp.searchSettings });
                    break;
                case 'sortSettings':
                    this.notify(events.inBoundModelChanged, { module: 'sort' });
                    break;
                case 'selectionSettings':
                    this.notify(events.inBoundModelChanged, { module: 'selection', properties: newProp.selectionSettings });
                    break;
                case 'editSettings':
                    this.notify(events.inBoundModelChanged, { module: 'edit', properties: newProp.editSettings });
                    break;
                case 'allowTextWrap':
                case 'textWrapSettings':
                    if (this.allowTextWrap) {
                        this.applyTextWrap();
                    }
                    else {
                        this.removeTextWrap();
                    }
                    break;
                case 'dataSource':
                    this.notify(events.dataSourceModified, {});
                    this.renderModule.refresh();
                    break;
                case 'enableHover':
                    var action = newProp.enableHover ? ej2_base_3.addClass : ej2_base_3.removeClass;
                    action([this.element], 'e-gridhover');
                    break;
            }
        };
        Grid.prototype.updateDefaultCursor = function () {
            var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));
            for (var _i = 0, headerRows_1 = headerRows; _i < headerRows_1.length; _i++) {
                var row = headerRows_1[_i];
                if (this.allowSorting || this.allowGrouping || this.allowReordering) {
                    row.classList.remove('e-defaultcursor');
                }
                else {
                    row.classList.add('e-defaultcursor');
                }
            }
        };
        Grid.prototype.updateColumnModel = function (columns) {
            for (var i = 0, len = columns.length; i < len; i++) {
                if (columns[i].columns) {
                    this.updateColumnModel(columns[i].columns);
                }
                else {
                    this.columnModel.push(columns[i]);
                }
            }
        };
        Grid.prototype.getColumns = function () {
            var _this = this;
            var inview = this.inViewIndexes.map(function (v) { return v - _this.groupSettings.columns.length; }).filter(function (v) { return v > -1; });
            var vLen = inview.length;
            if (!this.enableColumnVirtualization || ej2_base_2.isNullOrUndefined(this.columnModel) || this.columnModel.length === 0) {
                this.columnModel = [];
                this.updateColumnModel(this.columns);
            }
            var columns = vLen === 0 ? this.columnModel :
                this.columnModel.slice(inview[0], inview[vLen - 1] + 1);
            return columns;
        };
        Grid.prototype.getColumnIndexesInView = function () {
            return this.inViewIndexes;
        };
        Grid.prototype.setColumnIndexesInView = function (indexes) {
            this.inViewIndexes = indexes;
        };
        Grid.prototype.getVisibleColumns = function () {
            var cols = [];
            for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {
                var col = _a[_i];
                if (col.visible) {
                    cols.push(col);
                }
            }
            return cols;
        };
        Grid.prototype.getHeaderContent = function () {
            return this.headerModule.getPanel();
        };
        Grid.prototype.setGridHeaderContent = function (element) {
            this.headerModule.setPanel(element);
        };
        Grid.prototype.getContentTable = function () {
            return this.contentModule.getTable();
        };
        Grid.prototype.setGridContentTable = function (element) {
            this.contentModule.setTable(element);
        };
        Grid.prototype.getContent = function () {
            return this.contentModule.getPanel();
        };
        Grid.prototype.setGridContent = function (element) {
            this.contentModule.setPanel(element);
        };
        Grid.prototype.getHeaderTable = function () {
            return this.headerModule.getTable();
        };
        Grid.prototype.setGridHeaderTable = function (element) {
            this.headerModule.setTable(element);
        };
        Grid.prototype.getFooterContent = function () {
            if (ej2_base_2.isNullOrUndefined(this.footerElement)) {
                this.footerElement = this.element.getElementsByClassName('e-gridfooter')[0];
            }
            return this.footerElement;
        };
        Grid.prototype.getFooterContentTable = function () {
            if (ej2_base_2.isNullOrUndefined(this.footerElement)) {
                this.footerElement = this.element.getElementsByClassName('e-gridfooter')[0];
            }
            return this.footerElement.firstChild.firstChild;
        };
        Grid.prototype.getPager = function () {
            return this.gridPager;
        };
        Grid.prototype.setGridPager = function (element) {
            this.gridPager = element;
        };
        Grid.prototype.getRowByIndex = function (index) {
            return this.contentModule.getRowByIndex(index);
        };
        Grid.prototype.getRows = function () {
            return this.contentModule.getRowElements();
        };
        Grid.prototype.getDataRows = function () {
            var rows = [].slice.call(this.getContentTable().querySelector('tbody').children);
            var dataRows = [];
            for (var i = 0, len = rows.length; i < len; i++) {
                if (rows[i].classList.contains('e-row') && !rows[i].classList.contains('e-hiddenrow')) {
                    dataRows.push(rows[i]);
                }
            }
            return dataRows;
        };
        Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {
            return this.getDataRows()[rowIndex].querySelectorAll('.e-rowcell')[columnIndex];
        };
        Grid.prototype.getColumnHeaderByIndex = function (index) {
            return this.getHeaderTable().querySelectorAll('.e-headercell')[index];
        };
        Grid.prototype.getRowObjectFromUID = function (uid) {
            for (var _i = 0, _a = this.contentModule.getRows(); _i < _a.length; _i++) {
                var row = _a[_i];
                if (row.uid === uid) {
                    return row;
                }
            }
            return null;
        };
        Grid.prototype.getColumnHeaderByField = function (field) {
            return this.getColumnHeaderByUid(this.getColumnByField(field).uid);
        };
        Grid.prototype.getColumnHeaderByUid = function (uid) {
            return this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']').parentElement;
        };
        Grid.prototype.getColumnByField = function (field) {
            return util_1.iterateArrayOrObject(this.getColumns(), function (item, index) {
                if (item.field === field) {
                    return item;
                }
                return undefined;
            })[0];
        };
        Grid.prototype.getColumnIndexByField = function (field) {
            var index = util_1.iterateArrayOrObject(this.getColumns(), function (item, index) {
                if (item.field === field) {
                    return index;
                }
                return undefined;
            })[0];
            return !ej2_base_2.isNullOrUndefined(index) ? index : -1;
        };
        Grid.prototype.getColumnByUid = function (uid) {
            return util_1.iterateArrayOrObject(this.getColumns(), function (item, index) {
                if (item.uid === uid) {
                    return item;
                }
                return undefined;
            })[0];
        };
        Grid.prototype.getColumnIndexByUid = function (uid) {
            var index = util_1.iterateArrayOrObject(this.getColumns(), function (item, index) {
                if (item.uid === uid) {
                    return index;
                }
                return undefined;
            })[0];
            return !ej2_base_2.isNullOrUndefined(index) ? index : -1;
        };
        Grid.prototype.getUidByColumnField = function (field) {
            return util_1.iterateArrayOrObject(this.getColumns(), function (item, index) {
                if (item.field === field) {
                    return item.uid;
                }
                return undefined;
            })[0];
        };
        Grid.prototype.getNormalizedColumnIndex = function (uid) {
            var index = this.getColumnIndexByUid(uid);
            if (this.allowGrouping) {
                index += this.groupSettings.columns.length;
            }
            if (this.isDetail()) {
                index++;
            }
            return index;
        };
        Grid.prototype.getColumnFieldNames = function () {
            var columnNames = [];
            var column;
            for (var i = 0, len = this.getColumns().length; i < len; i++) {
                column = this.getColumns()[i];
                if (column.visible) {
                    columnNames.push(column.field);
                }
            }
            return columnNames;
        };
        Grid.prototype.getRowTemplate = function () {
            return this.rowTemplateFn;
        };
        Grid.prototype.getDetailTemplate = function () {
            return this.detailTemplateFn;
        };
        Grid.prototype.getPrimaryKeyFieldNames = function () {
            var keys = [];
            for (var key = 0, col = this.columns, cLen = col.length; key < cLen; key++) {
                if (col[key].isPrimaryKey) {
                    keys.push(col[key].field);
                }
            }
            return keys;
        };
        Grid.prototype.refresh = function () {
            this.headerModule.refreshUI();
            this.renderModule.refresh();
        };
        Grid.prototype.refreshHeader = function () {
            this.headerModule.refreshUI();
        };
        Grid.prototype.getSelectedRows = function () {
            return this.selectionModule ? this.selectionModule.selectedRecords : [];
        };
        Grid.prototype.getSelectedRowIndexes = function () {
            return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];
        };
        Grid.prototype.getSelectedRowCellIndexes = function () {
            return this.selectionModule.selectedRowCellIndexes;
        };
        Grid.prototype.getSelectedRecords = function () {
            return this.contentModule.getRows().filter(function (row) { return row.isSelected; })
                .map(function (m) { return m.data; });
        };
        Grid.prototype.getDataModule = function () {
            return this.renderModule.data;
        };
        Grid.prototype.showColumns = function (keys, showBy) {
            showBy = showBy ? showBy : 'headerText';
            this.showHider.show(keys, showBy);
        };
        Grid.prototype.hideColumns = function (keys, hideBy) {
            hideBy = hideBy ? hideBy : 'headerText';
            this.showHider.hide(keys, hideBy);
        };
        Grid.prototype.goToPage = function (pageNo) {
            this.pagerModule.goToPage(pageNo);
        };
        Grid.prototype.updateExternalMessage = function (message) {
            this.pagerModule.updateExternalMessage(message);
        };
        Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {
            this.sortModule.sortColumn(columnName, direction, isMultiSort);
        };
        Grid.prototype.clearSorting = function () {
            this.sortModule.clearSorting();
        };
        Grid.prototype.removeSortColumn = function (field) {
            this.sortModule.removeSortColumn(field);
        };
        Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, actualFilterValue, actualOperator) {
            this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, actualFilterValue, actualOperator);
        };
        Grid.prototype.clearFiltering = function () {
            this.filterModule.clearFiltering();
        };
        Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {
            this.filterModule.removeFilteredColsByField(field, isClearFilterBar);
        };
        Grid.prototype.selectRow = function (index) {
            this.selectionModule.selectRow(index);
        };
        Grid.prototype.selectRows = function (rowIndexes) {
            this.selectionModule.selectRows(rowIndexes);
        };
        Grid.prototype.clearSelection = function () {
            this.selectionModule.clearSelection();
        };
        Grid.prototype.selectCell = function (cellIndex) {
            this.selectionModule.selectCell(cellIndex);
        };
        Grid.prototype.search = function (searchString) {
            this.searchModule.search(searchString);
        };
        Grid.prototype.print = function () {
            this.printModule.print();
        };
        Grid.prototype.deleteRecord = function (fieldname, data) {
            this.editModule.deleteRecord(fieldname, data);
        };
        Grid.prototype.startEdit = function () {
            this.editModule.startEdit();
        };
        Grid.prototype.endEdit = function () {
            this.editModule.endEdit();
        };
        Grid.prototype.closeEdit = function () {
            this.editModule.closeEdit();
        };
        Grid.prototype.addRecord = function (data) {
            this.editModule.addRecord(data);
        };
        Grid.prototype.deleteRow = function (tr) {
            this.editModule.deleteRow(tr);
        };
        Grid.prototype.recalcIndentWidth = function () {
            if (!this.getHeaderTable().querySelector('.e-emptycell')) {
                return;
            }
            if ((!this.groupSettings.columns.length && !this.isDetail()) ||
                this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') ||
                !this.getContentTable()) {
                return;
            }
            var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;
            var headerCol = [].slice.call(this.getHeaderTable().querySelector('colgroup').childNodes);
            var contentCol = [].slice.call(this.getContentTable().querySelector('colgroup').childNodes);
            var perPixel = indentWidth / 30;
            var i = 0;
            if (perPixel >= 1) {
                indentWidth = (30 / perPixel);
            }
            if (this.enableColumnVirtualization) {
                indentWidth = 30;
            }
            while (i < this.groupSettings.columns.length) {
                headerCol[i].style.width = indentWidth + 'px';
                contentCol[i].style.width = indentWidth + 'px';
                this.notify(events.columnWidthChanged, { index: i, width: indentWidth });
                i++;
            }
            if (this.isDetail()) {
                headerCol[i].style.width = indentWidth + 'px';
                contentCol[i].style.width = indentWidth + 'px';
                this.notify(events.columnWidthChanged, { index: i, width: indentWidth });
            }
            this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');
        };
        Grid.prototype.reorderColumns = function (fromFName, toFName) {
            this.reorderModule.reorderColumns(fromFName, toFName);
        };
        Grid.prototype.autoFitColumns = function (fieldNames) {
            this.resizeModule.autoFitColumns(fieldNames);
        };
        Grid.prototype.createColumnchooser = function (x, y, target) {
            this.columnChooserModule.renderColumnChooser(x, y, target);
        };
        Grid.prototype.initializeServices = function () {
            this.serviceLocator.register('widthService', this.widthService = new width_controller_1.ColumnWidthService(this));
            this.serviceLocator.register('cellRendererFactory', new cell_render_factory_1.CellRendererFactory);
            this.serviceLocator.register('rendererFactory', new renderer_factory_1.RendererFactory);
            this.serviceLocator.register('localization', this.localeObj = new ej2_base_4.L10n(this.getModuleName(), this.defaultLocale, this.locale));
            this.serviceLocator.register('valueFormatter', this.valueFormatterService = new value_formatter_1.ValueFormatter(this.locale));
            this.serviceLocator.register('showHideService', this.showHider = new show_hide_1.ShowHide(this));
            this.serviceLocator.register('ariaService', this.ariaService = new aria_service_1.AriaService());
        };
        Grid.prototype.processModel = function () {
            var gCols = this.groupSettings.columns;
            var sCols = this.sortSettings.columns;
            var flag;
            var j;
            if (this.allowGrouping) {
                var _loop_1 = function (i, len) {
                    j = 0;
                    for (var sLen = sCols.length; j < sLen; j++) {
                        if (sCols[j].field === gCols[i]) {
                            flag = true;
                            break;
                        }
                    }
                    if (!flag) {
                        sCols.push({ field: gCols[i], direction: 'ascending' });
                    }
                    else {
                        if (this_1.allowSorting) {
                            this_1.sortedColumns.push(sCols[j].field);
                        }
                        else {
                            sCols[j].direction = 'ascending';
                        }
                    }
                    if (!this_1.groupSettings.showGroupedColumn) {
                        var column = this_1.enableColumnVirtualization ?
                            this_1.columns.filter(function (c) { return c.field === gCols[i]; })[0] : this_1.getColumnByField(gCols[i]);
                        column.visible = false;
                    }
                };
                var this_1 = this;
                for (var i = 0, len = gCols.length; i < len; i++) {
                    _loop_1(i, len);
                }
            }
            this.rowTemplateFn = util_1.templateCompiler(this.rowTemplate);
            this.detailTemplateFn = util_1.templateCompiler(this.detailTemplate);
            if (!ej2_base_2.isNullOrUndefined(this.parentDetails)) {
                var value = ej2_base_2.isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' :
                    this.parentDetails.parentKeyFieldValue;
                this.query.where(this.queryString, 'equal', value, true);
            }
        };
        Grid.prototype.gridRender = function () {
            this.updateRTL();
            if (this.enableHover) {
                this.element.classList.add('e-gridhover');
            }
            if (ej2_base_1.Browser.isDevice) {
                this.element.classList.add('e-device');
            }
            ej2_base_3.classList(this.element, ['e-responsive', 'e-default'], []);
            var rendererFactory = this.serviceLocator.getService('rendererFactory');
            this.headerModule = rendererFactory.getRenderer(enum_1.RenderType.Header);
            this.contentModule = rendererFactory.getRenderer(enum_1.RenderType.Content);
            this.printModule = new print_1.Print(this, this.scrollModule);
            this.renderModule.render();
            this.eventInitializer();
            this.createGridPopUpElement();
            this.widthService.setWidthToColumns();
            this.updateGridLines();
            this.applyTextWrap();
        };
        Grid.prototype.dataReady = function () {
            this.scrollModule.setWidth();
            this.scrollModule.setHeight();
            if (this.height !== 'auto') {
                this.scrollModule.setPadding();
            }
        };
        Grid.prototype.updateRTL = function () {
            if (this.enableRtl) {
                this.element.classList.add('e-rtl');
            }
            else {
                this.element.classList.remove('e-rtl');
            }
        };
        Grid.prototype.createGridPopUpElement = function () {
            var popup = ej2_base_3.createElement('div', { className: 'e-gridpopup', styles: 'display:none;' });
            var content = ej2_base_3.createElement('div', { className: 'e-content', attrs: { tabIndex: '-1' } });
            ej2_base_3.append([content, ej2_base_3.createElement('div', { className: 'e-uptail e-tail' })], popup);
            content.appendChild(ej2_base_3.createElement('span'));
            ej2_base_3.append([content, ej2_base_3.createElement('div', { className: 'e-downtail e-tail' })], popup);
            this.element.appendChild(popup);
        };
        Grid.prototype.updateGridLines = function () {
            ej2_base_3.classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);
            switch (this.gridLines) {
                case 'horizontal':
                    this.element.classList.add('e-horizontallines');
                    break;
                case 'vertical':
                    this.element.classList.add('e-verticallines');
                    break;
                case 'none':
                    this.element.classList.add('e-hidelines');
                    break;
                case 'both':
                    this.element.classList.add('e-bothlines');
                    break;
            }
        };
        Grid.prototype.applyTextWrap = function () {
            if (this.allowTextWrap) {
                var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));
                switch (this.textWrapSettings.wrapMode) {
                    case 'header':
                        util_1.wrap(this.element, false);
                        util_1.wrap(this.getContent(), false);
                        util_1.wrap(headerRows, true);
                        break;
                    case 'content':
                        util_1.wrap(this.getContent(), true);
                        util_1.wrap(this.element, false);
                        util_1.wrap(headerRows, false);
                        break;
                    default:
                        util_1.wrap(this.element, true);
                        util_1.wrap(this.getContent(), false);
                        util_1.wrap(headerRows, false);
                }
            }
        };
        Grid.prototype.removeTextWrap = function () {
            util_1.wrap(this.element, false);
            var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));
            util_1.wrap(headerRows, false);
            util_1.wrap(this.getContent(), false);
        };
        Grid.prototype.wireEvents = function () {
            ej2_base_5.EventHandler.add(this.element, 'click', this.mouseClickHandler, this);
            ej2_base_5.EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);
            ej2_base_5.EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);
            ej2_base_5.EventHandler.add(this.getContent(), 'dblclick', this.dblClickHandler, this);
            if (this.allowKeyboard) {
                this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;
            }
            this.keyboardModule = new ej2_base_5.KeyboardEvents(this.element, {
                keyAction: this.keyActionHandler.bind(this),
                keyConfigs: this.keyConfigs,
                eventName: 'keydown'
            });
        };
        Grid.prototype.unwireEvents = function () {
            ej2_base_5.EventHandler.remove(this.element, 'click', this.mouseClickHandler);
            ej2_base_5.EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);
            ej2_base_5.EventHandler.remove(this.element, 'focusout', this.focusOutHandler);
        };
        Grid.prototype.addListener = function () {
            if (this.isDestroyed) {
                return;
            }
            this.on(events.dataReady, this.dataReady, this);
            this.on(events.contentReady, this.recalcIndentWidth, this);
            this.on(events.headerRefreshed, this.recalcIndentWidth, this);
            this.addEventListener(events.dataBound, this.refreshMediaCol.bind(this));
        };
        Grid.prototype.removeListener = function () {
            if (this.isDestroyed) {
                return;
            }
            this.off(events.dataReady, this.dataReady);
            this.off(events.contentReady, this.recalcIndentWidth);
            this.off(events.headerRefreshed, this.recalcIndentWidth);
            this.removeEventListener(events.dataBound, this.refreshMediaCol);
        };
        Grid.prototype.getCurrentViewRecords = function () {
            return (this.allowGrouping && this.groupSettings.columns.length) ?
                this.currentViewData.records : this.currentViewData;
        };
        Grid.prototype.mouseClickHandler = function (e) {
            if (this.isChildGrid(e) || (util_1.parentsUntil(e.target, 'e-gridpopup') && e.touches) ||
                this.element.querySelectorAll('.e-cloneproperties').length || this.checkEdit(e)) {
                return;
            }
            if (((!this.allowRowDragAndDrop && util_1.parentsUntil(e.target, 'e-gridcontent')) ||
                (!(this.allowGrouping || this.allowReordering) && util_1.parentsUntil(e.target, 'e-gridheader'))) && e.touches) {
                return;
            }
            if (util_1.parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop) {
                e.preventDefault();
            }
            this.notify(events.click, e);
        };
        Grid.prototype.checkEdit = function (e) {
            var tr = util_1.parentsUntil(e.target, 'e-row');
            var isEdit = this.editSettings.mode !== 'batch' &&
                this.isEdit && tr && (tr.classList.contains('e-editedrow') || tr.classList.contains('e-addedrow'));
            return isEdit || (util_1.parentsUntil(e.target, 'e-rowcell') &&
                util_1.parentsUntil(e.target, 'e-rowcell').classList.contains('e-editedbatchcell'));
        };
        Grid.prototype.dblClickHandler = function (e) {
            if (util_1.parentsUntil(e.target, 'e-grid').id !== this.element.id) {
                return;
            }
            this.notify(events.dblclick, e);
        };
        Grid.prototype.focusOutHandler = function (e) {
            if (this.isChildGrid(e)) {
                return;
            }
            if (!util_1.parentsUntil(e.target, 'e-grid')) {
                this.element.querySelector('.e-gridpopup').style.display = 'none';
            }
            var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');
            if (filterClear) {
                filterClear.classList.add('e-hide');
            }
        };
        Grid.prototype.isChildGrid = function (e) {
            var gridElement = util_1.parentsUntil(e.target, 'e-grid');
            if (gridElement && gridElement.id !== this.element.id) {
                return true;
            }
            return false;
        };
        Grid.prototype.isDetail = function () {
            return !ej2_base_2.isNullOrUndefined(this.detailTemplate) || !ej2_base_2.isNullOrUndefined(this.childGrid);
        };
        Grid.prototype.keyActionHandler = function (e) {
            if (this.isChildGrid(e) ||
                (this.isEdit && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'tab' && e.action !== 'shiftTab')) {
                return;
            }
            if (this.allowKeyboard) {
                if (e.action === 'ctrlPlusP') {
                    e.preventDefault();
                    this.print();
                }
                this.notify(events.keyPressed, e);
            }
        };
        Grid.prototype.setInjectedModules = function (modules) {
            this.injectedModules = modules;
        };
        Grid.prototype.updateColumnObject = function () {
            util_1.prepareColumns(this.columns, this.enableColumnVirtualization);
            if (this.editSettings.allowEditing || this.editSettings.allowAdding || this.editSettings.allowDeleting) {
                this.notify(events.autoCol, {});
            }
        };
        Grid.prototype.refreshColumns = function () {
            this.updateColumnObject();
            this.refresh();
        };
        Grid.prototype.excelExport = function (exportProperties, isMultipleExport, workbook) {
            return this.excelExportModule.Map(this, exportProperties, isMultipleExport, workbook, false);
        };
        Grid.prototype.csvExport = function (exportProperties, isMultipleExport, workbook) {
            return this.excelExportModule.Map(this, exportProperties, isMultipleExport, workbook, true);
        };
        Grid.prototype.pdfExport = function (exportProperties, isMultipleExport, pdfDoc) {
            return this.pdfExportModule.Map(this, exportProperties, isMultipleExport, pdfDoc);
        };
        return Grid;
    }(ej2_base_1.Component));
    __decorate([
        ej2_base_4.Property([])
    ], Grid.prototype, "columns", void 0);
    __decorate([
        ej2_base_4.Property(true)
    ], Grid.prototype, "enableAltRow", void 0);
    __decorate([
        ej2_base_4.Property(true)
    ], Grid.prototype, "enableHover", void 0);
    __decorate([
        ej2_base_4.Property(true)
    ], Grid.prototype, "allowKeyboard", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Grid.prototype, "allowTextWrap", void 0);
    __decorate([
        ej2_base_4.Complex({}, TextWrapSettings)
    ], Grid.prototype, "textWrapSettings", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Grid.prototype, "allowPaging", void 0);
    __decorate([
        ej2_base_4.Complex({}, page_settings_1.PageSettings)
    ], Grid.prototype, "pageSettings", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Grid.prototype, "enableVirtualization", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Grid.prototype, "enableColumnVirtualization", void 0);
    __decorate([
        ej2_base_4.Complex({}, SearchSettings)
    ], Grid.prototype, "searchSettings", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Grid.prototype, "allowSorting", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Grid.prototype, "allowExcelExport", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Grid.prototype, "allowPdfExport", void 0);
    __decorate([
        ej2_base_4.Complex({}, SortSettings)
    ], Grid.prototype, "sortSettings", void 0);
    __decorate([
        ej2_base_4.Property(true)
    ], Grid.prototype, "allowSelection", void 0);
    __decorate([
        ej2_base_4.Property(-1)
    ], Grid.prototype, "selectedRowIndex", void 0);
    __decorate([
        ej2_base_4.Complex({}, SelectionSettings)
    ], Grid.prototype, "selectionSettings", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Grid.prototype, "allowFiltering", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Grid.prototype, "allowReordering", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Grid.prototype, "allowResizing", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Grid.prototype, "allowRowDragAndDrop", void 0);
    __decorate([
        ej2_base_4.Complex({}, RowDropSettings)
    ], Grid.prototype, "rowDropSettings", void 0);
    __decorate([
        ej2_base_4.Complex({}, FilterSettings)
    ], Grid.prototype, "filterSettings", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Grid.prototype, "allowGrouping", void 0);
    __decorate([
        ej2_base_4.Complex({}, GroupSettings)
    ], Grid.prototype, "groupSettings", void 0);
    __decorate([
        ej2_base_4.Complex({}, EditSettings)
    ], Grid.prototype, "editSettings", void 0);
    __decorate([
        ej2_base_4.Collection([], aggregate_1.AggregateRow)
    ], Grid.prototype, "aggregates", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Grid.prototype, "showColumnChooser", void 0);
    __decorate([
        ej2_base_4.Property('auto')
    ], Grid.prototype, "height", void 0);
    __decorate([
        ej2_base_4.Property('auto')
    ], Grid.prototype, "width", void 0);
    __decorate([
        ej2_base_4.Property('default')
    ], Grid.prototype, "gridLines", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Grid.prototype, "rowTemplate", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Grid.prototype, "detailTemplate", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Grid.prototype, "childGrid", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Grid.prototype, "queryString", void 0);
    __decorate([
        ej2_base_4.Property('allpages')
    ], Grid.prototype, "printMode", void 0);
    __decorate([
        ej2_base_4.Property([])
    ], Grid.prototype, "dataSource", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Grid.prototype, "query", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Grid.prototype, "toolbar", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Grid.prototype, "toolbarTemplate", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "created", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "destroyed", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "load", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "rowDataBound", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "queryCellInfo", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "actionBegin", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "actionComplete", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "actionFailure", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "dataBound", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "rowSelecting", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "rowSelected", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "rowDeselecting", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "rowDeselected", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "cellSelecting", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "cellSelected", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "cellDeselecting", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "cellDeselected", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "columnDragStart", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "columnDrag", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "columnDrop", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "printComplete", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "beforePrint", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "pdfQueryCellInfo", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "excelQueryCellInfo", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "detailDataBound", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "rowDragStart", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "rowDrag", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "rowDrop", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "toolbarClick", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "beforeOpenColumnChooser", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "batchAdd", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "batchDelete", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "beforeBatchAdd", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "beforeBatchDelete", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "beforeBatchSave", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "beginEdit", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "cellEdit", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "cellSave", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "resizeStart", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "onResize", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "resizeStop", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Grid.prototype, "beforeDataBound", void 0);
    Grid = __decorate([
        ej2_base_4.NotifyPropertyChanges
    ], Grid);
    exports.Grid = Grid;
    Grid.Inject(selection_1.Selection);
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BatchEditRender = (function () {
        function BatchEditRender(parent) {
            this.parent = parent;
        }
        BatchEditRender.prototype.update = function (elements, args) {
            args.cell.innerHTML = '';
            args.cell.appendChild(this.getEditElement(elements, args));
            args.cell.classList.add('e-editedbatchcell');
            ej2_base_1.classList(args.row, ['e-editedrow', 'e-batchrow'], []);
        };
        BatchEditRender.prototype.getEditElement = function (elements, args) {
            var gObj = this.parent;
            var form = ej2_base_1.createElement('form', { id: gObj.element.id + 'EditForm', className: 'e-gridform' });
            form.appendChild(elements[args.columnObject.uid]);
            if (args.columnObject.editType === 'booleanedit') {
                args.cell.classList.add('e-boolcell');
            }
            if (!args.columnObject.editType) {
                args.cell.classList.add('e-inputbox');
            }
            return form;
        };
        return BatchEditRender;
    }());
    exports.BatchEditRender = BatchEditRender;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, util_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BooleanEditCell = (function () {
        function BooleanEditCell(parent) {
            this.parent = parent;
        }
        BooleanEditCell.prototype.create = function (args) {
            var col = args.column;
            var input = ej2_base_1.createElement('input', {
                className: 'e-field e-boolcell', attrs: {
                    type: 'checkbox', value: args.value, 'e-mappinguid': col.uid,
                    id: this.parent.element.id + col.field, name: col.field
                }
            });
            if (!util_1.isEditable(args.column, args.requestType, args.element)) {
                input.setAttribute('disabled', 'true');
            }
            if (args.value) {
                input.checked = true;
            }
            return input;
        };
        BooleanEditCell.prototype.read = function (element) {
            return element.checked;
        };
        BooleanEditCell.prototype.write = function (args) {
            args.element.style.width = 'auto';
        };
        BooleanEditCell.prototype.destroy = function () {
        };
        return BooleanEditCell;
    }());
    exports.BooleanEditCell = BooleanEditCell;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(18)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, cell_renderer_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var GroupCaptionCellRenderer = (function (_super) {
        __extends(GroupCaptionCellRenderer, _super);
        function GroupCaptionCellRenderer() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.element = ej2_base_1.createElement('TD', { className: 'e-groupcaption', attrs: { role: 'gridcell', tabindex: '-1' } });
            return _this;
        }
        GroupCaptionCellRenderer.prototype.render = function (cell, data) {
            var node = this.element.cloneNode();
            var value = this.format(cell.column, cell.column.valueAccessor('key', data, cell.column));
            node.innerHTML = cell.column.headerText + ': ' + value + ' - ' + data.count + ' ' +
                (data.count < 2 ? this.localizer.getConstant('Item') : this.localizer.getConstant('Items'));
            node.setAttribute('colspan', cell.colSpan.toString());
            node.setAttribute('aria-label', node.innerHTML + ' is groupcaption cell');
            return node;
        };
        return GroupCaptionCellRenderer;
    }(cell_renderer_1.CellRenderer));
    exports.GroupCaptionCellRenderer = GroupCaptionCellRenderer;
    var GroupCaptionEmptyCellRenderer = (function (_super) {
        __extends(GroupCaptionEmptyCellRenderer, _super);
        function GroupCaptionEmptyCellRenderer() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.element = ej2_base_1.createElement('TD', { className: 'e-groupcaption' });
            return _this;
        }
        GroupCaptionEmptyCellRenderer.prototype.render = function (cell, data) {
            var node = this.element.cloneNode();
            node.innerHTML = '&nbsp;';
            node.setAttribute('colspan', cell.colSpan.toString());
            return node;
        };
        return GroupCaptionEmptyCellRenderer;
    }(cell_renderer_1.CellRenderer));
    exports.GroupCaptionEmptyCellRenderer = GroupCaptionEmptyCellRenderer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(36), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_inputs_1, util_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DefaultEditCell = (function () {
        function DefaultEditCell(parent) {
            this.parent = parent;
        }
        DefaultEditCell.prototype.create = function (args) {
            var col = args.column;
            var input = ej2_base_1.createElement('input', {
                className: 'e-field e-input e-defaultcell', attrs: {
                    type: 'text', value: !ej2_base_1.isNullOrUndefined(args.value) ? args.value : '', 'e-mappinguid': col.uid,
                    id: this.parent.element.id + col.field, name: col.field, style: 'text-align:' + col.textAlign,
                }
            });
            return input;
        };
        DefaultEditCell.prototype.read = function (element) {
            return element.value;
        };
        DefaultEditCell.prototype.write = function (args) {
            var col = args.column;
            var isInline = this.parent.editSettings.mode !== 'dialog';
            ej2_inputs_1.Input.createInput({
                element: args.element, floatLabelType: this.parent.editSettings.mode !== 'dialog' ? 'Never' : 'Always',
                properties: {
                    enableRtl: this.parent.enableRtl, enabled: util_1.isEditable(args.column, args.requestType, args.element),
                    placeholder: isInline ? '' : args.column.headerText
                }
            });
        };
        return DefaultEditCell;
    }());
    exports.DefaultEditCell = DefaultEditCell;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(34), __webpack_require__(0), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_popups_1, ej2_base_1, events) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DialogEditRender = (function () {
        function DialogEditRender(parent, serviceLocator) {
            this.parent = parent;
            this.serviceLocator = serviceLocator;
            this.parent.on(events.dialogDestroy, this.destroy, this);
            this.parent.on(events.destroy, this.destroy, this);
        }
        DialogEditRender.prototype.setLocaleObj = function () {
            this.l10n = this.serviceLocator.getService('localization');
        };
        DialogEditRender.prototype.addNew = function (elements, args) {
            this.isEdit = false;
            this.createDialog(elements, args);
        };
        DialogEditRender.prototype.update = function (elements, args) {
            this.isEdit = true;
            this.createDialog(elements, args);
        };
        DialogEditRender.prototype.createDialog = function (elements, args) {
            var gObj = this.parent;
            this.dialog = ej2_base_1.createElement('div', { id: gObj.element.id + '_dialogEdit_wrapper' });
            gObj.element.appendChild(this.dialog);
            this.setLocaleObj();
            this.dialogObj = new ej2_popups_1.Dialog({
                header: this.isEdit ? this.l10n.getConstant('EditFormTitle') + args.primaryKeyValue[0] :
                    this.l10n.getConstant('AddFormTitle'), isModal: true, visible: true,
                content: this.getEditElement(elements), showCloseIcon: true, allowDragging: true, close: this.destroy.bind(this),
                closeOnEscape: true, width: '330px', target: gObj.element, animationSettings: { effect: 'None' },
                buttons: [{
                        click: this.btnClick.bind(this),
                        buttonModel: { content: this.l10n.getConstant('SaveButton'), cssClass: 'e-primary', isPrimary: true }
                    },
                    { click: this.btnClick.bind(this), buttonModel: { cssClass: 'e-flat', content: this.l10n.getConstant('CancelButton') } }]
            });
            this.dialogObj.appendTo(this.dialog);
        };
        DialogEditRender.prototype.btnClick = function (e) {
            if (this.l10n.getConstant('CancelButton').toLowerCase() === e.target.innerText.toLowerCase()) {
                this.parent.closeEdit();
                this.destroy();
            }
            else {
                this.parent.endEdit();
            }
        };
        DialogEditRender.prototype.destroy = function (args) {
            this.parent.notify(events.destroyForm, {});
            this.parent.isEdit = false;
            this.parent.notify(events.toolbarRefresh, {});
            if (this.dialog && !this.dialogObj.isDestroyed) {
                this.dialogObj.destroy();
                ej2_base_1.remove(this.dialog);
            }
        };
        DialogEditRender.prototype.getEditElement = function (elements) {
            var gObj = this.parent;
            var div = ej2_base_1.createElement('div', { className: this.isEdit ? 'e-editedrow' : 'e-insertedrow' });
            var form = ej2_base_1.createElement('form', { id: gObj.element.id + 'EditForm', className: 'e-gridform' });
            var table = ej2_base_1.createElement('table', { className: 'e-table', attrs: { cellspacing: '6px' } });
            var tbody = ej2_base_1.createElement('tbody');
            var cols = gObj.columns;
            for (var i = 0; i < cols.length; i++) {
                if (!cols[i].visible) {
                    continue;
                }
                var tr = ej2_base_1.createElement('tr');
                var dataCell = ej2_base_1.createElement('td', { className: 'e-rowcell', attrs: { style: 'text-align:left;width:190px' } });
                var label = ej2_base_1.createElement('label', { innerHTML: cols[i].field });
                elements[cols[i].uid].classList.remove('e-input');
                if (cols[i].editType === 'booleanedit') {
                    var elem = dataCell.appendChild(elements[cols[i].uid]);
                    var lbl = ej2_base_1.createElement('label', { className: 'e-noselect', attrs: { for: elem.id, style: ej2_base_1.Browser.isDevice ? '' : 'vertical-align: top;' } });
                    lbl.innerHTML = cols[i].headerText;
                    dataCell.appendChild(elem);
                    dataCell.appendChild(lbl);
                }
                else {
                    dataCell.appendChild(elements[cols[i].uid]);
                }
                tr.appendChild(dataCell);
                tbody.appendChild(tr);
            }
            table.appendChild(tbody);
            form.appendChild(table);
            div.appendChild(form);
            return div;
        };
        return DialogEditRender;
    }());
    exports.DialogEditRender = DialogEditRender;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(129), __webpack_require__(14), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_dropdowns_1, ej2_data_1, util_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DropDownEditCell = (function () {
        function DropDownEditCell(parent) {
            this.parent = parent;
        }
        DropDownEditCell.prototype.create = function (args) {
            return ej2_base_2.createElement('input', {
                className: 'e-field', attrs: {
                    id: this.parent.element.id + args.column.field, name: args.column.field, type: 'text', 'e-mappinguid': args.column.uid,
                }
            });
        };
        DropDownEditCell.prototype.write = function (args) {
            var col = args.column;
            var isInline = this.parent.editSettings.mode !== 'dialog';
            this.obj = new ej2_dropdowns_1.DropDownList(ej2_base_1.extend({
                dataSource: this.parent.dataSource instanceof ej2_data_1.DataManager ?
                    this.parent.dataSource : new ej2_data_1.DataManager(this.parent.dataSource),
                query: new ej2_data_1.Query().select(args.column.field), enabled: util_1.isEditable(args.column, args.requestType, args.element),
                fields: { value: args.column.field }, value: args.rowData[args.column.field],
                enableRtl: this.parent.enableRtl, actionComplete: this.ddActionComplete,
                placeholder: isInline ? '' : args.column.headerText, popupHeight: '200px',
                floatLabelType: isInline ? 'Never' : 'Always',
            }, args.column.edit.params));
            this.obj.appendTo(args.element);
            args.element.setAttribute('name', args.column.field);
        };
        DropDownEditCell.prototype.read = function (element) {
            return element.ej2_instances[0].value;
        };
        DropDownEditCell.prototype.ddActionComplete = function (e) {
            e.result = e.result.filter(function (val, i, values) { return values.indexOf(val) === i; });
            e.result.sort();
        };
        DropDownEditCell.prototype.destroy = function () {
            if (this.obj) {
                this.obj.destroy();
            }
        };
        return DropDownEditCell;
    }());
    exports.DropDownEditCell = DropDownEditCell;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(197), __webpack_require__(189), __webpack_require__(193), __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, inline_edit_renderer_1, batch_edit_renderer_1, dialog_edit_renderer_1, ej2_base_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var EditRender = (function () {
        function EditRender(parent, serviceLocator) {
            this.editType = {
                'inline': inline_edit_renderer_1.InlineEditRender,
                'normal': inline_edit_renderer_1.InlineEditRender, 'batch': batch_edit_renderer_1.BatchEditRender, 'dialog': dialog_edit_renderer_1.DialogEditRender
            };
            this.parent = parent;
            this.serviceLocator = serviceLocator;
            this.renderer = new this.editType[this.parent.editSettings.mode](parent, serviceLocator);
        }
        EditRender.prototype.addNew = function (args) {
            this.renderer.addNew(this.getEditElements(args), args);
            this.convertWidget(args);
        };
        EditRender.prototype.update = function (args) {
            this.renderer.update(this.getEditElements(args), args);
            this.convertWidget(args);
        };
        EditRender.prototype.convertWidget = function (args) {
            var gObj = this.parent;
            var isFocused;
            var cell;
            var value;
            var form = gObj.element.querySelector('.e-gridform');
            var cols = gObj.editSettings.mode !== 'batch' ? gObj.columns : [gObj.getColumnByField(args.columnName)];
            for (var _i = 0, cols_1 = cols; _i < cols_1.length; _i++) {
                var col = cols_1[_i];
                if (!col.visible) {
                    continue;
                }
                value = col.valueAccessor(col.field, args.rowData, col);
                cell = form.querySelector('[e-mappinguid=' + col.uid + ']');
                var temp = col.edit.write;
                if (typeof temp === 'string') {
                    temp = ej2_base_1.getValue(temp, window);
                }
                col.edit.write({ rowData: args.rowData, element: cell, column: col, requestType: args.requestType });
                if (!isFocused && !cell.getAttribute('disabled')) {
                    this.focusElement(cell);
                    isFocused = true;
                }
            }
        };
        EditRender.prototype.focusElement = function (elem) {
            elem.focus();
            if (elem.classList.contains('e-defaultcell')) {
                elem.setSelectionRange(elem.value.length, elem.value.length);
            }
        };
        EditRender.prototype.getEditElements = function (args) {
            var gObj = this.parent;
            var elements = {};
            var cols = gObj.editSettings.mode !== 'batch' ? gObj.columns : [gObj.getColumnByField(args.columnName)];
            for (var _i = 0, cols_2 = cols; _i < cols_2.length; _i++) {
                var col = cols_2[_i];
                if (!col.visible) {
                    continue;
                }
                var value = col.valueAccessor(col.field, args.rowData, col);
                var tArgs = { column: col, value: value, type: args.requestType };
                var temp = col.edit.create;
                var input = void 0;
                input = col.edit.create(tArgs);
                if (typeof input === 'string') {
                    var div = ej2_base_2.createElement('div');
                    div.innerHTML = input;
                    input = div.firstChild;
                }
                var isInput = input.tagName !== 'input' && input.querySelectorAll('input').length;
                ej2_base_2.attributes(isInput ? input.querySelector('input') : input, {
                    name: col.field, 'e-mappinguid': col.uid,
                    id: gObj.element.id + col.field,
                });
                ej2_base_2.classList(input, ['e-input', 'e-field'], []);
                if ((col.isPrimaryKey || col.isIdentity) && args.requestType === 'beginEdit') {
                    input.setAttribute('disabled', 'true');
                }
                elements[col.uid] = input;
            }
            return elements;
        };
        return EditRender;
    }());
    exports.EditRender = EditRender;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(2), __webpack_require__(18), __webpack_require__(52)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, util_1, cell_renderer_1, aria_service_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var HeaderCellRenderer = (function (_super) {
        __extends(HeaderCellRenderer, _super);
        function HeaderCellRenderer() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.element = ej2_base_2.createElement('TH', { className: 'e-headercell', attrs: { role: 'columnheader', tabindex: '-1' } });
            _this.ariaService = new aria_service_1.AriaService();
            _this.hTxtEle = ej2_base_2.createElement('span', { className: 'e-headertext' });
            _this.sortEle = ej2_base_2.createElement('div', { className: 'e-sortfilterdiv e-icons' });
            _this.gui = ej2_base_2.createElement('div');
            return _this;
        }
        HeaderCellRenderer.prototype.getGui = function () {
            return this.gui.cloneNode();
        };
        HeaderCellRenderer.prototype.render = function (cell, data, attributes) {
            var node = this.element.cloneNode();
            return this.prepareHeader(cell, node);
        };
        HeaderCellRenderer.prototype.refresh = function (cell, node) {
            this.clean(node);
            return this.prepareHeader(cell, node);
        };
        HeaderCellRenderer.prototype.clean = function (node) {
            node.innerHTML = '';
        };
        HeaderCellRenderer.prototype.prepareHeader = function (cell, node) {
            var column = cell.column;
            var ariaAttr = {};
            var innerDIV = this.getGui();
            var value = column.headerText;
            var headerText = this.hTxtEle.cloneNode();
            headerText[column.getDomSetter()] = value;
            innerDIV.appendChild(headerText);
            ej2_base_2.attributes(innerDIV, {
                'e-mappinguid': column.uid,
                'class': 'e-headercelldiv'
            });
            this.buildAttributeFromCell(node, cell);
            this.appendHtml(node, innerDIV);
            node.appendChild(this.sortEle.cloneNode());
            if (cell.className) {
                node.classList.add(cell.className);
            }
            if (column.customAttributes) {
                util_1.setStyleAndAttributes(node, column.customAttributes);
            }
            if (column.allowSorting) {
                ariaAttr.sort = 'none';
            }
            if (column.allowGrouping) {
                ariaAttr.grabbed = false;
            }
            if (this.parent.allowResizing) {
                var handler = ej2_base_2.createElement('div');
                handler.className = column.allowResizing ? 'e-rhandler e-rcursor' : 'e-rsuppress';
                node.appendChild(handler);
            }
            this.ariaService.setOptions(node, ariaAttr);
            if (!ej2_base_1.isNullOrUndefined(column.headerTextAlign) || !ej2_base_1.isNullOrUndefined(column.textAlign)) {
                var alignment = column.headerTextAlign || column.textAlign;
                innerDIV.style.textAlign = alignment;
                if (alignment === 'right' || alignment === 'left') {
                    node.classList.add(alignment === 'right' ? 'e-rightalign' : 'e-leftalign');
                }
            }
            node.setAttribute('aria-rowspan', (!ej2_base_1.isNullOrUndefined(cell.rowSpan) ? cell.rowSpan : 1).toString());
            node.setAttribute('aria-colspan', '1');
            return node;
        };
        HeaderCellRenderer.prototype.appendHtml = function (node, innerHtml) {
            node.appendChild(innerHtml);
            return node;
        };
        return HeaderCellRenderer;
    }(cell_renderer_1.CellRenderer));
    exports.HeaderCellRenderer = HeaderCellRenderer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var InlineEditRender = (function () {
        function InlineEditRender(parent) {
            this.parent = parent;
        }
        InlineEditRender.prototype.addNew = function (elements, args) {
            var tbody = this.parent.getContentTable().querySelector('tbody');
            args.row = ej2_base_1.createElement('tr', { className: 'e-row e-addedrow' });
            tbody.insertBefore(args.row, tbody.firstChild);
            args.row.appendChild(this.getEditElement(elements, false));
        };
        InlineEditRender.prototype.update = function (elements, args) {
            args.row.innerHTML = '';
            args.row.appendChild(this.getEditElement(elements, true));
            args.row.classList.add('e-editedrow');
        };
        InlineEditRender.prototype.getEditElement = function (elements, isEdit) {
            var gObj = this.parent;
            var gLen = 0;
            var isDetail = !ej2_base_1.isNullOrUndefined(gObj.detailTemplate) || !ej2_base_1.isNullOrUndefined(gObj.childGrid) ? 1 : 0;
            if (gObj.allowGrouping) {
                gLen = gObj.groupSettings.columns.length;
            }
            var td = ej2_base_1.createElement('td', {
                className: 'e-editcell e-normaledit',
                attrs: { colspan: (gObj.getVisibleColumns().length + gLen + isDetail).toString() }
            });
            var form = ej2_base_1.createElement('form', { id: gObj.element.id + 'EditForm', className: 'e-gridform' });
            var table = ej2_base_1.createElement('table', { className: 'e-table e-inline-edit', attrs: { cellspacing: '0.25' } });
            table.appendChild(gObj.getContentTable().querySelector('colgroup').cloneNode(true));
            var tbody = ej2_base_1.createElement('tbody');
            var tr = ej2_base_1.createElement('tr');
            var i = 0;
            if (isDetail) {
                tr.insertBefore(ej2_base_1.createElement('td', { className: 'e-detailrowcollapse' }), tr.firstChild);
            }
            while (i < gLen) {
                tr.appendChild(ej2_base_1.createElement('td', { className: 'e-indentcell' }));
                i++;
            }
            for (var _i = 0, _a = gObj.columns; _i < _a.length; _i++) {
                var col = _a[_i];
                if (!col.visible) {
                    continue;
                }
                var td_1 = ej2_base_1.createElement('td', {
                    className: 'e-rowcell', attrs: { style: 'text-align:' + (col.textAlign ? col.textAlign : '') }
                });
                td_1.appendChild(elements[col.uid]);
                if (col.editType === 'booleanedit') {
                    td_1.classList.add('e-boolcell');
                }
                tr.appendChild(td_1);
            }
            tbody.appendChild(tr);
            table.appendChild(tbody);
            form.appendChild(table);
            td.appendChild(form);
            return td;
        };
        return InlineEditRender;
    }());
    exports.InlineEditRender = InlineEditRender;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(36), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_inputs_1, util_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var NumericEditCell = (function () {
        function NumericEditCell(parent) {
            this.parent = parent;
        }
        NumericEditCell.prototype.create = function (args) {
            return ej2_base_2.createElement('input', {
                className: 'e-field', attrs: {
                    id: this.parent.element.id + args.column.field, name: args.column.field, 'e-mappinguid': args.column.uid
                }
            });
        };
        NumericEditCell.prototype.read = function (element) {
            return element.ej2_instances[0].value;
        };
        NumericEditCell.prototype.write = function (args) {
            var col = args.column;
            var isInline = this.parent.editSettings.mode !== 'dialog';
            this.obj = new ej2_inputs_1.NumericTextBox(ej2_base_1.extend({
                value: parseFloat(args.rowData[col.field]), enableRtl: this.parent.enableRtl,
                placeholder: isInline ? '' : args.column.headerText,
                enabled: util_1.isEditable(args.column, args.requestType, args.element),
                floatLabelType: this.parent.editSettings.mode !== 'dialog' ? 'Never' : 'Always',
            }, col.edit.params));
            this.obj.appendTo(args.element);
            args.element.setAttribute('name', col.field);
        };
        NumericEditCell.prototype.destroy = function () {
            if (this.obj && !this.obj.isDestroyed) {
                this.obj.destroy();
            }
        };
        return NumericEditCell;
    }());
    exports.NumericEditCell = NumericEditCell;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(14), __webpack_require__(7), __webpack_require__(69), __webpack_require__(3), __webpack_require__(2), __webpack_require__(71), __webpack_require__(118), __webpack_require__(18), __webpack_require__(196), __webpack_require__(200), __webpack_require__(119), __webpack_require__(191), __webpack_require__(278), __webpack_require__(280), __webpack_require__(277), __webpack_require__(276)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_data_1, enum_1, data_1, events, util_1, content_renderer_1, header_renderer_1, cell_renderer_1, header_cell_renderer_1, stacked_cell_renderer_1, indent_cell_renderer_1, caption_cell_renderer_1, expand_cell_renderer_1, header_indent_renderer_1, detail_header_indent_renderer_1, detail_expand_cell_renderer_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Render = (function () {
        function Render(parent, locator) {
            this.parent = parent;
            this.locator = locator;
            this.data = new data_1.Data(parent);
            this.l10n = locator.getService('localization');
            this.ariaService = this.locator.getService('ariaService');
            this.renderer = this.locator.getService('rendererFactory');
            this.addEventListener();
        }
        Render.prototype.render = function () {
            var gObj = this.parent;
            this.headerRenderer = this.renderer.getRenderer(enum_1.RenderType.Header);
            this.contentRenderer = this.renderer.getRenderer(enum_1.RenderType.Content);
            this.headerRenderer.renderPanel();
            this.contentRenderer.renderPanel();
            if (gObj.getColumns().length) {
                this.headerRenderer.renderTable();
                this.contentRenderer.renderTable();
                this.emptyRow(false);
            }
            this.refreshDataManager();
        };
        Render.prototype.refresh = function (e) {
            if (e === void 0) { e = { requestType: 'refresh' }; }
            this.parent.notify(e.requestType + "-begin", e);
            this.parent.trigger(events.actionBegin, e);
            if (e.cancel) {
                return;
            }
            this.refreshDataManager(e);
        };
        Render.prototype.refreshComplete = function (e) {
            this.parent.trigger(events.actionComplete, e);
        };
        Render.prototype.refreshDataManager = function (args) {
            var _this = this;
            var ready = this.data.dataManager.ready;
            this.ariaService.setBusy(this.parent.getContent().firstChild, true);
            var dataManager = this.data.getData(args, this.data.generateQuery().requiresCount());
            if (!ready) {
                if (this.parent.groupSettings.disablePageWiseAggregates && this.parent.groupSettings.columns.length) {
                    dataManager = dataManager.then(function (e) { return _this.validateGroupRecords(e); });
                }
                dataManager.then(function (e) { return _this.dataManagerSuccess(e, args); })
                    .catch(function (e) { return _this.dataManagerFailure(e); });
            }
        };
        Render.prototype.sendBulkRequest = function (args) {
            var _this = this;
            var promise = this.data.saveChanges(args.changes, this.parent.getPrimaryKeyFieldNames()[0]);
            if (this.data.dataManager.dataSource.offline) {
                this.refreshDataManager({ requestType: 'batchsave' });
                return;
            }
            else {
                promise.then(function (e) { return _this.dmSuccess(e, args); })
                    .catch(function (e) { return _this.dmFailure(e); });
            }
        };
        Render.prototype.dmSuccess = function (e, args) {
            this.dataManagerSuccess(e, args);
        };
        Render.prototype.dmFailure = function (e) {
            this.dataManagerFailure(e);
        };
        Render.prototype.renderEmptyRow = function () {
            this.emptyRow(true);
        };
        Render.prototype.emptyRow = function (isTrigger) {
            var gObj = this.parent;
            var tbody = this.contentRenderer.getTable().querySelector('tbody');
            var tr;
            ej2_base_1.remove(tbody);
            tbody = ej2_base_1.createElement('tbody');
            tr = ej2_base_1.createElement('tr', { className: 'e-emptyrow' });
            tr.appendChild(ej2_base_1.createElement('td', {
                innerHTML: this.l10n.getConstant('EmptyRecord'),
                attrs: { colspan: gObj.getColumns().length.toString() }
            }));
            tbody.appendChild(tr);
            this.contentRenderer.renderEmpty(tbody);
            if (isTrigger) {
                this.parent.trigger(events.dataBound, {});
            }
        };
        Render.prototype.updateColumnType = function (record) {
            var columns = this.parent.getColumns();
            var value;
            var data = record && record.items ? record.items[0] : record;
            var fmtr = this.locator.getService('valueFormatter');
            for (var i = 0, len = columns.length; i < len; i++) {
                value = ej2_base_2.getValue(columns[i].field || '', data);
                if (!ej2_base_2.isNullOrUndefined(value)) {
                    this.isColTypeDef = true;
                    if (!columns[i].type) {
                        columns[i].type = value.getDay ? (value.getHours() > 0 || value.getMinutes() > 0 ||
                            value.getSeconds() > 0 || value.getMilliseconds() > 0 ? 'datetime' : 'date') : typeof (value);
                    }
                    if (typeof (columns[i].format) === 'string') {
                        switch (columns[i].type) {
                            case 'date':
                                columns[i].setFormatter(fmtr.getFormatFunction({ type: 'date', skeleton: columns[i].format }));
                                columns[i].setParser(fmtr.getParserFunction({ type: 'date', skeleton: columns[i].format }));
                                break;
                            case 'datetime':
                                columns[i].setFormatter(fmtr.getFormatFunction({ type: 'dateTime', skeleton: columns[i].format }));
                                columns[i].setParser(fmtr.getParserFunction({ type: 'dateTime', skeleton: columns[i].format }));
                                break;
                            case 'number':
                                columns[i].setFormatter(fmtr.getFormatFunction({ format: columns[i].format }));
                                columns[i].setParser(fmtr.getParserFunction({ format: columns[i].format }));
                                break;
                        }
                    }
                    else if (!columns[i].format && columns[i].type === 'number') {
                        columns[i].setParser(fmtr.getParserFunction({ format: 'n2' }));
                    }
                }
                else {
                    columns[i].type = columns[i].type || null;
                }
            }
        };
        Render.prototype.dataManagerSuccess = function (e, args) {
            var gObj = this.parent;
            gObj.trigger(events.beforeDataBound, e);
            var len = Object.keys(e.result).length;
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.notify(events.tooltipDestroy, {});
            gObj.currentViewData = e.result;
            if (!len && e.count && gObj.allowPaging) {
                gObj.pageSettings.currentPage = Math.ceil(e.count / gObj.pageSettings.pageSize);
                gObj.dataBind();
                return;
            }
            if (!gObj.getColumns().length && len) {
                this.updatesOnInitialRender(e);
            }
            if (!this.isColTypeDef) {
                this.updateColumnType(gObj.getCurrentViewRecords()[0]);
            }
            this.parent.notify(events.dataReady, ej2_base_2.extend({ count: e.count, result: e.result, aggregates: e.aggregates }, args));
            if (gObj.groupSettings.columns.length || (args && args.requestType === 'ungrouping')) {
                this.headerRenderer.refreshUI();
            }
            if (len) {
                this.contentRenderer.refreshContentRows(args);
            }
            else {
                if (!gObj.getColumns().length) {
                    gObj.element.innerHTML = '';
                    alert(this.l10n.getConstant('EmptyDataSourceError'));
                    return;
                }
                this.contentRenderer.setRowElements([]);
                this.renderEmptyRow();
                if (args) {
                    var action = (args.requestType || '').toLowerCase() + '-complete';
                    this.parent.notify(action, args);
                }
            }
        };
        Render.prototype.dataManagerFailure = function (e) {
            this.ariaService.setOptions(this.parent.getContent().firstChild, { busy: false, invalid: true });
            this.parent.trigger(events.actionFailure, { error: e });
            this.parent.currentViewData = [];
            this.renderEmptyRow();
        };
        Render.prototype.updatesOnInitialRender = function (e) {
            this.buildColumns(e.result[0]);
            util_1.prepareColumns(this.parent.columns);
            this.headerRenderer.renderTable();
            this.contentRenderer.renderTable();
            this.parent.notify(events.autoCol, {});
        };
        Render.prototype.buildColumns = function (record) {
            var columns = Object.keys(record);
            var cols = [];
            for (var i = 0, len = columns.length; i < len; i++) {
                cols[i] = { 'field': columns[i] };
                if (this.parent.enableColumnVirtualization) {
                    cols[i].width = !ej2_base_2.isNullOrUndefined(cols[i].width) ? cols[i].width : 200;
                }
            }
            this.parent.columns = cols;
        };
        Render.prototype.instantiateRenderer = function () {
            this.renderer.addRenderer(enum_1.RenderType.Header, new header_renderer_1.HeaderRender(this.parent, this.locator));
            this.renderer.addRenderer(enum_1.RenderType.Content, new content_renderer_1.ContentRender(this.parent, this.locator));
            var cellrender = this.locator.getService('cellRendererFactory');
            cellrender.addCellRenderer(enum_1.CellType.Header, new header_cell_renderer_1.HeaderCellRenderer(this.parent, this.locator));
            cellrender.addCellRenderer(enum_1.CellType.Data, new cell_renderer_1.CellRenderer(this.parent, this.locator));
            cellrender.addCellRenderer(enum_1.CellType.StackedHeader, new stacked_cell_renderer_1.StackedHeaderCellRenderer(this.parent, this.locator));
            cellrender.addCellRenderer(enum_1.CellType.Indent, new indent_cell_renderer_1.IndentCellRenderer(this.parent, this.locator));
            cellrender.addCellRenderer(enum_1.CellType.GroupCaption, new caption_cell_renderer_1.GroupCaptionCellRenderer(this.parent, this.locator));
            cellrender.addCellRenderer(enum_1.CellType.GroupCaptionEmpty, new caption_cell_renderer_1.GroupCaptionEmptyCellRenderer(this.parent, this.locator));
            cellrender.addCellRenderer(enum_1.CellType.Expand, new expand_cell_renderer_1.ExpandCellRenderer(this.parent, this.locator));
            cellrender.addCellRenderer(enum_1.CellType.HeaderIndent, new header_indent_renderer_1.HeaderIndentCellRenderer(this.parent, this.locator));
            cellrender.addCellRenderer(enum_1.CellType.StackedHeader, new stacked_cell_renderer_1.StackedHeaderCellRenderer(this.parent, this.locator));
            cellrender.addCellRenderer(enum_1.CellType.DetailHeader, new detail_header_indent_renderer_1.DetailHeaderIndentCellRenderer(this.parent, this.locator));
            cellrender.addCellRenderer(enum_1.CellType.DetailExpand, new detail_expand_cell_renderer_1.DetailExpandCellRenderer(this.parent, this.locator));
        };
        Render.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.initialLoad, this.instantiateRenderer, this);
            this.parent.on(events.modelChanged, this.refresh, this);
            this.parent.on(events.refreshComplete, this.refreshComplete, this);
            this.parent.on(events.bulkSave, this.sendBulkRequest, this);
        };
        Render.prototype.validateGroupRecords = function (e) {
            var _this = this;
            var index = e.result.length - 1;
            if (index < 0) {
                return Promise.resolve(e);
            }
            var group0 = e.result[0];
            var groupN = e.result[index];
            var predicate = [];
            var addWhere = function (input) {
                [group0, groupN].forEach(function (group) {
                    return predicate.push(new ej2_data_1.Predicate('field', '==', group.field).and(_this.getPredicate('key', 'equal', group.key)));
                });
                input.where(ej2_data_1.Predicate.or(predicate));
            };
            var query = new ej2_data_1.Query();
            addWhere(query);
            var curDm = new ej2_data_1.DataManager(e.result);
            var curFilter = curDm.executeLocal(query);
            var newQuery = this.data.generateQuery(true);
            var rPredicate = [];
            if (this.data.isRemote()) {
                [group0, groupN].forEach(function (group) {
                    return rPredicate.push(_this.getPredicate(group.field, 'equal', group.key));
                });
                newQuery.where(ej2_data_1.Predicate.or(rPredicate));
            }
            else {
                addWhere(newQuery);
            }
            var deferred = new ej2_data_1.Deferred();
            this.data.getData({}, newQuery).then(function (r) {
                _this.updateGroupInfo(curFilter, r.result);
                deferred.resolve(e);
            });
            return deferred.promise;
        };
        Render.prototype.getPredicate = function (key, operator, value) {
            if (value instanceof Date) {
                return this.data.getDatePredicate({ field: key, operator: operator, value: value });
            }
            return new ej2_data_1.Predicate(key, operator, value);
        };
        Render.prototype.updateGroupInfo = function (current, untouched) {
            var _this = this;
            var dm = new ej2_data_1.DataManager(untouched);
            current.forEach(function (element, index, array) {
                var uGroup = dm.executeLocal(new ej2_data_1.Query()
                    .where(new ej2_data_1.Predicate('field', '==', element.field).and(_this.getPredicate('key', 'equal', element.key))))[0];
                element.count = uGroup.count;
                var itemGroup = element.items;
                var uGroupItem = uGroup.items;
                if (itemGroup.GroupGuid) {
                    element.items = _this.updateGroupInfo(element.items, uGroup.items);
                }
                _this.parent.aggregates.forEach(function (row) {
                    return row.columns.forEach(function (column) {
                        var types = column.type instanceof Array ? column.type : [column.type];
                        types.forEach(function (type) {
                            var key = column.field + ' - ' + type;
                            element.aggregates[key] = util_1.calculateAggregate(type, itemGroup.level ? uGroupItem.records : uGroup.items, column);
                        });
                    });
                });
            });
            return current;
        };
        return Render;
    }());
    exports.Render = Render;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(18)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, cell_renderer_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var StackedHeaderCellRenderer = (function (_super) {
        __extends(StackedHeaderCellRenderer, _super);
        function StackedHeaderCellRenderer() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.element = ej2_base_1.createElement('TH', {
                className: 'e-headercell e-stackedheadercell', attrs: {
                    role: 'columnheader',
                    tabindex: '-1'
                }
            });
            return _this;
        }
        StackedHeaderCellRenderer.prototype.render = function (cell, data, attributes) {
            var node = this.element.cloneNode();
            var div = ej2_base_1.createElement('div', { className: 'e-stackedheadercelldiv' });
            node.appendChild(div);
            div.innerHTML = cell.column.headerText;
            if (cell.column.toolTip) {
                node.setAttribute('title', cell.column.toolTip);
            }
            if (ej2_base_2.isNullOrUndefined(cell.column.textAlign)) {
                div.style.textAlign = cell.column.textAlign;
            }
            node.setAttribute('colspan', cell.colSpan.toString());
            node.setAttribute('aria-colspan', cell.colSpan.toString());
            node.setAttribute('aria-rowspan', '1');
            return node;
        };
        return StackedHeaderCellRenderer;
    }(cell_renderer_1.CellRenderer));
    exports.StackedHeaderCellRenderer = StackedHeaderCellRenderer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, enum_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var CellRendererFactory = (function () {
        function CellRendererFactory() {
            this.cellRenderMap = {};
        }
        CellRendererFactory.prototype.addCellRenderer = function (name, type) {
            name = typeof name === 'string' ? name : ej2_base_1.getEnumValue(enum_1.CellType, name);
            if (ej2_base_1.isNullOrUndefined(this.cellRenderMap[name])) {
                this.cellRenderMap[name] = type;
            }
        };
        CellRendererFactory.prototype.getCellRenderer = function (name) {
            name = typeof name === 'string' ? name : ej2_base_1.getEnumValue(enum_1.CellType, name);
            if (ej2_base_1.isNullOrUndefined(this.cellRenderMap[name])) {
                throw "The cellRenderer " + name + " is not found";
            }
            else {
                return this.cellRenderMap[name];
            }
        };
        return CellRendererFactory;
    }());
    exports.CellRendererFactory = CellRendererFactory;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ServiceLocator = (function () {
        function ServiceLocator() {
            this.services = {};
        }
        ServiceLocator.prototype.register = function (name, type) {
            if (ej2_base_1.isNullOrUndefined(this.services[name])) {
                this.services[name] = type;
            }
        };
        ServiceLocator.prototype.getService = function (name) {
            if (ej2_base_1.isNullOrUndefined(this.services[name])) {
                throw "The service " + name + " is not registered";
            }
            return this.services[name];
        };
        return ServiceLocator;
    }());
    exports.ServiceLocator = ServiceLocator;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 203 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Button; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return buttonBuilder; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_common__ = __webpack_require__(90);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var cssClassName = {
    RTL: 'e-rtl',
    BUTTON: 'e-btn',
    PRIMARY: 'e-primary',
    ICONBTN: 'e-icon-btn'
};
var Button = (function (_super) {
    __extends(Button, _super);
    function Button(options, element) {
        return _super.call(this, options, element) || this;
    }
    Button.prototype.preRender = function () {
    };
    Button.prototype.render = function () {
        this.initialize();
    };
    Button.prototype.initialize = function () {
        if (this.cssClass) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], this.cssClass.split(' '));
        }
        if (this.isPrimary) {
            this.element.classList.add(cssClassName.PRIMARY);
        }
        if (this.content) {
            this.element.innerHTML = this.content;
        }
        this.setIconCss();
        if (this.enableRtl) {
            this.element.classList.add(cssClassName.RTL);
        }
        if (this.disabled) {
            this.controlStatus(this.disabled);
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["rippleEffect"])(this.element, { selector: '.' + cssClassName.BUTTON });
        this.wireEvents();
    };
    Button.prototype.controlStatus = function (disabled) {
        this.element.disabled = disabled;
    };
    Button.prototype.setIconCss = function () {
        if (this.iconCss) {
            if (!this.element.textContent) {
                this.element.classList.add(cssClassName.ICONBTN);
            }
            var span = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: 'e-btn-icon ' + this.iconCss });
            var node = this.element.childNodes[0];
            if (node && this.iconPosition === 'left') {
                this.element.insertBefore(span, node);
                span.classList.add('e-icon-left');
            }
            else {
                this.element.appendChild(span);
                if (this.iconPosition === 'right') {
                    span.classList.add('e-icon-right');
                }
            }
        }
    };
    Button.prototype.wireEvents = function () {
        if (this.isToggle) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'click', this.btnClickHandler, this);
        }
    };
    Button.prototype.unWireEvents = function () {
        if (this.isToggle) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'click', this.btnClickHandler);
        }
    };
    Button.prototype.btnClickHandler = function () {
        if (this.element.classList.contains('e-active')) {
            this.element.classList.remove('e-active');
        }
        else {
            this.element.classList.add('e-active');
        }
    };
    Button.prototype.destroy = function () {
        var span;
        var element = this.element;
        _super.prototype.destroy.call(this);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], [cssClassName.PRIMARY, cssClassName.RTL, cssClassName.ICONBTN, 'e-success',
            'e-info', 'e-danger', 'e-warning', 'e-flat', 'e-outline', 'e-small', 'e-bigger', 'e-active', 'e-round']);
        ['e-ripple', 'disabled'].forEach(function (value) {
            element.removeAttribute(value);
        });
        if (this.content) {
            element.innerHTML = element.innerHTML.replace(this.content, '');
        }
        span = element.querySelector('span.e-btn-icon');
        if (span) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(span);
        }
        this.unWireEvents();
    };
    Button.prototype.getModuleName = function () {
        return 'btn';
    };
    Button.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    Button.prototype.onPropertyChanged = function (newProp, oldProp) {
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'isPrimary':
                    if (newProp.isPrimary) {
                        this.element.classList.add(cssClassName.PRIMARY);
                    }
                    else {
                        this.element.classList.remove(cssClassName.PRIMARY);
                    }
                    break;
                case 'disabled':
                    this.controlStatus(this.disabled);
                    break;
                case 'iconCss':
                    var span = this.element.querySelector('span.e-btn-icon');
                    if (span) {
                        span.className = 'e-btn-icon ' + this.iconCss;
                        if (this.element.textContent) {
                            if (this.iconPosition === 'left') {
                                span.classList.add('e-icon-left');
                            }
                            else {
                                span.classList.add('e-icon-right');
                            }
                        }
                    }
                    else {
                        this.setIconCss();
                    }
                    break;
                case 'iconPosition':
                    span = this.element.querySelector('span.e-btn-icon');
                    if (span) {
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(span);
                    }
                    this.setIconCss();
                    break;
                case 'cssClass':
                    if (oldProp.cssClass) {
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], oldProp.cssClass.split(' '));
                    }
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], newProp.cssClass.split(' '));
                    break;
                case 'enableRtl':
                    if (newProp.enableRtl) {
                        this.element.classList.add(cssClassName.RTL);
                    }
                    else {
                        this.element.classList.remove(cssClassName.RTL);
                    }
                    break;
                case 'content':
                    var node = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_common__["b" /* getTextNode */])(this.element);
                    if (node) {
                        node.textContent = newProp.content;
                    }
                    else {
                        this.element.innerHTML = newProp.content;
                        this.element.classList.remove(cssClassName.ICONBTN);
                        this.setIconCss();
                    }
                    break;
                case 'isToggle':
                    if (newProp.isToggle) {
                        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'click', this.btnClickHandler, this);
                    }
                    else {
                        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'click', this.btnClickHandler);
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], ['e-active']);
                    }
                    break;
            }
        }
    };
    return Button;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Component"]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('left')
], Button.prototype, "iconPosition", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Button.prototype, "iconCss", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], Button.prototype, "disabled", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], Button.prototype, "isPrimary", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Button.prototype, "cssClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Button.prototype, "content", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], Button.prototype, "isToggle", void 0);
Button = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], Button);

var buttonBuilder = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["CreateBuilder"])(Button);


/***/ }),
/* 204 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__button__ = __webpack_require__(203);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__button__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__button__["b"]; });



/***/ }),
/* 205 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CheckBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return checkBoxBuilder; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var CHECK = 'e-check';
var DISABLED = 'e-checkbox-disabled';
var FRAME = 'e-frame';
var INDETERMINATE = 'e-stop';
var LABEL = 'e-label';
var RIPPLE = 'e-ripple-container';
var RTL = 'e-rtl';
var WRAPPER = 'e-checkbox-wrapper';
var CheckBox = (function (_super) {
    __extends(CheckBox, _super);
    function CheckBox(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.isKeyPressed = false;
        return _this;
    }
    CheckBox.prototype.changeState = function (state) {
        var ariaState;
        var frameSpan = this.getWrapper().getElementsByClassName(FRAME)[0];
        if (state === 'check') {
            frameSpan.classList.remove(INDETERMINATE);
            frameSpan.classList.add(CHECK);
            ariaState = 'true';
            this.element.checked = true;
        }
        else if (state === 'uncheck') {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([frameSpan], [CHECK, INDETERMINATE]);
            ariaState = 'false';
            this.element.checked = false;
        }
        else {
            frameSpan.classList.remove(CHECK);
            frameSpan.classList.add(INDETERMINATE);
            ariaState = 'mixed';
            this.element.indeterminate = true;
        }
        this.getWrapper().setAttribute('aria-checked', ariaState);
    };
    CheckBox.prototype.clickHandler = function (event) {
        this.focusOutHandler();
        if (this.indeterminate) {
            this.changeState(this.checked ? 'check' : 'uncheck');
            this.indeterminate = false;
            this.element.indeterminate = false;
        }
        else if (this.checked) {
            this.changeState('uncheck');
            this.checked = false;
        }
        else {
            this.changeState('check');
            this.checked = true;
        }
        var changeEventArgs = { checked: this.element.checked, event: event };
        this.trigger('change', changeEventArgs);
    };
    CheckBox.prototype.destroy = function () {
        var wrapper = this.getWrapper();
        _super.prototype.destroy.call(this);
        if (!this.disabled) {
            this.unWireEvents();
        }
        wrapper.parentNode.insertBefore(this.element, wrapper);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(wrapper);
        this.element.checked = false;
        if (this.indeterminate) {
            this.element.indeterminate = false;
        }
        if (this.name) {
            this.element.removeAttribute('name');
        }
        if (this.value) {
            this.element.removeAttribute('value');
        }
        if (this.disabled) {
            this.element.removeAttribute('disabled');
        }
    };
    CheckBox.prototype.focusHandler = function () {
        if (this.isKeyPressed) {
            this.getWrapper().classList.add('e-focus');
        }
    };
    CheckBox.prototype.focusOutHandler = function () {
        this.getWrapper().classList.remove('e-focus');
    };
    CheckBox.prototype.getModuleName = function () {
        return 'checkbox';
    };
    CheckBox.prototype.getPersistData = function () {
        return this.addOnPersist(['checked', 'indeterminate']);
    };
    CheckBox.prototype.getWrapper = function () {
        return this.element.parentElement.parentElement;
    };
    CheckBox.prototype.initialize = function () {
        if (this.name) {
            this.element.setAttribute('name', this.name);
        }
        if (this.value) {
            this.element.setAttribute('value', this.value);
        }
        if (this.checked) {
            this.changeState('check');
        }
        if (this.indeterminate) {
            this.changeState();
        }
        if (this.disabled) {
            this.setDisabled();
        }
    };
    CheckBox.prototype.initWrapper = function () {
        var wrapper = this.element.parentElement;
        if (!wrapper.classList.contains(WRAPPER)) {
            wrapper = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', {
                className: WRAPPER, attrs: { 'role': 'checkbox', 'aria-checked': 'false' }
            });
            this.element.parentNode.insertBefore(wrapper, this.element);
        }
        var label = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('label', { attrs: { for: this.element.id } });
        var frameSpan = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: 'e-icons ' + FRAME });
        if (this.enableRtl) {
            wrapper.classList.add(RTL);
        }
        if (this.cssClass) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([wrapper], this.cssClass.split(' '));
        }
        wrapper.appendChild(label);
        label.appendChild(this.element);
        label.appendChild(frameSpan);
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isRippleEnabled"]) {
            var rippleSpan = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: RIPPLE });
            frameSpan.appendChild(rippleSpan);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["rippleEffect"])(rippleSpan, { duration: 400, isCenterRipple: true });
        }
        if (this.label) {
            this.setText(this.label);
        }
    };
    CheckBox.prototype.keyActionHandler = function (e) {
        if (e.action === 'space') {
            e.preventDefault();
            this.clickHandler(e);
            this.focusHandler();
        }
    };
    CheckBox.prototype.keyDownHandler = function () {
        this.isKeyPressed = true;
    };
    CheckBox.prototype.labelMouseHandler = function (e) {
        var rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];
        if (rippleSpan) {
            var event_1 = document.createEvent('MouseEvents');
            event_1.initEvent(e.type, true, true);
            rippleSpan.dispatchEvent(event_1);
        }
    };
    CheckBox.prototype.mouseDownHandler = function () {
        this.isKeyPressed = false;
    };
    CheckBox.prototype.onPropertyChanged = function (newProp, oldProp) {
        var wrapper = this.getWrapper();
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'checked':
                    this.indeterminate = false;
                    this.element.indeterminate = false;
                    this.changeState(newProp.checked ? 'check' : 'uncheck');
                    break;
                case 'indeterminate':
                    if (newProp.indeterminate) {
                        this.changeState();
                    }
                    else {
                        this.element.indeterminate = false;
                        this.changeState(this.checked ? 'check' : 'uncheck');
                    }
                    break;
                case 'disabled':
                    if (newProp.disabled) {
                        this.setDisabled();
                        this.unWireEvents();
                    }
                    else {
                        this.element.disabled = false;
                        wrapper.classList.remove(DISABLED);
                        wrapper.setAttribute('aria-disabled', 'false');
                        this.wireEvents();
                    }
                    break;
                case 'cssClass':
                    if (oldProp.cssClass) {
                        wrapper.classList.remove(oldProp.cssClass);
                    }
                    wrapper.classList.add(newProp.cssClass);
                    break;
                case 'enableRtl':
                    if (newProp.enableRtl) {
                        wrapper.classList.add(RTL);
                    }
                    else {
                        wrapper.classList.remove(RTL);
                    }
                    break;
                case 'label':
                    this.setText(newProp.label);
                    break;
                case 'labelPosition':
                    var label = wrapper.getElementsByClassName(LABEL)[0];
                    var labelWrap = wrapper.getElementsByTagName('label')[0];
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(label);
                    if (newProp.labelPosition === 'after') {
                        labelWrap.appendChild(label);
                    }
                    else {
                        labelWrap.insertBefore(label, wrapper.getElementsByClassName(FRAME)[0]);
                    }
                    break;
                case 'name':
                    this.element.setAttribute('name', newProp.name);
                    break;
                case 'value':
                    this.element.setAttribute('value', newProp.value);
                    break;
            }
        }
    };
    CheckBox.prototype.preRender = function () {
        if (this.element.tagName === 'EJ-CHECKBOX') {
            var ejInst = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getValue"])('ej2_instances', this.element);
            var input = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('input', { attrs: { 'type': 'checkbox' } });
            var props = ['change', 'cssClass', 'indeterminate', 'label', 'labelPosition'];
            var wrapper = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('EJ-CHECKBOX', {
                className: WRAPPER, attrs: { 'role': 'checkbox', 'aria-checked': 'false' }
            });
            for (var index = 0, len = this.element.attributes.length; index < len; index++) {
                if (props.indexOf(this.element.attributes[index].nodeName) === -1) {
                    input.setAttribute(this.element.attributes[index].nodeName, this.element.attributes[index].nodeValue);
                }
            }
            this.element.parentNode.insertBefore(input, this.element);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.element);
            this.element = input;
            this.element.parentNode.insertBefore(wrapper, this.element);
            wrapper.appendChild(this.element);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setValue"])('ej2_instances', ejInst, this.element);
        }
        if (this.element.getAttribute('type') !== 'checkbox') {
            this.element.setAttribute('type', 'checkbox');
        }
        if (!this.element.id) {
            this.element.id = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getUniqueID"])('e-' + this.getModuleName());
        }
    };
    CheckBox.prototype.render = function () {
        this.initWrapper();
        this.initialize();
        if (!this.disabled) {
            this.wireEvents();
        }
    };
    CheckBox.prototype.setDisabled = function () {
        var wrapper = this.getWrapper();
        this.element.disabled = true;
        wrapper.classList.add(DISABLED);
        wrapper.setAttribute('aria-disabled', 'true');
    };
    CheckBox.prototype.setText = function (text) {
        var label = this.getWrapper().getElementsByClassName(LABEL)[0];
        if (label) {
            label.textContent = text;
        }
        else {
            label = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: LABEL, innerHTML: text });
            var labelWrap = this.getWrapper().getElementsByTagName('label')[0];
            if (this.labelPosition === 'before') {
                labelWrap.insertBefore(label, this.getWrapper().getElementsByClassName(FRAME)[0]);
            }
            else {
                labelWrap.appendChild(label);
            }
        }
    };
    CheckBox.prototype.unWireEvents = function () {
        var wrapper = this.getWrapper();
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'click', this.clickHandler);
        this.keyboardModule.destroy();
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(document, 'keydown', this.keyDownHandler);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(wrapper, 'mousedown', this.mouseDownHandler);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'focus', this.focusHandler);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'focusout', this.focusOutHandler);
        var label = wrapper.getElementsByClassName('e-label')[0];
        if (label) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(label, 'mousedown', this.labelMouseHandler);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(label, 'mouseup', this.labelMouseHandler);
        }
    };
    CheckBox.prototype.wireEvents = function () {
        var wrapper = this.getWrapper();
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'click', this.clickHandler, this);
        this.keyboardModule = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["KeyboardEvents"](wrapper, {
            eventName: 'keydown',
            keyAction: this.keyActionHandler.bind(this),
            keyConfigs: { space: 'space' }
        });
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(document, 'keydown', this.keyDownHandler, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(wrapper, 'mousedown', this.mouseDownHandler, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'focus', this.focusHandler, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'focusout', this.focusOutHandler, this);
        var label = wrapper.getElementsByClassName('e-label')[0];
        if (label) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(label, 'mousedown', this.labelMouseHandler, this);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(label, 'mouseup', this.labelMouseHandler, this);
        }
    };
    return CheckBox;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Component"]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], CheckBox.prototype, "change", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], CheckBox.prototype, "checked", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], CheckBox.prototype, "cssClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], CheckBox.prototype, "disabled", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], CheckBox.prototype, "indeterminate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], CheckBox.prototype, "label", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('after')
], CheckBox.prototype, "labelPosition", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], CheckBox.prototype, "name", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], CheckBox.prototype, "value", void 0);
CheckBox = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], CheckBox);

var checkBoxBuilder = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["CreateBuilder"])(CheckBox);


/***/ }),
/* 206 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__check_box__ = __webpack_require__(205);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__check_box__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__check_box__["b"]; });



/***/ }),
/* 207 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(90);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__common__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__common__["b"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_0__common__["c"]; });



/***/ }),
/* 208 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__radio_button__ = __webpack_require__(209);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__radio_button__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__radio_button__["b"]; });



/***/ }),
/* 209 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RadioButton; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return radioButtonBuilder; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_common__ = __webpack_require__(90);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var LABEL = 'e-label';
var RIPPLE = 'e-ripple-container';
var RTL = 'e-rtl';
var WRAPPER = 'e-radio-wrapper';
var RadioButton = (function (_super) {
    __extends(RadioButton, _super);
    function RadioButton(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.isKeyPressed = false;
        return _this;
    }
    RadioButton.prototype.changeHandler = function (event) {
        this.checked = true;
        var changeEventArgs = { checked: true, event: event };
        this.trigger('change', changeEventArgs);
    };
    RadioButton.prototype.updateChange = function (state) {
        var input;
        var name = this.element.getAttribute('name');
        var radioGrp = document.querySelectorAll('input.e-radio[name="' + name + '"]');
        for (var i = 0; i < radioGrp.length; i++) {
            input = radioGrp[i];
            if (input !== this.element) {
                input.ej2_instances[0].checked = false;
            }
        }
    };
    RadioButton.prototype.destroy = function () {
        var label = this.getLabel();
        _super.prototype.destroy.call(this);
        if (!this.disabled) {
            this.unWireEvents();
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(label);
        this.element.checked = false;
        if (this.name) {
            this.element.removeAttribute('name');
        }
        if (this.value) {
            this.element.removeAttribute('value');
        }
        if (this.disabled) {
            this.element.removeAttribute('disabled');
        }
    };
    RadioButton.prototype.focusHandler = function () {
        if (this.isKeyPressed) {
            this.getLabel().classList.add('e-focus');
        }
    };
    RadioButton.prototype.focusOutHandler = function () {
        this.getLabel().classList.remove('e-focus');
    };
    RadioButton.prototype.getModuleName = function () {
        return 'radio';
    };
    RadioButton.prototype.getPersistData = function () {
        return this.addOnPersist(['checked']);
    };
    RadioButton.prototype.getLabel = function () {
        return this.element.nextElementSibling;
    };
    RadioButton.prototype.initialize = function () {
        this.initWrapper();
        if (this.name) {
            this.element.setAttribute('name', this.name);
        }
        if (this.value) {
            this.element.setAttribute('value', this.value);
        }
        if (this.checked) {
            this.element.checked = true;
        }
        if (this.disabled) {
            this.setDisabled();
        }
    };
    RadioButton.prototype.initWrapper = function () {
        var rippleSpan;
        var wrapper = this.element.parentElement;
        if (!wrapper.classList.contains(WRAPPER)) {
            wrapper = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: WRAPPER });
            this.element.parentNode.insertBefore(wrapper, this.element);
        }
        var label = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('label', { attrs: { for: this.element.id } });
        wrapper.appendChild(this.element);
        wrapper.appendChild(label);
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isRippleEnabled"]) {
            rippleSpan = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: (RIPPLE) });
            label.appendChild(rippleSpan);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["rippleEffect"])(rippleSpan, {
                duration: 400,
                isCenterRipple: true
            });
        }
        if (this.enableRtl) {
            label.classList.add(RTL);
        }
        if (this.cssClass) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([label], this.cssClass.split(' '));
        }
        if (this.label) {
            this.setText(this.label);
        }
    };
    RadioButton.prototype.keyDownHandler = function () {
        this.isKeyPressed = true;
    };
    RadioButton.prototype.labelRippleHandler = function (e) {
        var ripple = this.getLabel().getElementsByClassName(RIPPLE)[0];
        if (ripple) {
            var event_1 = document.createEvent('MouseEvents');
            event_1.initEvent(e.type, true, true);
            ripple.dispatchEvent(event_1);
        }
    };
    RadioButton.prototype.mouseDownHandler = function () {
        this.isKeyPressed = false;
    };
    RadioButton.prototype.onPropertyChanged = function (newProp, oldProp) {
        var label = this.getLabel();
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'checked':
                    if (newProp.checked) {
                        this.updateChange(newProp.checked);
                    }
                    this.element.checked = newProp.checked;
                    break;
                case 'disabled':
                    if (newProp.disabled) {
                        this.setDisabled();
                        this.unWireEvents();
                    }
                    else {
                        this.element.disabled = false;
                        this.wireEvents();
                    }
                    break;
                case 'cssClass':
                    if (oldProp.cssClass) {
                        label.classList.remove(oldProp.cssClass);
                    }
                    label.classList.add(newProp.cssClass);
                    break;
                case 'enableRtl':
                    if (newProp.enableRtl) {
                        label.classList.add(RTL);
                    }
                    else {
                        label.classList.remove(RTL);
                    }
                    break;
                case 'label':
                    this.setText(newProp.label);
                    break;
                case 'labelPosition':
                    if (newProp.labelPosition === 'before') {
                        label.classList.add('e-right');
                    }
                    else {
                        label.classList.remove('e-right');
                    }
                    break;
                case 'name':
                    this.element.setAttribute('name', newProp.name);
                    break;
                case 'value':
                    this.element.setAttribute('value', newProp.value);
                    break;
            }
        }
    };
    RadioButton.prototype.preRender = function () {
        var element = this.element;
        element = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_common__["a" /* wrapperInitialize */])('EJ-RADIOBUTTON', 'radio', element, WRAPPER);
        this.element = element;
        if (this.element.getAttribute('type') !== 'radio') {
            this.element.setAttribute('type', 'radio');
        }
        if (!this.element.id) {
            this.element.id = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getUniqueID"])('e-' + this.getModuleName());
        }
    };
    RadioButton.prototype.render = function () {
        this.initialize();
        if (!this.disabled) {
            this.wireEvents();
        }
    };
    RadioButton.prototype.setDisabled = function () {
        this.element.disabled = true;
    };
    RadioButton.prototype.setText = function (text) {
        var label = this.getLabel();
        var textLabel = label.getElementsByClassName(LABEL)[0];
        if (textLabel) {
            textLabel.textContent = text;
        }
        else {
            textLabel = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: LABEL, innerHTML: text });
            label.appendChild(textLabel);
        }
        if (this.labelPosition === 'before') {
            this.getLabel().classList.add('e-right');
        }
        else {
            this.getLabel().classList.remove('e-right');
        }
    };
    RadioButton.prototype.unWireEvents = function () {
        var label = this.getLabel();
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'change', this.changeHandler);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(document, 'keydown', this.keyDownHandler);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(label, 'mousedown', this.mouseDownHandler);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'focus', this.focusHandler);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'focusout', this.focusOutHandler);
        var rippleLabel = label.getElementsByClassName(LABEL)[0];
        if (rippleLabel) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(rippleLabel, 'mousedown', this.labelRippleHandler);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(rippleLabel, 'mouseup', this.labelRippleHandler);
        }
    };
    RadioButton.prototype.wireEvents = function () {
        var label = this.getLabel();
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'change', this.changeHandler, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(document, 'keydown', this.keyDownHandler, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(label, 'mousedown', this.mouseDownHandler, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'focus', this.focusHandler, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'focusout', this.focusOutHandler, this);
        var rippleLabel = label.getElementsByClassName(LABEL)[0];
        if (rippleLabel) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(rippleLabel, 'mousedown', this.labelRippleHandler, this);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(rippleLabel, 'mouseup', this.labelRippleHandler, this);
        }
    };
    return RadioButton;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Component"]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], RadioButton.prototype, "change", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], RadioButton.prototype, "checked", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], RadioButton.prototype, "cssClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], RadioButton.prototype, "disabled", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], RadioButton.prototype, "label", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('after')
], RadioButton.prototype, "labelPosition", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], RadioButton.prototype, "name", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], RadioButton.prototype, "value", void 0);
RadioButton = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], RadioButton);

var radioButtonBuilder = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["CreateBuilder"])(RadioButton);


/***/ }),
/* 210 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ZipArchive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ZipArchiveItem; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__compression_writer__ = __webpack_require__(122);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_file_utils__ = __webpack_require__(60);


var crc32Table = [];
var ZipArchive = (function () {
    function ZipArchive() {
        this.files = [];
        this.level = 'Normal';
        __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_file_utils__["b" /* Save */].isMicrosoftBrowser = !(!navigator.msSaveBlob);
    }
    Object.defineProperty(ZipArchive.prototype, "compressionLevel", {
        get: function () {
            return this.level;
        },
        set: function (level) {
            this.level = level;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ZipArchive.prototype, "length", {
        get: function () {
            if (this.files === undefined) {
                return 0;
            }
            return this.files.length;
        },
        enumerable: true,
        configurable: true
    });
    ZipArchive.prototype.addItem = function (item) {
        if (item === null || item === undefined) {
            throw new Error('ArgumentException: item cannot be null or undefined');
        }
        for (var i = 0; i < this.files.length; i++) {
            var file = this.files[i];
            if (file instanceof ZipArchiveItem) {
                if (file.name === item.name) {
                    throw new Error('item with same name already exist');
                }
            }
        }
        this.files.push(item);
    };
    ZipArchive.prototype.addDirectory = function (directoryName) {
        if (directoryName === null || directoryName === undefined) {
            throw new Error('ArgumentException: string cannot be null or undefined');
        }
        if (directoryName.length === 0) {
            throw new Error('ArgumentException: string cannot be empty');
        }
        if (directoryName.slice(-1) !== '/') {
            directoryName += '/';
        }
        if (this.files.indexOf(directoryName) !== -1) {
            throw new Error('item with same name already exist');
        }
        this.files.push(directoryName);
    };
    ZipArchive.prototype.getItem = function (index) {
        if (index >= 0 && index < this.files.length) {
            return this.files[index];
        }
        return undefined;
    };
    ZipArchive.prototype.contains = function (item) {
        return this.files.indexOf(item) !== -1 ? true : false;
    };
    ZipArchive.prototype.save = function (fileName) {
        var _this = this;
        if (fileName === null || fileName === undefined || fileName.length === 0) {
            throw new Error('ArgumentException: fileName cannot be null or undefined');
        }
        if (this.files.length === 0) {
            throw new Error('InvalidOperation');
        }
        var zipArchive = this;
        var promise;
        return promise = new Promise(function (resolve, reject) {
            var zipData = [];
            var dirLength = 0;
            for (var i = 0; i < _this.files.length; i++) {
                var compressedObject = _this.getCompressedData(_this.files[i]);
                compressedObject.then(function (data) {
                    dirLength = zipArchive.constructZippedObject(zipData, data, dirLength, data.isDirectory);
                    if (zipData.length === _this.files.length) {
                        zipArchive.writeZippedContent(fileName, zipData, dirLength);
                        resolve(zipArchive);
                    }
                });
            }
        });
    };
    ZipArchive.prototype.destroy = function () {
        if (this.files !== undefined && this.files.length > 0) {
            for (var i = 0; i < this.files.length; i++) {
                var file = this.files[i];
                if (file instanceof ZipArchiveItem) {
                    file.destroy();
                }
                file = undefined;
            }
            this.files = [];
        }
        this.files = undefined;
        this.level = undefined;
    };
    ZipArchive.prototype.getCompressedData = function (item) {
        var zipArchive = this;
        var promise = new Promise(function (resolve, reject) {
            if (item instanceof ZipArchiveItem) {
                var reader_1 = new FileReader();
                reader_1.onload = function () {
                    var input = new Uint8Array(reader_1.result);
                    var data = {
                        fileName: item.name, crc32Value: 0, compressedData: [],
                        compressedSize: undefined, uncompressedDataSize: input.length, compressionType: undefined,
                        isDirectory: false
                    };
                    if (zipArchive.level === 'Normal') {
                        zipArchive.compressData(input, data, crc32Table);
                        var length_1 = 0;
                        for (var i = 0; i < data.compressedData.length; i++) {
                            length_1 += data.compressedData[i].length;
                        }
                        data.compressedSize = length_1;
                        data.compressionType = '\x08\x00';
                    }
                    else {
                        data.compressedSize = input.length;
                        data.crc32Value = zipArchive.calculateCrc32Value(0, input, crc32Table);
                        data.compressionType = '\x00\x00';
                        data.compressedData.push(input);
                    }
                    resolve(data);
                };
                reader_1.readAsArrayBuffer(item.data);
            }
            else {
                var data = {
                    fileName: item, crc32Value: 0, compressedData: '', compressedSize: 0, uncompressedDataSize: 0,
                    compressionType: '\x00\x00', isDirectory: true
                };
                resolve(data);
            }
        });
        return promise;
    };
    ZipArchive.prototype.compressData = function (input, data, crc32Table) {
        var compressor = new __WEBPACK_IMPORTED_MODULE_0__compression_writer__["a" /* CompressedStreamWriter */](true);
        var currentIndex = 0;
        var nextIndex = 0;
        do {
            if (currentIndex >= input.length) {
                compressor.close();
                break;
            }
            nextIndex = Math.min(input.length, currentIndex + 16384);
            var subArray = input.subarray(currentIndex, nextIndex);
            data.crc32Value = this.calculateCrc32Value(data.crc32Value, subArray, crc32Table);
            compressor.write(subArray, 0, nextIndex - currentIndex);
            currentIndex = nextIndex;
        } while (currentIndex <= input.length);
        data.compressedData = compressor.compressedData;
        compressor.destroy();
    };
    ZipArchive.prototype.constructZippedObject = function (zipParts, data, dirLength, isDirectory) {
        var extFileAttr = 0;
        var date = new Date();
        if (isDirectory) {
            extFileAttr = extFileAttr | 0x00010;
        }
        extFileAttr = extFileAttr | (0 & 0x3F);
        var header = this.writeHeader(data, date);
        var localHeader = 'PK\x03\x04' + header + data.fileName;
        var centralDir = this.writeCentralDirectory(data, header, dirLength, extFileAttr);
        zipParts.push({ localHeader: localHeader, centralDir: centralDir, compressedData: data });
        return dirLength + localHeader.length + data.compressedSize;
    };
    ZipArchive.prototype.writeHeader = function (data, date) {
        var zipHeader = '';
        zipHeader += '\x0A\x00' + '\x00\x00';
        zipHeader += data.compressionType;
        zipHeader += this.getBytes(this.getModifiedTime(date), 2);
        zipHeader += this.getBytes(this.getModifiedDate(date), 2);
        zipHeader += this.getBytes(data.crc32Value, 4);
        zipHeader += this.getBytes(data.compressedSize, 4);
        zipHeader += this.getBytes(data.uncompressedDataSize, 4);
        zipHeader += this.getBytes(data.fileName.length, 2);
        zipHeader += this.getBytes(0, 2);
        return zipHeader;
    };
    ZipArchive.prototype.writeZippedContent = function (fileName, zipData, localDirLen) {
        var cenDirLen = 0;
        var buffer = [];
        for (var i = 0; i < zipData.length; i++) {
            var item = zipData[i];
            cenDirLen += item.centralDir.length;
            buffer.push(this.getArrayBuffer(item.localHeader));
            while (item.compressedData.compressedData.length) {
                buffer.push(item.compressedData.compressedData.shift().buffer);
            }
        }
        for (var i = 0; i < zipData.length; i++) {
            buffer.push(this.getArrayBuffer(zipData[i].centralDir));
        }
        buffer.push(this.getArrayBuffer(this.writeFooter(zipData, cenDirLen, localDirLen)));
        __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_file_utils__["b" /* Save */].save(fileName, new Blob(buffer, { type: 'application/zip' }));
    };
    ZipArchive.prototype.writeCentralDirectory = function (data, localHeader, offset, externalFileAttribute) {
        var directoryHeader = 'PK\x01\x02' +
            this.getBytes(0x0014, 2) + localHeader +
            this.getBytes(0, 2) +
            '\x00\x00' + '\x00\x00' +
            this.getBytes(externalFileAttribute, 4) +
            this.getBytes(offset, 4) +
            data.fileName;
        return directoryHeader;
    };
    ZipArchive.prototype.writeFooter = function (zipData, centralLength, localLength) {
        var dirEnd = 'PK\x05\x06' + '\x00\x00' + '\x00\x00' +
            this.getBytes(zipData.length, 2) + this.getBytes(zipData.length, 2) +
            this.getBytes(centralLength, 4) + this.getBytes(localLength, 4) +
            this.getBytes(0, 2);
        return dirEnd;
    };
    ZipArchive.prototype.getArrayBuffer = function (input) {
        var a = new Uint8Array(input.length);
        for (var j = 0; j < input.length; ++j) {
            a[j] = input.charCodeAt(j) & 0xFF;
        }
        return a.buffer;
    };
    ZipArchive.prototype.getBytes = function (value, offset) {
        var bytes = '';
        for (var i = 0; i < offset; i++) {
            bytes += String.fromCharCode(value & 0xff);
            value = value >>> 8;
        }
        return bytes;
    };
    ZipArchive.prototype.getModifiedTime = function (date) {
        var modTime = date.getHours();
        modTime = modTime << 6;
        modTime = modTime | date.getMinutes();
        modTime = modTime << 5;
        return modTime = modTime | date.getSeconds() / 2;
    };
    ZipArchive.prototype.getModifiedDate = function (date) {
        var modiDate = date.getFullYear() - 1980;
        modiDate = modiDate << 4;
        modiDate = modiDate | (date.getMonth() + 1);
        modiDate = modiDate << 5;
        return modiDate = modiDate | date.getDate();
    };
    ZipArchive.prototype.calculateCrc32Value = function (crc32Value, input, crc32Table) {
        crc32Value ^= -1;
        for (var i = 0; i < input.length; i++) {
            crc32Value = (crc32Value >>> 8) ^ crc32Table[(crc32Value ^ input[i]) & 0xFF];
        }
        return (crc32Value ^ (-1));
    };
    return ZipArchive;
}());

var ZipArchiveItem = (function () {
    function ZipArchiveItem(data, itemName) {
        if (data === null || data === undefined) {
            throw new Error('ArgumentException: data cannot be null or undefined');
        }
        if (itemName === null || itemName === undefined) {
            throw new Error('ArgumentException: string cannot be null or undefined');
        }
        if (itemName.length === 0) {
            throw new Error('string cannot be empty');
        }
        this.data = data;
        this.name = itemName;
    }
    Object.defineProperty(ZipArchiveItem.prototype, "name", {
        get: function () {
            return this.fileName;
        },
        set: function (value) {
            this.fileName = value;
        },
        enumerable: true,
        configurable: true
    });
    ZipArchiveItem.prototype.destroy = function () {
        this.fileName = undefined;
        this.data = undefined;
    };
    return ZipArchiveItem;
}());

(function () {
    var i;
    for (var j = 0; j < 256; j++) {
        i = j;
        for (var k = 0; k < 8; k++) {
            i = ((i & 1) ? (0xEDB88320 ^ (i >>> 1)) : (i >>> 1));
        }
        crc32Table[j] = i;
    }
})();


/***/ }),
/* 211 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AutoComplete; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__ = __webpack_require__(92);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__combo_box_combo_box__ = __webpack_require__(126);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_highlight_search__ = __webpack_require__(127);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_incremental_search__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__syncfusion_ej2_inputs__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__syncfusion_ej2_data__ = __webpack_require__(14);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};








__WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].root = 'e-autocomplete';
__WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].icon = 'e-input-group-icon e-ddl-icon e-search-icon';
var AutoComplete = (function (_super) {
    __extends(AutoComplete, _super);
    function AutoComplete(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.isFiltered = false;
        return _this;
    }
    ;
    AutoComplete.prototype.preRender = function () {
        _super.prototype.preRender.call(this);
    };
    AutoComplete.prototype.getNgDirective = function () {
        return 'EJ-AUTOCOMPLETE';
    };
    AutoComplete.prototype.getQuery = function (query) {
        var filterQuery = query ? query : this.query ? this.query.clone() : new __WEBPACK_IMPORTED_MODULE_6__syncfusion_ej2_data__["Query"]();
        if (this.isFiltered) {
            return filterQuery;
        }
        if (this.queryString !== null) {
            if (!(this.dataSource instanceof __WEBPACK_IMPORTED_MODULE_6__syncfusion_ej2_data__["DataManager"]) && typeof this.dataSource[0] === 'string' ||
                typeof this.dataSource[0] === 'number') {
                filterQuery.where('', this.filterType, this.queryString, this.ignoreCase);
            }
            else {
                var fields = this.fields;
                filterQuery.where(!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(fields.value) ? fields.value : '', this.filterType, this.queryString, this.ignoreCase);
            }
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.suggestionCount)) {
            filterQuery.take(this.suggestionCount);
        }
        return filterQuery;
    };
    AutoComplete.prototype.searchLists = function (e) {
        var _this = this;
        this.isTyped = true;
        this.isSelectCustom = false;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.list)) {
            _super.prototype.renderList.call(this, true);
        }
        var isDownUpKey = e.keyCode === 40 || e.keyCode === 38;
        this.queryString = this.filterInput.value;
        if (isDownUpKey) {
            this.queryString = this.queryString === '' ? null : this.queryString;
            this.beforePopupOpen = true;
            this.resetList(this.dataSource, this.fields);
            return;
        }
        this.isSelected = false;
        this.activeIndex = null;
        var eventArgs = {
            preventDefaultAction: false,
            text: this.filterInput.value,
            updateData: function (dataSource, query, fields) {
                _this.isFiltered = true;
                _this.filterAction(dataSource, query, fields);
            }
        };
        this.trigger('filtering', eventArgs);
        if (!this.isFiltered && !eventArgs.preventDefaultAction) {
            this.filterAction(this.dataSource, null, this.fields);
        }
    };
    AutoComplete.prototype.filterAction = function (dataSource, query, fields) {
        this.beforePopupOpen = true;
        if (this.queryString !== '' && (this.queryString.length >= this.minLength || this.isFiltered)) {
            this.resetList(dataSource, fields, query);
        }
        else {
            this.hidePopup();
        }
    };
    AutoComplete.prototype.clear = function () {
        _super.prototype.clear.call(this);
        if (this.beforePopupOpen) {
            this.hidePopup();
        }
    };
    AutoComplete.prototype.onActionComplete = function (ulElement, list, e, isUpdated) {
        this.fixedHeaderElement = null;
        _super.prototype.onActionComplete.call(this, ulElement, list, e);
        var item = this.list.querySelector('.' + __WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].li);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(item)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([item], __WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].focus);
        }
        this.postBackAction();
    };
    AutoComplete.prototype.postBackAction = function () {
        if (this.queryString !== null && this.queryString !== '' && this.highlight) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_highlight_search__["a" /* highlightSearch */])(this.list, this.queryString, this.ignoreCase, this.filterType);
        }
        if (this.autofill && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.liCollections[0])) {
            var items = [this.liCollections[0]];
            var searchItem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__common_incremental_search__["a" /* Search */])(this.inputElement.value, items, 'StartsWith', this.ignoreCase);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(searchItem.item)) {
                _super.prototype.setAutoFill.call(this, this.liCollections[0], true);
            }
        }
    };
    AutoComplete.prototype.setSelection = function (li, e) {
        if (!this.isValidLI(li)) {
            return;
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(e) && e.type === 'keydown' && e.action !== 'enter' && this.isValidLI(li)) {
            var value = this.getFormattedValue(li.getAttribute('data-value'));
            this.activeIndex = this.getIndexByValue(value);
            this.setHoverList(li);
            this.selectedLI = li;
            this.setScrollPosition(e);
            if (this.autofill) {
                this.preventAutoFill = false;
                _super.prototype.setAutoFill.call(this, li);
            }
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.inputElement, { 'aria-activedescendant': this.selectedLI ? this.selectedLI.id : null });
        }
        else {
            _super.prototype.setSelection.call(this, li, e);
        }
    };
    AutoComplete.prototype.isFiltering = function () {
        return true;
    };
    AutoComplete.prototype.renderPopup = function () {
        this.list.scrollTop = 0;
        _super.prototype.renderPopup.call(this);
        if (this.highlight) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_highlight_search__["a" /* highlightSearch */])(this.list, this.queryString, this.ignoreCase, this.filterType);
        }
    };
    AutoComplete.prototype.isEditTextBox = function () {
        return true;
    };
    AutoComplete.prototype.isPopupButton = function () {
        return this.showPopupButton;
    };
    AutoComplete.prototype.isSelectFocusItem = function (element) {
        return false;
    };
    AutoComplete.prototype.showPopup = function () {
        if (this.beforePopupOpen) {
            this.refreshPopup();
            return;
        }
        this.beforePopupOpen = true;
        this.preventAutoFill = true;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.list)) {
            this.renderList();
        }
        else {
            this.resetList(this.dataSource, this.fields);
        }
    };
    AutoComplete.prototype.hidePopup = function () {
        _super.prototype.hidePopup.call(this);
        this.activeIndex = -1;
    };
    AutoComplete.prototype.onPropertyChanged = function (newProp, oldProp) {
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'showPopupButton':
                    if (this.showPopupButton) {
                        var button = __WEBPACK_IMPORTED_MODULE_5__syncfusion_ej2_inputs__["Input"].appendSpan(__WEBPACK_IMPORTED_MODULE_1__drop_down_list_drop_down_list__["a" /* dropDownListClasses */].icon, this.inputWrapper.container);
                        this.inputWrapper.buttons[0] = button;
                        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.inputWrapper.buttons[0], 'click', this.dropDownClick, this);
                    }
                    else {
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.inputWrapper.buttons[0]);
                        this.inputWrapper.buttons[0] = null;
                    }
                    break;
                default:
                    var atcProps = void 0;
                    atcProps = this.getPropObject(prop, newProp, oldProp);
                    _super.prototype.onPropertyChanged.call(this, atcProps.newProperty, atcProps.oldProperty);
                    break;
            }
        }
    };
    AutoComplete.prototype.getModuleName = function () {
        return 'autocomplete';
    };
    AutoComplete.prototype.render = function () {
        _super.prototype.render.call(this);
    };
    ;
    return AutoComplete;
}(__WEBPACK_IMPORTED_MODULE_2__combo_box_combo_box__["a" /* ComboBox */]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])({ value: null, iconCss: null, groupBy: null })
], AutoComplete.prototype, "fields", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(true)
], AutoComplete.prototype, "ignoreCase", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], AutoComplete.prototype, "showPopupButton", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], AutoComplete.prototype, "highlight", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(20)
], AutoComplete.prototype, "suggestionCount", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])({})
], AutoComplete.prototype, "htmlAttributes", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], AutoComplete.prototype, "query", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(1)
], AutoComplete.prototype, "minLength", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('Contains')
], AutoComplete.prototype, "filterType", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], AutoComplete.prototype, "filtering", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], AutoComplete.prototype, "index", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], AutoComplete.prototype, "valueTemplate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], AutoComplete.prototype, "filterBarPlaceholder", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], AutoComplete.prototype, "allowFiltering", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], AutoComplete.prototype, "text", void 0);
AutoComplete = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], AutoComplete);



/***/ }),
/* 212 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__auto_complete__ = __webpack_require__(211);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__auto_complete__["a"]; });



/***/ }),
/* 213 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__combo_box__ = __webpack_require__(126);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__combo_box__["a"]; });



/***/ }),
/* 214 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__incremental_search__ = __webpack_require__(59);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__incremental_search__["b"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__incremental_search__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__highlight_search__ = __webpack_require__(127);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_1__highlight_search__["a"]; });




/***/ }),
/* 215 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__drop_down_base__ = __webpack_require__(128);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__drop_down_base__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__drop_down_base__["b"]; });



/***/ }),
/* 216 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__drop_down_list__ = __webpack_require__(92);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__drop_down_list__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__drop_down_list__["b"]; });



/***/ }),
/* 217 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cell_style__ = __webpack_require__(131);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "CellStyle", function() { return __WEBPACK_IMPORTED_MODULE_0__cell_style__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Font", function() { return __WEBPACK_IMPORTED_MODULE_0__cell_style__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "CellXfs", function() { return __WEBPACK_IMPORTED_MODULE_0__cell_style__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Alignment", function() { return __WEBPACK_IMPORTED_MODULE_0__cell_style__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "CellStyleXfs", function() { return __WEBPACK_IMPORTED_MODULE_0__cell_style__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "CellStyles", function() { return __WEBPACK_IMPORTED_MODULE_0__cell_style__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "NumFmt", function() { return __WEBPACK_IMPORTED_MODULE_0__cell_style__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Border", function() { return __WEBPACK_IMPORTED_MODULE_0__cell_style__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Borders", function() { return __WEBPACK_IMPORTED_MODULE_0__cell_style__["i"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__cell__ = __webpack_require__(132);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Cell", function() { return __WEBPACK_IMPORTED_MODULE_1__cell__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Cells", function() { return __WEBPACK_IMPORTED_MODULE_1__cell__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__column__ = __webpack_require__(133);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Column", function() { return __WEBPACK_IMPORTED_MODULE_2__column__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__row__ = __webpack_require__(135);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Row", function() { return __WEBPACK_IMPORTED_MODULE_3__row__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Rows", function() { return __WEBPACK_IMPORTED_MODULE_3__row__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__workbook__ = __webpack_require__(218);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Workbook", function() { return __WEBPACK_IMPORTED_MODULE_4__workbook__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "BuiltInProperties", function() { return __WEBPACK_IMPORTED_MODULE_4__workbook__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__worksheet__ = __webpack_require__(137);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Worksheet", function() { return __WEBPACK_IMPORTED_MODULE_5__worksheet__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "HyperLink", function() { return __WEBPACK_IMPORTED_MODULE_5__worksheet__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Grouping", function() { return __WEBPACK_IMPORTED_MODULE_5__worksheet__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "FreezePane", function() { return __WEBPACK_IMPORTED_MODULE_5__worksheet__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "MergeCell", function() { return __WEBPACK_IMPORTED_MODULE_5__worksheet__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "MergeCells", function() { return __WEBPACK_IMPORTED_MODULE_5__worksheet__["f"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__worksheets__ = __webpack_require__(138);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Worksheets", function() { return __WEBPACK_IMPORTED_MODULE_6__worksheets__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__csv_helper__ = __webpack_require__(134);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "CsvHelper", function() { return __WEBPACK_IMPORTED_MODULE_7__csv_helper__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__value_formatter__ = __webpack_require__(136);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ValueFormatter", function() { return __WEBPACK_IMPORTED_MODULE_8__value_formatter__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__blob_helper__ = __webpack_require__(130);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "BlobHelper", function() { return __WEBPACK_IMPORTED_MODULE_9__blob_helper__["a"]; });












/***/ }),
/* 218 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Workbook; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return BuiltInProperties; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__worksheets__ = __webpack_require__(138);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__worksheet__ = __webpack_require__(137);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__cell_style__ = __webpack_require__(131);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__column__ = __webpack_require__(133);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__row__ = __webpack_require__(135);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__cell__ = __webpack_require__(132);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__syncfusion_ej2_compression__ = __webpack_require__(123);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__csv_helper__ = __webpack_require__(134);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__blob_helper__ = __webpack_require__(130);










var Workbook = (function () {
    function Workbook(json, saveType, culture) {
        this.sharedStringCount = 0;
        this.unitsProportions = [
            96 / 75.0,
            96 / 300.0,
            96,
            96 / 25.4,
            96 / 2.54,
            1,
            96 / 72.0,
            96 / 72.0 / 12700,
        ];
        this.hyperlinkStyle = { fontColor: '#0000FF', underline: true };
        if (culture !== undefined) {
            this.culture = culture;
        }
        else {
            this.culture = 'en-US';
        }
        this.intl = new __WEBPACK_IMPORTED_MODULE_8__syncfusion_ej2_base__["Internationalization"](this.culture);
        this.mSaveType = saveType;
        if (saveType === 'xlsx') {
            this.mArchive = new __WEBPACK_IMPORTED_MODULE_6__syncfusion_ej2_compression__["b" /* ZipArchive */]();
            this.sharedString = [];
            this.mFonts = [];
            this.mBorders = [];
            this.mStyles = [];
            this.printTitles = new Map();
            this.cellStyles = new Map();
            this.mNumFmt = new Map();
            this.mFills = new Map();
            this.mStyles.push(new __WEBPACK_IMPORTED_MODULE_2__cell_style__["a" /* CellStyle */]());
            this.mFonts.push(new __WEBPACK_IMPORTED_MODULE_2__cell_style__["b" /* Font */]());
            this.cellStyles.set('Normal', new __WEBPACK_IMPORTED_MODULE_2__cell_style__["f" /* CellStyles */]());
            this.mCellXfs = [];
            this.mCellStyleXfs = [];
            if (json.styles !== null && json.styles !== undefined) {
                this.globalStyles = new Map();
                for (var i = 0; i < json.styles.length; i++) {
                    if (json.styles[i].name !== undefined) {
                        if (!this.cellStyles.has(json.styles[i].name)) {
                            var cellStyle = new __WEBPACK_IMPORTED_MODULE_2__cell_style__["a" /* CellStyle */]();
                            cellStyle.isGlobalStyle = true;
                            this.parserCellStyle(json.styles[i], cellStyle, 'none');
                            var cellStyles = new __WEBPACK_IMPORTED_MODULE_2__cell_style__["f" /* CellStyles */]();
                            cellStyles.name = cellStyle.name;
                            cellStyles.xfId = cellStyle.index;
                            this.cellStyles.set(cellStyles.name, cellStyles);
                            var tFormat = {};
                            if (json.styles[i].numberFormat !== undefined) {
                                tFormat.format = json.styles[i].numberFormat;
                            }
                            if (json.styles[i].type !== undefined) {
                                tFormat.type = json.styles[i].type;
                            }
                            else {
                                tFormat.type = 'datetime';
                            }
                            if (tFormat.format !== undefined) {
                                this.globalStyles.set(json.styles[i].name, tFormat);
                            }
                        }
                        else {
                            throw Error('Style name ' + json.styles[i].name + ' is already existed');
                        }
                    }
                }
            }
            if (json.worksheets !== null && json.worksheets !== undefined) {
                this.parserWorksheets(json.worksheets);
            }
            else {
                throw Error('Worksheet is expected.');
            }
            if (json.builtInProperties !== null && json.builtInProperties !== undefined) {
                this.builtInProperties = new BuiltInProperties();
                this.parserBuiltInProperties(json.builtInProperties, this.builtInProperties);
            }
        }
        else {
            this.csvHelper = new __WEBPACK_IMPORTED_MODULE_7__csv_helper__["a" /* CsvHelper */](json);
        }
    }
    Workbook.prototype.parserBuiltInProperties = function (jsonBuiltInProperties, builtInProperties) {
        if (jsonBuiltInProperties.author !== null && jsonBuiltInProperties.author !== undefined) {
            builtInProperties.author = jsonBuiltInProperties.author;
        }
        if (jsonBuiltInProperties.comments !== null && jsonBuiltInProperties.comments !== undefined) {
            builtInProperties.comments = jsonBuiltInProperties.comments;
        }
        if (jsonBuiltInProperties.category !== null && jsonBuiltInProperties.category !== undefined) {
            builtInProperties.category = jsonBuiltInProperties.category;
        }
        if (jsonBuiltInProperties.company !== null && jsonBuiltInProperties.company !== undefined) {
            builtInProperties.company = jsonBuiltInProperties.company;
        }
        if (jsonBuiltInProperties.manager !== null && jsonBuiltInProperties.manager !== undefined) {
            builtInProperties.manager = jsonBuiltInProperties.manager;
        }
        if (jsonBuiltInProperties.subject !== null && jsonBuiltInProperties.subject !== undefined) {
            builtInProperties.subject = jsonBuiltInProperties.subject;
        }
        if (jsonBuiltInProperties.title !== null && jsonBuiltInProperties.title !== undefined) {
            builtInProperties.title = jsonBuiltInProperties.title;
        }
        if (jsonBuiltInProperties.createdDate !== null && jsonBuiltInProperties.createdDate !== undefined) {
            builtInProperties.createdDate = jsonBuiltInProperties.createdDate;
        }
        if (jsonBuiltInProperties.modifiedDate !== null && jsonBuiltInProperties.modifiedDate !== undefined) {
            builtInProperties.modifiedDate = jsonBuiltInProperties.modifiedDate;
        }
        if (jsonBuiltInProperties.tags !== null && jsonBuiltInProperties.tags !== undefined) {
            builtInProperties.tags = jsonBuiltInProperties.tags;
        }
        if (jsonBuiltInProperties.status !== null && jsonBuiltInProperties.status !== undefined) {
            builtInProperties.status = jsonBuiltInProperties.status;
        }
    };
    Workbook.prototype.parserWorksheets = function (json) {
        this.worksheets = new __WEBPACK_IMPORTED_MODULE_0__worksheets__["a" /* Worksheets */]();
        var length = json.length;
        for (var i = 0; i < length; i++) {
            var jsonSheet = json[i];
            var sheet = new __WEBPACK_IMPORTED_MODULE_1__worksheet__["a" /* Worksheet */]();
            this.mergeCells = new __WEBPACK_IMPORTED_MODULE_1__worksheet__["f" /* MergeCells */]();
            this.mHyperLinks = [];
            if (jsonSheet.name !== null && jsonSheet.name !== undefined) {
                sheet.name = jsonSheet.name;
            }
            else {
                sheet.name = 'Sheet' + (i + 1).toString();
            }
            sheet.index = (i + 1);
            if (jsonSheet.columns !== null && jsonSheet.columns !== undefined) {
                this.parserColumns(jsonSheet.columns, sheet);
            }
            if (jsonSheet.rows !== null && jsonSheet.rows !== undefined) {
                this.parserRows(jsonSheet.rows, sheet);
            }
            if (jsonSheet.freeze !== null && jsonSheet.freeze !== undefined) {
                this.parserFreezePanes(jsonSheet.freeze, sheet);
            }
            if (jsonSheet.printTitle !== null && jsonSheet.printTitle !== undefined) {
                this.parserPrintTitle(jsonSheet.printTitle, sheet);
            }
            if (jsonSheet.pageSetup !== undefined) {
                if (jsonSheet.pageSetup.isSummaryRowBelow !== undefined) {
                    sheet.isSummaryRowBelow = jsonSheet.pageSetup.isSummaryRowBelow;
                }
            }
            sheet.index = (i + 1);
            sheet.mergeCells = this.mergeCells;
            sheet.hyperLinks = this.mHyperLinks;
            this.worksheets.push(sheet);
        }
    };
    Workbook.prototype.mergeOptions = function (fromJson, toJson) {
        var result = {};
        this.applyProperties(fromJson, result);
        this.applyProperties(toJson, result);
        return result;
    };
    Workbook.prototype.applyProperties = function (sourceJson, destJson) {
        var keys = Object.keys(sourceJson);
        for (var index = 0; index < keys.length; index++) {
            if (keys[index] !== 'name') {
                destJson[keys[index]] = sourceJson[keys[index]];
            }
        }
    };
    Workbook.prototype.getCellName = function (row, column) {
        return this.getColumnName(column) + row.toString();
    };
    Workbook.prototype.getColumnName = function (col) {
        col--;
        var strColumnName = '';
        do {
            var iCurrentDigit = col % 26;
            col = col / 26 - 1;
            strColumnName = String.fromCharCode(65 + iCurrentDigit) + strColumnName;
        } while (col >= 0);
        return strColumnName;
    };
    Workbook.prototype.parserPrintTitle = function (json, sheet) {
        var printTitleName = '';
        var titleRowName;
        if (json.fromRow !== null && json.fromRow !== undefined) {
            var fromRow = json.fromRow;
            var toRow = void 0;
            if (json.toRow !== null && json.toRow !== undefined) {
                toRow = json.toRow;
            }
            else {
                toRow = json.fromRow;
            }
            titleRowName = '$' + fromRow + ':$' + toRow;
        }
        var titleColName;
        if (json.fromColumn !== null && json.fromColumn !== undefined) {
            var fromColumn = json.fromColumn;
            var toColumn = void 0;
            if (json.toColumn !== null && json.toColumn !== undefined) {
                toColumn = json.toColumn;
            }
            else {
                toColumn = json.fromColumn;
            }
            titleColName = '$' + this.getColumnName(fromColumn) + ':$' + this.getColumnName(toColumn);
        }
        if (titleRowName !== undefined) {
            printTitleName += (sheet.name + '!' + titleRowName);
        }
        if (titleColName !== undefined && titleRowName !== undefined) {
            printTitleName += ',' + (sheet.name + '!' + titleColName);
        }
        else if (titleColName !== undefined) {
            printTitleName += (sheet.name + '!' + titleColName);
        }
        if (printTitleName !== '') {
            this.printTitles.set(sheet.index - 1, printTitleName);
        }
    };
    Workbook.prototype.parserFreezePanes = function (json, sheet) {
        sheet.freezePanes = new __WEBPACK_IMPORTED_MODULE_1__worksheet__["d" /* FreezePane */]();
        if (json.row !== null && json.row !== undefined) {
            sheet.freezePanes.row = json.row;
        }
        else {
            sheet.freezePanes.row = 0;
        }
        if (json.column !== null && json.column !== undefined) {
            sheet.freezePanes.column = json.column;
        }
        else {
            sheet.freezePanes.column = 0;
        }
        sheet.freezePanes.leftCell = this.getCellName(sheet.freezePanes.row + 1, sheet.freezePanes.column + 1);
    };
    Workbook.prototype.parserColumns = function (json, sheet) {
        var columnsLength = json.length;
        sheet.columns = [];
        for (var column = 0; column < columnsLength; column++) {
            var col = new __WEBPACK_IMPORTED_MODULE_3__column__["a" /* Column */]();
            if (json[column].index !== null && json[column].index !== undefined) {
                col.index = json[column].index;
            }
            else {
                throw Error('Column index is missing.');
            }
            if (json[column].width !== null && json[column].width !== undefined) {
                col.width = json[column].width;
            }
            sheet.columns.push(col);
        }
    };
    Workbook.prototype.parserRows = function (json, sheet) {
        var rowsLength = json.length;
        sheet.rows = new __WEBPACK_IMPORTED_MODULE_4__row__["b" /* Rows */]();
        var rowId = 0;
        for (var r = 0; r < rowsLength; r++) {
            var row = this.parserRow(json[r], rowId);
            rowId = row.index;
            sheet.rows.add(row);
        }
    };
    Workbook.prototype.parserRow = function (json, rowIndex) {
        var row = new __WEBPACK_IMPORTED_MODULE_4__row__["a" /* Row */]();
        if (json.height !== null && json.height !== undefined) {
            row.height = json.height;
        }
        if (json.index !== null && json.index !== undefined) {
            row.index = json.index;
        }
        else {
            throw Error('Row index is missing.');
        }
        if (json.grouping !== null && json.grouping !== undefined) {
            this.parseGrouping(json.grouping, row);
        }
        this.parseCells(json.cells, row);
        return row;
    };
    Workbook.prototype.parseGrouping = function (json, row) {
        row.grouping = new __WEBPACK_IMPORTED_MODULE_1__worksheet__["c" /* Grouping */]();
        if (json.outlineLevel !== undefined) {
            row.grouping.outlineLevel = json.outlineLevel;
        }
        if (json.isCollapsed !== undefined) {
            row.grouping.isCollapsed = json.isCollapsed;
        }
        if (json.isHidden !== undefined) {
            row.grouping.isHidden = json.isHidden;
        }
    };
    Workbook.prototype.parseCells = function (json, row) {
        row.cells = new __WEBPACK_IMPORTED_MODULE_5__cell__["b" /* Cells */]();
        var cellsLength = json !== undefined ? json.length : 0;
        var spanMin = 1;
        var spanMax = 1;
        var curCellIndex = 0;
        for (var cellId = 0; cellId < cellsLength; cellId++) {
            var jsonCell = json[cellId];
            var cell = new __WEBPACK_IMPORTED_MODULE_5__cell__["a" /* Cell */]();
            if (jsonCell.index !== null && jsonCell.index !== undefined) {
                cell.index = jsonCell.index;
            }
            else {
                throw Error('Cell index is missing.');
            }
            if (cell.index < spanMin) {
                spanMin = cell.index;
            }
            else if (cell.index > spanMax) {
                spanMax = cell.index;
            }
            cell.refName = this.getCellName(row.index, cell.index);
            if (jsonCell.rowSpan !== null && jsonCell.rowSpan !== undefined) {
                cell.rowSpan = jsonCell.rowSpan - 1;
            }
            else {
                cell.rowSpan = 0;
            }
            if (jsonCell.colSpan !== null && jsonCell.colSpan !== undefined) {
                cell.colSpan = jsonCell.colSpan - 1;
            }
            else {
                cell.colSpan = 0;
            }
            this.mergeCells = this.processMergeCells(cell, row.index, this.mergeCells);
            if (jsonCell.hyperlink !== null && jsonCell.hyperlink !== undefined) {
                var hyperLink = new __WEBPACK_IMPORTED_MODULE_1__worksheet__["b" /* HyperLink */]();
                if (jsonCell.hyperlink.target !== undefined) {
                    hyperLink.target = jsonCell.hyperlink.target;
                    if (jsonCell.hyperlink.displayText !== undefined) {
                        cell.value = jsonCell.hyperlink.displayText;
                    }
                    else {
                        cell.value = jsonCell.hyperlink.target;
                    }
                    cell.type = this.getCellValueType(cell.value);
                    hyperLink.ref = cell.refName;
                    hyperLink.rId = (this.mHyperLinks.length + 1);
                    this.mHyperLinks.push(hyperLink);
                    cell.cellStyle = new __WEBPACK_IMPORTED_MODULE_2__cell_style__["a" /* CellStyle */]();
                    this.parserCellStyle((jsonCell.style !== undefined ? this.mergeOptions(jsonCell.style, this.hyperlinkStyle) : this.hyperlinkStyle), cell.cellStyle, 'string');
                    cell.styleIndex = cell.cellStyle.index;
                }
            }
            if (jsonCell.value !== null && jsonCell.value !== undefined) {
                cell.value = jsonCell.value;
                cell.type = this.getCellValueType(cell.value);
            }
            if (jsonCell.style !== null && jsonCell.style !== undefined && cell.styleIndex === undefined) {
                cell.cellStyle = new __WEBPACK_IMPORTED_MODULE_2__cell_style__["a" /* CellStyle */]();
                if (cell.value instanceof Date) {
                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type, 14);
                }
                else {
                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type);
                }
                cell.styleIndex = cell.cellStyle.index;
            }
            else if (cell.value instanceof Date) {
                cell.cellStyle = new __WEBPACK_IMPORTED_MODULE_2__cell_style__["a" /* CellStyle */]();
                this.parserCellStyle({}, cell.cellStyle, cell.type, 14);
                cell.styleIndex = cell.cellStyle.index;
            }
            this.parseCellType(cell);
            row.cells.add(cell);
            curCellIndex = (cell.index + 1);
        }
        row.spans = (spanMin) + ':' + (spanMax);
    };
    Workbook.prototype.applyGlobalStyle = function (json, cellStyle) {
        var index = 0;
        if (this.cellStyles.has(json.name)) {
            index = this.cellStyles.get(json.name).xfId;
            var cellStyleXfs = this.mCellStyleXfs[index - 1];
            cellStyle.name = json.name;
            var compareResult = this.compareStyleXfs(cellStyleXfs);
            if (!compareResult.result) {
                var cellXfs = new __WEBPACK_IMPORTED_MODULE_2__cell_style__["c" /* CellXfs */]();
                cellXfs.alignment = cellStyleXfs.alignment;
                cellXfs.applyAlignment = cellStyleXfs.applyAlignment;
                cellXfs.borderId = cellStyleXfs.borderId;
                cellXfs.fillId = cellStyleXfs.fillId;
                cellXfs.fontId = cellStyleXfs.fontId;
                cellXfs.numFmtId = cellStyleXfs.numFmtId;
                cellXfs.xfId = index;
                this.mCellXfs.push(cellXfs);
                this.mStyles.push(cellStyle);
                cellStyle.index = this.mCellXfs.length;
            }
            else {
                cellStyle.index = compareResult.index;
            }
        }
    };
    Workbook.prototype.compareStyleXfs = function (toCompareStyle) {
        var result = false;
        var index = 1;
        for (var _i = 0, _a = this.mCellXfs; _i < _a.length; _i++) {
            var baseStyle = _a[_i];
            result = baseStyle.alignment === toCompareStyle.alignment &&
                baseStyle.borderId === toCompareStyle.borderId &&
                baseStyle.numFmtId === toCompareStyle.numFmtId &&
                baseStyle.fillId === toCompareStyle.fillId &&
                baseStyle.fontId === toCompareStyle.fontId;
            if (result) {
                break;
            }
            else {
                index++;
            }
        }
        return { index: index, result: result };
    };
    Workbook.prototype.parserCellStyle = function (json, cellStyle, cellType, defStyleIndex) {
        if (json.name !== null && json.name !== undefined) {
            if (cellStyle.isGlobalStyle) {
                cellStyle.name = json.name;
            }
            else {
                this.applyGlobalStyle(json, cellStyle);
                return;
            }
        }
        if (json.backColor !== null && json.backColor !== undefined) {
            cellStyle.backColor = json.backColor;
        }
        cellStyle.borders = new __WEBPACK_IMPORTED_MODULE_2__cell_style__["i" /* Borders */]();
        if (json.borders !== null && json.borders !== undefined) {
            this.parserBorder(json.borders, cellStyle.borders.all);
        }
        if (json.leftBorder !== null && json.leftBorder !== undefined) {
            this.parserBorder(json.leftBorder, cellStyle.borders.left);
        }
        if (json.rightBorder !== null && json.rightBorder !== undefined) {
            this.parserBorder(json.rightBorder, cellStyle.borders.right);
        }
        if (json.topBorder !== null && json.topBorder !== undefined) {
            this.parserBorder(json.topBorder, cellStyle.borders.top);
        }
        if (json.bottomBorder !== null && json.bottomBorder !== undefined) {
            this.parserBorder(json.bottomBorder, cellStyle.borders.bottom);
        }
        if (json.fontName !== null && json.fontName !== undefined) {
            cellStyle.fontName = json.fontName;
        }
        if (json.fontSize !== null && json.fontSize !== undefined) {
            cellStyle.fontSize = json.fontSize;
        }
        if (json.fontColor !== null && json.fontColor !== undefined) {
            cellStyle.fontColor = json.fontColor;
        }
        if (json.italic !== null && json.italic !== undefined) {
            cellStyle.italic = json.italic;
        }
        if (json.bold !== null && json.bold !== undefined) {
            cellStyle.bold = json.bold;
        }
        if (json.hAlign !== null && json.hAlign !== undefined) {
            cellStyle.hAlign = json.hAlign;
        }
        if (json.vAlign !== null && json.vAlign !== undefined) {
            cellStyle.vAlign = json.vAlign;
        }
        if (json.underline !== null && json.underline !== undefined) {
            cellStyle.underline = json.underline;
        }
        if (json.wrapText !== null && json.wrapText !== undefined) {
            cellStyle.wrapText = json.wrapText;
        }
        if (json.numberFormat !== null && json.numberFormat !== undefined) {
            if (json.type !== null && json.type !== undefined) {
                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, json.type);
            }
            else {
                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, cellType);
            }
        }
        else if (defStyleIndex !== undefined) {
            cellStyle.numFmtId = 14;
            cellStyle.numberFormat = 'GENERAL';
        }
        else {
            cellStyle.numberFormat = 'GENERAL';
        }
        cellStyle.index = this.processCellStyle(cellStyle);
    };
    Workbook.prototype.switchNumberFormat = function (numberFormat, type) {
        var format = this.getNumberFormat(numberFormat, type);
        if (format !== numberFormat) {
            var numFmt = this.mNumFmt.get(numberFormat);
            if (numFmt !== undefined) {
                numFmt.formatCode = format;
                if (this.mNumFmt.has(format)) {
                    for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {
                        var cellStyleXfs = _a[_i];
                        if (cellStyleXfs.numFmtId === numFmt.numFmtId) {
                            cellStyleXfs.numFmtId = this.mNumFmt.get(format).numFmtId;
                        }
                    }
                    for (var _b = 0, _c = this.mCellXfs; _b < _c.length; _b++) {
                        var cellXfs = _c[_b];
                        if (cellXfs.numFmtId === numFmt.numFmtId) {
                            cellXfs.numFmtId = this.mNumFmt.get(format).numFmtId;
                        }
                    }
                }
            }
        }
    };
    Workbook.prototype.getNumberFormat = function (numberFormat, type) {
        var returnFormat;
        switch (type) {
            case 'number':
                try {
                    returnFormat = this.intl.getNumberPattern({ format: numberFormat });
                }
                catch (error) {
                    returnFormat = numberFormat;
                }
                break;
            case 'datetime':
                try {
                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'dateTime' }, true);
                }
                catch (error) {
                    returnFormat = numberFormat;
                }
                break;
            case 'date':
                try {
                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'date' }, true);
                }
                catch (error) {
                    returnFormat = numberFormat;
                }
                break;
            case 'time':
                try {
                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'time' }, true);
                }
                catch (error) {
                    returnFormat = numberFormat;
                }
                break;
            default:
                returnFormat = numberFormat;
                break;
        }
        return returnFormat;
    };
    Workbook.prototype.parserBorder = function (json, border) {
        if (json.color !== null && json.color !== undefined) {
            border.color = json.color;
        }
        else {
            border.color = '#000000';
        }
        if (json.lineStyle !== null && json.lineStyle !== undefined) {
            border.lineStyle = json.lineStyle;
        }
        else {
            border.lineStyle = 'thin';
        }
    };
    Workbook.prototype.processCellStyle = function (style) {
        var compareResult = this.compareStyle(style);
        if (!compareResult.result) {
            this.mStyles.push(style);
            var cellXfs = undefined;
            if (style.isGlobalStyle) {
                cellXfs = new __WEBPACK_IMPORTED_MODULE_2__cell_style__["e" /* CellStyleXfs */]();
            }
            else {
                cellXfs = new __WEBPACK_IMPORTED_MODULE_2__cell_style__["c" /* CellXfs */]();
            }
            var compareFontResult = this.isNewFont(style);
            if (!compareFontResult.result) {
                var font = new __WEBPACK_IMPORTED_MODULE_2__cell_style__["b" /* Font */]();
                font.b = style.bold;
                font.i = style.italic;
                font.name = style.fontName;
                font.sz = style.fontSize;
                font.u = style.underline;
                font.color = ('FF' + style.fontColor.replace('#', ''));
                this.mFonts.push(font);
                cellXfs.fontId = this.mFonts.length - 1;
            }
            else {
                cellXfs.fontId = compareFontResult.index;
            }
            if (style.backColor !== 'none') {
                var backColor = 'FF' + style.backColor.replace('#', '');
                if (this.mFills.has(backColor)) {
                    var fillId = this.mFills.get(backColor);
                    cellXfs.fillId = fillId;
                }
                else {
                    var fillId = this.mFills.size + 2;
                    this.mFills.set(backColor, fillId);
                    cellXfs.fillId = (fillId);
                }
            }
            else {
                cellXfs.fillId = 0;
            }
            if (!this.isNewBorder(style)) {
                this.mBorders.push(style.borders);
                cellXfs.borderId = this.mBorders.length;
            }
            else {
                cellXfs.borderId = 0;
            }
            cellXfs.xfId = 0;
            if (style.numberFormat !== 'GENERAL') {
                if (this.mNumFmt.has(style.numberFormat)) {
                    var numFmt = this.mNumFmt.get(style.numberFormat);
                    cellXfs.numFmtId = numFmt.numFmtId;
                }
                else {
                    var id = this.mNumFmt.size + 164;
                    this.mNumFmt.set(style.numberFormat, new __WEBPACK_IMPORTED_MODULE_2__cell_style__["g" /* NumFmt */](id, style.numberFormat));
                    cellXfs.numFmtId = id;
                }
            }
            else {
                if (style.numberFormat === 'GENERAL' && style.numFmtId === 14) {
                    cellXfs.numFmtId = 14;
                }
                else {
                    cellXfs.numFmtId = 0;
                }
            }
            if (style.hAlign !== 'left' || style.vAlign !== 'bottom' || style.wrapText) {
                cellXfs.applyAlignment = 1;
                cellXfs.alignment = new __WEBPACK_IMPORTED_MODULE_2__cell_style__["d" /* Alignment */]();
                cellXfs.alignment.horizontal = style.hAlign;
                cellXfs.alignment.vertical = style.vAlign;
                cellXfs.alignment.wrapText = style.wrapText ? 1 : 0;
            }
            if (style.isGlobalStyle) {
                this.mCellStyleXfs.push(cellXfs);
                return (this.mCellStyleXfs.length);
            }
            else {
                this.mCellXfs.push(cellXfs);
                return (this.mCellXfs.length);
            }
        }
        else {
            return compareResult.index;
        }
    };
    Workbook.prototype.isNewFont = function (toCompareStyle) {
        var result = false;
        var index = 0;
        for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {
            var font = _a[_i];
            index++;
            var fontColor = undefined;
            if (toCompareStyle.fontColor !== undefined) {
                fontColor = ('FF' + toCompareStyle.fontColor.replace('#', ''));
            }
            result = font.color === fontColor &&
                font.b === toCompareStyle.bold &&
                font.i === toCompareStyle.italic &&
                font.u === toCompareStyle.underline &&
                font.name === toCompareStyle.fontName &&
                font.sz === toCompareStyle.fontSize;
            if (result) {
                break;
            }
        }
        index = index - 1;
        return { index: index, result: result };
    };
    Workbook.prototype.isNewBorder = function (toCompareStyle) {
        var bStyle = new __WEBPACK_IMPORTED_MODULE_2__cell_style__["a" /* CellStyle */];
        if (this.isAllBorder(toCompareStyle.borders)) {
            return (bStyle.borders.all.color === toCompareStyle.borders.all.color &&
                bStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle);
        }
        else {
            return (bStyle.borders.left.color === toCompareStyle.borders.left.color &&
                bStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&
                bStyle.borders.right.color === toCompareStyle.borders.right.color &&
                bStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&
                bStyle.borders.top.color === toCompareStyle.borders.top.color &&
                bStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&
                bStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&
                bStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle);
        }
    };
    Workbook.prototype.isAllBorder = function (toCompareBorder) {
        var allBorderStyle = new __WEBPACK_IMPORTED_MODULE_2__cell_style__["a" /* CellStyle */];
        return allBorderStyle.borders.all.color !== toCompareBorder.all.color &&
            allBorderStyle.borders.all.lineStyle !== toCompareBorder.all.lineStyle;
    };
    Workbook.prototype.compareStyle = function (toCompareStyle) {
        var result = true;
        var index = 0;
        var globalStyleIndex = 0;
        for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {
            var baseStyle = _a[_i];
            result = baseStyle.backColor === toCompareStyle.backColor &&
                baseStyle.bold === toCompareStyle.bold &&
                baseStyle.numFmtId === toCompareStyle.numFmtId &&
                baseStyle.numberFormat === toCompareStyle.numberFormat &&
                baseStyle.type === toCompareStyle.type &&
                baseStyle.fontColor === toCompareStyle.fontColor &&
                baseStyle.fontName === toCompareStyle.fontName &&
                baseStyle.fontSize === toCompareStyle.fontSize &&
                baseStyle.hAlign === toCompareStyle.hAlign &&
                baseStyle.italic === toCompareStyle.italic &&
                baseStyle.underline === toCompareStyle.underline &&
                baseStyle.vAlign === toCompareStyle.vAlign &&
                baseStyle.wrapText === toCompareStyle.wrapText &&
                (baseStyle.borders.all.color === toCompareStyle.borders.all.color &&
                    baseStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle) &&
                (baseStyle.borders.left.color === toCompareStyle.borders.left.color &&
                    baseStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&
                    baseStyle.borders.right.color === toCompareStyle.borders.right.color &&
                    baseStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&
                    baseStyle.borders.top.color === toCompareStyle.borders.top.color &&
                    baseStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&
                    baseStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&
                    baseStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle);
            if (result) {
                break;
            }
            else if (!baseStyle.isGlobalStyle) {
                index++;
            }
            else {
                globalStyleIndex++;
            }
        }
        if (toCompareStyle.isGlobalStyle) {
            index = globalStyleIndex + 1;
        }
        return { index: index, result: result };
    };
    Workbook.prototype.contains = function (array, item) {
        var index = array.indexOf(item);
        return index > -1 && index < array.length;
    };
    Workbook.prototype.getCellValueType = function (value) {
        if (value instanceof Date) {
            return 'datetime';
        }
        else if (typeof (value) === 'boolean') {
            return 'boolean';
        }
        else if (typeof (value) === 'number') {
            return 'number';
        }
        else {
            return 'string';
        }
    };
    Workbook.prototype.parseCellType = function (cell) {
        var type = cell.type;
        var saveType;
        var value = cell.value;
        switch (type) {
            case 'datetime':
                value = this.toOADate(value);
                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {
                    if (this.globalStyles.has(cell.cellStyle.name)) {
                        var value_1 = this.globalStyles.get(cell.cellStyle.name);
                        this.switchNumberFormat(value_1.format, value_1.type);
                    }
                }
                saveType = 'n';
                break;
            case 'boolean':
                value = value ? 1 : 0;
                saveType = 'b';
                break;
            case 'number':
                saveType = 'n';
                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {
                    if (this.globalStyles.has(cell.cellStyle.name)) {
                        this.switchNumberFormat(this.globalStyles.get(cell.cellStyle.name).format, 'number');
                    }
                }
                break;
            case 'string':
                this.sharedStringCount++;
                saveType = 's';
                if (!this.contains(this.sharedString, value)) {
                    this.sharedString.push(value);
                }
                value = this.sharedString.indexOf(value);
                break;
            default:
                break;
        }
        cell.saveType = saveType;
        cell.value = value;
    };
    Workbook.prototype.save = function (fileName, proxyUrl) {
        if (fileName === null || fileName === undefined || fileName === '') {
            throw new Error('Argument Null Exception: fileName cannot be null or empty');
        }
        var xlsxMatch = fileName.match('.xlsx$');
        var csvMatch = fileName.match('.csv$');
        if (xlsxMatch !== null && xlsxMatch[0] === ('.' + this.mSaveType)) {
            this.saveWorkbook();
            this.saveWorksheets();
            this.saveSharedString();
            this.saveStyles();
            this.saveApp(this.builtInProperties);
            this.saveCore(this.builtInProperties);
            this.saveContentType();
            this.saveTopLevelRelation();
            this.saveWorkbookRelation();
            this.mArchive.save(fileName).then(function () {
                this.mArchive.destroy();
            });
        }
        else if (csvMatch !== null && csvMatch[0] === ('.' + this.mSaveType)) {
            this.csvHelper.save(fileName);
        }
        else {
            throw Error('Save type and file extension is different.');
        }
    };
    Workbook.prototype.saveWorkbook = function () {
        var workbookTemp = '<?xml version="1.0" encoding="utf-8"?><workbook xmlns:r = "http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns= "http://schemas.openxmlformats.org/spreadsheetml/2006/main"><workbookPr codeName="ThisWorkbook" defaultThemeVersion= "153222"/><bookViews><workbookView activeTab="0"/></bookViews>';
        var sheets = '<sheets>';
        var length = this.worksheets.length;
        for (var i = 0; i < length; i++) {
            sheets += '<sheet name="' + this.worksheets[i].name + '" sheetId="' + (i + 1).toString() + '" r:id ="rId' + (i + 1).toString() + '" />';
        }
        sheets += '</sheets>';
        workbookTemp += sheets;
        if (this.printTitles.size > 0) {
            var printTitle_1 = '<definedNames>';
            this.printTitles.forEach(function (value, key) {
                printTitle_1 += '<definedName name="_xlnm.Print_Titles" localSheetId="' + key + '">' + value + '</definedName>';
            });
            printTitle_1 += '</definedNames>';
            workbookTemp += printTitle_1;
        }
        this.addToArchive(workbookTemp + '</workbook>', 'xl/workbook.xml');
    };
    Workbook.prototype.saveWorksheets = function () {
        var length = this.worksheets.length;
        for (var i = 0; i < length; i++) {
            this.saveWorksheet(this.worksheets[i], i);
        }
    };
    Workbook.prototype.saveWorksheet = function (sheet, index) {
        var sheetBlob = new __WEBPACK_IMPORTED_MODULE_9__blob_helper__["a" /* BlobHelper */]();
        var sheetString = '<?xml version="1.0" encoding="utf-8" standalone="yes"?><worksheet xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:x14="http://schemas.microsoft.com/office/spreadsheetml/2009/9/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main">';
        if (!sheet.isSummaryRowBelow) {
            sheetString += ('<sheetPr>' + '<outlinePr ' + 'summaryBelow="0" >' + '</outlinePr>' + '</sheetPr>');
        }
        else {
            sheetString += ('<sheetPr />');
        }
        if (sheet.freezePanes !== undefined) {
            sheetString += (this.saveFreezePanes(sheet));
        }
        if (sheet.columns !== undefined) {
            var colString = '<cols>';
            for (var _i = 0, _a = sheet.columns; _i < _a.length; _i++) {
                var column = _a[_i];
                if (column.width !== undefined) {
                    colString += '<col min="' + (column.index) + '" max="' + (column.index) + '" width="' + this.pixelsToColumnWidth(column.width) + '" customWidth="1" />';
                }
                else {
                    colString += '<col min="' + (column.index) + '" max="' + (column.index) + '" width="' + '8.43' + '" customWidth="1" />';
                }
            }
            sheetString += (colString + '</cols>');
        }
        sheetString += ('<sheetData>');
        sheetBlob.append(sheetString);
        sheetString = '';
        if (sheet.rows !== undefined) {
            for (var _b = 0, _c = sheet.rows; _b < _c.length; _b++) {
                var row = _c[_b];
                var rowString = ('<row r="' + (row.index) + '" spans="' + row.spans + '" ');
                if (row.height !== undefined) {
                    rowString += ('ht="' + this.pixelsToRowHeight(row.height) + '" customHeight="1" ');
                }
                if (row.grouping !== undefined) {
                    if (row.grouping.isHidden) {
                        rowString += ('hidden="1" ');
                    }
                    if (row.grouping.outlineLevel !== undefined) {
                        rowString += ('outlineLevel="' + row.grouping.outlineLevel + '" ');
                    }
                    if (row.grouping.isCollapsed) {
                        rowString += ('collapsed="1" ');
                    }
                }
                rowString += ('>');
                for (var _d = 0, _e = row.cells; _d < _e.length; _d++) {
                    var cell = _e[_d];
                    if (cell !== undefined && (cell.value !== undefined || cell.cellStyle !== undefined)) {
                        rowString += ('<c r="' + cell.refName + '" ');
                        if (cell.saveType !== undefined) {
                            rowString += ('t="' + cell.saveType + '" ');
                        }
                        if (cell.styleIndex !== undefined) {
                            rowString += ('s="' + cell.styleIndex + '" ');
                        }
                        rowString += (' >');
                        if (cell.value !== undefined) {
                            rowString += ('<v>' + cell.value + '</v></c>');
                        }
                        else {
                            rowString += ('</c>');
                        }
                    }
                }
                rowString += ('</row>');
                sheetBlob.append(rowString);
            }
        }
        sheetString += ('</sheetData>');
        if (sheet.mergeCells.length > 0) {
            sheetString += ('<mergeCells count="' + sheet.mergeCells.length + '">');
            for (var _f = 0, _g = sheet.mergeCells; _f < _g.length; _f++) {
                var mCell = _g[_f];
                sheetString += ('<mergeCell ref="' + mCell.ref + '" />');
            }
            sheetString += ('</mergeCells>');
        }
        if (sheet.hyperLinks.length > 0) {
            sheetString += ('<hyperlinks>');
            for (var _h = 0, _j = sheet.hyperLinks; _h < _j.length; _h++) {
                var hLink = _j[_h];
                sheetString += ('<hyperlink ref="' + hLink.ref + '" r:id="rId' + hLink.rId + '" />');
            }
            sheetString += ('</hyperlinks>');
            this.addToArchive(this.saveSheetRelations(sheet), ('xl/worksheets/_rels/sheet' + sheet.index + '.xml.rels'));
        }
        sheetString += ('<pageMargins left="0.75" right="0.75" top="1" bottom="1" header="0.5" footer="0.5" /><headerFooter scaleWithDoc="1" alignWithMargins="0" differentFirst="0" differentOddEven="0" /></worksheet>');
        sheetBlob.append(sheetString);
        this.addToArchive(sheetBlob.getBlob(), 'xl/worksheets' + '/sheet' + (index + 1) + '.xml');
    };
    Workbook.prototype.pixelsToColumnWidth = function (pixels) {
        var dDigitWidth = 7;
        var val = (pixels > dDigitWidth + 5) ?
            Math.trunc((pixels - 5) / dDigitWidth * 100 + 0.5) / 100 :
            pixels / (dDigitWidth + 5);
        return (val > 1) ?
            ((val * dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0 :
            (val * (dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0;
    };
    Workbook.prototype.pixelsToRowHeight = function (pixels) {
        return (pixels * this.unitsProportions[5] / this.unitsProportions[6]);
    };
    Workbook.prototype.saveSheetRelations = function (sheet) {
        var relStr = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">';
        for (var _i = 0, _a = sheet.hyperLinks; _i < _a.length; _i++) {
            var hLink = _a[_i];
            relStr += '<Relationship Id="rId' + hLink.rId + '" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink" Target="' + hLink.target + '" TargetMode="External" />';
        }
        relStr += '</Relationships>';
        return relStr;
    };
    Workbook.prototype.saveFreezePanes = function (sheet) {
        var paneString = '<sheetViews><sheetView workbookViewId="0" ><pane state="frozen"' +
            ' topLeftCell="' + sheet.freezePanes.leftCell + '" ';
        if (sheet.freezePanes.row !== 0) {
            paneString += 'ySplit="' + sheet.freezePanes.row + '" ';
        }
        if (sheet.freezePanes.column !== 0) {
            paneString += 'xSplit="' + sheet.freezePanes.column + '" ';
        }
        paneString += '/></sheetView></sheetViews>';
        return paneString;
    };
    Workbook.prototype.saveSharedString = function () {
        var length = this.sharedString.length;
        if (length > 0) {
            var sstStart = '<?xml version="1.0" encoding="utf-8"?><sst uniqueCount="' + length + '" count="' + this.sharedStringCount + '" xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main">';
            var si = '';
            for (var i = 0; i < length; i++) {
                si += '<si><t>';
                si += this.sharedString[i];
                si += '</t></si>';
            }
            si += '</sst>';
            this.addToArchive(sstStart + si, 'xl/sharedStrings.xml');
        }
    };
    Workbook.prototype.saveStyles = function () {
        var styleTemp = '<?xml version="1.0" encoding="utf-8"?><styleSheet xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac" xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main">';
        styleTemp += this.saveNumberFormats();
        styleTemp += this.saveFonts();
        styleTemp += this.saveFills();
        styleTemp += this.saveBorders();
        styleTemp += this.saveCellStyleXfs();
        styleTemp += this.saveCellXfs();
        styleTemp += this.saveCellStyles();
        this.addToArchive(styleTemp + '</styleSheet>', 'xl/styles.xml');
    };
    Workbook.prototype.saveNumberFormats = function () {
        if (this.mNumFmt.size >= 1) {
            var numFmtStyle_1 = '<numFmts count="' + (this.mNumFmt.size) + '">';
            this.mNumFmt.forEach(function (value, key) {
                numFmtStyle_1 += '<numFmt numFmtId="' + value.numFmtId + '" formatCode="' + value.formatCode.replace(/"/g, '&quot;') + '" />';
            });
            return (numFmtStyle_1 += '</numFmts>');
        }
        else {
            return '';
        }
    };
    Workbook.prototype.saveFonts = function () {
        var fontStyle = '<fonts count="' + (this.mFonts.length) + '">';
        if (this.mFonts.length >= 1) {
            for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {
                var font = _a[_i];
                fontStyle += '<font>';
                if (font.b) {
                    fontStyle += '<b />';
                }
                if (font.i) {
                    fontStyle += '<i />';
                }
                if (font.u) {
                    fontStyle += '<u />';
                }
                fontStyle += '<sz val="' + this.pixelsToRowHeight(font.sz) + '" />';
                fontStyle += '<color rgb="' + font.color + '" />';
                fontStyle += '<name val="' + font.name + '" /></font>';
            }
        }
        return fontStyle + '</fonts>';
    };
    Workbook.prototype.saveFills = function () {
        var fillsStyle = '<fills count="' + (this.mFills.size + 2) + '"><fill><patternFill patternType="none"></patternFill></fill><fill><patternFill patternType="gray125"></patternFill></fill>';
        if (this.mFills.size >= 1) {
            this.mFills.forEach(function (value, key) {
                fillsStyle += '<fill><patternFill patternType="solid"><fgColor rgb="' + key + '" /><bgColor rgb="FFFFFFFF" /></patternFill></fill>';
            });
        }
        return fillsStyle + '</fills>';
    };
    Workbook.prototype.saveBorders = function () {
        var bordersStyle = '<borders count="' + (this.mBorders.length + 1) + '"><border><left /><right /><top /><bottom /><diagonal /></border>';
        if (this.mBorders.length >= 1) {
            for (var _i = 0, _a = this.mBorders; _i < _a.length; _i++) {
                var borders = _a[_i];
                if (this.isAllBorder(borders)) {
                    var color = borders.all.color.replace('#', '');
                    var lineStyle = borders.all.lineStyle;
                    bordersStyle += '<border><left style="' + lineStyle + '"><color rgb="FF' + color + '" /></left><right style="' + lineStyle + '"><color rgb="FF' + color + '" /></right><top style="' + lineStyle + '"><color rgb="FF' + color + '" /></top><bottom style="' + lineStyle + '"><color rgb="FF' + color + '" /></bottom></border>';
                }
                else {
                    bordersStyle += '<border><left style="' + borders.left.lineStyle + '"><color rgb="FF' + borders.left.color.replace('#', '') + '" /></left><right style="' + borders.right.lineStyle + '"><color rgb="FF' + borders.right.color.replace('#', '') + '" /></right><top style="' + borders.top.lineStyle + '"><color rgb="FF' + borders.top.color.replace('#', '') + '" /></top><bottom style="' + borders.bottom.lineStyle + '"><color rgb="FF' + borders.bottom.color.replace('#', '') + '" /></bottom></border>';
                }
            }
        }
        return bordersStyle + '</borders>';
    };
    Workbook.prototype.saveCellStyles = function () {
        var _this = this;
        var cellStyleString = '<cellStyles  count="' + (this.cellStyles.size) + '">';
        this.cellStyles.forEach(function (value, key) {
            cellStyleString += '<cellStyle name="' + key + '" xfId="' + _this.cellStyles.get(key).xfId + '"';
            if (key === 'Normal') {
                cellStyleString += ' builtinId="0"';
            }
            cellStyleString += ' />';
        });
        return cellStyleString += '</cellStyles>';
    };
    Workbook.prototype.saveCellStyleXfs = function () {
        var cellXfsStyle = '<cellStyleXfs count="' + (this.mCellStyleXfs.length + 1) + '"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" />';
        if (this.mCellStyleXfs.length >= 1) {
            for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {
                var cellStyleXf = _a[_i];
                cellXfsStyle += '<xf numFmtId="' + cellStyleXf.numFmtId + '" fontId="' + cellStyleXf.fontId + '" fillId="' + cellStyleXf.fillId + '" borderId="' + cellStyleXf.borderId + '" ';
                if (cellStyleXf.applyAlignment === 1) {
                    cellXfsStyle += 'applyAlignment="1"><alignment ';
                    if (cellStyleXf.alignment.horizontal !== undefined) {
                        cellXfsStyle += 'horizontal="' + cellStyleXf.alignment.horizontal + '" ';
                    }
                    if (cellStyleXf.alignment.vertical !== undefined) {
                        cellXfsStyle += 'vertical="' + cellStyleXf.alignment.vertical + '" ';
                    }
                    cellXfsStyle += 'wrapText="' + cellStyleXf.alignment.wrapText + '" /></xf>';
                }
                else {
                    cellXfsStyle += ' />';
                }
            }
        }
        return cellXfsStyle + '</cellStyleXfs>';
    };
    Workbook.prototype.saveCellXfs = function () {
        var cellXfsStyle = '<cellXfs count="' + (this.mCellXfs.length + 1) + '"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" xfId="0" />';
        if (this.mCellXfs.length >= 1) {
            for (var _i = 0, _a = this.mCellXfs; _i < _a.length; _i++) {
                var cellXf = _a[_i];
                cellXfsStyle += '<xf numFmtId="' + cellXf.numFmtId + '" fontId="' + cellXf.fontId + '" fillId="' + cellXf.fillId + '" borderId="' + cellXf.borderId + '" xfId="' + cellXf.xfId + '" ';
                if (cellXf.applyAlignment === 1) {
                    cellXfsStyle += 'applyAlignment="1"><alignment ';
                    if (cellXf.alignment.horizontal !== undefined) {
                        cellXfsStyle += 'horizontal="' + cellXf.alignment.horizontal + '" ';
                    }
                    if (cellXf.alignment.vertical !== undefined) {
                        cellXfsStyle += 'vertical="' + cellXf.alignment.vertical + '" ';
                    }
                    cellXfsStyle += 'wrapText="' + cellXf.alignment.wrapText + '" /></xf>';
                }
                else {
                    cellXfsStyle += ' />';
                }
            }
        }
        return cellXfsStyle + '</cellXfs>';
    };
    Workbook.prototype.saveApp = function (builtInProperties) {
        var appString = '<?xml version="1.0" encoding="utf-8" standalone="yes"?><Properties xmlns="http://schemas.openxmlformats.org/officeDocument/2006/extended-properties"><Application>Essential XlsIO</Application>';
        if (builtInProperties !== undefined) {
            if (builtInProperties.manager !== undefined) {
                appString += '<Manager>' + builtInProperties.manager + '</Manager>';
            }
            if (builtInProperties.company !== undefined) {
                appString += '<Company>' + builtInProperties.company + '</Company>';
            }
        }
        this.addToArchive((appString + '</Properties>'), 'docProps/app.xml');
    };
    Workbook.prototype.saveCore = function (builtInProperties) {
        var createdDate = new Date();
        var coreString = '<?xml version="1.0" encoding="utf-8" standalone="yes"?><cp:coreProperties xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:dcmitype="http://purl.org/dc/dcmitype/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cp="http://schemas.openxmlformats.org/package/2006/metadata/core-properties">';
        if (this.builtInProperties !== undefined) {
            if (builtInProperties.author !== undefined) {
                coreString += '<dc:creator>' + builtInProperties.author + '</dc:creator>';
            }
            if (builtInProperties.subject !== undefined) {
                coreString += '<dc:subject>' + builtInProperties.subject + '</dc:subject>';
            }
            if (builtInProperties.category !== undefined) {
                coreString += '<cp:category>' + builtInProperties.category + '</cp:category>';
            }
            if (builtInProperties.comments !== undefined) {
                coreString += '<dc:description>' + builtInProperties.comments + '</dc:description>';
            }
            if (builtInProperties.title !== undefined) {
                coreString += '<dc:title>' + builtInProperties.title + '</dc:title>';
            }
            if (builtInProperties.tags !== undefined) {
                coreString += '<cp:keywords>' + builtInProperties.tags + '</cp:keywords>';
            }
            if (builtInProperties.status !== undefined) {
                coreString += '<cp:contentStatus>' + builtInProperties.status + '</cp:contentStatus>';
            }
            if (builtInProperties.createdDate !== undefined) {
                coreString += '<dcterms:created xsi:type="dcterms:W3CDTF">' + builtInProperties.createdDate.toISOString() + '</dcterms:created>';
            }
            else {
                coreString += '<dcterms:created xsi:type="dcterms:W3CDTF">' + createdDate.toISOString() + '</dcterms:created>';
            }
            if (builtInProperties.modifiedDate !== undefined) {
                coreString += '<dcterms:modified xsi:type="dcterms:W3CDTF">' + builtInProperties.modifiedDate.toISOString() + '</dcterms:modified>';
            }
            else {
                coreString += '<dcterms:modified xsi:type="dcterms:W3CDTF">' + createdDate.toISOString() + '</dcterms:modified>';
            }
        }
        else {
            coreString += '<dcterms:created xsi:type="dcterms:W3CDTF">' + createdDate.toISOString() + '</dcterms:created>';
            coreString += '<dcterms:modified xsi:type="dcterms:W3CDTF">' + createdDate.toISOString() + '</dcterms:modified>';
        }
        coreString += '</cp:coreProperties>';
        this.addToArchive(coreString, 'docProps/core.xml');
    };
    Workbook.prototype.saveTopLevelRelation = function () {
        var topRelation = '<?xml version="1.0" encoding="utf-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml" /><Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties" Target="docProps/app.xml" /><Relationship Id="rId3" Type="http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties" Target="docProps/core.xml" /></Relationships>';
        this.addToArchive(topRelation, '_rels/.rels');
    };
    Workbook.prototype.saveWorkbookRelation = function () {
        var wbRelation = '<?xml version="1.0" encoding="utf-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">';
        var length = this.worksheets.length;
        var count = 0;
        for (var i = 0; i < length; i++, count++) {
            wbRelation += '<Relationship Id="rId' + (i + 1).toString() + '" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet' + (i + 1).toString() + '.xml" />';
        }
        wbRelation += '<Relationship Id="rId' + (++count).toString() + '" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml" />';
        if (this.sharedStringCount > 0) {
            wbRelation += '<Relationship Id="rId' + (++count).toString() + '" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings" Target="sharedStrings.xml" />';
        }
        this.addToArchive((wbRelation + '</Relationships>'), 'xl/_rels/workbook.xml.rels');
    };
    Workbook.prototype.saveContentType = function () {
        var contentTypeString = '<?xml version="1.0" encoding="utf-8" standalone="yes"?><Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types"><Default Extension="xml" ContentType="application/xml" /><Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" /><Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" /><Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" /><Override PartName="/docProps/app.xml" ContentType="application/vnd.openxmlformats-officedocument.extended-properties+xml" /><Override PartName="/docProps/core.xml" ContentType="application/vnd.openxmlformats-package.core-properties+xml" />';
        var sheetsOverride = '';
        var length = this.worksheets.length;
        for (var i = 0; i < length; i++) {
            sheetsOverride += '<Override PartName="/xl/worksheets/sheet' + (i + 1).toString() + '.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" />';
        }
        if (this.sharedStringCount > 0) {
            contentTypeString += '<Override PartName="/xl/sharedStrings.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml" />';
        }
        this.addToArchive((contentTypeString + sheetsOverride + '</Types>'), '[Content_Types].xml');
    };
    Workbook.prototype.addToArchive = function (xmlString, itemName) {
        if (typeof (xmlString) === 'string') {
            var blob = new Blob([xmlString], { type: 'text/plain' });
            var archiveItem = new __WEBPACK_IMPORTED_MODULE_6__syncfusion_ej2_compression__["c" /* ZipArchiveItem */](blob, itemName);
            this.mArchive.addItem(archiveItem);
        }
        else {
            var archiveItem = new __WEBPACK_IMPORTED_MODULE_6__syncfusion_ej2_compression__["c" /* ZipArchiveItem */](xmlString, itemName);
            this.mArchive.addItem(archiveItem);
        }
    };
    Workbook.prototype.processMergeCells = function (cell, rowIndex, mergeCells) {
        if (cell.rowSpan !== 0 || cell.colSpan !== 0) {
            var mCell = new __WEBPACK_IMPORTED_MODULE_1__worksheet__["e" /* MergeCell */]();
            mCell.x = cell.index;
            mCell.width = cell.colSpan;
            mCell.y = rowIndex;
            mCell.height = cell.rowSpan;
            var startCell = this.getCellName(mCell.y, mCell.x);
            var endCell = this.getCellName(rowIndex + mCell.height, cell.index + mCell.width);
            mCell.ref = startCell + ':' + endCell;
            mergeCells.add(mCell);
        }
        return mergeCells;
    };
    Workbook.prototype.dateToTicks = function (year, month, day) {
        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;
        var daysToMonth365 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];
        var daysToMonth366 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];
        if (year >= 1 && year <= 9999 && month >= 1 && month <= 12) {
            var days = this.isLeapYear(year) ? daysToMonth366 : daysToMonth365;
            var y = year - 1;
            var n = y * 365 + ((y / 4) | 0) - ((y / 100) | 0) + ((y / 400) | 0) + days[month - 1] + day - 1;
            return n * ticksPerDay;
        }
        throw new Error('Not a valid date');
    };
    Workbook.prototype.timeToTicks = function (hour, minute, second) {
        if (hour >= 0 && hour < 24 && minute >= 0 && minute < 60 && second >= 0 && second < 60) {
            var totalSeconds = hour * 3600 + minute * 60 + second;
            return totalSeconds * 10000 * 1000;
        }
        throw new Error('Not valid time');
    };
    Workbook.prototype.isLeapYear = function (year) {
        return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
    };
    Workbook.prototype.toOADate = function (date) {
        var ticks = 0;
        ticks = this.dateToTicks(date.getFullYear(), (date.getMonth() + 1), date.getDate()) + this.timeToTicks(date.getHours(), date.getMinutes(), date.getSeconds());
        if (ticks === 0) {
            return 0.0;
        }
        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;
        var daysTo1899 = (((365 * 4 + 1) * 25 - 1) * 4 + 1) * 4 + ((365 * 4 + 1) * 25 - 1) * 3 - 367;
        var doubleDateOffset = daysTo1899 * ticksPerDay;
        var oaDateMinAsTicks = (((365 * 4 + 1) * 25 - 1) - 365) * ticksPerDay;
        if (ticks < oaDateMinAsTicks) {
            throw new Error('Arg_OleAutDateInvalid');
        }
        var millisPerDay = 1000 * 60 * 60 * 24;
        return ((ticks - doubleDateOffset) / 10000) / millisPerDay;
    };
    return Workbook;
}());

var BuiltInProperties = (function () {
    function BuiltInProperties() {
    }
    return BuiltInProperties;
}());



/***/ }),
/* 219 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StreamWriter; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__encoding__ = __webpack_require__(139);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__save__ = __webpack_require__(140);


var StreamWriter = (function () {
    function StreamWriter(encoding) {
        this.bufferBlob = new Blob(['']);
        this.bufferText = '';
        this.init(encoding);
        __WEBPACK_IMPORTED_MODULE_1__save__["a" /* Save */].isMicrosoftBrowser = !(!navigator.msSaveBlob);
    }
    Object.defineProperty(StreamWriter.prototype, "buffer", {
        get: function () {
            this.flush();
            return this.bufferBlob;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StreamWriter.prototype, "encoding", {
        get: function () {
            return this.enc;
        },
        enumerable: true,
        configurable: true
    });
    StreamWriter.prototype.init = function (encoding) {
        if (encoding === null || encoding === undefined) {
            this.enc = new __WEBPACK_IMPORTED_MODULE_0__encoding__["a" /* Encoding */](false);
            this.enc.type = 'Utf8';
        }
        else {
            this.enc = encoding;
            this.setBomByte();
        }
    };
    StreamWriter.prototype.setBomByte = function () {
        if (this.encoding.includeBom) {
            switch (this.encoding.type) {
                case 'Unicode':
                    var arrayUnicode = new ArrayBuffer(2);
                    var uint8 = new Uint8Array(arrayUnicode);
                    uint8[0] = 255;
                    uint8[1] = 254;
                    this.bufferBlob = new Blob([arrayUnicode]);
                    break;
                case 'Utf8':
                    var arrayUtf8 = new ArrayBuffer(3);
                    var utf8 = new Uint8Array(arrayUtf8);
                    utf8[0] = 239;
                    utf8[1] = 187;
                    utf8[2] = 191;
                    this.bufferBlob = new Blob([arrayUtf8]);
                    break;
                default:
                    this.bufferBlob = new Blob(['']);
                    break;
            }
        }
    };
    StreamWriter.prototype.save = function (fileName) {
        if (this.bufferText !== '') {
            this.flush();
        }
        __WEBPACK_IMPORTED_MODULE_1__save__["a" /* Save */].save(fileName, this.buffer);
    };
    StreamWriter.prototype.write = function (value) {
        if (this.encoding === undefined) {
            throw new Error('Object Disposed Exception: current writer is disposed');
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__encoding__["b" /* validateNullOrUndefined */])(value, 'string');
        this.bufferText += value;
        if (this.bufferText.length >= 10240) {
            this.flush();
        }
    };
    StreamWriter.prototype.flush = function () {
        if (this.bufferText === undefined || this.bufferText === null || this.bufferText.length === 0) {
            return;
        }
        var bufferArray = this.encoding.getBytes(this.bufferText, 0, this.bufferText.length);
        this.bufferText = '';
        this.bufferBlob = new Blob([this.bufferBlob, bufferArray]);
    };
    StreamWriter.prototype.writeLine = function (value) {
        if (this.encoding === undefined) {
            throw new Error('Object Disposed Exception: current writer is disposed');
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__encoding__["b" /* validateNullOrUndefined */])(value, 'string');
        this.bufferText = this.bufferText + value + '\r\n';
        if (this.bufferText.length >= 10240) {
            this.flush();
        }
    };
    StreamWriter.prototype.destroy = function () {
        this.bufferBlob = undefined;
        this.bufferText = undefined;
        if (this.enc instanceof __WEBPACK_IMPORTED_MODULE_0__encoding__["a" /* Encoding */]) {
            this.enc.destroy();
        }
        this.enc = undefined;
    };
    return StreamWriter;
}());



/***/ }),
/* 220 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ErrorOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return FormValidator; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var VALIDATE_EMAIL = new RegExp('^[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,5}' +
    '|[.]{1}[a-zA-Z]{2,4}[.]{1}[a-zA-Z]{2,4})$');
var VALIDATE_URL = new RegExp('^((ftp|http|https):\/\/)?www\.([A-z]{2,})\.([A-z]{2,})$');
var VALIDATE_DATE_ISO = new RegExp('^([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$');
var VALIDATE_DIGITS = new RegExp('^[0-9]*$');
var VALIDATE_PHONE = new RegExp('^[+]?[0-9]{9,13}$');
var VALIDATE_CREDITCARD = new RegExp('^\\d{13,16}$');
var ErrorOption;
(function (ErrorOption) {
    ErrorOption[ErrorOption["Message"] = 0] = "Message";
    ErrorOption[ErrorOption["Label"] = 1] = "Label";
})(ErrorOption || (ErrorOption = {}));
var FormValidator = FormValidator_1 = (function (_super) {
    __extends(FormValidator, _super);
    function FormValidator(element, options) {
        var _this = _super.call(this, options, element) || this;
        _this.validated = [];
        _this.errorRules = [];
        _this.allowSubmit = false;
        _this.required = 'required';
        _this.infoElement = null;
        _this.inputElement = null;
        _this.selectQuery = 'input:not([type=reset]):not([type=button]), select, textarea';
        _this.defaultMessages = {
            required: 'This field is required.',
            email: 'Please enter a valid email address.',
            url: 'Please enter a valid URL.',
            date: 'Please enter a valid date.',
            dateIso: 'Please enter a valid date ( ISO ).',
            creditcard: 'Please enter valid card number',
            number: 'Please enter a valid number.',
            digits: 'Please enter only digits.',
            maxLength: 'Please enter no more than {0} characters.',
            minLength: 'Please enter at least {0} characters.',
            rangeLength: 'Please enter a value between {0} and {1} characters long.',
            range: 'Please enter a value between {0} and {1}.',
            max: 'Please enter a value less than or equal to {0}.',
            min: 'Please enter a value greater than or equal to {0}.',
            regex: 'Please enter a correct value.',
            tel: 'Please enter a valid phone number.',
            pattern: 'Please enter a correct pattern value.',
            equalTo: 'Please enter the valid match text',
        };
        element = typeof element === 'string' ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["select"])(element, document) : element;
        if (_this.element != null) {
            _this.element.setAttribute('novalidate', '');
            _this.inputElements = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])(_this.selectQuery, _this.element);
            _this.createHTML5Rules();
            _this.wireEvents();
        }
        else {
            return undefined;
        }
        return _this;
    }
    FormValidator.prototype.addRules = function (name, rules) {
        if (this.rules.hasOwnProperty(name)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["extend"])(this.rules[name], rules, {});
        }
        else {
            this.rules[name] = rules;
        }
    };
    FormValidator.prototype.removeRules = function (name, rules) {
        if (!name && !rules) {
            this.rules = {};
        }
        else if (this.rules[name] && !rules) {
            delete this.rules[name];
        }
        else if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.rules[name] && rules)) {
            for (var i = 0; i < rules.length; i++) {
                delete this.rules[name][rules[i]];
            }
        }
        else {
            return;
        }
    };
    FormValidator.prototype.validate = function (selected) {
        var rules = Object.keys(this.rules);
        if (selected && rules.length) {
            this.validateRules(selected);
            return rules.indexOf(selected) !== -1 && this.errorRules.filter(function (data) {
                return data.name === selected;
            }).length === 0;
        }
        else {
            for (var _i = 0, rules_1 = rules; _i < rules_1.length; _i++) {
                var name_1 = rules_1[_i];
                this.validateRules(name_1);
            }
            return this.errorRules.length === 0;
        }
    };
    FormValidator.prototype.reset = function () {
        this.errorRules = [];
        this.validated = [];
        this.element.reset();
        var elements = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])(this.selectQuery, this.element);
        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
            var element = elements_1[_i];
            var input = element;
            input.removeAttribute('aria-invalid');
            input.classList.remove(this.errorClass);
            if (input.name.length > 0) {
                this.getInputElement(input.name);
                this.getErrorElement(input.name);
                this.hideMessage(input.name);
            }
            input.classList.remove(this.validClass);
        }
    };
    FormValidator.prototype.getInputElement = function (name) {
        this.inputElement = (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["select"])('[name=' + name + ']', this.element));
        return this.inputElement;
    };
    FormValidator.prototype.destroy = function () {
        this.reset();
        this.unwireEvents();
        this.rules = {};
        var elements = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('.' + this.errorClass + ', .' + this.validClass, this.element);
        for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {
            var element = elements_2[_i];
            element.remove();
        }
        _super.prototype.destroy.call(this);
    };
    FormValidator.prototype.onPropertyChanged = function (newProp, oldProp) {
    };
    ;
    FormValidator.prototype.getModuleName = function () {
        return 'formValidator';
    };
    FormValidator.prototype.createHTML5Rules = function () {
        var defRules = ['required', 'regex', 'rangeLength', 'maxLength', 'minLength', 'dateIso', 'digits', 'pattern',
            'data-val-required', 'type', 'data-validation', 'min', 'max', 'range', 'equalTo', 'data-val-minlength-min',
            'data-val-equalto-other', 'data-val-maxlength-max', 'data-val-range-min', 'data-val-regex-pattern', 'data-val-length-max',
            'data-val-creditcard', 'data-val-phone'];
        var acceptedTypes = ['email', 'url', 'date', 'number', 'tel'];
        for (var _i = 0, _a = (this.inputElements); _i < _a.length; _i++) {
            var input = _a[_i];
            var allRule = {};
            for (var _b = 0, defRules_1 = defRules; _b < defRules_1.length; _b++) {
                var rule = defRules_1[_b];
                if (input.getAttribute(rule) !== null) {
                    switch (rule) {
                        case 'required':
                            this.defRule(input, allRule, rule, input.required);
                            break;
                        case 'data-validation':
                            rule = input.getAttribute(rule);
                            this.defRule(input, allRule, rule, true);
                            break;
                        case 'type':
                            if (acceptedTypes.indexOf(input.type) !== -1) {
                                this.defRule(input, allRule, input.type, true);
                            }
                            break;
                        case 'rangeLength':
                        case 'range':
                            this.defRule(input, allRule, rule, JSON.parse(input.getAttribute(rule)));
                            break;
                        case 'equalTo':
                            var id = input.getAttribute(rule);
                            this.defRule(input, allRule, rule, id);
                            break;
                        default:
                            if (input.getAttribute('data-val') === 'true') {
                                this.annotationRule(input, allRule, rule, input.getAttribute(rule));
                            }
                            else {
                                this.defRule(input, allRule, rule, input.getAttribute(rule));
                            }
                    }
                }
            }
            if (Object.keys(allRule).length !== 0) {
                this.addRules(input.name, allRule);
            }
        }
    };
    FormValidator.prototype.annotationRule = function (input, ruleCon, ruleName, value) {
        var annotationRule = ruleName.split('-');
        var rulesList = ['required', 'creditcard', 'phone', 'maxlength', 'minlength', 'range', 'regex', 'equalto'];
        var ruleFirstName = annotationRule[annotationRule.length - 1];
        var ruleSecondName = annotationRule[annotationRule.length - 2];
        if (rulesList.indexOf(ruleFirstName) !== -1) {
            switch (ruleFirstName) {
                case 'required':
                    this.defRule(input, ruleCon, 'required', value);
                    break;
                case 'creditcard':
                    this.defRule(input, ruleCon, 'creditcard', value);
                    break;
                case 'phone':
                    this.defRule(input, ruleCon, 'tel', value);
                    break;
            }
        }
        else if (rulesList.indexOf(ruleSecondName) !== -1) {
            switch (ruleSecondName) {
                case 'maxlength':
                    this.defRule(input, ruleCon, 'maxLength', value);
                    break;
                case 'minlength':
                    this.defRule(input, ruleCon, 'minLength', value);
                    break;
                case 'range':
                    var minvalue = input.getAttribute('data-val-range-min');
                    var maxvalue = input.getAttribute('data-val-range-max');
                    this.defRule(input, ruleCon, 'range', [minvalue, maxvalue]);
                    break;
                case 'equalto':
                    var id = input.getAttribute(ruleName).split('.');
                    this.defRule(input, ruleCon, 'equalTo', id[id.length - 1]);
                    break;
                case 'regex':
                    this.defRule(input, ruleCon, 'regex', value);
                    break;
            }
        }
    };
    FormValidator.prototype.defRule = function (input, ruleCon, ruleName, value) {
        var message = input.getAttribute('data-' + ruleName + '-message');
        var annotationMessage = input.getAttribute('data-val-' + ruleName);
        if (message) {
            value = [value, message];
        }
        else if (annotationMessage) {
            value = [value, annotationMessage];
        }
        ruleCon[ruleName] = value;
    };
    FormValidator.prototype.wireEvents = function () {
        for (var _i = 0, _a = (this.inputElements); _i < _a.length; _i++) {
            var input = _a[_i];
            if (FormValidator_1.isCheckable(input)) {
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(input, 'click', this.clickHandler, this);
            }
            else if (input.tagName === 'SELECT') {
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(input, 'change', this.changeHandler, this);
            }
            else {
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(input, 'focusout', this.focusOutHandler, this);
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(input, 'keyup', this.keyUpHandler, this);
            }
        }
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'submit', this.submitHandler, this);
    };
    FormValidator.prototype.unwireEvents = function () {
        for (var _i = 0, _a = (this.inputElements); _i < _a.length; _i++) {
            var input = _a[_i];
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].clearEvents(input);
        }
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'submit', this.submitHandler);
    };
    FormValidator.prototype.focusOutHandler = function (e) {
        this.trigger('focusout', e);
        var element = e.target;
        if (this.rules[element.name]) {
            if (this.rules[element.name][this.required] || element.value.length > 0) {
                this.validate(element.name);
            }
            else if (this.validated.indexOf(element.name) === -1) {
                this.validated.push(element.name);
            }
        }
    };
    FormValidator.prototype.keyUpHandler = function (e) {
        this.trigger('keyup', e);
        var element = e.target;
        var excludeKeys = [16, 17, 18, 20, 35, 36, 37, 38, 39, 40, 45, 144, 225];
        if (e.which === 9 && (!this.rules[element.name] || (this.rules[element.name] && !this.rules[element.name][this.required]))) {
            return;
        }
        if (this.validated.indexOf(element.name) !== -1 && this.rules[element.name] && excludeKeys.indexOf(e.which) === -1) {
            this.validate(element.name);
        }
    };
    FormValidator.prototype.clickHandler = function (e) {
        this.trigger('click', e);
        var element = e.target;
        if (element.type !== 'submit') {
            this.validate(element.name);
        }
        else if (element.getAttribute('formnovalidate') !== null) {
            this.allowSubmit = true;
        }
    };
    FormValidator.prototype.changeHandler = function (e) {
        this.trigger('change', e);
        var element = e.target;
        this.validate(element.name);
    };
    FormValidator.prototype.submitHandler = function (e) {
        this.trigger('submit', e);
        if (!this.allowSubmit && !this.validate()) {
            e.preventDefault();
        }
        else {
            this.allowSubmit = false;
        }
    };
    FormValidator.prototype.validateRules = function (name) {
        if (!this.rules[name]) {
            return;
        }
        var rules = Object.keys(this.rules[name]);
        this.getInputElement(name);
        this.getErrorElement(name);
        for (var _i = 0, rules_2 = rules; _i < rules_2.length; _i++) {
            var rule = rules_2[_i];
            var errorMessage = this.getErrorMessage(this.rules[name][rule], rule);
            var errorRule = { name: name, message: errorMessage };
            var eventArgs = {
                inputName: name,
                element: this.inputElement,
                message: errorMessage
            };
            if (!this.isValid(name, rule) && !this.inputElement.classList.contains(this.ignore)) {
                this.removeErrorRules(name);
                this.errorRules.push(errorRule);
                this.inputElement.setAttribute('aria-invalid', 'true');
                this.inputElement.setAttribute('aria-describedby', this.inputElement.id + '-info');
                if (!this.infoElement) {
                    this.createErrorElement(name, errorRule.message, this.inputElement);
                }
                else {
                    this.showMessage(errorRule);
                }
                eventArgs.errorElement = this.infoElement;
                eventArgs.status = 'failure';
                this.inputElement.classList.add(this.errorClass);
                this.inputElement.classList.remove(this.validClass);
                this.trigger('validationComplete', eventArgs);
                if (rule === 'required') {
                    this.inputElement.setAttribute('aria-required', 'true');
                }
                break;
            }
            else {
                this.hideMessage(name);
                eventArgs.status = 'success';
                this.trigger('validationComplete', eventArgs);
            }
        }
    };
    FormValidator.prototype.isValid = function (name, rule) {
        var params = this.rules[name][rule];
        var param = (params instanceof Array && typeof params[1] === 'string') ? params[0] : params;
        var currentRule = this.rules[name][rule];
        var args = { value: this.inputElement.value, param: param, element: this.inputElement, formElement: this.element };
        this.trigger('validationBegin', args);
        if (currentRule && typeof currentRule[0] === 'function') {
            var fn = currentRule[0];
            return fn.call(this, { element: this.inputElement, value: this.inputElement.value });
        }
        else if (FormValidator_1.isCheckable(this.inputElement)) {
            if (rule !== 'required') {
                return true;
            }
            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('input[name=' + name + ']:checked', this.element).length > 0;
        }
        else {
            return FormValidator_1.checkValidator[rule](args);
        }
    };
    FormValidator.prototype.getErrorMessage = function (ruleValue, rule) {
        var message = (ruleValue instanceof Array && typeof ruleValue[1] === 'string') ? ruleValue[1] : this.defaultMessages[rule];
        var formats = message.match(/{(\d)}/g);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(formats)) {
            for (var i = 0; i < formats.length; i++) {
                var value = ruleValue instanceof Array ? ruleValue[i] : ruleValue;
                message = message.replace(formats[i], value);
            }
        }
        return message;
    };
    FormValidator.prototype.createErrorElement = function (name, message, input) {
        var errorElement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])(this.errorElement, {
            className: this.errorClass,
            innerHTML: message,
            attrs: { for: name }
        });
        if (this.errorOption === ErrorOption.Message) {
            errorElement.classList.remove(this.errorClass);
            errorElement.classList.add('e-message');
            errorElement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])(this.errorContainer, { className: this.errorClass, innerHTML: errorElement.outerHTML });
        }
        errorElement.id = this.inputElement.name + '-info';
        if (this.element.querySelector('[data-valmsg-for="' + input.id + '"]')) {
            this.element.querySelector('[data-valmsg-for="' + input.id + '"]').appendChild(errorElement);
        }
        else if (input.hasAttribute('data-msg-containerid') === true) {
            var containerId = input.getAttribute('data-msg-containerid');
            var divElement = input.parentElement.querySelector('#' + containerId);
            divElement.appendChild(errorElement);
        }
        else if (this.customPlacement != null) {
            this.customPlacement.call(this, this.inputElement, errorElement);
        }
        else {
            this.inputElement.parentNode.insertBefore(errorElement, this.inputElement.nextSibling);
        }
        errorElement.style.display = 'block';
        this.getErrorElement(name);
        this.validated.push(name);
        this.checkRequired(name);
    };
    FormValidator.prototype.getErrorElement = function (name) {
        this.infoElement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["select"])(this.errorElement + '.' + this.errorClass, this.inputElement.parentElement);
        if (!this.infoElement) {
            this.infoElement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["select"])(this.errorElement + '.' + this.errorClass + '[for="' + name + '"]');
        }
        return this.infoElement;
    };
    FormValidator.prototype.removeErrorRules = function (name) {
        for (var i = 0; i < this.errorRules.length; i++) {
            var rule = this.errorRules[i];
            if (rule.name === name) {
                this.errorRules.splice(i, 1);
            }
        }
    };
    FormValidator.prototype.showMessage = function (errorRule) {
        this.infoElement.style.display = 'block';
        this.infoElement.innerHTML = errorRule.message;
        this.checkRequired(errorRule.name);
    };
    FormValidator.prototype.hideMessage = function (name) {
        if (this.infoElement) {
            this.infoElement.style.display = 'none';
            this.removeErrorRules(name);
            this.inputElement.classList.add(this.validClass);
            this.inputElement.classList.remove(this.errorClass);
            this.inputElement.setAttribute('aria-invalid', 'false');
        }
    };
    FormValidator.prototype.checkRequired = function (name) {
        if (!this.rules[name][this.required] && !this.inputElement.value.length) {
            this.infoElement.innerHTML = this.inputElement.value;
            this.infoElement.setAttribute('aria-invalid', 'false');
            this.hideMessage(name);
        }
    };
    FormValidator.isCheckable = function (input) {
        var inputType = input.getAttribute('type');
        return inputType && (inputType === 'checkbox' || inputType === 'radio' || inputType === 'submit');
    };
    return FormValidator;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Base"]));
FormValidator.checkValidator = {
    required: function (option) {
        return option.value.length > 0;
    },
    email: function (option) {
        return VALIDATE_EMAIL.test(option.value);
    },
    url: function (option) {
        return VALIDATE_URL.test(option.value);
    },
    dateIso: function (option) {
        return VALIDATE_DATE_ISO.test(option.value);
    },
    tel: function (option) {
        return VALIDATE_PHONE.test(option.value);
    },
    creditcard: function (option) {
        return VALIDATE_CREDITCARD.test(option.value);
    },
    number: function (option) {
        return !isNaN(Number(option.value)) && option.value.indexOf(' ') === -1;
    },
    digits: function (option) {
        return VALIDATE_DIGITS.test(option.value);
    },
    maxLength: function (option) {
        return option.value.length <= option.param;
    },
    minLength: function (option) {
        return option.value.length >= option.param;
    },
    rangeLength: function (option) {
        var param = option.param;
        return option.value.length >= param[0] && option.value.length <= param[1];
    },
    range: function (option) {
        var param = option.param;
        return !isNaN(Number(option.value)) && Number(option.value) >= param[0] && Number(option.value) <= param[1];
    },
    date: function (option) {
        return !isNaN(new Date(option.value).getTime());
    },
    max: function (option) {
        if (!isNaN(Number(option.value))) {
            return +option.value <= option.param;
        }
        return new Date(option.value).getTime() <= new Date(JSON.parse(JSON.stringify(option.param))).getTime();
    },
    min: function (option) {
        if (!isNaN(Number(option.value))) {
            return +option.value >= option.param;
        }
        return new Date(option.value).getTime() >= new Date(JSON.parse(JSON.stringify(option.param))).getTime();
    },
    regex: function (option) {
        return new RegExp(option.param).test(option.value);
    },
    equalTo: function (option) {
        var compareTo = option.formElement.querySelector('#' + option.param);
        option.param = compareTo.value;
        return option.param === option.value;
    },
};
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('e-hidden')
], FormValidator.prototype, "ignore", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])({})
], FormValidator.prototype, "rules", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('e-error')
], FormValidator.prototype, "errorClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('e-valid')
], FormValidator.prototype, "validClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('label')
], FormValidator.prototype, "errorElement", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('div')
], FormValidator.prototype, "errorContainer", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(ErrorOption.Label)
], FormValidator.prototype, "errorOption", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], FormValidator.prototype, "focusout", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], FormValidator.prototype, "keyup", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], FormValidator.prototype, "click", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], FormValidator.prototype, "change", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], FormValidator.prototype, "submit", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], FormValidator.prototype, "validationBegin", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], FormValidator.prototype, "validationComplete", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], FormValidator.prototype, "customPlacement", void 0);
FormValidator = FormValidator_1 = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], FormValidator);

var FormValidator_1;


/***/ }),
/* 221 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__form_validator__ = __webpack_require__(220);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__form_validator__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__form_validator__["b"]; });



/***/ }),
/* 222 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__input__ = __webpack_require__(61);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__input__["a"]; });



/***/ }),
/* 223 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return regularExpressions; });
/* harmony export (immutable) */ __webpack_exports__["b"] = createMask;
/* harmony export (immutable) */ __webpack_exports__["c"] = applyMask;
/* harmony export (immutable) */ __webpack_exports__["d"] = wireEvents;
/* harmony export (immutable) */ __webpack_exports__["e"] = unwireEvents;
/* harmony export (immutable) */ __webpack_exports__["f"] = unstrippedValue;
/* harmony export (immutable) */ __webpack_exports__["g"] = strippedValue;
/* harmony export (immutable) */ __webpack_exports__["h"] = maskInputFocusHandler;
/* harmony export (immutable) */ __webpack_exports__["i"] = maskInputBlurHandler;
/* harmony export (immutable) */ __webpack_exports__["j"] = maskInputDropHandler;
/* harmony export (immutable) */ __webpack_exports__["k"] = mobileRemoveFunction;
/* harmony export (immutable) */ __webpack_exports__["l"] = setMaskValue;
/* harmony export (immutable) */ __webpack_exports__["m"] = setElementValue;
/* harmony export (immutable) */ __webpack_exports__["n"] = maskInput;
/* harmony export (immutable) */ __webpack_exports__["o"] = getVal;
/* harmony export (immutable) */ __webpack_exports__["p"] = getMaskedVal;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return MaskUndo; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__input_input__ = __webpack_require__(61);


var ERROR = 'e-error';
var INPUTGROUP = 'e-input-group';
var FLOATINPUT = 'e-float-input';
var UTILMASK = 'e-utility-mask';
var TOPLABEL = 'e-label-top';
var BOTTOMLABEL = 'e-label-bottom';
var regularExpressions = {
    '0': '[0-9]',
    '9': '[0-9 ]',
    '#': '[0-9 +-]',
    'L': '[A-Za-z]',
    '?': '[A-Za-z ]',
    '&': '[^\x7f ]+',
    'C': '[^\x7f]+',
    'A': '[A-Za-z0-9]',
    'a': '[A-Za-z0-9 ]',
};
function createMask() {
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { 'role': 'textbox', 'autocomplete': 'off', 'autocorrect': 'off', 'autocapitalize': 'off',
        'spellcheck': 'false', 'aria-live': 'assertive', 'aria-valuenow': '' });
    if (this.mask) {
        var splitMask = this.mask.split(']');
        for (var i = 0; i < splitMask.length; i++) {
            if (splitMask[i][splitMask[i].length - 1] === '\\') {
                splitMask[i] = splitMask[i] + ']';
                var splitInnerMask = splitMask[i].split('[');
                for (var j = 0; j < splitInnerMask.length; j++) {
                    if (splitInnerMask[j][splitInnerMask[j].length - 1] === '\\') {
                        splitInnerMask[j] = splitInnerMask[j] + '[';
                    }
                    pushIntoRegExpCollec.call(this, splitInnerMask[j]);
                }
            }
            else {
                var splitInnerMask = splitMask[i].split('[');
                if (splitInnerMask.length > 1) {
                    var chkSpace = false;
                    for (var j = 0; j < splitInnerMask.length; j++) {
                        if (splitInnerMask[j] === '\\') {
                            this.customRegExpCollec.push('[');
                            this.hiddenMask += splitInnerMask[j] + '[';
                        }
                        else if (splitInnerMask[j] === '') {
                            chkSpace = true;
                        }
                        else if ((splitInnerMask[j] !== '' && chkSpace) || j === splitInnerMask.length - 1) {
                            this.customRegExpCollec.push('[' + splitInnerMask[j] + ']');
                            this.hiddenMask += this.promptChar;
                            chkSpace = false;
                        }
                        else {
                            pushIntoRegExpCollec.call(this, splitInnerMask[j]);
                        }
                    }
                }
                else {
                    pushIntoRegExpCollec.call(this, splitInnerMask[0]);
                }
            }
        }
        this.escapeMaskValue = this.hiddenMask;
        this.promptMask = this.hiddenMask.replace(/[09?LCAa#&]/g, this.promptChar);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customCharacters)) {
            for (var i = 0; i < this.promptMask.length; i++) {
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customCharacters[this.promptMask[i]])) {
                    this.promptMask = this.promptMask.replace(new RegExp(this.promptMask[i], 'g'), this.promptChar);
                }
            }
        }
        var escapeNumber = 0;
        if (this.hiddenMask.match(new RegExp(/\\/))) {
            for (var i = 0; i < this.hiddenMask.length; i++) {
                var j = 0;
                if (i >= 2) {
                    j = i;
                }
                escapeNumber = this.hiddenMask.length - this.promptMask.length;
                j = j - escapeNumber;
                if ((i > 0 && this.hiddenMask[i - 1] !== '\\') && (this.hiddenMask[i] === '>' ||
                    this.hiddenMask[i] === '<' || this.hiddenMask[i] === '|')) {
                    this.promptMask = this.promptMask.substring(0, j) +
                        this.promptMask.substring((i + 1) - escapeNumber, this.promptMask.length);
                    this.escapeMaskValue = this.escapeMaskValue.substring(0, j) +
                        this.escapeMaskValue.substring((i + 1) - escapeNumber, this.escapeMaskValue.length);
                }
                if (this.hiddenMask[i] === '\\') {
                    this.promptMask = this.promptMask.substring(0, j) + this.hiddenMask[i + 1] +
                        this.promptMask.substring((i + 2) - escapeNumber, this.promptMask.length);
                    this.escapeMaskValue = this.escapeMaskValue.substring(0, j) + this.escapeMaskValue[i + 1] +
                        this.escapeMaskValue.substring((i + 2) - escapeNumber, this.escapeMaskValue.length);
                }
            }
        }
        else {
            this.promptMask = this.promptMask.replace(/[>|<]/g, '');
            this.escapeMaskValue = this.hiddenMask.replace(/[>|<]/g, '');
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { 'aria-invalid': 'false' });
    }
}
function applyMask() {
    setElementValue.call(this, this.promptMask);
    setMaskValue.call(this, this.value);
}
function wireEvents() {
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'keydown', maskInputKeyDownHandler, this);
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'keypress', maskInputKeyPressHandler, this);
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'keyup', maskInputKeyUpHandler, this);
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'focus', maskInputFocusHandler, this);
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'blur', maskInputBlurHandler, this);
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'paste', maskInputPasteHandler, this);
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'cut', maskInputCutHandler, this);
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'drop', maskInputDropHandler, this);
}
function unwireEvents() {
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'keydown', maskInputKeyDownHandler);
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'keypress', maskInputKeyPressHandler);
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'keyup', maskInputKeyUpHandler);
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'focus', maskInputFocusHandler);
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'blur', maskInputBlurHandler);
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'paste', maskInputPasteHandler);
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'cut', maskInputCutHandler);
}
function unstrippedValue(element) {
    return element.value;
}
function strippedValue(element) {
    var value = '';
    var k = 0;
    var checkMask = false;
    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(element) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this) && element.value !== this.promptMask) {
        for (var i = 0; i < this.customRegExpCollec.length; i++) {
            if (checkMask) {
                checkMask = false;
            }
            if (this.customRegExpCollec[k] === '>' || this.customRegExpCollec[k] === '<' ||
                this.customRegExpCollec[k] === '|' || this.customRegExpCollec[k] === '\\') {
                --i;
                checkMask = true;
            }
            if (!checkMask) {
                if ((element.value[i] !== this.promptChar) && (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customRegExpCollec[k]) &&
                    ((!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.regExpCollec[this.customRegExpCollec[k]])) ||
                        (this.customRegExpCollec[k].length > 2 && this.customRegExpCollec[k][0] === '[' &&
                            this.customRegExpCollec[k][this.customRegExpCollec[k].length - 1] === ']') ||
                        (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customCharacters) &&
                            (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customCharacters[this.customRegExpCollec[k]])))))) {
                    value += element.value[i];
                }
            }
            ++k;
        }
    }
    return value;
}
function pushIntoRegExpCollec(value) {
    for (var k = 0; k < value.length; k++) {
        this.hiddenMask += value[k];
        if (value[k] !== '\\') {
            this.customRegExpCollec.push(value[k]);
        }
    }
}
function maskInputFocusHandler(event) {
    var _this = this;
    if (this.mask) {
        this.isFocus = true;
        if (this.placeholder && this.element.value === '') {
            setElementValue.call(this, this.promptMask);
            this.element.setSelectionRange(0, this.element.value.length);
            setTimeout(function () {
                _this.element.setSelectionRange(0, _this.element.value.length);
            }, 1);
        }
    }
}
function maskInputBlurHandler(event) {
    if (this.mask) {
        this.isFocus = false;
        if (this.placeholder && this.element.value === this.promptMask && this.floatLabelType !== 'Always') {
            setElementValue.call(this, '');
            var labelElement = this.element.parentNode.querySelector('.e-float-text');
            if (this.floatLabelType === 'Auto' && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(labelElement) && labelElement.classList.contains(TOPLABEL)) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([labelElement], TOPLABEL);
            }
        }
    }
}
function maskInputPasteHandler(event) {
    var _this = this;
    if (this.mask) {
        var sIndex_1 = this.element.selectionStart;
        var eIndex_1 = this.element.selectionEnd;
        var oldValue_1 = this.element.value;
        setElementValue.call(this, '');
        setTimeout(function () {
            var value = _this.element.value;
            if (_this.redoCollec.length > 0 && _this.redoCollec[0].value === _this.element.value) {
                value = strippedValue.call(_this, _this.element);
            }
            setElementValue.call(_this, oldValue_1);
            _this.element.selectionStart = sIndex_1;
            _this.element.selectionEnd = eIndex_1;
            var i = 0;
            _this.maskKeyPress = true;
            do {
                validateValue.call(_this, value[i], false, null);
                ++i;
            } while (i < value.length);
            _this.maskKeyPress = false;
        }, 1);
    }
}
function maskInputCutHandler(event) {
    var _this = this;
    if (this.mask) {
        var sIndex_2 = this.element.selectionStart;
        var eIndex = this.element.selectionEnd;
        this.undoCollec.push({ value: this.element.value, startIndex: this.element.selectionStart, endIndex: this.element.selectionEnd });
        var value_1 = this.element.value.substring(0, sIndex_2) + this.promptMask.substring(sIndex_2, eIndex) +
            this.element.value.substring(eIndex);
        setTimeout(function () {
            setElementValue.call(_this, value_1);
            _this.element.selectionStart = _this.element.selectionEnd = sIndex_2;
        }, 0);
    }
}
function maskInputDropHandler(event) {
    event.preventDefault();
}
function maskInputKeyDownHandler(event) {
    var _this = this;
    if (this.mask) {
        if (event.keyCode !== 229) {
            if (event.ctrlKey && (event.keyCode === 89 || event.keyCode === 90)) {
                event.preventDefault();
            }
            removeMaskInputValues.call(this, event);
        }
        else {
            setTimeout(function () {
                removeMaskInputValues.call(_this, event);
            }, 0);
        }
        var startValue = this.element.value;
        if (event.ctrlKey && (event.keyCode === 89 || event.keyCode === 90)) {
            var collec = void 0;
            if (event.keyCode === 90 && this.undoCollec.length > 0 && startValue !== this.undoCollec[this.undoCollec.length - 1].value) {
                collec = this.undoCollec[this.undoCollec.length - 1];
                this.redoCollec.unshift({
                    value: this.element.value, startIndex: this.element.selectionStart,
                    endIndex: this.element.selectionEnd
                });
                setElementValue.call(this, collec.value);
                this.element.selectionStart = collec.startIndex;
                this.element.selectionEnd = collec.endIndex;
                this.undoCollec.splice(this.undoCollec.length - 1, 1);
            }
            else if (event.keyCode === 89 && this.redoCollec.length > 0 && startValue !== this.redoCollec[0].value) {
                collec = this.redoCollec[0];
                this.undoCollec.push({
                    value: this.element.value, startIndex: this.element.selectionStart,
                    endIndex: this.element.selectionEnd
                });
                setElementValue.call(this, collec.value);
                this.element.selectionStart = collec.startIndex;
                this.element.selectionEnd = collec.endIndex;
                this.redoCollec.splice(0, 1);
            }
        }
    }
}
function mobileRemoveFunction() {
    var collec;
    var sIndex = this.element.selectionStart;
    var eIndex = this.element.selectionEnd;
    if (this.redoCollec.length > 0) {
        collec = this.redoCollec[0];
        setElementValue.call(this, collec.value);
        if ((collec.startIndex - sIndex) === 1) {
            this.element.selectionStart = collec.startIndex;
            this.element.selectionEnd = collec.endIndex;
        }
        else {
            this.element.selectionStart = sIndex + 1;
            this.element.selectionEnd = eIndex + 1;
        }
    }
    else {
        setElementValue.call(this, this.promptMask);
        this.element.selectionStart = this.element.selectionEnd = sIndex;
    }
}
function removeMaskInputValues(event) {
    var isRemove = false;
    var oldEventVal;
    var isDeleted = false;
    if (this.element.value.length < this.promptMask.length) {
        isRemove = true;
        mobileRemoveFunction.call(this);
        oldEventVal = this.element.value;
    }
    var initStartIndex = this.element.selectionStart;
    var initEndIndex = this.element.selectionEnd;
    var startIndex = this.element.selectionStart;
    var endIndex = this.element.selectionEnd;
    var maskValue = this.hiddenMask.replace(/[>|\\<]/g, '');
    var curMask = maskValue[startIndex - 1];
    var parentElement = this.element.parentNode;
    if (isRemove || event.keyCode === 8 || event.keyCode === 46) {
        this.undoCollec.push({ value: this.element.value, startIndex: this.element.selectionStart, endIndex: endIndex });
        var multipleDel = false;
        if (startIndex > 0 || ((event.keyCode === 8 || event.keyCode === 46) && startIndex < this.element.value.length
            && ((this.element.selectionEnd - startIndex) !== this.element.value.length))) {
            var index = startIndex;
            if (startIndex !== endIndex) {
                startIndex = endIndex;
                if (event.keyCode === 46) {
                    multipleDel = true;
                }
            }
            else if (event.keyCode === 46) {
                ++index;
            }
            else {
                --index;
            }
            for (var k = startIndex; (event.keyCode === 8 || isRemove || multipleDel) ? k > index : k < index; (event.keyCode === 8 || isRemove || multipleDel) ? k-- : k++) {
                for (var i = startIndex; (event.keyCode === 8 || isRemove || multipleDel) ? i > 0 : i < this.element.value.length; (event.keyCode === 8 || isRemove || multipleDel) ? i-- : i++) {
                    var sIndex = void 0;
                    if (((event.keyCode === 8 || multipleDel) && ((initStartIndex !== initEndIndex && initStartIndex !== startIndex) ||
                        (initStartIndex === initEndIndex))) || isRemove) {
                        curMask = maskValue[i - 1];
                        sIndex = startIndex - 1;
                    }
                    else {
                        curMask = maskValue[i];
                        sIndex = startIndex;
                        ++startIndex;
                    }
                    var oldValue = this.element.value[sIndex];
                    if ((__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.regExpCollec[curMask]) && (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customCharacters)
                        && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customCharacters[curMask]))
                        && ((this.hiddenMask[sIndex] !== this.promptChar && this.customRegExpCollec[sIndex][0] !== '['
                            && this.customRegExpCollec[sIndex][this.customRegExpCollec[sIndex].length - 1] !== ']')))
                        || (this.promptMask[sIndex] !== this.promptChar && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customCharacters))) {
                        this.element.selectionStart = this.element.selectionEnd = sIndex;
                        event.preventDefault();
                        if (event.keyCode === 46 && !multipleDel) {
                            ++this.element.selectionStart;
                        }
                    }
                    else {
                        var value = this.element.value;
                        var prompt_1 = this.promptChar;
                        var elementValue = value.substring(0, sIndex) + prompt_1 + value.substring(startIndex, value.length);
                        setElementValue.call(this, elementValue);
                        event.preventDefault();
                        this.element.selectionStart = this.element.selectionEnd = sIndex;
                        isDeleted = true;
                    }
                    startIndex = this.element.selectionStart;
                    if ((!isDeleted && event.keyCode === 8) || multipleDel || (!isDeleted && !(event.keyCode === 46))) {
                        sIndex = startIndex - 1;
                    }
                    else {
                        sIndex = startIndex;
                        isDeleted = false;
                    }
                    oldValue = this.element.value[sIndex];
                    if (((initStartIndex !== initEndIndex) && (this.element.selectionStart === initStartIndex))
                        || (this.promptMask[sIndex] === this.promptChar) || ((oldValue !== this.promptMask[sIndex]) &&
                        (this.promptMask[sIndex] !== this.promptChar) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customCharacters))) {
                        break;
                    }
                }
            }
        }
        if (this.element.selectionStart === 0 && (this.element.selectionEnd === this.element.value.length)) {
            setElementValue.call(this, this.promptMask);
            event.preventDefault();
            this.element.selectionStart = this.element.selectionEnd = startIndex;
        }
        this.redoCollec.unshift({
            value: this.element.value, startIndex: this.element.selectionStart,
            endIndex: this.element.selectionEnd
        });
        triggerMaskChangeEvent.call(this, event, oldEventVal);
    }
}
function maskInputKeyPressHandler(event) {
    if (this.mask) {
        var oldValue = this.element.value;
        if ((!event.ctrlKey) || (event.ctrlKey && event.code !== 'KeyA' && event.code !== 'KeyY'
            && event.code !== 'KeyZ' && event.code !== 'KeyX' && event.code !== 'KeyC' && event.code !== 'KeyV')) {
            this.maskKeyPress = true;
            var key = event.key;
            if (key === 'Spacebar') {
                key = String.fromCharCode(event.keyCode);
            }
            if (!key) {
                this.isIosInvalid = true;
                validateValue.call(this, String.fromCharCode(event.keyCode), event.ctrlKey, event);
                event.preventDefault();
                this.isIosInvalid = false;
            }
            else if (key && key.length === 1) {
                validateValue.call(this, key, event.ctrlKey, event);
                event.preventDefault();
            }
        }
        triggerMaskChangeEvent.call(this, event, oldValue);
    }
}
function triggerMaskChangeEvent(event, oldValue) {
    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.changeEventArgs)) {
        var eventArgs = {};
        this.changeEventArgs = { value: this.element.value, maskedValue: this.element.value, isInteraction: false };
        if (this.mask) {
            this.changeEventArgs.value = strippedValue.call(this, this.element);
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(event)) {
            this.changeEventArgs.isInteraction = true;
            this.changeEventArgs.event = event;
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["merge"])(eventArgs, this.changeEventArgs);
        this.trigger('change', eventArgs);
    }
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { 'aria-valuenow': this.element.value });
}
function maskInputKeyUpHandler(event) {
    if (this.mask) {
        var collec = void 0;
        if (!this.maskKeyPress && event.keyCode === 229) {
            var oldEventVal = void 0;
            if (this.element.value.length === 1) {
                this.element.value = this.element.value + this.promptMask;
                this.element.setSelectionRange(1, 1);
            }
            if (this.element.value.length > this.promptMask.length) {
                var startIndex = this.element.selectionStart;
                var addedValues = this.element.value.length - this.promptMask.length;
                var val_1 = this.element.value.substring(startIndex - addedValues, startIndex);
                if (this.undoCollec.length > 0) {
                    collec = this.undoCollec[this.undoCollec.length - 1];
                    var startIndex_1 = this.element.selectionStart;
                    oldEventVal = collec.value;
                    var oldVal = collec.value.substring(startIndex_1 - addedValues, startIndex_1);
                    collec = this.redoCollec[0];
                    val_1 = val_1.trim();
                    if (oldVal !== val_1 && collec.value.substring(startIndex_1 - addedValues, startIndex_1) !== val_1) {
                        validateValue.call(this, val_1, event.ctrlKey, event);
                    }
                }
                else {
                    oldEventVal = this.promptMask;
                    validateValue.call(this, val_1, event.ctrlKey, event);
                }
                this.maskKeyPress = false;
                triggerMaskChangeEvent.call(this, event, oldEventVal);
            }
        }
        else {
            removeMaskError.call(this);
        }
        var val = strippedValue.call(this, this.element);
        if (!((this.element.selectionStart === 0) && (this.promptMask === this.element.value) && val === '')) {
            this.prevValue = val;
            this.value = val;
        }
    }
    else {
        triggerMaskChangeEvent.call(this, event);
        this.value = this.element.value;
    }
}
function mobileSwipeCheck(key) {
    if (key.length > 1 && ((this.promptMask.length + key.length) < this.element.value.length)) {
        var elementValue = this.redoCollec[0].value.substring(0, this.redoCollec[0].startIndex) + key +
            this.redoCollec[0].value.substring(this.redoCollec[0].startIndex, this.redoCollec[0].value.length);
        setElementValue.call(this, elementValue);
        this.element.selectionStart = this.element.selectionEnd = this.redoCollec[0].startIndex + key.length;
    }
    this.element.selectionStart = this.element.selectionStart - key.length;
    this.element.selectionEnd = this.element.selectionEnd - key.length;
}
function validateValue(key, isCtrlKey, event) {
    if (!this.maskKeyPress) {
        mobileSwipeCheck.call(this, key);
    }
    var startIndex = this.element.selectionStart;
    var initStartIndex = startIndex;
    var endIndex = this.element.selectionEnd;
    var curMask;
    var allowText = false;
    var value = this.element.value;
    var eventOldVal;
    var prevSupport = false;
    for (var k = 0; k < key.length; k++) {
        var keyValue = key[k];
        startIndex = this.element.selectionStart;
        endIndex = this.element.selectionEnd;
        if (!this.maskKeyPress && initStartIndex === startIndex) {
            startIndex = startIndex + k;
        }
        if ((!this.maskKeyPress || startIndex < this.promptMask.length)) {
            for (var i = startIndex; i < this.promptMask.length; i++) {
                var maskValue = this.escapeMaskValue;
                curMask = maskValue[startIndex];
                if ((__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.regExpCollec[curMask]) && (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customCharacters)
                    || (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customCharacters) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customCharacters[curMask])))
                    && ((this.hiddenMask[startIndex] !== this.promptChar && this.customRegExpCollec[startIndex][0] !== '['
                        && this.customRegExpCollec[startIndex][this.customRegExpCollec[startIndex].length - 1] !== ']')))
                    || ((this.promptMask[startIndex] !== this.promptChar) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customCharacters))
                    || (this.promptChar === curMask && this.escapeMaskValue === this.mask)) {
                    this.element.selectionStart = this.element.selectionEnd = startIndex + 1;
                    startIndex = this.element.selectionStart;
                    curMask = this.hiddenMask[startIndex];
                }
            }
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customCharacters) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.customCharacters[curMask])) {
                var customValStr = this.customCharacters[curMask];
                var customValArr = customValStr.split(',');
                for (var i = 0; i < customValArr.length; i++) {
                    if (keyValue.match(new RegExp('[' + customValArr[i] + ']'))) {
                        allowText = true;
                        break;
                    }
                }
            }
            else if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.regExpCollec[curMask]) && keyValue.match(new RegExp(this.regExpCollec[curMask]))
                && this.promptMask[startIndex] === this.promptChar) {
                allowText = true;
            }
            else if (this.promptMask[startIndex] === this.promptChar && this.customRegExpCollec[startIndex][0] === '['
                && this.customRegExpCollec[startIndex][this.customRegExpCollec[startIndex].length - 1] === ']'
                && keyValue.match(new RegExp(this.customRegExpCollec[startIndex]))) {
                allowText = true;
            }
            if ((!this.maskKeyPress || startIndex < this.hiddenMask.length) && allowText) {
                if (k === 0) {
                    if (this.maskKeyPress) {
                        this.undoCollec.push({ value: value, startIndex: startIndex, endIndex: startIndex });
                    }
                    else {
                        var sIndex = this.element.selectionStart;
                        var eIndex = this.element.selectionEnd;
                        if (this.redoCollec.length > 0) {
                            eventOldVal = this.redoCollec[0].value;
                            setElementValue.call(this, eventOldVal);
                            this.undoCollec.push(this.redoCollec[0]);
                        }
                        else {
                            this.undoCollec.push({ value: this.promptMask, startIndex: startIndex, endIndex: startIndex });
                            eventOldVal = this.promptMask;
                            setElementValue.call(this, eventOldVal);
                        }
                        this.element.selectionStart = sIndex;
                        this.element.selectionEnd = eIndex;
                    }
                }
                startIndex = this.element.selectionStart;
                applySupportedValues.call(this, event, startIndex, keyValue, eventOldVal);
                prevSupport = true;
                if (k === key.length - 1) {
                    this.redoCollec.unshift({
                        value: this.element.value, startIndex: this.element.selectionStart,
                        endIndex: this.element.selectionEnd
                    });
                }
                allowText = false;
            }
            else {
                startIndex = this.element.selectionStart;
                preventUnsupportedValues.call(this, event, startIndex, initStartIndex, key, isCtrlKey, prevSupport);
            }
            if (k === key.length - 1 && !allowText) {
                if (!__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isAndroid || (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isAndroid && startIndex < this.promptMask.length)) {
                    this.redoCollec.unshift({
                        value: this.element.value,
                        startIndex: this.element.selectionStart,
                        endIndex: this.element.selectionEnd
                    });
                }
            }
        }
        else {
            if (key.length === 1 && !isCtrlKey && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(event)) {
                addMaskErrorClass.call(this);
            }
        }
    }
}
function applySupportedValues(event, startIndex, keyValue, eventOldVal) {
    if (this.hiddenMask.length > this.promptMask.length) {
        keyValue = changeToLowerUpperCase.call(this, keyValue, this.element.value);
    }
    var value = this.element.value;
    var elementValue = value.substring(0, startIndex) + keyValue + value.substring(startIndex + 1, value.length);
    setElementValue.call(this, elementValue);
    this.element.selectionStart = this.element.selectionEnd = startIndex + 1;
    triggerMaskChangeEvent.call(this, event, eventOldVal);
}
function preventUnsupportedValues(event, sIdx, idx, key, ctrl, chkSupport) {
    if (!this.maskKeyPress) {
        var eventOldVal = void 0;
        var value = this.element.value;
        if (sIdx >= this.promptMask.length) {
            setElementValue.call(this, value.substring(0, sIdx));
        }
        else {
            if (idx === sIdx) {
                setElementValue.call(this, value.substring(0, sIdx) + value.substring(sIdx + 1, value.length));
            }
            else {
                if (this.promptMask.length === this.element.value.length) {
                    setElementValue.call(this, value.substring(0, sIdx) + value.substring(sIdx, value.length));
                }
                else {
                    setElementValue.call(this, value.substring(0, idx) + value.substring(idx + 1, value.length));
                }
            }
            this.element.selectionStart = this.element.selectionEnd = (chkSupport ||
                this.element.value[idx] !== this.promptChar) ? sIdx : idx;
        }
        eventOldVal = this.element.value;
        triggerMaskChangeEvent.call(this, event, eventOldVal);
        addMaskErrorClass.call(this);
    }
    if (key.length === 1 && !ctrl && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(event)) {
        addMaskErrorClass.call(this);
    }
}
function addMaskErrorClass() {
    var _this = this;
    var parentElement = this.element.parentNode;
    var timer = 200;
    if (parentElement.classList.contains(INPUTGROUP) || parentElement.classList.contains(FLOATINPUT)) {
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([parentElement], ERROR);
    }
    else {
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], ERROR);
    }
    if (this.isIosInvalid === true) {
        timer = 400;
    }
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { 'aria-invalid': 'true' });
    setTimeout(function () {
        if (!_this.maskKeyPress) {
            removeMaskError.call(_this);
        }
    }, timer);
}
function removeMaskError() {
    var parentElement = this.element.parentNode;
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([parentElement], ERROR);
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], ERROR);
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { 'aria-invalid': 'false' });
}
function changeToLowerUpperCase(key, value) {
    var promptMask;
    var i;
    var j = 0;
    var curVal = value;
    var caseCount = 0;
    for (i = 0; i < this.hiddenMask.length; i++) {
        if (this.hiddenMask[i] === '\\') {
            promptMask = curVal.substring(0, i) + '\\' + curVal.substring(i, curVal.length);
        }
        if (this.hiddenMask[i] === '>' || this.hiddenMask[i] === '<' || this.hiddenMask[i] === '|') {
            if (this.hiddenMask[i] !== curVal[i]) {
                promptMask = curVal.substring(0, i) + this.hiddenMask[i] + curVal.substring(i, curVal.length);
            }
            ++caseCount;
        }
        if (promptMask) {
            if (((promptMask[i] === this.promptChar) && (i > this.element.selectionStart)) ||
                (this.element.value.indexOf(this.promptChar) < 0 && (this.element.selectionStart + caseCount) === i)) {
                caseCount = 0;
                break;
            }
            curVal = promptMask;
        }
    }
    while (i >= 0 && promptMask) {
        if (i === 0 || promptMask[i - 1] !== '\\') {
            var val = this.element.value;
            if (promptMask[i] === '>') {
                key = key.toUpperCase();
                break;
            }
            else if (promptMask[i] === '<') {
                key = key.toLowerCase();
                break;
            }
            else if (promptMask[i] === '|') {
                break;
            }
        }
        --i;
    }
    return key;
}
function setMaskValue(val) {
    if (this.mask && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(val) && (val === '' || this.prevValue !== val)) {
        this.maskKeyPress = true;
        setElementValue.call(this, this.promptMask);
        if (val !== '') {
            this.element.selectionStart = 0;
            this.element.selectionEnd = 0;
        }
        for (var i = 0; i < val.length; i++) {
            validateValue.call(this, val[i], false, null);
        }
        this.value = strippedValue.call(this, this.element);
        this.maskKeyPress = false;
        var labelElement = this.element.parentNode.querySelector('.e-float-text');
        if (this.element.value === this.promptMask && this.floatLabelType === 'Auto' &&
            !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(labelElement) && labelElement.classList.contains(TOPLABEL) && !this.isFocus) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([labelElement], TOPLABEL);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([labelElement], BOTTOMLABEL);
            setElementValue.call(this, '');
        }
    }
}
function setElementValue(val, element) {
    if (!this.isFocus && this.floatLabelType === 'Auto' && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.value)) {
        val = '';
    }
    __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].setValue(val, (element ? element : this.element), this.floatLabelType);
}
function maskInput(args) {
    var inputEle = getMaskInput(args);
    applyMask.call(inputEle);
    var val = strippedValue.call(this, this.element);
    this.prevValue = val;
    this.value = val;
    if (args.mask) {
        unwireEvents.call(inputEle);
        wireEvents.call(inputEle);
    }
}
function getMaskInput(args) {
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([args.element], UTILMASK);
    var inputEle = {
        element: args.element,
        mask: args.mask,
        promptMask: '',
        hiddenMask: '',
        escapeMaskValue: '',
        promptChar: args.promptChar ? (args.promptChar.length > 1) ? args.promptChar = args.promptChar[0]
            : args.promptChar : '_',
        value: args.value ? args.value : null,
        regExpCollec: regularExpressions,
        customRegExpCollec: [],
        customCharacters: args.customCharacters,
        undoCollec: [],
        redoCollec: [],
        maskKeyPress: false,
        prevValue: ''
    };
    createMask.call(inputEle);
    return inputEle;
}
function getVal(args) {
    return strippedValue.call(getUtilMaskEle(args), args.element);
}
function getMaskedVal(args) {
    return unstrippedValue.call(getUtilMaskEle(args), args.element);
}
function getUtilMaskEle(args) {
    var value = '';
    var inputEle;
    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(args) && args.element.classList.contains(UTILMASK)) {
        inputEle = getMaskInput(args);
    }
    return inputEle;
}
var MaskUndo = (function () {
    function MaskUndo() {
    }
    return MaskUndo;
}());

var maskUndo = new MaskUndo();


/***/ }),
/* 224 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_index__ = __webpack_require__(93);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["b"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["c"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["d"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "e", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["e"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "f", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["f"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "g", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["g"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "h", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["h"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "i", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["i"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "j", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["j"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "k", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["k"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "l", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["l"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "m", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["m"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "n", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["n"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "o", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["o"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "p", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["p"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "q", function() { return __WEBPACK_IMPORTED_MODULE_0__base_index__["q"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__ = __webpack_require__(225);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "r", function() { return __WEBPACK_IMPORTED_MODULE_1__maskedtextbox_index__["a"]; });




/***/ }),
/* 225 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__maskedtextbox__ = __webpack_require__(226);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__maskedtextbox__["a"]; });



/***/ }),
/* 226 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MaskedTextBox; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__input_input__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__base_index__ = __webpack_require__(93);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var ROOT = 'e-widget e-mask';
var INPUT = 'e-input';
var MaskedTextBox = (function (_super) {
    __extends(MaskedTextBox, _super);
    function MaskedTextBox(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.promptMask = '';
        _this.hiddenMask = '';
        _this.escapeMaskValue = '';
        _this.regExpCollec = __WEBPACK_IMPORTED_MODULE_2__base_index__["a" /* regularExpressions */];
        _this.customRegExpCollec = [];
        _this.undoCollec = [];
        _this.redoCollec = [];
        _this.changeEventArgs = {};
        _this.maskKeyPress = false;
        _this.isFocus = false;
        _this.isInitial = false;
        _this.isIosInvalid = false;
        return _this;
    }
    MaskedTextBox.prototype.getModuleName = function () {
        return 'maskedtextbox';
    };
    MaskedTextBox.prototype.preRender = function () {
        var ejInstance = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getValue"])('ej2_instances', this.element);
        this.cloneElement = this.element.cloneNode(true);
        this.angularTagName = null;
        if (this.element.tagName === 'EJ-MASKEDTEXTBOX') {
            this.angularTagName = this.element.tagName;
            var input = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('input');
            for (var i = 0; i < this.element.attributes.length; i++) {
                input.setAttribute(this.element.attributes[i].nodeName, this.element.attributes[i].nodeValue);
                input.innerHTML = this.element.innerHTML;
            }
            this.element.parentNode.appendChild(input);
            this.element.parentNode.removeChild(this.element);
            this.element = input;
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setValue"])('ej2_instances', ejInstance, this.element);
        }
    };
    MaskedTextBox.prototype.getPersistData = function () {
        var keyEntity = ['value'];
        return this.addOnPersist(keyEntity);
    };
    MaskedTextBox.prototype.render = function () {
        if (this.element.tagName.toLowerCase() === 'input') {
            if (this.floatLabelType === 'Never') {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], INPUT);
            }
            this.createWrapper();
            this.isInitial = true;
            this.resetMaskedTextBox();
            this.isInitial = false;
            this.setMaskPlaceholder(true);
            this.setWidth(this.width);
        }
    };
    MaskedTextBox.prototype.resetMaskedTextBox = function () {
        this.promptMask = '';
        this.hiddenMask = '';
        this.escapeMaskValue = '';
        this.customRegExpCollec = [];
        this.undoCollec = [];
        this.redoCollec = [];
        if (this.promptChar.length > 1) {
            this.promptChar = this.promptChar[0];
        }
        __WEBPACK_IMPORTED_MODULE_2__base_index__["b" /* createMask */].call(this);
        __WEBPACK_IMPORTED_MODULE_2__base_index__["c" /* applyMask */].call(this);
        var val = __WEBPACK_IMPORTED_MODULE_2__base_index__["g" /* strippedValue */].call(this, this.element);
        this.prevValue = val;
        this.value = val;
        if (!this.isInitial) {
            __WEBPACK_IMPORTED_MODULE_2__base_index__["e" /* unwireEvents */].call(this);
        }
        __WEBPACK_IMPORTED_MODULE_2__base_index__["d" /* wireEvents */].call(this);
    };
    MaskedTextBox.prototype.setMaskPlaceholder = function (setVal) {
        if (this.placeholder) {
            __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].setPlaceholder(this.placeholder, this.element);
            if (this.element.value === this.promptMask && setVal && this.floatLabelType !== 'Always') {
                __WEBPACK_IMPORTED_MODULE_2__base_index__["m" /* setElementValue */].call(this, '');
            }
        }
    };
    MaskedTextBox.prototype.setCssClass = function (cssClass, element) {
        if (cssClass) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])(element, cssClass);
        }
    };
    MaskedTextBox.prototype.setWidth = function (width) {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(width)) {
            this.element.style.width = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(width);
        }
    };
    MaskedTextBox.prototype.createWrapper = function () {
        this.inputObj = __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].createInput({
            element: this.element,
            customTag: this.angularTagName,
            floatLabelType: this.floatLabelType,
            properties: {
                enableRtl: this.enableRtl,
                enabled: this.enabled,
                placeholder: this.placeholder
            }
        });
        this.inputObj.container.setAttribute('class', ROOT + ' ' + this.inputObj.container.getAttribute('class'));
    };
    MaskedTextBox.prototype.onPropertyChanged = function (newProp, oldProp) {
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'value':
                    __WEBPACK_IMPORTED_MODULE_2__base_index__["l" /* setMaskValue */].call(this, this.value);
                    if (this.placeholder) {
                        this.setMaskPlaceholder(false);
                    }
                    break;
                case 'placeholder':
                    this.setMaskPlaceholder(true);
                    break;
                case 'width':
                    this.setWidth(newProp.width);
                    break;
                case 'cssClass':
                    this.setCssClass(newProp.cssClass, [this.inputObj.container]);
                    break;
                case 'enabled':
                    __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].setEnabled(newProp.enabled, this.element);
                    break;
                case 'enableRtl':
                    __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].setEnableRtl(newProp.enableRtl, [this.inputObj.container]);
                    break;
                case 'customCharacters':
                    this.customCharacters = newProp.customCharacters;
                    this.resetMaskedTextBox();
                    break;
                case 'mask':
                    var strippedValue_1 = this.value;
                    this.mask = newProp.mask;
                    this.updateValue(strippedValue_1);
                    break;
                case 'promptChar':
                    if (newProp.promptChar.length > 1) {
                        newProp.promptChar = newProp.promptChar[0];
                    }
                    if (newProp.promptChar) {
                        this.promptChar = newProp.promptChar;
                    }
                    else {
                        this.promptChar = '_';
                    }
                    var value = this.element.value.replace(new RegExp('[' + oldProp.promptChar + ']', 'g'), this.promptChar);
                    if (this.promptMask === this.element.value) {
                        value = this.promptMask.replace(new RegExp('[' + oldProp.promptChar + ']', 'g'), this.promptChar);
                    }
                    this.promptMask = this.promptMask.replace(new RegExp('[' + oldProp.promptChar + ']', 'g'), this.promptChar);
                    this.undoCollec = this.redoCollec = [];
                    __WEBPACK_IMPORTED_MODULE_2__base_index__["m" /* setElementValue */].call(this, value);
                    break;
            }
        }
    };
    MaskedTextBox.prototype.updateValue = function (strippedVal) {
        this.resetMaskedTextBox();
        __WEBPACK_IMPORTED_MODULE_2__base_index__["l" /* setMaskValue */].call(this, strippedVal);
    };
    MaskedTextBox.prototype.getMaskedValue = function () {
        return __WEBPACK_IMPORTED_MODULE_2__base_index__["f" /* unstrippedValue */].call(this, this.element);
    };
    MaskedTextBox.prototype.destroy = function () {
        __WEBPACK_IMPORTED_MODULE_2__base_index__["e" /* unwireEvents */].call(this);
        this.inputObj.container.parentElement.appendChild(this.cloneElement);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.inputObj.container);
        _super.prototype.destroy.call(this);
    };
    return MaskedTextBox;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Component"]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], MaskedTextBox.prototype, "cssClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], MaskedTextBox.prototype, "width", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], MaskedTextBox.prototype, "placeholder", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('Never')
], MaskedTextBox.prototype, "floatLabelType", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(true)
], MaskedTextBox.prototype, "enabled", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], MaskedTextBox.prototype, "enablePersistence", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], MaskedTextBox.prototype, "enableRtl", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], MaskedTextBox.prototype, "mask", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('_')
], MaskedTextBox.prototype, "promptChar", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], MaskedTextBox.prototype, "value", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], MaskedTextBox.prototype, "customCharacters", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], MaskedTextBox.prototype, "created", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], MaskedTextBox.prototype, "destroyed", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], MaskedTextBox.prototype, "change", void 0);
MaskedTextBox = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], MaskedTextBox);



/***/ }),
/* 227 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__numerictextbox__ = __webpack_require__(228);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__numerictextbox__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__numerictextbox__["b"]; });



/***/ }),
/* 228 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NumericTextBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return numerictextboxHelper; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__input_input__ = __webpack_require__(61);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






var ROOT = 'e-numeric';
var SPINICON = 'e-input-group-icon';
var SPINUP = 'e-spin-up';
var SPINDOWN = 'e-spin-down';
var ERROR = 'e-error';
var INCREMENT = 'increment';
var DECREMENT = 'decrement';
var INTREGEXP = new RegExp('/^(-)?(\d*)$/');
var DECIMALSEPARATOR = '.';
var NumericTextBox = (function (_super) {
    __extends(NumericTextBox, _super);
    function NumericTextBox(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.isPrevFocused = false;
        _this.decimalSeparator = '.';
        _this.intRegExp = new RegExp('/^(-)?(\d*)$/');
        _this.isCalled = false;
        return _this;
    }
    NumericTextBox.prototype.preRender = function () {
        var ejInstance = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getValue"])('ej2_instances', this.element);
        this.cloneElement = this.element.cloneNode(true);
        this.angularTagName = null;
        if (this.element.tagName === 'EJ-NUMERICTEXTBOX') {
            this.angularTagName = this.element.tagName;
            var input = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('input');
            var index = 0;
            for (index; index < this.element.attributes.length; index++) {
                input.setAttribute(this.element.attributes[index].nodeName, this.element.attributes[index].nodeValue);
                input.innerHTML = this.element.innerHTML;
            }
            this.element.parentNode.appendChild(input);
            this.element.parentNode.removeChild(this.element);
            this.element = input;
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setValue"])('ej2_instances', ejInstance, this.element);
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { 'role': 'spinbutton', 'tabindex': '0', 'autocomplete': 'off', 'aria-live': 'assertive' });
        var localeText = { incrementTitle: 'Increment value', decrementTitle: 'Decrement value', placeholder: '' };
        this.l10n = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["L10n"]('numerictextbox', localeText, this.locale);
        this.isValidState = true;
        this.inputStyle = null;
        this.inputName = null;
        this.cultureInfo = {};
        this.initCultureInfo();
        this.initCultureFunc();
        this.checkAttributes();
        this.prevValue = this.value;
        this.validateMinMax();
        this.validateStep();
        if (this.placeholder === null) {
            this.updatePlaceholder();
        }
    };
    NumericTextBox.prototype.render = function () {
        if (this.element.tagName.toLowerCase() === 'input') {
            this.createWrapper();
            if (this.showSpinButton) {
                this.spinBtnCreation();
            }
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.width)) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.container, { 'width': __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(this.width) });
            }
            this.changeValue(this.value);
            this.wireEvents();
            if (this.value !== null && !isNaN(this.value)) {
                if (this.decimals) {
                    this.setProperties({ value: this.roundNumber(this.value, this.decimals) }, true);
                }
            }
        }
    };
    NumericTextBox.prototype.checkAttributes = function () {
        var attributes = ['value', 'min', 'max', 'step', 'disabled', 'readonly', 'style', 'name'];
        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {
            var prop = attributes_1[_i];
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.element.getAttribute(prop))) {
                switch (prop) {
                    case 'disabled':
                        var enabled = this.element.getAttribute(prop) === 'disabled' ||
                            this.element.getAttribute(prop) === 'true' ? false : true;
                        this.setProperties({ enabled: enabled }, true);
                        break;
                    case 'readonly':
                        var readonly = this.element.getAttribute(prop) === 'readonly'
                            || this.element.getAttribute(prop) === 'true' ? true : false;
                        this.setProperties({ readonly: readonly }, true);
                        break;
                    case 'style':
                        this.inputStyle = this.element.getAttribute(prop);
                        break;
                    case 'name':
                        this.inputName = this.element.getAttribute(prop);
                        break;
                    default:
                        var value = this.instance.getNumberParser({ format: 'n' })(this.element.getAttribute(prop));
                        if ((value !== null && !isNaN(value)) || (prop === 'value')) {
                            this.setProperties(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setValue"])(prop, value, {}), true);
                        }
                        break;
                }
            }
        }
    };
    NumericTextBox.prototype.updatePlaceholder = function () {
        this.setProperties({ placeholder: this.l10n.getConstant('placeholder') }, true);
    };
    NumericTextBox.prototype.initCultureFunc = function () {
        this.instance = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Internationalization"](this.locale);
    };
    NumericTextBox.prototype.initCultureInfo = function () {
        this.cultureInfo.format = this.format;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getValue"])('currency', this) !== null) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setValue"])('currency', this.currency, this.cultureInfo);
        }
    };
    NumericTextBox.prototype.createWrapper = function () {
        var inputObj = __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].createInput({
            element: this.element,
            customTag: this.angularTagName,
            floatLabelType: this.floatLabelType,
            properties: {
                readonly: this.readonly,
                placeholder: this.placeholder,
                cssClass: this.cssClass,
                enableRtl: this.enableRtl,
                enabled: this.enabled
            }
        });
        this.container = inputObj.container;
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.container], ROOT);
        if (this.readonly) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { 'aria-readonly': 'true' });
        }
        this.hiddenInput = (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('input', { attrs: { type: 'hidden' } }));
        this.inputName = this.inputName !== null ? this.inputName : this.element.id;
        this.element.removeAttribute('name');
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.hiddenInput, { 'name': this.inputName });
        this.container.insertBefore(this.hiddenInput, this.element);
        if (this.inputStyle !== null) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.container, { 'style': this.inputStyle });
        }
    };
    NumericTextBox.prototype.spinBtnCreation = function () {
        this.spinDown = __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].appendSpan(SPINICON + ' ' + SPINDOWN, this.container);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.spinDown, {
            'title': this.l10n.getConstant('decrementTitle'),
            'aria-label': this.l10n.getConstant('decrementTitle')
        });
        this.spinUp = __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].appendSpan(SPINICON + ' ' + SPINUP, this.container);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.spinUp, {
            'title': this.l10n.getConstant('incrementTitle'),
            'aria-label': this.l10n.getConstant('incrementTitle')
        });
        this.wireSpinBtnEvents();
    };
    NumericTextBox.prototype.validateMinMax = function () {
        if (!(typeof (this.min) === 'number' && !isNaN(this.min))) {
            this.setProperties({ min: -(Number.MAX_VALUE) }, true);
        }
        if (!(typeof (this.max) === 'number' && !isNaN(this.max))) {
            this.setProperties({ max: Number.MAX_VALUE }, true);
        }
        if (this.decimals !== null) {
            if (this.min !== -(Number.MAX_VALUE)) {
                this.setProperties({ min: this.instance.getNumberParser({ format: 'n' })(this.formattedValue(this.decimals, this.min)) }, true);
            }
            if (this.max !== (Number.MAX_VALUE)) {
                this.setProperties({ max: this.instance.getNumberParser({ format: 'n' })(this.formattedValue(this.decimals, this.max)) }, true);
            }
        }
        this.setProperties({ min: this.min > this.max ? this.max : this.min }, true);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { 'aria-valuemin': this.min.toString(), 'aria-valuemax': this.max.toString() });
    };
    NumericTextBox.prototype.formattedValue = function (decimals, value) {
        return this.instance.getNumberFormat({
            maximumFractionDigits: decimals,
            minimumFractionDigits: decimals, useGrouping: false
        })(value);
    };
    NumericTextBox.prototype.validateStep = function () {
        if (this.decimals !== null) {
            this.setProperties({ step: this.instance.getNumberParser({ format: 'n' })(this.formattedValue(this.decimals, this.step)) }, true);
        }
    };
    NumericTextBox.prototype.action = function (operation) {
        var value = this.isFocused ? this.instance.getNumberParser({ format: 'n' })(this.element.value) : this.value;
        this.changeValue(this.performAction(value, this.step, operation));
        this.raiseChangeEvent();
    };
    NumericTextBox.prototype.checkErrorClass = function () {
        if (this.isValidState) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.container], ERROR);
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.container], ERROR);
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { 'aria-invalid': this.isValidState ? 'false' : 'true' });
    };
    NumericTextBox.prototype.wireEvents = function () {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'focus', this.focusIn, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'blur', this.focusOut, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'keydown', this.keyDownHandler, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'keypress', this.keyPressHandler, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'change', this.changeHandler, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'paste', this.pasteHandler, this);
    };
    NumericTextBox.prototype.wireSpinBtnEvents = function () {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.spinUp, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchStartEvent, this.mouseDownOnSpinner, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.spinDown, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchStartEvent, this.mouseDownOnSpinner, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.spinUp, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchEndEvent, this.mouseUpOnSpinner, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.spinDown, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchEndEvent, this.mouseUpOnSpinner, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.spinUp, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchMoveEvent, this.touchMoveOnSpinner, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.spinDown, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchMoveEvent, this.touchMoveOnSpinner, this);
    };
    NumericTextBox.prototype.unwireEvents = function () {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'focus', this.focusIn);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'blur', this.focusOut);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'keydown', this.keyDownHandler);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'keypress', this.keyPressHandler);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'change', this.changeHandler);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'paste', this.pasteHandler);
    };
    NumericTextBox.prototype.unwireSpinBtnEvents = function () {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.spinUp, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchStartEvent, this.mouseDownOnSpinner);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.spinDown, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchStartEvent, this.mouseDownOnSpinner);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.spinUp, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchEndEvent, this.mouseUpOnSpinner);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.spinDown, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchEndEvent, this.mouseUpOnSpinner);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.spinUp, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchMoveEvent, this.touchMoveOnSpinner);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.spinDown, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchMoveEvent, this.touchMoveOnSpinner);
    };
    NumericTextBox.prototype.changeHandler = function (event) {
        if (!this.element.value.length) {
            this.setProperties({ value: null }, true);
        }
        var parsedInput = this.instance.getNumberParser({ format: 'n' })(this.element.value);
        this.updateValue(parsedInput, event);
    };
    NumericTextBox.prototype.raiseChangeEvent = function (event) {
        if (this.prevValue !== this.value) {
            var eventArgs = {};
            this.changeEventArgs = { value: this.value, previousValue: this.prevValue };
            if (event) {
                this.changeEventArgs.event = event;
            }
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["merge"])(eventArgs, this.changeEventArgs);
            this.prevValue = this.value;
            this.trigger('change', eventArgs);
        }
    };
    NumericTextBox.prototype.pasteHandler = function () {
        var _this = this;
        var beforeUpdate = this.element.value;
        setTimeout(function () {
            if (!_this.numericRegex().test(_this.element.value)) {
                _this.setElementValue(beforeUpdate);
            }
        });
    };
    NumericTextBox.prototype.keyDownHandler = function (event) {
        switch (event.keyCode) {
            case 38:
                event.preventDefault();
                this.action(INCREMENT);
                break;
            case 40:
                event.preventDefault();
                this.action(DECREMENT);
                break;
            default: break;
        }
        if (!this.element.value.length) {
            this.setProperties({ value: null }, true);
            this.updateValue(this.instance.getNumberParser({ format: 'n' })(this.element.value));
        }
    };
    ;
    NumericTextBox.prototype.performAction = function (value, step, operation) {
        if (value === null || isNaN(value)) {
            value = 0;
        }
        var updatedValue = operation === INCREMENT ? value + step : value - step;
        updatedValue = this.correctRounding(value, step, updatedValue);
        return this.strictMode ? this.trimValue(updatedValue) : updatedValue;
    };
    ;
    NumericTextBox.prototype.correctRounding = function (value, step, result) {
        var floatExp = new RegExp('[,.](.*)');
        var valueText = value.toString();
        var stepText = step.toString();
        var floatValue = floatExp.test(value.toString());
        var floatStep = floatExp.test(step.toString());
        if (floatValue || floatStep) {
            var valueCount = floatValue ? floatExp.exec(value.toString())[0].length : 0;
            var stepCount = floatStep ? floatExp.exec(step.toString())[0].length : 0;
            var max = Math.max(valueCount, stepCount);
            return value = this.roundValue(result, max);
        }
        return result;
    };
    ;
    NumericTextBox.prototype.roundValue = function (result, precision) {
        precision = precision || 0;
        var divide = Math.pow(10, precision);
        return result *= divide, result = Math.round(result) / divide;
    };
    ;
    NumericTextBox.prototype.updateValue = function (value, event) {
        if (value !== null && !isNaN(value)) {
            if (this.decimals) {
                value = this.roundNumber(value, this.decimals);
            }
        }
        this.changeValue(value === null || isNaN(value) ? null : this.strictMode ? this.trimValue(value) : value);
        this.raiseChangeEvent(event);
    };
    NumericTextBox.prototype.changeValue = function (value) {
        if (!(value || value === 0)) {
            value = null;
            this.setProperties({ value: value }, true);
        }
        else {
            var numberOfDecimals = void 0;
            var decimalPart = value.toString().split('.')[1];
            numberOfDecimals = !decimalPart || !decimalPart.length ? 0 : decimalPart.length;
            if (this.decimals !== null) {
                numberOfDecimals = numberOfDecimals < this.decimals ? numberOfDecimals : this.decimals;
            }
            this.setProperties({ value: this.roundNumber(value, numberOfDecimals) }, true);
        }
        this.modifyText();
        if (!this.strictMode) {
            this.validateState();
        }
    };
    ;
    NumericTextBox.prototype.modifyText = function () {
        if (this.value || this.value === 0) {
            var value = this.formatNumber();
            var elementValue = this.isFocused ? value : this.instance.getNumberFormat(this.cultureInfo)(this.value);
            this.setElementValue(elementValue);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { 'aria-valuenow': value });
            this.hiddenInput.value = value;
        }
        else {
            this.setElementValue('');
            this.element.removeAttribute('aria-valuenow');
            this.hiddenInput.value = null;
        }
    };
    ;
    NumericTextBox.prototype.setElementValue = function (val, element) {
        __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].setValue(val, (element ? element : this.element), this.floatLabelType);
    };
    NumericTextBox.prototype.validateState = function () {
        this.isValidState = true;
        if (this.value || this.value === 0) {
            this.isValidState = !(this.value > this.max || this.value < this.min);
        }
        this.checkErrorClass();
    };
    NumericTextBox.prototype.formatNumber = function () {
        var numberOfDecimals;
        var currentValue = this.value;
        var decimalPart = currentValue.toString().split('.')[1];
        numberOfDecimals = !decimalPart || !decimalPart.length ? 0 : decimalPart.length;
        if (this.decimals !== null) {
            numberOfDecimals = numberOfDecimals < this.decimals ? numberOfDecimals : this.decimals;
        }
        return this.instance.getNumberFormat({
            maximumFractionDigits: numberOfDecimals,
            minimumFractionDigits: numberOfDecimals, useGrouping: false
        })(this.value);
    };
    ;
    NumericTextBox.prototype.trimValue = function (value) {
        if (value > this.max) {
            return this.max;
        }
        if (value < this.min) {
            return this.min;
        }
        return value;
    };
    ;
    NumericTextBox.prototype.roundNumber = function (value, precision) {
        var result = value;
        var decimals = precision || 0;
        var result1 = result.toString().split('e');
        result = Math.round(Number(result1[0] + 'e' + (result1[1] ? (Number(result1[1]) + decimals) : decimals)));
        var result2 = result.toString().split('e');
        result = Number(result2[0] + 'e' + (result2[1] ? (Number(result2[1]) - decimals) : -decimals));
        return Number(result.toFixed(decimals));
    };
    ;
    NumericTextBox.prototype.cancelEvent = function (event) {
        event.preventDefault();
        return false;
    };
    NumericTextBox.prototype.keyPressHandler = function (event) {
        if (event.which === 0 || event.metaKey || event.ctrlKey || event.keyCode === 8 || event.keyCode === 13) {
            return true;
        }
        var currentChar = String.fromCharCode(event.which);
        var text = this.element.value;
        text = text.substring(0, this.element.selectionStart) + currentChar + text.substring(this.element.selectionEnd);
        if (!this.numericRegex().test(text)) {
            event.preventDefault();
            event.stopPropagation();
            return false;
        }
        else {
            return true;
        }
    };
    ;
    NumericTextBox.prototype.numericRegex = function () {
        var numericObject = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getNumericObject"])(this.locale);
        var decimalSeparator = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getValue"])('decimal', numericObject);
        var fractionRule = '*';
        if (decimalSeparator === DECIMALSEPARATOR) {
            decimalSeparator = '\\' + decimalSeparator;
        }
        if (this.decimals === 0) {
            return INTREGEXP;
        }
        if (this.decimals && this.validateDecimalOnType) {
            fractionRule = '{0,' + this.decimals + '}';
        }
        return new RegExp('^(-)?(((\\d+(' + decimalSeparator + '\\d' + fractionRule +
            ')?)|(' + decimalSeparator + '\\d' + fractionRule + ')))?$');
    };
    ;
    NumericTextBox.prototype.mouseWheel = function (event) {
        event.preventDefault();
        var delta;
        var rawEvent = event;
        if (rawEvent.wheelDelta) {
            delta = rawEvent.wheelDelta / 120;
        }
        else if (rawEvent.detail) {
            delta = -rawEvent.detail / 3;
        }
        if (delta > 0) {
            this.action(INCREMENT);
        }
        else if (delta < 0) {
            this.action(DECREMENT);
        }
        this.cancelEvent(event);
    };
    NumericTextBox.prototype.focusIn = function (event) {
        if (!this.enabled || this.readonly) {
            return;
        }
        this.isFocused = true;
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.container], ERROR);
        this.prevValue = this.value;
        if ((this.value || this.value === 0)) {
            var formatValue = this.formatNumber();
            this.setElementValue(formatValue);
            if (!this.isPrevFocused) {
                this.element.setSelectionRange(0, formatValue.length);
            }
        }
        if (!__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'mousewheel DOMMouseScroll', this.mouseWheel, this);
        }
    };
    ;
    NumericTextBox.prototype.focusOut = function (event) {
        var _this = this;
        if (this.isPrevFocused) {
            event.preventDefault();
            if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
                var value_1 = this.element.value;
                this.element.focus();
                this.isPrevFocused = false;
                var ele_1 = this.element;
                setTimeout(function () {
                    _this.setElementValue(value_1, ele_1);
                }, 200);
            }
        }
        else {
            this.isFocused = false;
            if (!this.element.value.length) {
                this.setProperties({ value: null }, true);
            }
            var parsedInput = this.instance.getNumberParser({ format: 'n' })(this.element.value);
            this.updateValue(parsedInput);
            if (!__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'mousewheel DOMMouseScroll', this.mouseWheel);
            }
        }
    };
    ;
    NumericTextBox.prototype.mouseDownOnSpinner = function (event) {
        var _this = this;
        if (this.isFocused) {
            this.isPrevFocused = true;
            event.preventDefault();
        }
        if (!this.getElementData(event)) {
            return;
        }
        var result = this.getElementData(event);
        var target = event.currentTarget;
        var action = (target.classList.contains(SPINUP)) ? INCREMENT : DECREMENT;
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(target, 'mouseleave', this.mouseUpClick, this);
        this.timeOut = setInterval(function () { _this.isCalled = true; _this.action(action); }, 150);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(document, 'mouseup', this.mouseUpClick, this);
    };
    NumericTextBox.prototype.touchMoveOnSpinner = function (event) {
        var target = document.elementFromPoint(event.clientX, event.clientY);
        if (!(target.classList.contains(SPINICON))) {
            clearInterval(this.timeOut);
        }
    };
    NumericTextBox.prototype.mouseUpOnSpinner = function (event) {
        if (this.isPrevFocused) {
            this.element.focus();
            if (!__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
                this.isPrevFocused = false;
            }
        }
        if (!__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
            event.preventDefault();
        }
        if (!this.getElementData(event)) {
            return;
        }
        var target = event.currentTarget;
        var action = (target.classList.contains(SPINUP)) ? INCREMENT : DECREMENT;
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(target, 'mouseleave', this.mouseUpClick);
        if (!this.isCalled) {
            this.action(action);
        }
        this.isCalled = false;
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(document, 'mouseup', this.mouseUpClick);
    };
    NumericTextBox.prototype.getElementData = function (event) {
        if ((event.which && event.which === 3) || (event.button && event.button === 2)
            || !this.enabled || this.readonly) {
            return false;
        }
        clearInterval(this.timeOut);
        return true;
    };
    NumericTextBox.prototype.mouseUpClick = function (event) {
        event.stopPropagation();
        clearInterval(this.timeOut);
        this.isCalled = false;
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.spinUp, 'mouseleave', this.mouseUpClick);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.spinDown, 'mouseleave', this.mouseUpClick);
    };
    NumericTextBox.prototype.increment = function (step) {
        if (step === void 0) { step = this.step; }
        this.changeValue(this.performAction(this.value, step, INCREMENT));
    };
    NumericTextBox.prototype.decrement = function (step) {
        if (step === void 0) { step = this.step; }
        this.changeValue(this.performAction(this.value, step, DECREMENT));
    };
    NumericTextBox.prototype.destroy = function () {
        this.unwireEvents();
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.hiddenInput);
        if (this.showSpinButton) {
            this.unwireSpinBtnEvents();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.spinUp);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.spinDown);
        }
        this.container.parentElement.appendChild(this.cloneElement);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.container);
        _super.prototype.destroy.call(this);
    };
    NumericTextBox.prototype.getText = function () {
        return this.element.value;
    };
    NumericTextBox.prototype.getPersistData = function () {
        var keyEntity = ['value'];
        return this.addOnPersist(keyEntity);
    };
    NumericTextBox.prototype.onPropertyChanged = function (newProp, oldProp) {
        var elementVal;
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'width':
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.container, { 'width': __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(newProp.width) });
                    break;
                case 'cssClass':
                    __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].setCssClass(newProp.cssClass, [this.container], oldProp.cssClass);
                    break;
                case 'enabled':
                    __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].setEnabled(newProp.enabled, this.element);
                    break;
                case 'enableRtl':
                    __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].setEnableRtl(newProp.enableRtl, [this.container]);
                    break;
                case 'readonly':
                    __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].setReadonly(newProp.readonly, this.element);
                    if (this.readonly) {
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { 'aria-readonly': 'true' });
                    }
                    else {
                        this.element.removeAttribute('aria-readonly');
                    }
                    break;
                case 'placeholder':
                    __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].setPlaceholder(newProp.placeholder, this.element);
                    break;
                case 'step':
                    this.step = newProp.step;
                    this.validateStep();
                    break;
                case 'showSpinButton':
                    if (newProp.showSpinButton) {
                        this.spinBtnCreation();
                    }
                    else {
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.spinUp);
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.spinDown);
                    }
                    break;
                case 'value':
                    this.updateValue(newProp.value);
                    break;
                case 'min':
                case 'max':
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setValue"])(prop, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getValue"])(prop, newProp), this);
                    this.validateMinMax();
                    this.updateValue(this.value);
                    break;
                case 'strictMode':
                    this.strictMode = newProp.strictMode;
                    this.updateValue(this.value);
                    this.validateState();
                    break;
                case 'locale':
                    this.initCultureFunc();
                    this.l10n.setLocale(this.locale);
                    this.updatePlaceholder();
                    __WEBPACK_IMPORTED_MODULE_1__input_input__["a" /* Input */].setPlaceholder(this.placeholder, this.element);
                    this.updateValue(this.value);
                    break;
                case 'currency':
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setValue"])(prop, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getValue"])(prop, newProp), this.cultureInfo);
                    this.updateValue(this.value);
                    break;
                case 'format':
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setValue"])(prop, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getValue"])(prop, newProp), this);
                    this.initCultureInfo();
                    this.updateValue(this.value);
                    break;
                case 'decimals':
                    this.decimals = newProp.decimals;
                    this.updateValue(this.value);
            }
        }
    };
    NumericTextBox.prototype.getModuleName = function () {
        return 'numerictextbox';
    };
    return NumericTextBox;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Component"]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], NumericTextBox.prototype, "cssClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], NumericTextBox.prototype, "value", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(-(Number.MAX_VALUE))
], NumericTextBox.prototype, "min", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(Number.MAX_VALUE)
], NumericTextBox.prototype, "max", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(1)
], NumericTextBox.prototype, "step", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], NumericTextBox.prototype, "width", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], NumericTextBox.prototype, "placeholder", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(true)
], NumericTextBox.prototype, "showSpinButton", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], NumericTextBox.prototype, "readonly", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(true)
], NumericTextBox.prototype, "enabled", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], NumericTextBox.prototype, "enableRtl", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], NumericTextBox.prototype, "enablePersistence", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('n2')
], NumericTextBox.prototype, "format", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], NumericTextBox.prototype, "decimals", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], NumericTextBox.prototype, "currency", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(true)
], NumericTextBox.prototype, "strictMode", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], NumericTextBox.prototype, "validateDecimalOnType", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('Never')
], NumericTextBox.prototype, "floatLabelType", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], NumericTextBox.prototype, "created", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], NumericTextBox.prototype, "destroyed", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], NumericTextBox.prototype, "change", void 0);
NumericTextBox = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], NumericTextBox);

var numerictextboxHelper = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["CreateBuilder"])(NumericTextBox);


/***/ }),
/* 229 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__list_base__ = __webpack_require__(141);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__list_base__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__list_base__["b"]; });



/***/ }),
/* 230 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__list_view_index__ = __webpack_require__(231);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_index__ = __webpack_require__(229);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__common_index__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_1__common_index__["b"]; });




/***/ }),
/* 231 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__list_view__ = __webpack_require__(232);
/* unused harmony namespace reexport */



/***/ }),
/* 232 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export FieldSettings */
/* unused harmony export ListView */
/* unused harmony export listViewBuilder */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_data__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_list_base__ = __webpack_require__(141);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};







var effectsConfig = {
    'None': [],
    'SlideLeft': ['SlideRightOut', 'SlideLeftOut', 'SlideLeftIn', 'SlideRightIn'],
    'SlideDown': ['SlideTopOut', 'SlideBottomOut', 'SlideBottomIn', 'SlideTopIn'],
    'Zoom': ['FadeOut', 'FadeZoomOut', 'FadeZoomIn', 'FadeIn'],
    'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']
};
var effectsRTLConfig = {
    'None': [],
    'SlideLeft': ['SlideLeftOut', 'SlideRightOut', 'SlideRightIn', 'SlideLeftIn'],
    'SlideDown': ['SlideBottomOut', 'SlideTopOut', 'SlideTopIn', 'SlideBottomIn'],
    'Zoom': ['FadeZoomOut', 'FadeOut', 'FadeIn', 'FadeZoomIn'],
    'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']
};
var classNames = {
    root: 'e-listview',
    hover: 'e-hover',
    selected: 'e-active',
    parentItem: 'e-list-parent',
    listItem: 'e-list-item',
    listItemText: 'e-list-text',
    grpListItem: 'e-list-group-item',
    hasChild: 'e-has-child',
    view: 'e-view',
    header: 'e-header',
    headerText: 'e-headertext',
    text: 'e-text',
    disable: 'e-disabled',
    content: 'e-content',
    icon: 'e-icons',
    backIcon: 'e-icon-back'
};
var FieldSettings = (function (_super) {
    __extends(FieldSettings, _super);
    function FieldSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return FieldSettings;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["ChildProperty"]));

__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('id')
], FieldSettings.prototype, "id", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('text')
], FieldSettings.prototype, "text", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('isChecked')
], FieldSettings.prototype, "isChecked", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('isVisible')
], FieldSettings.prototype, "isVisible", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('enabled')
], FieldSettings.prototype, "enabled", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('iconCss')
], FieldSettings.prototype, "iconCss", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('child')
], FieldSettings.prototype, "child", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('tooltip')
], FieldSettings.prototype, "tooltip", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('groupBy')
], FieldSettings.prototype, "groupBy", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('text')
], FieldSettings.prototype, "sortBy", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('htmlAttributes')
], FieldSettings.prototype, "htmlAttributes", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('tableName')
], FieldSettings.prototype, "tableName", void 0);
var ListView = (function (_super) {
    __extends(ListView, _super);
    function ListView(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.curDSLevel = [];
        _this.curViewDS = [];
        _this.keyConfigs = {
            moveDown: 'downarrow',
            moveUp: 'uparrow',
            select: 'enter',
            back: 'backspace'
        };
        _this.animateOptions = {};
        _this.aniObj = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Animation"](_this.animateOptions);
        return _this;
    }
    ListView.prototype.onPropertyChanged = function (newProp, oldProp) {
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'htmlAttributes':
                    this.setHTMLAttribute();
                    break;
                case 'cssClass':
                    this.setCSSClass(oldProp.cssClass);
                    break;
                case 'enable':
                    this.setEnable();
                    break;
                case 'width':
                case 'height':
                    this.setSize();
                    break;
                case 'enableRtl':
                    this.setEnableRTL();
                    break;
                case 'fields':
                    this.listBaseOption.fields = this.fields.properties;
                    this.reRender();
                    break;
                case 'headerTitle':
                    if (!this.curDSLevel.length) {
                        this.header(this.headerTitle, false);
                    }
                    break;
                case 'showHeader':
                    {
                        this.header(this.headerTitle, false);
                    }
                    break;
                case 'dataSource':
                    this.reRender();
                    break;
                case 'sortOrder':
                case 'showIcon':
                    this.listBaseOption.showIcon = this.showIcon;
                    this.curViewDS = this.getSubDS();
                    this.resetCurrentList();
                    break;
                default:
                    break;
            }
        }
    };
    ListView.prototype.setHTMLAttribute = function () {
        if (Object.keys(this.htmlAttributes).length) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, this.htmlAttributes);
        }
    };
    ListView.prototype.setCSSClass = function (oldCSSClass) {
        if (this.cssClass) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], this.cssClass.split(' '));
        }
        if (oldCSSClass) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], oldCSSClass.split(' '));
        }
    };
    ListView.prototype.setSize = function () {
        this.element.style.height = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(this.height);
        this.element.style.width = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(this.width);
    };
    ListView.prototype.setEnable = function () {
        this.enableElement(this.element, this.enable);
    };
    ListView.prototype.setEnableRTL = function () {
        if (this.enableRtl) {
            this.element.classList.add('e-rtl');
        }
        else {
            this.element.classList.remove('e-rtl');
        }
    };
    ListView.prototype.enableElement = function (element, isEnabled) {
        if (isEnabled) {
            element.classList.remove(classNames.disable);
        }
        else {
            element.classList.add(classNames.disable);
        }
    };
    ListView.prototype.header = function (text, showBack) {
        if (this.headerEle === undefined && this.showHeader) {
            this.headerEle = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: classNames.header });
            var innerHeaderEle = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('span', { className: classNames.headerText, innerHTML: this.headerTitle });
            var textEle = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: classNames.text, innerHTML: innerHeaderEle.outerHTML });
            var hedBackButton = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', {
                className: classNames.icon + ' ' + classNames.backIcon + ' e-but-back',
                attrs: { style: 'display:none;' }
            });
            this.headerEle.appendChild(hedBackButton);
            this.headerEle.appendChild(textEle);
            this.element.classList.add('e-has-header');
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["prepend"])([this.headerEle], this.element);
        }
        else if (this.headerEle) {
            if (this.showHeader) {
                this.headerEle.style.display = '';
                var textEle = this.headerEle.querySelector('.' + classNames.headerText);
                var hedBackButton = this.headerEle.querySelector('.' + classNames.backIcon);
                textEle.innerHTML = text;
                if (showBack === true) {
                    hedBackButton.style.display = '';
                }
                else {
                    hedBackButton.style.display = 'none';
                }
            }
            else {
                this.headerEle.style.display = 'none';
            }
        }
    };
    ListView.prototype.switchView = function (fromView, toView, reverse) {
        var _this = this;
        if (fromView && toView) {
            var fPos_1 = fromView.style.position;
            var overflow_1 = (this.element.style.overflow !== 'hidden') ? this.element.style.overflow : '';
            fromView.style.position = 'absolute';
            fromView.classList.add('e-view');
            var anim = void 0;
            var duration = this.animation.duration;
            if (this.animation.effect) {
                anim = (this.enableRtl ? effectsRTLConfig[this.animation.effect] : effectsConfig[this.animation.effect]);
            }
            else {
                var slideLeft = 'SlideLeft';
                var slideRight = 'SlideRight';
                anim = (this.enableRtl ? effectsRTLConfig[slideLeft] : effectsConfig[slideRight]);
                duration = 0;
            }
            this.element.style.overflow = 'hidden';
            this.aniObj.animate(fromView, {
                name: (reverse === true ? anim[0] : anim[1]),
                duration: duration,
                timingFunction: this.animation.easing,
                end: function (model) {
                    fromView.style.display = 'none';
                    _this.element.style.overflow = overflow_1;
                    fromView.style.position = fPos_1;
                    fromView.classList.remove('e-view');
                }
            });
            toView.style.display = '';
            this.aniObj.animate(toView, {
                name: (reverse === true ? anim[2] : anim[3]),
                duration: duration,
                timingFunction: this.animation.easing,
                end: function () {
                    _this.trigger('actionComplete');
                }
            });
            this.curUL = toView;
        }
    };
    ListView.prototype.preRender = function () {
        this.listBaseOption = {
            template: this.template,
            groupTemplate: this.groupTemplate, expandCollapse: true, listClass: '',
            ariaAttributes: { itemRole: 'listitem', listRole: 'list', itemText: '',
                groupItemRole: 'group', wrapperRole: 'presentation' },
            fields: this.fields.properties, sortOrder: this.sortOrder, showIcon: this.showIcon
        };
    };
    ListView.prototype.clickHandler = function (e) {
        var target = e.target;
        var classList = target.classList;
        if (classList.contains(classNames.backIcon) || classList.contains(classNames.headerText)) {
            this.back();
        }
        else {
            var li = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(target.parentNode, '.' + classNames.listItem);
            if (li === null) {
                li = target;
            }
            this.setSelectLI(li, e);
        }
    };
    ListView.prototype.hoverHandler = function (e) {
        var curLi = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(e.target.parentNode, '.' + classNames.listItem);
        this.setHoverLI(curLi);
    };
    ListView.prototype.leaveHandler = function (e) {
        this.removeHover();
    };
    ;
    ListView.prototype.keyActionHandler = function (e) {
        e.preventDefault();
        switch (e.action) {
            case 'moveDown':
                this.hoverSiblingLI();
                break;
            case 'moveUp':
                this.hoverSiblingLI(true);
                break;
            case 'select':
                this.setSelectLI(this.curUL.querySelector('.' + classNames.hover), e);
                break;
            case 'back':
                this.back();
                break;
        }
    };
    ListView.prototype.swipeActionHandler = function (e) {
        if (e.swipeDirection === 'Right') {
            this.back();
        }
    };
    ListView.prototype.wireEvents = function () {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'click', this.clickHandler, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'mouseover', this.hoverHandler, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'mouseout', this.leaveHandler, this);
        this.keyboardModule = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["KeyboardEvents"](this.element, {
            keyAction: this.keyActionHandler.bind(this),
            keyConfigs: this.keyConfigs
        });
        this.touchModule = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Touch"](this.element, { swipe: this.swipeActionHandler.bind(this) });
    };
    ListView.prototype.unWireEvents = function () {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'click', this.clickHandler);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'mouseover', this.hoverHandler);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'mouseout', this.leaveHandler);
        this.keyboardModule.destroy();
        this.touchModule.destroy();
    };
    ListView.prototype.removeHover = function () {
        var hoverLI = this.element.querySelector('.' + classNames.hover);
        if (hoverLI) {
            hoverLI.classList.remove(classNames.hover);
        }
    };
    ListView.prototype.removeSelect = function () {
        var selectedLI = this.element.querySelectorAll('.' + classNames.selected);
        for (var _i = 0, selectedLI_1 = selectedLI; _i < selectedLI_1.length; _i++) {
            var ele = selectedLI_1[_i];
            ele.removeAttribute('aria-selected');
            if (ele.className !== '') {
                ele.classList.remove(classNames.selected);
            }
        }
    };
    ListView.prototype.isValidLI = function (li) {
        return (li && li.classList.contains(classNames.listItem)
            && !li.classList.contains(classNames.grpListItem)
            && !li.classList.contains(classNames.disable));
    };
    ListView.prototype.setSelectLI = function (li, e) {
        if (this.isValidLI(li)
            && !li.classList.contains(classNames.selected)
            && this.enable) {
            this.removeSelect();
            li.classList.add(classNames.selected);
            li.setAttribute('aria-selected', 'true');
            this.removeHover();
            var data = this.getItemData(li);
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(data) && typeof this.dataSource[0] === 'string') {
                this.selectedItems = {
                    item: li,
                    text: li.innerText.trim(),
                    data: this.dataSource
                };
            }
            else {
                this.selectedItems = {
                    item: li,
                    text: data[this.listBaseOption.fields.text],
                    data: data
                };
            }
            var eventArgs = {};
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["merge"])(eventArgs, this.selectedItems);
            if (e) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["merge"])(eventArgs, { isInteracted: true, event: e });
            }
            this.trigger('select', eventArgs);
            this.selectedLI = li;
            this.renderSubList(li);
        }
    };
    ListView.prototype.setHoverLI = function (li) {
        if (this.isValidLI(li) && !li.classList.contains(classNames.hover) && this.enable) {
            var lastLi = this.element.querySelectorAll('.' + classNames.hover);
            if (lastLi && lastLi.length) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])(lastLi, classNames.hover);
            }
            if (!li.classList.contains(classNames.selected)) {
                li.classList.add(classNames.hover);
            }
        }
    };
    ListView.prototype.hoverSiblingLI = function (prev) {
        var lastLi = this.curUL.querySelector('.' + classNames.hover);
        var siblingLI;
        if (!lastLi) {
            lastLi = this.curUL.querySelector('.' + classNames.selected);
        }
        if (lastLi) {
            siblingLI = __WEBPACK_IMPORTED_MODULE_2__common_list_base__["b" /* ListBase */].getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), lastLi, prev);
        }
        else {
            if (prev) {
                var curLIs = this.curUL.querySelectorAll('.' + classNames.listItem);
                siblingLI = curLIs[curLIs.length - 1];
            }
            else {
                siblingLI = this.curUL.querySelector('.' + classNames.listItem);
            }
        }
        this.setHoverLI(siblingLI);
    };
    ListView.prototype.getSubDS = function () {
        var levelKeys = this.curDSLevel;
        if (levelKeys.length) {
            var ds = this.localData;
            for (var _i = 0, levelKeys_1 = levelKeys; _i < levelKeys_1.length; _i++) {
                var key = levelKeys_1[_i];
                this.curDSJSON = this.findItemFromDS(ds, { id: key });
                ds = this.curDSJSON ? this.curDSJSON[this.fields.child] : ds;
            }
            return ds;
        }
        return this.localData;
    };
    ListView.prototype.getItemData = function (li) {
        var fields = this.getElementUID(li);
        var curDS = this.dataSource;
        return this.findItemFromDS(curDS, fields);
    };
    ListView.prototype.findItemFromDS = function (dataSource, fields, parent) {
        var _this = this;
        var resultJSON;
        if (dataSource && dataSource.length && fields) {
            dataSource.some(function (data) {
                if ((fields.id || fields.text) &&
                    (!fields.id || data[_this.fields.id] === fields.id) &&
                    (!fields.text || data[_this.fields.text] === fields.text)) {
                    resultJSON = (parent ? dataSource : data);
                }
                else if (data.hasOwnProperty(_this.fields.child) && data[_this.fields.child].length) {
                    resultJSON = _this.findItemFromDS(data[_this.fields.child], fields, parent);
                }
                return !!resultJSON;
            });
        }
        else {
            resultJSON = dataSource;
        }
        return resultJSON;
    };
    ListView.prototype.getQuery = function () {
        var columns = [];
        var query = (this.query ? this.query : new __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_data__["Query"]());
        if (!this.query) {
            for (var _i = 0, _a = Object.keys(this.fields.properties); _i < _a.length; _i++) {
                var column = _a[_i];
                if (column !== 'tableName' && !!(this.fields[column]) &&
                    this.fields[column] !==
                        __WEBPACK_IMPORTED_MODULE_2__common_list_base__["b" /* ListBase */].defaultMappedFields[column]
                    && columns.indexOf(this.fields[column]) === -1) {
                    columns.push(this.fields[column]);
                }
            }
            query.select(columns);
            if (this.fields.properties.hasOwnProperty('tableName')) {
                query.from(this.fields.tableName);
            }
        }
        return query;
    };
    ListView.prototype.setViewDataSource = function (dataSource) {
        if (dataSource === void 0) { dataSource = this.localData; }
        if (dataSource && this.fields.groupBy) {
            this.curViewDS = __WEBPACK_IMPORTED_MODULE_2__common_list_base__["b" /* ListBase */].groupDataSource(dataSource, this.fields, this.sortOrder);
        }
        else if (dataSource && this.sortOrder !== 'None') {
            this.curViewDS = __WEBPACK_IMPORTED_MODULE_2__common_list_base__["b" /* ListBase */].getDataSource(dataSource, __WEBPACK_IMPORTED_MODULE_2__common_list_base__["b" /* ListBase */].addSorting(this.sortOrder, this.fields.sortBy));
        }
        else {
            this.curViewDS = dataSource;
        }
    };
    ListView.prototype.isInAnimation = function () {
        return this.curUL.classList.contains('.e-animate');
    };
    ListView.prototype.setLocalData = function () {
        var _this = this;
        this.trigger('actionBegin');
        if (this.dataSource instanceof __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_data__["DataManager"]) {
            this.dataSource.executeQuery(this.getQuery()).then(function (e) {
                if (_this.isDestroyed) {
                    return;
                }
                _this.localData = e.result;
                _this.renderList();
                _this.trigger('actionComplete', e);
            }).catch(function (e) {
                if (_this.isDestroyed) {
                    return;
                }
                _this.trigger('actionFailure', e);
            });
        }
        else if (!this.dataSource || !this.dataSource.length) {
            var ul = this.element.querySelector('ul');
            if (ul) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["remove"])(ul);
                this.setProperties({ dataSource: __WEBPACK_IMPORTED_MODULE_2__common_list_base__["b" /* ListBase */].createJsonFromElement(ul) }, true);
                this.localData = this.dataSource;
                this.renderList();
                this.trigger('actionComplete', { data: this.localData });
            }
        }
        else {
            this.localData = this.dataSource;
            this.renderList();
            this.trigger('actionComplete', { data: this.localData });
        }
    };
    ListView.prototype.reRender = function () {
        this.element.innerHTML = '';
        this.curUL = this.headerEle = undefined;
        this.setLocalData();
        this.header();
        this.contentContainer = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: classNames.content });
        this.element.appendChild(this.contentContainer);
        this.renderIntoDom(this.ulElement);
    };
    ListView.prototype.resetCurrentList = function () {
        this.setViewDataSource(this.curViewDS);
        this.contentContainer.innerHTML = '';
        this.createList();
        this.renderIntoDom(this.curUL);
    };
    ListView.prototype.createList = function () {
        this.ulElement = this.curUL = __WEBPACK_IMPORTED_MODULE_2__common_list_base__["b" /* ListBase */].createList(this.curViewDS, this.listBaseOption);
        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);
    };
    ListView.prototype.renderSubList = function (li) {
        var uID = li.getAttribute('data-uid');
        if (li.classList.contains(classNames.hasChild) && uID) {
            var ul = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(li.parentNode, '.' + classNames.parentItem);
            var ele = this.element.querySelector('[pid=\'' + uID + '\']');
            this.curDSLevel.push(uID);
            this.setViewDataSource(this.getSubDS());
            if (!ele) {
                ele = __WEBPACK_IMPORTED_MODULE_2__common_list_base__["b" /* ListBase */].createListFromJson(this.curViewDS, this.listBaseOption, this.curDSLevel.length);
                ele.setAttribute('pID', uID);
                ele.style.display = 'none';
                this.renderIntoDom(ele);
            }
            this.switchView(ul, ele);
            this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);
            this.header(this.selectedItems.data[this.listBaseOption.fields.text], true);
            this.selectedLI = undefined;
        }
    };
    ListView.prototype.renderIntoDom = function (ele) {
        this.contentContainer.appendChild(ele);
    };
    ListView.prototype.renderList = function () {
        this.setViewDataSource();
        this.createList();
        this.contentContainer = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: classNames.content });
        this.element.appendChild(this.contentContainer);
        this.renderIntoDom(this.ulElement);
    };
    ListView.prototype.getElementUID = function (obj) {
        var fields = {};
        if (obj instanceof Element) {
            fields.id = obj.getAttribute('data-uid');
        }
        else {
            fields = obj;
        }
        return fields;
    };
    ListView.prototype.render = function () {
        this.element.classList.add(classNames.root);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { role: 'list' });
        this.setCSSClass();
        this.setEnableRTL();
        this.setEnable();
        this.setSize();
        this.wireEvents();
        this.header();
        this.setLocalData();
        this.setHTMLAttribute();
        this.rippleFn = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["rippleEffect"])(this.element, {
            selector: '.' + classNames.listItem
        });
    };
    ListView.prototype.destroy = function () {
        this.unWireEvents();
        var classAr = [classNames.root, this.cssClass, classNames.disable, 'e-rtl',
            'e-has-header'];
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], classAr);
        this.rippleFn();
        _super.prototype.destroy.call(this);
    };
    ListView.prototype.back = function () {
        var pID = this.curDSLevel[this.curDSLevel.length - 1];
        if (pID === undefined || this.isInAnimation()) {
            return;
        }
        this.curDSLevel.pop();
        this.setViewDataSource(this.getSubDS());
        var toUL = this.element.querySelector('[data-uid=\'' + pID + '\']');
        var fromUL = this.curUL;
        if (!toUL) {
            this.createList();
            this.renderIntoDom(this.ulElement);
            toUL = this.curUL;
        }
        else {
            toUL = toUL.parentElement;
        }
        var text = this.curDSJSON[this.fields.text];
        this.switchView(fromUL, toUL, true);
        this.removeSelect();
        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);
        this.header((this.curDSLevel.length ? text : this.headerTitle), (this.curDSLevel.length ? true : false));
    };
    ListView.prototype.selectItem = function (obj) {
        var resultJSON = this.getItemData(obj);
        if (resultJSON) {
            var li = this.element.querySelector('[data-uid="' + resultJSON[this.fields.id] + '"]');
            if (li) {
                this.setSelectLI(li);
            }
        }
    };
    ListView.prototype.getSelectedItem = function () {
        return this.selectedItems;
    };
    ListView.prototype.findItem = function (fields) {
        return this.findItemFromDS(this.dataSource, fields);
    };
    ListView.prototype.enableItem = function (obj) {
        var resultJSON = this.getItemData(obj);
        if (resultJSON) {
            var li = this.element.querySelector('[data-uid="' + resultJSON[this.fields.id] + '"]');
            if (li) {
                li.classList.remove(classNames.disable);
            }
            delete resultJSON[this.fields.enabled];
        }
    };
    ListView.prototype.disableItem = function (obj) {
        var resultJSON = this.getItemData(obj);
        if (resultJSON) {
            var li = this.element.querySelector('[data-uid="' + resultJSON[this.fields.id] + '"]');
            if (li) {
                li.classList.add(classNames.disable);
            }
            resultJSON[this.fields.enabled] = false;
        }
    };
    ListView.prototype.showItem = function (obj) {
        this.showHideItem(obj, false, '');
    };
    ListView.prototype.hideItem = function (obj) {
        this.showHideItem(obj, true, 'none');
    };
    ListView.prototype.showHideItem = function (obj, isHide, display) {
        var resultJSON = this.getItemData(obj);
        if (resultJSON) {
            var li = this.element.querySelector('[data-uid="' + resultJSON[this.fields.id] + '"]');
            if (li) {
                li.style.display = display;
            }
            if (isHide) {
                resultJSON[this.fields.isVisible] = false;
            }
            else {
                delete resultJSON[this.fields.isVisible];
            }
        }
    };
    ListView.prototype.addItem = function (data, fields) {
        var ds = this.findItemFromDS(this.dataSource, fields);
        var child = ds[this.fields.child];
        if (!child) {
            child = [];
        }
        child = child.concat(data);
        if (ds instanceof Array) {
            this.dataSource = this.localData = ds.concat(data);
            this.setViewDataSource();
        }
        else {
            ds[this.fields.child] = child;
        }
        this.resetCurrentList();
    };
    ListView.prototype.removeItem = function (obj) {
        var _this = this;
        var fields = this.getElementUID(obj);
        var curDS = this.findItemFromDS(this.dataSource, fields, true);
        if (curDS && obj) {
            var curAr_1;
            var idx_1;
            curDS.some(function (data, index, arr) {
                if ((fields.id || fields.text) &&
                    (!fields.id || data[_this.fields.id] === fields.id) &&
                    (!fields.text || data[_this.fields.text] === fields.text)) {
                    curAr_1 = arr;
                    idx_1 = index;
                    return true;
                }
                return false;
            });
            curAr_1.splice(idx_1, 1);
            this.resetCurrentList();
        }
    };
    ListView.prototype.getModuleName = function () {
        return 'listview';
    };
    ListView.prototype.getPersistData = function () {
        return this.addOnPersist(['cssClass', 'enableRtl', 'htmlAttributes',
            'enable', 'fields', 'animation', 'headerTitle',
            'sortOrder', 'showIcon', 'height', 'width']);
    };
    return ListView;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Component"]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])()
], ListView.prototype, "cssClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])({})
], ListView.prototype, "htmlAttributes", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(true)
], ListView.prototype, "enable", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])([])
], ListView.prototype, "dataSource", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])()
], ListView.prototype, "query", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Complex"])(__WEBPACK_IMPORTED_MODULE_2__common_list_base__["b" /* ListBase */].defaultMappedFields, FieldSettings)
], ListView.prototype, "fields", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])({ effect: 'SlideLeft', duration: 400, easing: 'ease' })
], ListView.prototype, "animation", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('None')
], ListView.prototype, "sortOrder", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], ListView.prototype, "showIcon", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], ListView.prototype, "headerTitle", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], ListView.prototype, "showHeader", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], ListView.prototype, "height", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], ListView.prototype, "width", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], ListView.prototype, "template", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], ListView.prototype, "groupTemplate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], ListView.prototype, "select", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], ListView.prototype, "actionBegin", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], ListView.prototype, "actionComplete", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], ListView.prototype, "actionFailure", void 0);
ListView = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], ListView);

var listViewBuilder = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["CreateBuilder"])(ListView);


/***/ }),
/* 233 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__h_scroll__ = __webpack_require__(142);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__h_scroll__["a"]; });



/***/ }),
/* 234 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_index__ = __webpack_require__(233);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "HScroll", function() { return __WEBPACK_IMPORTED_MODULE_0__common_index__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toolbar_index__ = __webpack_require__(235);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Item", function() { return __WEBPACK_IMPORTED_MODULE_1__toolbar_index__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Toolbar", function() { return __WEBPACK_IMPORTED_MODULE_1__toolbar_index__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "toolbarBuilder", function() { return __WEBPACK_IMPORTED_MODULE_1__toolbar_index__["c"]; });




/***/ }),
/* 235 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toolbar__ = __webpack_require__(236);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__toolbar__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__toolbar__["b"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_0__toolbar__["c"]; });



/***/ }),
/* 236 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Item; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Toolbar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return toolbarBuilder; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_popups__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_buttons__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_h_scroll__ = __webpack_require__(142);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};









var CLS_ITEMS = 'e-toolbar-items';
var CLS_ITEM = 'e-toolbar-item';
var CLS_RTL = 'e-rtl';
var CLS_SEPARATOR = 'e-separator';
var CLS_POPUPICON = 'e-popup-up-icon';
var CLS_POPUPDOWN = 'e-popup-down-icon';
var CLS_TEMPLATE = 'e-template';
var CLS_DISABLE = 'e-overlay';
var CLS_POPUPTEXT = 'e-toolbar-text';
var CLS_TBARTEXT = 'e-popup-text';
var CLS_TBAROVERFLOW = 'e-overflow-show';
var CLS_POPOVERFLOW = 'e-overflow-hide';
var CLS_TBARBTN = 'e-tbar-btn';
var CLS_TBARNAV = 'e-hor-nav';
var CLS_TBARSCRLNAV = 'e-scroll-nav';
var CLS_TBARRIGHT = 'e-toolbar-right';
var CLS_TBARLEFT = 'e-toolbar-left';
var CLS_TBARCENTER = 'e-toolbar-center';
var CLS_TBARPOS = 'e-tbar-pos';
var CLS_TBARSCROLL = 'e-hscroll-content';
var CLS_POPUPNAV = 'e-hor-nav';
var CLS_POPUPCLASS = 'e-toolbar-pop';
var CLS_POPUP = 'e-toolbar-popup';
var CLS_TBARBTNTEXT = 'e-tbar-btn-text';
var CLS_TBARNAVACT = 'e-nav-active';
var CLS_TBARIGNORE = 'e-ignore';
var Item = (function (_super) {
    __extends(Item, _super);
    function Item() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Item;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["ChildProperty"]));

__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Item.prototype, "id", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Item.prototype, "text", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('auto')
], Item.prototype, "width", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Item.prototype, "cssClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Item.prototype, "prefixIcon", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Item.prototype, "suffixIcon", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('None')
], Item.prototype, "overflow", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Item.prototype, "template", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('Button')
], Item.prototype, "type", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('Both')
], Item.prototype, "showTextOn", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], Item.prototype, "htmlAttributes", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Item.prototype, "tooltipText", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('left')
], Item.prototype, "align", void 0);
var Toolbar = (function (_super) {
    __extends(Toolbar, _super);
    function Toolbar(options, element) {
        var _this = _super.call(this, options, element) || this;
        _this.keyConfigs = {
            moveLeft: 'leftarrow',
            moveRight: 'rightarrow',
            moveUp: 'uparrow',
            moveDown: 'downarrow',
            popupOpen: 'enter',
            popupClose: 'escape',
            tab: 'tab',
            home: 'home',
            end: 'end',
        };
        return _this;
    }
    Toolbar.prototype.destroy = function () {
        var _this = this;
        var ele = this.element;
        _super.prototype.destroy.call(this);
        this.unwireEvents();
        while (ele.firstChild) {
            ele.removeChild(ele.firstChild);
        }
        if (this.trgtEle) {
            ele.appendChild(this.ctrlTem);
        }
        this.clearProperty();
        this.popObj = null;
        this.remove(this.element, 'e-toolpop');
        ele.removeAttribute('style');
        ['aria-disabled', 'aria-orientation', 'aria-haspopup', 'role'].forEach(function (attrb) {
            _this.element.removeAttribute(attrb);
        });
    };
    Toolbar.prototype.preRender = function () {
        this.trigger('beforeCreate');
        this.scrollModule = null;
        this.popObj = null;
        if (this.enableRtl) {
            this.add(this.element, CLS_RTL);
        }
    };
    Toolbar.prototype.wireEvents = function () {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'click', this.clickHandler, this);
        window.addEventListener('resize', this.resize.bind(this));
        this.keyModule = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["KeyboardEvents"](this.element, {
            keyAction: this.keyActionHandler.bind(this),
            keyConfigs: this.keyConfigs
        });
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'keydown', this.docKeyDown, this);
        this.element.setAttribute('tabIndex', '0');
    };
    Toolbar.prototype.docKeyDown = function (e) {
        if (e.keyCode === 9 && e.target.classList.contains('e-hor-nav') === true && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isVisible"])(this.popObj.element)) {
            this.popObj.hide({ name: 'SlideUp', duration: 100 });
        }
        if ((e.keyCode === 40 || e.keyCode === 38) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.popObj) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isVisible"])(this.popObj.element)) {
            e.preventDefault();
        }
    };
    Toolbar.prototype.unwireEvents = function () {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'click', this.clickHandler);
        this.destroyHScroll();
        this.keyModule.destroy();
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(document, 'scroll', this.docEvent);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'keydown', this.docKeyDown);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(document, 'click', this.docEvent);
    };
    Toolbar.prototype.clearProperty = function () {
        this.tbarEle = [];
        this.tbarAlgEle = { lefts: [], centers: [], rights: [] };
    };
    Toolbar.prototype.docEvent = function (e) {
        var popEle = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(e.target, '.e-popup');
        if (this.popObj && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isVisible"])(this.popObj.element) && !popEle) {
            this.popObj.hide({ name: 'SlideUp', duration: 100 });
        }
    };
    Toolbar.prototype.destroyHScroll = function () {
        if (this.scrollModule) {
            if (this.tbarAlign) {
                this.add(this.scrollModule.element, CLS_TBARPOS);
            }
            this.scrollModule.destroy();
            this.scrollModule = null;
        }
    };
    Toolbar.prototype.destroyItems = function () {
        [].slice.call(this.element.querySelectorAll('.' + CLS_ITEM)).forEach(function (el) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(el);
        });
        this.clearProperty();
    };
    Toolbar.prototype.destroyMode = function () {
        if (this.scrollModule) {
            this.remove(this.scrollModule.element, CLS_RTL);
            this.destroyHScroll();
        }
        if (this.popObj) {
            this.popupRefresh(this.popObj.element, true);
        }
    };
    Toolbar.prototype.add = function (ele, val) {
        ele.classList.add(val);
    };
    Toolbar.prototype.remove = function (ele, val) {
        ele.classList.remove(val);
    };
    Toolbar.prototype.elementFocus = function (ele) {
        var fChild = ele.firstElementChild;
        if (fChild) {
            fChild.focus();
            this.activeEleSwitch(ele);
        }
        else {
            ele.focus();
        }
    };
    Toolbar.prototype.clstElement = function (tbrNavChk, trgt) {
        var clst;
        if (tbrNavChk && this.popObj && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isVisible"])(this.popObj.element)) {
            clst = this.popObj.element.querySelector('.' + CLS_ITEM);
        }
        else if (this.element === trgt || tbrNavChk) {
            clst = this.element.querySelector('.' + CLS_ITEM);
        }
        else {
            clst = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(trgt, '.' + CLS_ITEM);
        }
        return clst;
    };
    Toolbar.prototype.keyHandling = function (clst, e, trgt, navChk, scrollChk) {
        var popObj = this.popObj;
        var rootEle = this.element;
        var popAnimate = { name: 'SlideUp', duration: 100 };
        switch (e.action) {
            case 'moveRight':
                if (rootEle === trgt) {
                    this.elementFocus(clst);
                }
                else if (!navChk) {
                    this.eleFocus(clst, 'next');
                }
                break;
            case 'moveLeft':
                if (!navChk) {
                    this.eleFocus(clst, 'previous');
                }
                break;
            case 'home':
            case 'end':
                var ele = void 0;
                var nodes = void 0;
                if (clst) {
                    var popupCheck = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(clst, '.e-popup');
                    if (popupCheck) {
                        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isVisible"])(this.popObj.element)) {
                            nodes = popupCheck.children;
                            if (e.action === 'home') {
                                ele = nodes[0];
                            }
                            else {
                                ele = nodes[nodes.length - 1];
                            }
                        }
                    }
                    else {
                        nodes = this.element.querySelectorAll('.' + CLS_ITEMS + ' .' + CLS_ITEM);
                        if (e.action === 'home') {
                            ele = nodes[0];
                        }
                        else {
                            ele = nodes[nodes.length - 1];
                        }
                    }
                    if (ele) {
                        this.elementFocus(ele);
                    }
                }
                break;
            case 'moveUp':
            case 'moveDown':
                var value = e.action === 'moveUp' ? 'previous' : 'next';
                if (popObj && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(trgt, '.e-popup')) {
                    var popEle = popObj.element;
                    var popFrstEle = popEle.firstElementChild;
                    if ((value === 'previous' && popFrstEle === clst) || (value === 'next' && popEle.lastElementChild === clst)) {
                        return;
                    }
                    else {
                        this.eleFocus(clst, value);
                    }
                }
                else if (e.action === 'moveDown') {
                    this.elementFocus(clst);
                }
                break;
            case 'tab':
                if (!scrollChk && !navChk) {
                    var ele_1 = clst.firstElementChild;
                    if (rootEle === trgt) {
                        if (this.activeEle) {
                            this.activeEle.focus();
                        }
                        else {
                            this.activeEleRemove(ele_1);
                            ele_1.focus();
                        }
                        this.element.removeAttribute('tabindex');
                    }
                }
                break;
            case 'popupClose':
                if (popObj) {
                    popObj.hide(popAnimate);
                }
                break;
            case 'popupOpen':
                if (!navChk) {
                    return;
                }
                if (popObj && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isVisible"])(popObj.element)) {
                    popObj.element.style.top = rootEle.offsetHeight + 'px';
                    popObj.show({ name: 'SlideDown', duration: 100 });
                }
                else {
                    popObj.hide(popAnimate);
                }
                break;
        }
    };
    Toolbar.prototype.keyActionHandler = function (e) {
        e.preventDefault();
        var clst;
        var trgt = e.target;
        var tbrNavChk = trgt.classList.contains(CLS_TBARNAV);
        var tbarScrollChk = trgt.classList.contains(CLS_TBARSCRLNAV);
        clst = this.clstElement(tbrNavChk, trgt);
        if (clst || tbarScrollChk) {
            this.keyHandling(clst, e, trgt, tbrNavChk, tbarScrollChk);
        }
    };
    Toolbar.prototype.eleFocus = function (closest, pos) {
        var sib = Object(closest)[pos + 'ElementSibling'];
        var contains = function (el) {
            return el.classList.contains(CLS_SEPARATOR) || el.classList.contains(CLS_DISABLE);
        };
        if (sib) {
            var skipEle = contains(sib);
            if (skipEle) {
                if (Object(sib)[pos + 'Sibling']) {
                    sib = Object(sib)[pos + 'Sibling'];
                    skipEle = contains(sib);
                    if (skipEle) {
                        this.eleFocus(sib, pos);
                        return;
                    }
                }
            }
            this.elementFocus(sib);
        }
        else if (this.tbarAlign) {
            var elem = Object(closest.parentElement)[pos + 'ElementSibling'];
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(elem) && elem.children.length > 0) {
                if (pos === 'next') {
                    var el = elem.querySelector('.' + CLS_ITEM);
                    if (contains(el)) {
                        this.eleFocus(el, pos);
                    }
                    else {
                        el.firstElementChild.focus();
                        this.activeEleSwitch(el);
                    }
                }
                else {
                    var el = elem.lastElementChild;
                    if (contains(el)) {
                        this.eleFocus(el, pos);
                    }
                    else {
                        this.elementFocus(el);
                    }
                }
            }
        }
    };
    Toolbar.prototype.clickHandler = function (e) {
        var trgt = e.target;
        var clsList = trgt.classList;
        var ele = this.element;
        var popupNav = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(trgt, ('.' + CLS_TBARNAV));
        if (!popupNav) {
            popupNav = trgt;
        }
        if (!ele.children[0].classList.contains('e-hscroll') && (clsList.contains(CLS_TBARNAV))) {
            clsList = trgt.querySelector('.e-icons').classList;
        }
        if (clsList.contains(CLS_POPUPICON) || clsList.contains(CLS_POPUPDOWN)) {
            this.popupClickHandler(ele, popupNav, CLS_RTL);
        }
        var itemObj;
        var clst = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(e.target, '.' + CLS_ITEM);
        if ((__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(clst) || clst.classList.contains(CLS_DISABLE)) && !popupNav.classList.contains(CLS_TBARNAV)) {
            return;
        }
        if (clst) {
            itemObj = this.items[this.tbarEle.indexOf(clst)];
        }
        var eventArgs = { originalEvent: e, item: itemObj };
        this.trigger('clicked', eventArgs);
    };
    ;
    Toolbar.prototype.popupClickHandler = function (ele, popupNav, CLS_RTL) {
        var popObj = this.popObj;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isVisible"])(popObj.element)) {
            popupNav.classList.remove(CLS_TBARNAVACT);
            popObj.hide({ name: 'SlideUp', duration: 100 });
        }
        else {
            if (ele.classList.contains(CLS_RTL)) {
                popObj.enableRtl = true;
                popObj.position = { X: 'left', Y: 'top' };
            }
            if (popObj.offsetX === 0 && !ele.classList.contains(CLS_RTL)) {
                popObj.enableRtl = false;
                popObj.position = { X: 'right', Y: 'top' };
            }
            popObj.dataBind();
            popObj.element.style.top = this.element.offsetHeight + 'px';
            popupNav.classList.add(CLS_TBARNAVACT);
            popObj.show({ name: 'SlideDown', duration: 100 });
        }
    };
    Toolbar.prototype.render = function () {
        this.initialize();
        this.renderControl();
        this.wireEvents();
    };
    Toolbar.prototype.initialize = function () {
        var width = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(this.width);
        var height = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(this.height);
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].info.name !== 'msie' || this.height !== 'auto') {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.element, { 'height': height });
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.element, { 'width': width });
        var ariaAttr = {
            'role': 'toolbar', 'aria-disabled': 'false', 'aria-haspopup': 'false', 'aria-orientation': 'horizontal',
        };
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, ariaAttr);
    };
    Toolbar.prototype.renderControl = function () {
        this.trgtEle = (this.element.children.length > 0) ? this.element.querySelector('div') : null;
        this.tbarAlgEle = { lefts: [], centers: [], rights: [] };
        this.renderItems();
        this.renderOverflowMode();
        if (this.tbarAlign) {
            this.itemPositioning();
        }
    };
    Toolbar.prototype.initHScroll = function (element, innerItems) {
        if (!this.scrollModule && this.checkOverflow(element, innerItems[0])) {
            if (this.tbarAlign) {
                this.element.querySelector('.' + CLS_ITEMS + ' .' + CLS_TBARCENTER).removeAttribute('style');
            }
            this.scrollModule = new __WEBPACK_IMPORTED_MODULE_3__common_h_scroll__["a" /* HScroll */]({ scrollStep: 50, enableRtl: this.enableRtl }, innerItems[0]);
            this.remove(this.scrollModule.element, CLS_TBARPOS);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.element, { overflow: 'hidden' });
        }
    };
    Toolbar.prototype.itemWidthCal = function (items) {
        var width = 0;
        [].slice.call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('.' + CLS_ITEM), items).forEach(function (el) {
            width += el.offsetWidth;
        });
        return width;
    };
    Toolbar.prototype.checkOverflow = function (element, innerItem) {
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(element) || __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(innerItem)) {
            return false;
        }
        var eleWidth = element.offsetWidth;
        var itemWidth;
        if (this.tbarAlign || this.scrollModule) {
            itemWidth = this.itemWidthCal(this.scrollModule ? innerItem.querySelector('.e-hscroll-content') : innerItem);
        }
        else {
            itemWidth = innerItem.offsetWidth;
        }
        var popNav = element.querySelector('.' + CLS_TBARNAV);
        var scrollNav = element.querySelector('.' + CLS_TBARSCRLNAV);
        if (itemWidth > eleWidth - (popNav ? popNav.offsetWidth : (scrollNav ? scrollNav.offsetWidth * 2 : 0))) {
            return true;
        }
        else {
            return false;
        }
    };
    Toolbar.prototype.refreshOverflow = function () {
        this.resize();
    };
    Toolbar.prototype.renderOverflowMode = function () {
        var ele = this.element;
        var innerItems = ele.querySelector('.' + CLS_ITEMS);
        if (ele && ele.children.length > 0) {
            this.offsetWid = ele.offsetWidth;
            switch (this.overflowMode) {
                case 'Scrollable':
                    this.destroyHScroll();
                    this.initHScroll(ele, ele.getElementsByClassName(CLS_ITEMS));
                    break;
                case 'Popup':
                    this.add(this.element, 'e-toolpop');
                    if (this.tbarAlign) {
                        this.removePositioning();
                    }
                    if (this.checkOverflow(ele, innerItems)) {
                        this.createPopupEle(ele, [].slice.call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('.' + CLS_ITEMS + ' .' + CLS_ITEM, ele)));
                        this.element.querySelector('.' + CLS_TBARNAV).setAttribute('tabIndex', '0');
                    }
                    if (this.tbarAlign) {
                        this.add(innerItems, CLS_TBARPOS);
                        this.itemPositioning();
                    }
                    break;
            }
        }
    };
    Toolbar.prototype.createPopupEle = function (ele, innerEle) {
        var innerNav = ele.querySelector('.' + CLS_TBARNAV);
        if (!innerNav) {
            this.createPopupIcon(ele);
        }
        innerNav = ele.querySelector('.' + CLS_TBARNAV);
        var eleWidth = (ele.offsetWidth - (innerNav.offsetWidth));
        this.element.classList.remove('e-rtl');
        this.checkPriority(ele, innerEle, eleWidth, true);
        if (this.enableRtl) {
            this.element.classList.add('e-rtl');
        }
        this.createPopup();
    };
    Toolbar.prototype.pushingPoppedEle = function (tbarObj, popupPri, ele, eleHeight) {
        var element = tbarObj.element;
        var nodes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('.' + CLS_TBAROVERFLOW, ele);
        var nodeIndex = 0;
        var poppedEle = [].slice.call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('.' + CLS_POPUP, element.querySelector('.' + CLS_ITEMS)));
        var nodePri = 0;
        poppedEle.forEach(function (el, index) {
            nodes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('.' + CLS_TBAROVERFLOW, ele);
            if (el.classList.contains(CLS_TBAROVERFLOW) && nodes.length > 0) {
                if (tbarObj.tbResize && nodes.length > index) {
                    ele.insertBefore(el, nodes[index]);
                    ++nodePri;
                }
                else {
                    ele.insertBefore(el, ele.children[nodes.length]);
                    ++nodePri;
                }
            }
            else if (el.classList.contains(CLS_TBAROVERFLOW)) {
                ele.insertBefore(el, ele.firstChild);
                ++nodePri;
            }
            else if (tbarObj.tbResize && el.classList.contains(CLS_POPOVERFLOW) && ele.children.length > 0 && nodes.length === 0) {
                ele.insertBefore(el, ele.firstChild);
                ++nodePri;
            }
            else if (el.classList.contains(CLS_POPOVERFLOW)) {
                popupPri.push(el);
            }
            else if (tbarObj.tbResize) {
                ele.insertBefore(el, ele.childNodes[nodeIndex + nodePri]);
                ++nodeIndex;
            }
            else {
                ele.appendChild(el);
            }
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(el, { display: '', height: eleHeight + 'px' });
        });
        popupPri.forEach(function (el) {
            ele.appendChild(el);
        });
        var tbarEle = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('.' + CLS_ITEM, element.querySelector('.' + CLS_ITEMS));
        for (var i = tbarEle.length - 1; i >= 0; i--) {
            var tbarElement = tbarEle[i];
            if (tbarElement.classList.contains(CLS_SEPARATOR)) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(tbarElement, { display: 'none' });
            }
            else {
                break;
            }
        }
    };
    Toolbar.prototype.createPopup = function () {
        var element = this.element;
        var eleHeight;
        var eleItem;
        eleItem = element.querySelector('.' + CLS_ITEM + ':not(.' + CLS_SEPARATOR + ' ):not(.' + CLS_POPUP + ' )');
        eleHeight = (element.style.height === 'auto' || element.style.height === '') ? null : eleItem.offsetHeight;
        var ele;
        var popupPri = [];
        if (element.querySelector('#' + element.id + '_popup.' + CLS_POPUPCLASS)) {
            ele = element.querySelector('#' + element.id + '_popup.' + CLS_POPUPCLASS);
        }
        else {
            ele = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { id: element.id + '_popup', className: CLS_POPUPCLASS });
        }
        this.pushingPoppedEle(this, popupPri, ele, eleHeight);
        this.popupInit(element, ele);
    };
    Toolbar.prototype.popupInit = function (element, ele) {
        if (!this.popObj) {
            element.appendChild(ele);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.element, { overflow: '' });
            var popup = new __WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_popups__["Popup"](null, {
                relateTo: this.element,
                offsetY: (element.offsetHeight),
                enableRtl: this.enableRtl,
                open: this.popupOpen.bind(this),
                close: this.popupClose,
                position: this.enableRtl ? { X: 'left', Y: 'top' } : { X: 'right', Y: 'top' }
            });
            popup.appendTo(ele);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(document, 'scroll', this.docEvent.bind(this));
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(document, 'click ', this.docEvent.bind(this));
            popup.element.style.maxHeight = popup.element.offsetHeight + 'px';
            popup.hide();
            this.popObj = popup;
            this.element.setAttribute('aria-haspopup', 'true');
        }
        else {
            var popupEle = this.popObj.element;
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(popupEle, { maxHeight: '', display: 'block' });
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(popupEle, { maxHeight: popupEle.offsetHeight + 'px', display: '' });
        }
    };
    Toolbar.prototype.popupOpen = function (e) {
        var popObj = this.popObj;
        var popupEle = this.popObj.element;
        var toolEle = this.popObj.element.parentElement;
        var popupNav = toolEle.querySelector('.' + CLS_TBARNAV);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(popObj.element, { height: 'auto', maxHeight: '' });
        popObj.element.style.maxHeight = popObj.element.clientHeight + 'px';
        var popupElePos = popupEle.offsetTop + popupEle.offsetHeight + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__syncfusion_ej2_popups__["calculatePosition"])(toolEle).top;
        var popIcon = popupNav.firstElementChild;
        popupNav.classList.add(CLS_TBARNAVACT);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["classList"])(popIcon, [CLS_POPUPICON], [CLS_POPUPDOWN]);
        var scrollVal = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(window.scrollY) ? 0 : window.scrollY;
        if ((window.innerHeight + scrollVal) < popupElePos) {
            var overflowHeight = (popupEle.offsetHeight - ((popupElePos - window.innerHeight - scrollVal) + 5));
            popObj.height = overflowHeight + 'px';
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(popObj.element, { maxHeight: overflowHeight + 'px' });
        }
    };
    Toolbar.prototype.popupClose = function (e) {
        var element = this.element.parentElement;
        var popupNav = element.querySelector('.' + CLS_TBARNAV);
        var popIcon = popupNav.firstElementChild;
        popupNav.classList.remove(CLS_TBARNAVACT);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["classList"])(popIcon, [CLS_POPUPDOWN], [CLS_POPUPICON]);
    };
    Toolbar.prototype.checkPriority = function (ele, inEle, eleWidth, pre) {
        var len = inEle.length;
        var eleWid = eleWidth;
        var sepCheck = 0;
        var itemCount = 0;
        var itemPopCount = 0;
        var checkClass = function (ele, val) {
            var rVal = false;
            val.forEach(function (cls) {
                if (ele.classList.contains(cls)) {
                    rVal = true;
                }
            });
            return rVal;
        };
        for (var i = len - 1; i >= 0; i--) {
            var mrgn = parseFloat((window.getComputedStyle(inEle[i])).marginRight);
            mrgn += parseFloat((window.getComputedStyle(inEle[i])).marginLeft);
            if (inEle[i] === this.tbarEle[0]) {
                this.tbarEleMrgn = mrgn;
            }
            if ((inEle[i].offsetLeft + inEle[i].offsetWidth + mrgn) > eleWidth) {
                if (inEle[i].classList.contains(CLS_SEPARATOR)) {
                    if (sepCheck > 0 && itemCount === itemPopCount) {
                        var sepEle = inEle[i + itemCount + (sepCheck - 1)];
                        if (checkClass(sepEle, [CLS_SEPARATOR, CLS_TBARIGNORE])) {
                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(sepEle, { display: 'none' });
                        }
                    }
                    sepCheck++;
                    itemCount = 0;
                    itemPopCount = 0;
                }
                else {
                    itemCount++;
                }
                if (inEle[i].classList.contains(CLS_TBAROVERFLOW) && pre) {
                    eleWidth -= (inEle[i].offsetWidth + (mrgn));
                }
                else if (!checkClass(inEle[i], [CLS_SEPARATOR, CLS_TBARIGNORE])) {
                    inEle[i].classList.add(CLS_POPUP);
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(inEle[i], { display: 'none', minWidth: inEle[i].offsetWidth + 'px' });
                    itemPopCount++;
                }
                else {
                    eleWidth -= (inEle[i].offsetWidth + (mrgn));
                }
            }
        }
        if (pre) {
            var popedEle = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('.' + CLS_ITEM + ':not(.' + CLS_POPUP + ')', this.element);
            this.checkPriority(ele, popedEle, eleWid, false);
        }
    };
    Toolbar.prototype.createPopupIcon = function (element) {
        var id = element.id.concat('_nav');
        var className = 'e-' + element.id.concat('_nav ' + CLS_POPUPNAV);
        var nav = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { id: id, className: className });
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].info.name === 'msie' || __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].info.name === 'edge') {
            nav.classList.add('e-ie-align');
        }
        var navItem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: CLS_POPUPDOWN + ' e-icons' });
        nav.appendChild(navItem);
        nav.setAttribute('tabindex', '0');
        element.appendChild(nav);
    };
    Toolbar.prototype.tbarPriRef = function (inEle, indx, sepPri, el, des, elWid, wid, ig) {
        var ignoreCount = ig;
        var popEle = this.popObj.element;
        var query = '.' + CLS_ITEM + ':not(.' + CLS_SEPARATOR + '):not(.' + CLS_TBAROVERFLOW + ')';
        var priEleCnt = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('.' + CLS_POPUP + ':not(.' + CLS_TBAROVERFLOW + ')', popEle).length;
        var checkClass = function (ele, val) {
            return ele.classList.contains(val);
        };
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])(query, inEle).length === 0) {
            var eleSep = inEle.children[indx - (indx - sepPri) - 1];
            var ignoreCheck = (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(eleSep) && checkClass(eleSep, CLS_TBARIGNORE));
            if ((!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(eleSep) && checkClass(eleSep, CLS_SEPARATOR) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isVisible"])(eleSep)) || ignoreCheck) {
                var sepDisplay = 'none';
                eleSep.style.display = 'inherit';
                var eleSepWidth = eleSep.offsetWidth + (parseFloat(window.getComputedStyle(eleSep).marginRight) * 2);
                var prevSep = eleSep.previousElementSibling;
                if ((elWid + eleSepWidth) < wid || des) {
                    inEle.insertBefore(el, inEle.children[(indx + ignoreCount) - (indx - sepPri)]);
                    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(prevSep)) {
                        prevSep.style.display = '';
                    }
                }
                else {
                    if (prevSep.classList.contains(CLS_SEPARATOR)) {
                        prevSep.style.display = sepDisplay;
                    }
                }
                eleSep.style.display = '';
            }
            else {
                inEle.insertBefore(el, inEle.children[(indx + ignoreCount) - (indx - sepPri)]);
            }
        }
        else {
            inEle.insertBefore(el, inEle.children[(indx + ignoreCount) - priEleCnt]);
        }
    };
    Toolbar.prototype.popupRefresh = function (popupEle, destroy) {
        var ele = this.element;
        var popNav = ele.querySelector('.' + CLS_TBARNAV);
        var innerEle = ele.querySelector('.' + CLS_ITEMS);
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(popNav)) {
            return;
        }
        innerEle.removeAttribute('style');
        popupEle.style.display = 'block';
        var width = ele.offsetWidth - (popNav.offsetWidth + innerEle.offsetWidth);
        this.popupEleRefresh(width, popupEle, destroy);
        popupEle.style.display = '';
        if (popupEle.children.length === 0) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(popNav);
            this.popObj.destroy();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.popObj.element);
            this.popObj = null;
            ele.setAttribute('aria-haspopup', 'false');
            ele.classList.remove('e-toolpop');
        }
    };
    Toolbar.prototype.ignoreEleFetch = function (index, innerEle) {
        var ignoreEle = [].slice.call(innerEle.querySelectorAll('.' + CLS_TBARIGNORE));
        var ignoreInx = [];
        var count = 0;
        if (ignoreEle.length > 0) {
            ignoreEle.forEach(function (ele) {
                ignoreInx.push([].slice.call(innerEle.children).indexOf(ele));
            });
        }
        else {
            return 0;
        }
        ignoreInx.forEach(function (val) {
            if (val <= index) {
                count++;
            }
        });
        return count;
    };
    Toolbar.prototype.popupEleRefresh = function (width, popupEle, destroy) {
        var eleSplice = this.tbarEle;
        var priEleCnt;
        var index;
        var innerEle = this.element.querySelector('.' + CLS_ITEMS);
        var ignoreCount = 0;
        var _loop_1 = function (el) {
            el.style.position = 'absolute';
            var elWidth = el.offsetWidth;
            var btnText = el.querySelector('.' + CLS_TBARBTNTEXT);
            if (el.classList.contains('e-tbtn-align') || el.classList.contains(CLS_TBARTEXT)) {
                var btn = el.children[0];
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(btnText) && el.classList.contains(CLS_TBARTEXT)) {
                    btnText.style.display = 'none';
                }
                else if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(btnText) && el.classList.contains(CLS_POPUPTEXT)) {
                    btnText.style.display = 'block';
                }
                btn.style.minWidth = '0%';
                elWidth = el.offsetWidth;
                btn.style.minWidth = '';
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(btnText)) {
                    btnText.style.display = '';
                }
            }
            if (el === this_1.tbarEle[0]) {
                elWidth += this_1.tbarEleMrgn;
            }
            el.style.position = '';
            if (elWidth < width || destroy) {
                el.style.minWidth = '';
                if (!el.classList.contains(CLS_POPOVERFLOW)) {
                    el.classList.remove(CLS_POPUP);
                }
                index = this_1.tbarEle.indexOf(el);
                if (this_1.tbarAlign) {
                    var pos = this_1.items[index].align;
                    index = this_1.tbarAlgEle[(pos + 's')].indexOf(el);
                    eleSplice = this_1.tbarAlgEle[(pos + 's')];
                    innerEle = this_1.element.querySelector('.' + CLS_ITEMS + ' .' + 'e-toolbar-' + pos);
                }
                var sepBeforePri_1 = 0;
                eleSplice.slice(0, index).forEach(function (el) {
                    if (el.classList.contains(CLS_TBAROVERFLOW) || el.classList.contains(CLS_SEPARATOR)) {
                        if (el.classList.contains(CLS_SEPARATOR)) {
                            el.style.display = '';
                            width -= el.offsetWidth;
                        }
                        sepBeforePri_1++;
                    }
                });
                ignoreCount = this_1.ignoreEleFetch(index, innerEle);
                if (el.classList.contains(CLS_TBAROVERFLOW)) {
                    this_1.tbarPriRef(innerEle, index, sepBeforePri_1, el, destroy, elWidth, width, ignoreCount);
                    width -= el.offsetWidth;
                }
                else if (index === 0) {
                    innerEle.insertBefore(el, innerEle.firstChild);
                    width -= el.offsetWidth;
                }
                else {
                    priEleCnt = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('.' + CLS_TBAROVERFLOW, this_1.popObj.element).length;
                    innerEle.insertBefore(el, innerEle.children[(index + ignoreCount) - priEleCnt]);
                    width -= el.offsetWidth;
                }
                el.style.height = '';
            }
            else {
                return "break";
            }
        };
        var this_1 = this;
        for (var _i = 0, _a = [].slice.call(popupEle.children); _i < _a.length; _i++) {
            var el = _a[_i];
            var state_1 = _loop_1(el);
            if (state_1 === "break")
                break;
        }
    };
    Toolbar.prototype.removePositioning = function () {
        var item = this.element.querySelector('.' + CLS_ITEMS);
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(item) || !item.classList.contains(CLS_TBARPOS)) {
            return;
        }
        this.remove(item, CLS_TBARPOS);
        var innerItem = [].slice.call(item.childNodes);
        innerItem[1].removeAttribute('style');
        innerItem[2].removeAttribute('style');
    };
    Toolbar.prototype.refreshPositioning = function () {
        var item = this.element.querySelector('.' + CLS_ITEMS);
        this.add(item, CLS_TBARPOS);
        this.itemPositioning();
    };
    Toolbar.prototype.itemPositioning = function () {
        var item = this.element.querySelector('.' + CLS_ITEMS);
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(item) || !item.classList.contains(CLS_TBARPOS)) {
            return;
        }
        var popupNav = this.element.querySelector('.' + CLS_TBARNAV);
        var innerItem;
        if (this.scrollModule) {
            innerItem = [].slice.call(item.querySelector('.' + CLS_TBARSCROLL).children);
        }
        else {
            innerItem = [].slice.call(item.childNodes);
        }
        var margin = innerItem[0].offsetWidth + innerItem[2].offsetWidth;
        var tbarWid = this.element.offsetWidth;
        if (popupNav) {
            tbarWid -= popupNav.offsetWidth;
            innerItem[2].style.right = popupNav.offsetWidth + 'px';
        }
        if (tbarWid <= margin) {
            return;
        }
        var value = (((tbarWid - margin)) - innerItem[1].offsetWidth) / 2;
        innerItem[1].removeAttribute('style');
        var mrgn = (innerItem[0].offsetWidth + value) + 'px';
        this.enableRtl ? innerItem[1].style.marginRight = mrgn : innerItem[1].style.marginLeft = mrgn;
    };
    Toolbar.prototype.tbarItemAlign = function (item, itemEle, pos) {
        var _this = this;
        var alignDiv = [];
        alignDiv.push(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: CLS_TBARLEFT }));
        alignDiv.push(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: CLS_TBARCENTER }));
        alignDiv.push(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: CLS_TBARRIGHT }));
        if (pos === 0 && item.align !== 'left') {
            alignDiv.forEach(function (ele) {
                itemEle.appendChild(ele);
            });
            this.tbarAlign = true;
            this.add(itemEle, CLS_TBARPOS);
        }
        else if (item.align !== 'left') {
            var alignEle = itemEle.childNodes;
            var leftAlign_1 = alignDiv[0];
            [].slice.call(alignEle).forEach(function (el) {
                _this.tbarAlgEle.lefts.push(el);
                leftAlign_1.appendChild(el);
            });
            itemEle.appendChild(leftAlign_1);
            itemEle.appendChild(alignDiv[1]);
            itemEle.appendChild(alignDiv[2]);
            this.tbarAlign = true;
            this.add(itemEle, CLS_TBARPOS);
        }
    };
    Toolbar.prototype.ctrlTemplate = function () {
        var _this = this;
        this.ctrlTem = this.trgtEle.cloneNode(true);
        this.add(this.trgtEle, CLS_ITEMS);
        this.tbarEle = [];
        var innerEle = [].slice.call(this.trgtEle.children);
        innerEle.forEach(function (ele) {
            if (ele.tagName === 'DIV') {
                _this.tbarEle.push(ele);
                ele.setAttribute('aria-disabled', 'false');
                _this.add(ele, CLS_ITEM);
            }
        });
    };
    Toolbar.prototype.renderItems = function () {
        var ele = this.element;
        var itemEleDom;
        var innerItem;
        var innerPos;
        var items = this.items;
        if (ele && ele.children.length > 0) {
            itemEleDom = ele.querySelector('.' + CLS_ITEMS);
        }
        if (this.trgtEle != null) {
            this.ctrlTemplate();
        }
        else if (ele && items.length > 0) {
            if (!itemEleDom) {
                itemEleDom = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: CLS_ITEMS });
            }
            for (var i = 0; i < items.length; i++) {
                innerItem = this.renderSubComponent(items[i]);
                if (this.tbarEle.indexOf(innerItem) === -1) {
                    this.tbarEle.push(innerItem);
                }
                if (!this.tbarAlign) {
                    this.tbarItemAlign(items[i], itemEleDom, i);
                }
                innerPos = itemEleDom.querySelector('.e-toolbar-' + items[i].align.toLowerCase());
                if (innerPos) {
                    this.tbarAlgEle[(items[i].align + 's')].push(innerItem);
                    innerPos.appendChild(innerItem);
                }
                else {
                    itemEleDom.appendChild(innerItem);
                }
            }
            ele.appendChild(itemEleDom);
        }
    };
    Toolbar.prototype.setAttr = function (attr, element) {
        var key = Object.keys(attr);
        var keyVal;
        for (var i = 0; i < key.length; i++) {
            keyVal = key[i];
            keyVal === 'class' ? this.add(element, attr[keyVal]) : element.setAttribute(keyVal, attr[keyVal]);
        }
    };
    Toolbar.prototype.enableItems = function (items, isEnable) {
        var elements = items;
        var len = elements.length;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(isEnable)) {
            isEnable = true;
        }
        var enable = function (isEnable, ele) {
            if (isEnable) {
                ele.classList.remove(CLS_DISABLE);
                ele.setAttribute('aria-disabled', 'false');
            }
            else {
                ele.classList.add(CLS_DISABLE);
                ele.setAttribute('aria-disabled', 'true');
            }
        };
        if (len && len > 1) {
            for (var _i = 0, _a = [].slice.call(elements); _i < _a.length; _i++) {
                var ele = _a[_i];
                enable(isEnable, ele);
            }
            isEnable ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])(elements, CLS_DISABLE) : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])(elements, CLS_DISABLE);
        }
        else {
            var ele = void 0;
            ele = (len && len === 1) ? elements[0] : items;
            enable(isEnable, ele);
        }
    };
    Toolbar.prototype.addItems = function (items, index) {
        var innerItems;
        var itemsDiv = this.element.querySelector('.' + CLS_ITEMS);
        var innerEle;
        var itemAgn = 'left';
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(index)) {
            index = 0;
        }
        items.forEach(function (e) {
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(e.align) && e.align !== 'left' && itemAgn === 'left') {
                itemAgn = e.align;
            }
        });
        for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
            var item = items_1[_i];
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(item.type)) {
                item.type = 'Button';
            }
            innerItems = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('.' + CLS_ITEM, this.element);
            item.align = itemAgn;
            innerEle = this.renderSubComponent(item);
            if (this.tbarEle.length >= index && innerItems.length > 0) {
                this.destroyMode();
                if (this.tbarAlign) {
                    var algIndex = item.align[0] === 'l' ? 0 : item.align[0] === 'c' ? 1 : 2;
                    var ele = void 0;
                    ele = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(innerItems[0], '.' + CLS_ITEMS).children[algIndex];
                    ele.insertBefore(innerEle, ele.children[index]);
                    this.tbarAlgEle[(item.align + 's')].splice(index, 0, innerEle);
                    this.refreshPositioning();
                }
                else {
                    innerItems[0].parentNode.insertBefore(innerEle, innerItems[index]);
                }
                this.items.splice(index, 0, item);
                this.tbarEle.splice(index, 0, innerEle);
                index++;
                this.offsetWid = itemsDiv.offsetWidth;
            }
        }
        itemsDiv.style.width = '';
        this.renderOverflowMode();
    };
    Toolbar.prototype.removeItems = function (args) {
        var elements = args;
        var index;
        var innerItems = [].slice.call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('.' + CLS_ITEM, this.element));
        if (typeof (elements) === 'number') {
            index = parseInt(args.toString(), 10);
            this.removeItemByIndex(index, innerItems);
        }
        else {
            if (elements && elements.length > 1) {
                for (var _i = 0, _a = [].slice.call(elements); _i < _a.length; _i++) {
                    var ele = _a[_i];
                    index = this.tbarEle.indexOf(ele);
                    this.removeItemByIndex(index, innerItems);
                    innerItems = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["selectAll"])('.' + CLS_ITEM, this.element);
                }
            }
            else {
                var ele = (elements && elements.length && elements.length === 1) ? elements[0] : args;
                index = innerItems.indexOf(ele);
                this.removeItemByIndex(index, innerItems);
            }
        }
        this.resize();
    };
    Toolbar.prototype.removeItemByIndex = function (index, innerItems) {
        if (this.tbarEle[index] && innerItems[index]) {
            var eleIdx = this.tbarEle.indexOf(innerItems[index]);
            if (this.tbarAlign) {
                var indexAgn = this.tbarAlgEle[(this.items[eleIdx].align + 's')].indexOf(this.tbarEle[eleIdx]);
                this.tbarAlgEle[(this.items[eleIdx].align + 's')].splice(indexAgn, 1);
            }
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(innerItems[index]);
            this.items.splice(eleIdx, 1);
            this.tbarEle.splice(eleIdx, 1);
        }
    };
    Toolbar.prototype.templateRender = function (templateProp, innerEle, item) {
        var itemType = item.type;
        var eleObj = templateProp;
        var isComponent;
        if (typeof (templateProp) === 'object') {
            isComponent = typeof (eleObj.appendTo) === 'function';
        }
        if (typeof (templateProp) === 'string' || !isComponent) {
            var templateFn = void 0;
            var val = templateProp;
            val = (typeof (templateProp) === 'string') ? templateProp.trim() : templateProp;
            var e = void 0;
            try {
                if (document.querySelectorAll(val).length) {
                    var ele = document.querySelector(val);
                    templateFn = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["compile"])(ele.outerHTML.trim());
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(ele);
                }
            }
            catch (e) {
                templateFn = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["compile"])(val);
            }
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(templateFn) && templateFn().length > 0) {
                [].slice.call(templateFn()).forEach(function (ele) {
                    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(ele.tagName)) {
                        ele.style.display = '';
                    }
                    innerEle.appendChild(ele);
                });
            }
        }
        else if (itemType === 'Input') {
            var ele = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('input');
            item.id ? (ele.id = item.id) : (ele.id = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getUniqueID"])('tbr-ipt'));
            innerEle.appendChild(ele);
            eleObj.appendTo(ele);
        }
        this.add(innerEle, CLS_TEMPLATE);
        this.tbarEle.push(innerEle);
    };
    Toolbar.prototype.buttonRendering = function (item, innerEle) {
        var dom = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('button', { className: CLS_TBARBTN });
        var textStr = item.text;
        var iconCss;
        var iconPos;
        item.id ? (dom.id = item.id) : dom.id = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getUniqueID"])('e-tbr-btn');
        var btnTxt = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: 'e-tbar-btn-text' });
        if (textStr) {
            btnTxt.innerHTML = textStr;
            dom.appendChild(btnTxt);
            dom.classList.add('e-tbtn-txt');
        }
        else {
            this.add(innerEle, 'e-tbtn-align');
        }
        if (item.prefixIcon || item.suffixIcon) {
            if ((item.prefixIcon && item.suffixIcon) || item.prefixIcon) {
                iconCss = item.prefixIcon + ' e-icons';
                iconPos = 'left';
            }
            else {
                iconCss = item.suffixIcon + ' e-icons';
                iconPos = 'right';
            }
        }
        new __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_buttons__["Button"]({ iconCss: iconCss, iconPosition: iconPos }, dom);
        if (item.width) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(dom, { 'width': __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(item.width) });
        }
        return dom;
    };
    Toolbar.prototype.renderSubComponent = function (item) {
        var innerEle;
        var dom;
        innerEle = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: CLS_ITEM });
        innerEle.setAttribute('aria-disabled', 'false');
        if (!this.tbarEle) {
            this.tbarEle = [];
        }
        if (item.htmlAttributes) {
            this.setAttr(item.htmlAttributes, innerEle);
        }
        if (item.tooltipText) {
            innerEle.setAttribute('title', item.tooltipText);
        }
        if (item.cssClass) {
            innerEle.className = innerEle.className + ' ' + item.cssClass;
        }
        if (item.template) {
            this.templateRender(item.template, innerEle, item);
        }
        else {
            switch (item.type) {
                case 'Button':
                    dom = this.buttonRendering(item, innerEle);
                    dom.setAttribute('tabindex', '-1');
                    innerEle.appendChild(dom);
                    innerEle.addEventListener('click', this.itemClick.bind(this));
                    break;
                case 'Separator':
                    this.add(innerEle, CLS_SEPARATOR);
                    break;
            }
        }
        if (item.showTextOn) {
            var sTxt = item.showTextOn;
            if (sTxt === 'Toolbar') {
                this.add(innerEle, CLS_POPUPTEXT);
                this.add(innerEle, 'e-tbtn-align');
            }
            else if (sTxt === 'Overflow') {
                this.add(innerEle, CLS_TBARTEXT);
            }
        }
        if (item.overflow) {
            var overflow = item.overflow;
            if (overflow === 'Show') {
                this.add(innerEle, CLS_TBAROVERFLOW);
            }
            else if (overflow === 'Hide') {
                if (!innerEle.classList.contains(CLS_SEPARATOR)) {
                    this.add(innerEle, CLS_POPOVERFLOW);
                }
            }
        }
        return innerEle;
    };
    Toolbar.prototype.itemClick = function (e) {
        this.activeEleSwitch(e.currentTarget);
    };
    Toolbar.prototype.activeEleSwitch = function (ele) {
        this.activeEleRemove(ele.firstElementChild);
        this.activeEle.focus();
    };
    Toolbar.prototype.activeEleRemove = function (curEle) {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.activeEle)) {
            this.activeEle.setAttribute('tabindex', '-1');
        }
        this.activeEle = curEle;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.trgtEle) && !curEle.parentElement.classList.contains(CLS_TEMPLATE)) {
            curEle.removeAttribute('tabindex');
        }
        else {
            this.activeEle.setAttribute('tabindex', '0');
        }
    };
    Toolbar.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    Toolbar.prototype.getModuleName = function () {
        return 'toolbar';
    };
    Toolbar.prototype.resize = function () {
        var ele = this.element;
        this.tbResize = true;
        if (this.tbarAlign) {
            this.itemPositioning();
        }
        if (this.popObj) {
            this.popObj.hide();
        }
        var checkOverflow = this.checkOverflow(ele, ele.getElementsByClassName(CLS_ITEMS)[0]);
        if (!checkOverflow) {
            this.destroyHScroll();
        }
        if (checkOverflow && this.scrollModule && (this.offsetWid === ele.offsetWidth)) {
            return;
        }
        if (this.offsetWid > ele.offsetWidth || checkOverflow) {
            this.renderOverflowMode();
        }
        if (this.popObj) {
            if (this.tbarAlign) {
                this.removePositioning();
            }
            this.popupRefresh(this.popObj.element, false);
            if (this.tbarAlign) {
                this.refreshPositioning();
            }
        }
        this.offsetWid = ele.offsetWidth;
        this.tbResize = false;
    };
    Toolbar.prototype.onPropertyChanged = function (newProp, oldProp) {
        var tEle = this.element;
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'items':
                    this.destroyMode();
                    this.destroyItems();
                    this.renderItems();
                    this.renderOverflowMode();
                    break;
                case 'width':
                    var wid = tEle.offsetWidth;
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(tEle, { 'width': __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(newProp.width) });
                    this.renderOverflowMode();
                    if (this.popObj && wid < tEle.offsetWidth) {
                        this.popupRefresh(this.popObj.element, false);
                    }
                    break;
                case 'height':
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.element, { 'height': __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(newProp.height) });
                    break;
                case 'overflowMode':
                    this.destroyMode();
                    this.renderOverflowMode();
                    if (this.enableRtl) {
                        this.add(tEle, CLS_RTL);
                    }
                    break;
                case 'enableRtl':
                    newProp.enableRtl ? this.add(tEle, CLS_RTL) : this.remove(tEle, CLS_RTL);
                    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.scrollModule)) {
                        newProp.enableRtl ? this.add(this.scrollModule.element, CLS_RTL) : this.remove(this.scrollModule.element, CLS_RTL);
                    }
                    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.popObj)) {
                        newProp.enableRtl ? this.add(this.popObj.element, CLS_RTL) : this.remove(this.popObj.element, CLS_RTL);
                    }
                    break;
            }
        }
    };
    return Toolbar;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Component"]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Collection"])([], Item)
], Toolbar.prototype, "items", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('auto')
], Toolbar.prototype, "width", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('auto')
], Toolbar.prototype, "height", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('Scrollable')
], Toolbar.prototype, "overflowMode", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], Toolbar.prototype, "enableRtl", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Toolbar.prototype, "clicked", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Toolbar.prototype, "created", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Toolbar.prototype, "destroyed", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Toolbar.prototype, "beforeCreate", void 0);
Toolbar = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], Toolbar);

var toolbarBuilder = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["CreateBuilder"])(Toolbar);


/***/ }),
/* 237 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfDocumentLinkAnnotation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__link_annotation__ = __webpack_require__(94);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var PdfDocumentLinkAnnotation = (function (_super) {
    __extends(PdfDocumentLinkAnnotation, _super);
    function PdfDocumentLinkAnnotation(rectangle, destination) {
        var _this = _super.call(this, rectangle) || this;
        _this.pdfDestination = null;
        if (typeof destination !== 'undefined') {
            _this.destination = destination;
        }
        return _this;
    }
    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, "destination", {
        get: function () {
            return this.pdfDestination;
        },
        set: function (value) {
            this.pdfDestination = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfDocumentLinkAnnotation.prototype.save = function () {
        _super.prototype.save.call(this);
        if (this.pdfDestination != null) {
            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);
        }
    };
    PdfDocumentLinkAnnotation.prototype.clone = function () {
        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);
        annot.color = this.color;
        annot.brush = this.brush;
        annot.destination = this.destination;
        annot.font = this.font;
        return annot;
    };
    return PdfDocumentLinkAnnotation;
}(__WEBPACK_IMPORTED_MODULE_0__link_annotation__["a" /* PdfLinkAnnotation */]));



/***/ }),
/* 238 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfAutomaticFieldInfoCollection; });
var PdfAutomaticFieldInfoCollection = (function () {
    function PdfAutomaticFieldInfoCollection() {
        this.automaticFieldsInformation = [];
    }
    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, "automaticFields", {
        get: function () {
            return this.automaticFieldsInformation;
        },
        enumerable: true,
        configurable: true
    });
    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {
        return this.automaticFields.push(fieldInfo);
    };
    return PdfAutomaticFieldInfoCollection;
}());



/***/ }),
/* 239 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfCompositeField; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__multiple_value_field__ = __webpack_require__(151);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var PdfCompositeField = (function (_super) {
    __extends(PdfCompositeField, _super);
    function PdfCompositeField(font, brush, text) {
        var list = [];
        for (var _i = 3; _i < arguments.length; _i++) {
            list[_i - 3] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this.internalAutomaticFields = null;
        _this.internalText = '';
        _this.font = font;
        _this.brush = brush;
        _this.text = text;
        _this.automaticFields = list;
        return _this;
    }
    Object.defineProperty(PdfCompositeField.prototype, "text", {
        get: function () {
            return this.internalText;
        },
        set: function (value) {
            this.internalText = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCompositeField.prototype, "automaticFields", {
        get: function () {
            return this.internalAutomaticFields;
        },
        set: function (value) {
            this.internalAutomaticFields = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfCompositeField.prototype.getValue = function (graphics) {
        var values = [];
        var text = this.text.toString();
        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {
            for (var i = 0; i < this.automaticFields.length; i++) {
                var automaticField = this.automaticFields[i];
                text = text.replace('{' + i + '}', automaticField.getValue(graphics));
            }
        }
        return text;
    };
    return PdfCompositeField;
}(__WEBPACK_IMPORTED_MODULE_0__multiple_value_field__["a" /* PdfMultipleValueField */]));



/***/ }),
/* 240 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfPageCountField; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__single_value_field__ = __webpack_require__(241);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pages_enum__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__graphics_brushes_pdf_brush__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pdf_numbers_convertor__ = __webpack_require__(152);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var PdfPageCountField = (function (_super) {
    __extends(PdfPageCountField, _super);
    function PdfPageCountField(font, arg2) {
        var _this = _super.call(this) || this;
        _this.internalNumberStyle = __WEBPACK_IMPORTED_MODULE_1__pages_enum__["c" /* PdfNumberStyle */].Numeric;
        if (typeof arg2 === 'undefined') {
            _this.font = font;
        }
        else if (arg2 instanceof __WEBPACK_IMPORTED_MODULE_2__graphics_brushes_pdf_brush__["a" /* PdfBrush */]) {
            _this.font = font;
            _this.brush = arg2;
        }
        else {
            _this.font = font;
            _this.bounds = arg2;
        }
        return _this;
    }
    Object.defineProperty(PdfPageCountField.prototype, "numberStyle", {
        get: function () {
            return this.internalNumberStyle;
        },
        set: function (value) {
            this.internalNumberStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfPageCountField.prototype.getValue = function (graphics) {
        var result = null;
        var page = this.getPageFromGraphics(graphics);
        var document = page.section.parent.document;
        var count = document.pages.count;
        result = __WEBPACK_IMPORTED_MODULE_3__pdf_numbers_convertor__["a" /* PdfNumbersConvertor */].convert(count, this.numberStyle);
        return result;
    };
    return PdfPageCountField;
}(__WEBPACK_IMPORTED_MODULE_0__single_value_field__["a" /* PdfSingleValueField */]));



/***/ }),
/* 241 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfSingleValueField; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__automatic_field__ = __webpack_require__(96);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__collections_object_object_pair_dictionary__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pdf_template_value_pair__ = __webpack_require__(154);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__graphics_figures_pdf_template__ = __webpack_require__(48);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var PdfSingleValueField = (function (_super) {
    __extends(PdfSingleValueField, _super);
    function PdfSingleValueField() {
        var _this = _super.call(this) || this;
        _this.list = new __WEBPACK_IMPORTED_MODULE_1__collections_object_object_pair_dictionary__["a" /* TemporaryDictionary */]();
        _this.painterGraphics = [];
        return _this;
    }
    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {
        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);
        var page = this.getPageFromGraphics(graphics);
        var document = page.document;
        var textValue = this.getValue(graphics);
        if (this.list.containsKey(document)) {
            var pair = this.list.getValue(document);
            var drawLocation = new __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__["a" /* PointF */](location.x + this.location.x, location.y + this.location.y);
            graphics.drawPdfTemplate(pair.template, drawLocation, new __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__["b" /* SizeF */](pair.template.width * scalingX, pair.template.height * scalingY));
            this.painterGraphics.push(graphics);
        }
        else {
            var size = this.getSize();
            var template = new __WEBPACK_IMPORTED_MODULE_4__graphics_figures_pdf_template__["a" /* PdfTemplate */](size);
            this.list.setValue(document, new __WEBPACK_IMPORTED_MODULE_2__pdf_template_value_pair__["a" /* PdfTemplateValuePair */](template, textValue));
            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);
            var drawLocation = new __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__["a" /* PointF */](location.x + this.location.x, location.y + this.location.y);
            graphics.drawPdfTemplate(template, drawLocation, new __WEBPACK_IMPORTED_MODULE_3__drawing_pdf_drawing__["b" /* SizeF */](template.width * scalingX, template.height * scalingY));
            this.painterGraphics.push(graphics);
        }
    };
    return PdfSingleValueField;
}(__WEBPACK_IMPORTED_MODULE_0__automatic_field__["a" /* PdfAutomaticField */]));



/***/ }),
/* 242 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfDestination; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_array__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pages_enum__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__general_enum__ = __webpack_require__(156);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_reference__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_name__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_number__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__input_output_pdf_dictionary_properties__ = __webpack_require__(6);








var PdfDestination = (function () {
    function PdfDestination(arg1, arg2) {
        this.dictionaryProperties = new __WEBPACK_IMPORTED_MODULE_7__input_output_pdf_dictionary_properties__["a" /* DictionaryProperties */]();
        this.destinationMode = __WEBPACK_IMPORTED_MODULE_3__general_enum__["a" /* PdfDestinationMode */].Location;
        this.zoomFactor = 0;
        this.destinationLocation = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */](0, 0);
        this.bounds = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["c" /* RectangleF */]();
        this.array = new __WEBPACK_IMPORTED_MODULE_1__primitives_pdf_array__["a" /* PdfArray */]();
        if (typeof arg2 === 'undefined') {
            var angle = __WEBPACK_IMPORTED_MODULE_2__pages_enum__["b" /* PdfPageRotateAngle */].RotateAngle0;
            this.destinationLocation = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */](0, this.destinationLocation.y);
            this.pdfPage = arg1;
        }
        else if (arg2 instanceof __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */]) {
            this.constructor(arg1);
            this.destinationLocation = arg2;
        }
        else {
            this.constructor(arg1);
            this.bounds = arg2;
        }
    }
    Object.defineProperty(PdfDestination.prototype, "zoom", {
        get: function () {
            return this.zoomFactor;
        },
        set: function (value) {
            this.zoomFactor = value;
            this.initializePrimitive();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDestination.prototype, "page", {
        get: function () {
            return this.pdfPage;
        },
        set: function (value) {
            this.pdfPage = value;
            this.initializePrimitive();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDestination.prototype, "mode", {
        get: function () {
            return this.destinationMode;
        },
        set: function (value) {
            this.destinationMode = value;
            this.initializePrimitive();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDestination.prototype, "location", {
        get: function () {
            return this.destinationLocation;
        },
        set: function (value) {
            this.destinationLocation = value;
            this.initializePrimitive();
        },
        enumerable: true,
        configurable: true
    });
    PdfDestination.prototype.pointToNativePdf = function (page, point) {
        var section = page.section;
        return section.pointToNativePdf(page, point);
    };
    PdfDestination.prototype.initializePrimitive = function () {
        this.array.clear();
        this.array.add(new __WEBPACK_IMPORTED_MODULE_4__primitives_pdf_reference__["b" /* PdfReferenceHolder */](this.pdfPage));
        switch (this.destinationMode) {
            case __WEBPACK_IMPORTED_MODULE_3__general_enum__["a" /* PdfDestinationMode */].Location:
                var simplePage = this.pdfPage;
                var point = new __WEBPACK_IMPORTED_MODULE_0__drawing_pdf_drawing__["a" /* PointF */]();
                point = this.pointToNativePdf(simplePage, this.destinationLocation);
                this.array.add(new __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.xyz));
                this.array.add(new __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_number__["a" /* PdfNumber */](point.x));
                this.array.add(new __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_number__["a" /* PdfNumber */](point.y));
                this.array.add(new __WEBPACK_IMPORTED_MODULE_6__primitives_pdf_number__["a" /* PdfNumber */](this.zoomFactor));
                break;
            case __WEBPACK_IMPORTED_MODULE_3__general_enum__["a" /* PdfDestinationMode */].FitToPage:
                this.array.add(new __WEBPACK_IMPORTED_MODULE_5__primitives_pdf_name__["a" /* PdfName */](this.dictionaryProperties.fit));
                break;
        }
    };
    Object.defineProperty(PdfDestination.prototype, "element", {
        get: function () {
            this.initializePrimitive();
            return this.array;
        },
        enumerable: true,
        configurable: true
    });
    return PdfDestination;
}());



/***/ }),
/* 243 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfGraphicsElement; });
var PdfGraphicsElement = (function () {
    function PdfGraphicsElement() {
    }
    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {
        var bNeedSave = (x !== 0 || y !== 0);
        var gState = null;
        if (bNeedSave) {
            gState = graphics.save();
            graphics.translateTransform(x, y);
        }
        this.drawInternal(graphics);
        if (bNeedSave) {
            graphics.restore(gState);
        }
    };
    return PdfGraphicsElement;
}());



/***/ }),
/* 244 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfUnitConverter; });
var PdfUnitConverter = (function () {
    function PdfUnitConverter(dpi) {
        this.updateProportionsHelper(dpi);
    }
    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {
        return this.convertFromPixels(this.convertToPixels(value, from), to);
    };
    PdfUnitConverter.prototype.convertToPixels = function (value, from) {
        var index = from;
        var result = (value * this.proportions[index]);
        return result;
    };
    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {
        var index = to;
        var result = (value / this.proportions[index]);
        return result;
    };
    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {
        this.proportions = [
            pixelPerInch / 2.54,
            pixelPerInch / 6.0,
            1,
            pixelPerInch / 72.0,
            pixelPerInch,
            pixelPerInch / 300.0,
            pixelPerInch / 25.4
        ];
    };
    return PdfUnitConverter;
}());

PdfUnitConverter.horizontalResolution = 96;
PdfUnitConverter.verticalResolution = 96;


/***/ }),
/* 245 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfPageTemplateElement; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__enum__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__graphics_figures_pdf_template__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pdf_page__ = __webpack_require__(49);





var PdfPageTemplateElement = (function () {
    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {
        if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["c" /* RectangleF */] && typeof arg2 === 'undefined') {
            this.constructor(arg1.x, arg1.y, arg1.width, arg1.height);
        }
        else if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["c" /* RectangleF */] && arg2 instanceof __WEBPACK_IMPORTED_MODULE_3__pdf_page__["a" /* PdfPage */] && typeof arg3 === 'undefined') {
            this.constructor(arg1.x, arg1.y, arg1.width, arg1.height, arg2);
        }
        else if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["a" /* PointF */] && arg2 instanceof __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["b" /* SizeF */] && typeof arg3 === 'undefined') {
            this.constructor(arg1.x, arg1.y, arg2.width, arg2.height);
        }
        else if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["a" /* PointF */] && arg2 instanceof __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["b" /* SizeF */] && arg3 instanceof __WEBPACK_IMPORTED_MODULE_3__pdf_page__["a" /* PdfPage */] && typeof arg4 === 'undefined') {
            this.constructor(arg1.x, arg1.y, arg2.width, arg2.height, arg3);
        }
        else if (arg1 instanceof __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["b" /* SizeF */] && typeof arg2 === 'undefined') {
            this.constructor(arg1.width, arg1.height);
        }
        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {
            this.constructor(0, 0, arg1, arg2);
        }
        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof __WEBPACK_IMPORTED_MODULE_3__pdf_page__["a" /* PdfPage */] && typeof arg4 === 'undefined') {
            this.constructor(0, 0, arg1, arg2, arg3);
        }
        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {
            this.x = arg1;
            this.y = arg2;
            this.pdfTemplate = new __WEBPACK_IMPORTED_MODULE_2__graphics_figures_pdf_template__["a" /* PdfTemplate */](arg3, arg4);
        }
        else {
            this.x = arg1;
            this.y = arg2;
            this.pdfTemplate = new __WEBPACK_IMPORTED_MODULE_2__graphics_figures_pdf_template__["a" /* PdfTemplate */](arg3, arg4);
        }
    }
    Object.defineProperty(PdfPageTemplateElement.prototype, "dock", {
        get: function () {
            return this.dockStyle;
        },
        set: function (value) {
            this.dockStyle = value;
            this.resetAlignment();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "alignment", {
        get: function () {
            return this.alignmentStyle;
        },
        set: function (value) {
            this.setAlignment(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "foreground", {
        get: function () {
            return this.isForeground;
        },
        set: function (value) {
            this.isForeground = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "background", {
        get: function () {
            return !this.isForeground;
        },
        set: function (value) {
            this.isForeground = !value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "location", {
        get: function () {
            return this.currentLocation;
        },
        set: function (value) {
            if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].None) {
                this.currentLocation = value;
            }
            else {
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "x", {
        get: function () {
            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;
            return value;
        },
        set: function (value) {
            if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].None) {
                this.currentLocation.x = value;
            }
            else {
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "y", {
        get: function () {
            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;
            return value;
        },
        set: function (value) {
            if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].None) {
                this.currentLocation.y = value;
            }
            else {
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "size", {
        get: function () {
            return this.template.size;
        },
        set: function (value) {
            if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].None) {
                this.template.reset(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "width", {
        get: function () {
            return this.template.width;
        },
        set: function (value) {
            if (this.template.width !== value && this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].None) {
                var size = this.template.size;
                size.width = value;
                this.template.reset(size);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "height", {
        get: function () {
            return this.template.height;
        },
        set: function (value) {
            if (this.template.height !== value && this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].None) {
                var size = this.template.size;
                size.height = value;
                this.template.reset(size);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "graphics", {
        get: function () {
            return this.template.graphics;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "template", {
        get: function () {
            return this.pdfTemplate;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "type", {
        get: function () {
            return this.templateType;
        },
        set: function (value) {
            this.updateDocking(value);
            this.templateType = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "bounds", {
        get: function () {
            return new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["c" /* RectangleF */](new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["a" /* PointF */](this.x, this.y), this.size);
        },
        set: function (value) {
            if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].None) {
                this.location = new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["a" /* PointF */](value.x, value.y);
                this.size = new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["b" /* SizeF */](value.width, value.height);
            }
        },
        enumerable: true,
        configurable: true
    });
    PdfPageTemplateElement.prototype.updateDocking = function (type) {
        if (type !== __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].None) {
            switch (type) {
                case __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].Top:
                    this.dock = __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Top;
                    break;
                case __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].Bottom:
                    this.dock = __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Bottom;
                    break;
                case __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].Left:
                    this.dock = __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Left;
                    break;
                case __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].Right:
                    this.dock = __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Right;
                    break;
            }
            this.resetAlignment();
        }
    };
    PdfPageTemplateElement.prototype.resetAlignment = function () {
        this.alignment = __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].None;
    };
    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {
        if (this.dock === __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].None) {
            this.alignmentStyle = alignment;
        }
        else {
            var canBeSet = false;
            switch (this.dock) {
                case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Left:
                    canBeSet = (alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].TopLeft || alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].MiddleLeft ||
                        alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].BottomLeft || alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].None);
                    break;
                case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Top:
                    canBeSet = (alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].TopLeft || alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].TopCenter ||
                        alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].TopRight || alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].None);
                    break;
                case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Right:
                    canBeSet = (alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].TopRight || alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].MiddleRight ||
                        alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].BottomRight || alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].None);
                    break;
                case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Bottom:
                    canBeSet = (alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].BottomLeft || alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].BottomCenter
                        || alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].BottomRight || alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].None);
                    break;
                case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Fill:
                    canBeSet = (alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].MiddleCenter || alignment === __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].None);
                    break;
            }
            if (canBeSet) {
                this.alignmentStyle = alignment;
            }
        }
    };
    PdfPageTemplateElement.prototype.draw = function (layer, document) {
        var page = layer.page;
        var bounds = this.calculateBounds(page, document);
        if (bounds.x === -0) {
            bounds.x = 0;
        }
        layer.graphics.drawPdfTemplate(this.template, new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["a" /* PointF */](bounds.x, bounds.y), new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["b" /* SizeF */](bounds.width, bounds.height));
    };
    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {
        var result = this.bounds;
        if (this.alignmentStyle !== __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].None) {
            result = this.getAlignmentBounds(page, document);
        }
        else if (this.dockStyle !== __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].None) {
            result = this.getDockBounds(page, document);
        }
        return result;
    };
    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {
        var result = this.bounds;
        if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].None) {
            result = this.getSimpleAlignmentBounds(page, document);
        }
        else {
            result = this.getTemplateAlignmentBounds(page, document);
        }
        return result;
    };
    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {
        var bounds = this.bounds;
        var pdfSection = page.section;
        var actualBounds = pdfSection.getActualBounds(document, page, false);
        var x = this.x;
        var y = this.y;
        switch (this.alignmentStyle) {
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].TopLeft:
                x = 0;
                y = 0;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].TopCenter:
                x = (actualBounds.width - this.width) / 2;
                y = 0;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].TopRight:
                x = actualBounds.width - this.width;
                y = 0;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].MiddleLeft:
                x = 0;
                y = (actualBounds.height - this.height) / 2;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].MiddleCenter:
                x = (actualBounds.width - this.width) / 2;
                y = (actualBounds.height - this.height) / 2;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].MiddleRight:
                x = actualBounds.width - this.width;
                y = (actualBounds.height - this.height) / 2;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].BottomLeft:
                x = 0;
                y = actualBounds.height - this.height;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].BottomCenter:
                x = (actualBounds.width - this.width) / 2;
                y = actualBounds.height - this.height;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].BottomRight:
                x = actualBounds.width - this.width;
                y = actualBounds.height - this.height;
                break;
        }
        bounds.x = x;
        bounds.y = y;
        return bounds;
    };
    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {
        var result = this.bounds;
        var section = page.section;
        var actualBounds = section.getActualBounds(document, page, false);
        var x = this.x;
        var y = this.y;
        switch (this.alignmentStyle) {
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].TopLeft:
                if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].Left) {
                    x = -actualBounds.x;
                    y = 0;
                }
                else if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].Top) {
                    x = -actualBounds.x;
                    y = -actualBounds.y;
                }
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].TopCenter:
                x = (actualBounds.width - this.width) / 2;
                y = -actualBounds.y;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].TopRight:
                if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].Right) {
                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;
                    y = 0;
                }
                else if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].Top) {
                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;
                    y = -actualBounds.y;
                }
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].MiddleLeft:
                x = -actualBounds.x;
                y = (actualBounds.height - this.height) / 2;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].MiddleCenter:
                x = (actualBounds.width - this.width) / 2;
                y = (actualBounds.height - this.height) / 2;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].MiddleRight:
                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;
                y = (actualBounds.height - this.height) / 2;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].BottomLeft:
                if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].Left) {
                    x = -actualBounds.x;
                    y = actualBounds.height - this.height;
                }
                else if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].Bottom) {
                    x = -actualBounds.x;
                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;
                }
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].BottomCenter:
                x = (actualBounds.width - this.width) / 2;
                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["e" /* PdfAlignmentStyle */].BottomRight:
                if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].Right) {
                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;
                    y = actualBounds.height - this.height;
                }
                else if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].Bottom) {
                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;
                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;
                }
                break;
        }
        result.x = x;
        result.y = y;
        return result;
    };
    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {
        var result = this.bounds;
        if (this.type === __WEBPACK_IMPORTED_MODULE_0__enum__["f" /* TemplateType */].None) {
            result = this.getSimpleDockBounds(page, document);
        }
        else {
            result = this.getTemplateDockBounds(page, document);
        }
        return result;
    };
    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {
        var result = this.bounds;
        var section = page.section;
        var actualBounds = section.getActualBounds(document, page, false);
        var x = this.x;
        var y = this.y;
        var width = this.width;
        var height = this.height;
        switch (this.dockStyle) {
            case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Left:
                x = 0;
                y = 0;
                width = this.width;
                height = actualBounds.height;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Top:
                x = 0;
                y = 0;
                width = actualBounds.width;
                height = this.height;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Right:
                x = actualBounds.width - this.width;
                y = 0;
                width = this.width;
                height = actualBounds.height;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Bottom:
                x = 0;
                y = actualBounds.height - this.height;
                width = actualBounds.width;
                height = this.height;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Fill:
                x = 0;
                x = 0;
                width = actualBounds.width;
                height = actualBounds.height;
                break;
        }
        result = new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["c" /* RectangleF */](x, y, width, height);
        return result;
    };
    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {
        var result = this.bounds;
        var section = page.section;
        var actualBounds = section.getActualBounds(document, page, false);
        var actualSize = section.pageSettings.getActualSize();
        var x = this.x;
        var y = this.y;
        var width = this.width;
        var height = this.height;
        switch (this.dockStyle) {
            case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Left:
                x = -actualBounds.x;
                y = 0;
                width = this.width;
                height = actualBounds.height;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Top:
                x = -actualBounds.x;
                y = -actualBounds.y;
                width = actualSize.width;
                height = this.height;
                if (actualBounds.height < 0) {
                    y = -actualBounds.y + actualSize.height;
                }
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Right:
                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;
                y = 0;
                width = this.width;
                height = actualBounds.height;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Bottom:
                x = -actualBounds.x;
                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;
                width = actualSize.width;
                height = this.height;
                if (actualBounds.height < 0) {
                    y -= actualSize.height;
                }
                break;
            case __WEBPACK_IMPORTED_MODULE_0__enum__["d" /* PdfDockStyle */].Fill:
                x = 0;
                x = 0;
                width = actualBounds.width;
                height = actualBounds.height;
                break;
        }
        result = new __WEBPACK_IMPORTED_MODULE_1__drawing_pdf_drawing__["c" /* RectangleF */](x, y, width, height);
        return result;
    };
    return PdfPageTemplateElement;
}());



/***/ }),
/* 246 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfBoolean; });
var PdfBoolean = (function () {
    function PdfBoolean(value) {
        this.currentPosition = -1;
        this.value = value;
    }
    Object.defineProperty(PdfBoolean.prototype, "status", {
        get: function () {
            return this.objectStatus;
        },
        set: function (value) {
            this.objectStatus = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBoolean.prototype, "isSaving", {
        get: function () {
            return this.saving;
        },
        set: function (value) {
            this.saving = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBoolean.prototype, "objectCollectionIndex", {
        get: function () {
            return this.index;
        },
        set: function (value) {
            this.index = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBoolean.prototype, "position", {
        get: function () {
            return this.currentPosition;
        },
        set: function (value) {
            this.currentPosition = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBoolean.prototype, "clonedObject", {
        get: function () {
            var rValue = null;
            return rValue;
        },
        enumerable: true,
        configurable: true
    });
    PdfBoolean.prototype.save = function (writer) {
        writer.write(this.boolToStr(this.value));
    };
    PdfBoolean.prototype.clone = function (crossTable) {
        var newNumber = new PdfBoolean(this.value);
        return newNumber;
    };
    PdfBoolean.prototype.boolToStr = function (value) {
        return value ? 'true' : 'false';
    };
    return PdfBoolean;
}());



/***/ }),
/* 247 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PdfGridLayoutFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PdfGrid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return GridCellEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return PdfGridBeginCellDrawEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return PdfGridEndCellDrawEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return PdfCancelEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return BeginPageLayoutEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return EndPageLayoutEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return PdfGridBeginPageLayoutEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return PdfGridEndPageLayoutEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return RowLayoutResult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return PdfGridLayoutResult; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pdf_grid_column__ = __webpack_require__(178);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pdf_grid_row__ = __webpack_require__(179);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__graphics_figures_layout_element__ = __webpack_require__(99);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__graphics_figures_base_element_layouter__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__styles_pdf_borders__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__styles_style__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__graphics_figures_enum__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__collections_object_object_pair_dictionary__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__graphics_fonts_pdf_string_format__ = __webpack_require__(32);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();











var PdfGridLayoutFormat = (function (_super) {
    __extends(PdfGridLayoutFormat, _super);
    function PdfGridLayoutFormat(baseFormat) {
        var _this = this;
        if (typeof baseFormat === 'undefined') {
            _this = _super.call(this) || this;
        }
        else {
            _this = _super.call(this, baseFormat) || this;
        }
        return _this;
    }
    return PdfGridLayoutFormat;
}(__WEBPACK_IMPORTED_MODULE_4__graphics_figures_base_element_layouter__["b" /* PdfLayoutFormat */]));

var PdfGrid = (function (_super) {
    __extends(PdfGrid, _super);
    function PdfGrid() {
        var _this = _super.call(this) || this;
        _this.gridSize = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["b" /* SizeF */](0, 0);
        _this.isRearranged = false;
        _this.pageBounds = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["c" /* RectangleF */]();
        _this.listOfNavigatePages = [];
        _this.flag = true;
        _this.columnRanges = [];
        _this.currentLocation = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["a" /* PointF */](0, 0);
        _this.breakRow = true;
        return _this;
    }
    Object.defineProperty(PdfGrid.prototype, "raiseBeginCellDraw", {
        get: function () {
            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "raiseEndCellDraw", {
        get: function () {
            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "raiseBeginPageLayout", {
        get: function () {
            return (typeof this.beginPageLayout !== 'undefined');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "raiseEndPageLayout", {
        get: function () {
            return (typeof this.endPageLayout !== 'undefined');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "repeatHeader", {
        get: function () {
            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {
                this.bRepeatHeader = false;
            }
            return this.bRepeatHeader;
        },
        set: function (value) {
            this.bRepeatHeader = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "allowRowBreakAcrossPages", {
        get: function () {
            return this.breakRow;
        },
        set: function (value) {
            this.breakRow = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "columns", {
        get: function () {
            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {
                this.gridColumns = new __WEBPACK_IMPORTED_MODULE_0__pdf_grid_column__["b" /* PdfGridColumnCollection */](this);
            }
            return this.gridColumns;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "rows", {
        get: function () {
            if (this.gridRows == null) {
                this.gridRows = new __WEBPACK_IMPORTED_MODULE_1__pdf_grid_row__["b" /* PdfGridRowCollection */](this);
            }
            return this.gridRows;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "headers", {
        get: function () {
            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {
                this.gridHeaders = new __WEBPACK_IMPORTED_MODULE_1__pdf_grid_row__["c" /* PdfGridHeaderCollection */](this);
            }
            return this.gridHeaders;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "initialWidth", {
        get: function () {
            return this.gridInitialWidth;
        },
        set: function (value) {
            this.gridInitialWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "style", {
        get: function () {
            if (this.gridStyle == null) {
                this.gridStyle = new __WEBPACK_IMPORTED_MODULE_6__styles_style__["b" /* PdfGridStyle */]();
            }
            return this.gridStyle;
        },
        set: function (value) {
            if (this.gridStyle == null) {
                this.gridStyle = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "isPageWidth", {
        get: function () {
            return this.pageWidth;
        },
        set: function (value) {
            this.pageWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "isChildGrid", {
        get: function () {
            return this.childGrid;
        },
        set: function (value) {
            this.childGrid = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "size", {
        get: function () {
            if (this.gridSize.width === 0 && this.gridSize.height === 0) {
                this.gridSize = this.measure();
                return this.gridSize;
            }
            else {
                return this.gridSize;
            }
        },
        set: function (value) {
            this.gridSize = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {
        if (arg2 instanceof __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["a" /* PointF */] && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {
            return this.drawHelper(arg1, arg2.x, arg2.y);
        }
        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {
            return this.drawHelper(arg1, arg2, arg3, null);
        }
        else if (arg2 instanceof __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["c" /* RectangleF */] && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {
            return this.drawHelper(arg1, arg2, null);
        }
        else if (arg2 instanceof __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["a" /* PointF */] && typeof arg2.width === 'undefined' && arg3 instanceof __WEBPACK_IMPORTED_MODULE_4__graphics_figures_base_element_layouter__["b" /* PdfLayoutFormat */]) {
            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);
        }
        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof __WEBPACK_IMPORTED_MODULE_4__graphics_figures_base_element_layouter__["b" /* PdfLayoutFormat */] || arg4 == null)) {
            var width = (arg1.graphics.clientSize.width - arg2);
            var layoutRectangle = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["c" /* RectangleF */](arg2, arg3, width, 0);
            return this.drawHelper(arg1, layoutRectangle, arg4);
        }
        else if (arg2 instanceof __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["c" /* RectangleF */] && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {
            return this.drawHelper(arg1, arg2, null);
        }
        else {
            return this.drawHelper(arg1, arg2, arg3);
        }
    };
    PdfGrid.prototype.measure = function () {
        var height = 0;
        var width = this.columns.width;
        for (var i = 0; i < this.headers.count; i++) {
            var row = this.headers.getHeader(i);
            height += row.height;
        }
        for (var i = 0; i < this.rows.count; i++) {
            var row = this.rows.getRow(i);
            height += row.height;
        }
        return new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["b" /* SizeF */](width, height);
    };
    PdfGrid.prototype.layout = function (param, isGridLayouter) {
        if (typeof isGridLayouter === 'undefined') {
            this.setSpan();
            this.layoutFormat = param.format;
            this.gridLocation = param.bounds;
            var result = this.layout(param, true);
            return result;
        }
        else {
            return this.layoutInternal(param);
        }
    };
    PdfGrid.prototype.setSpan = function () {
        var colSpan;
        var rowSpan = 1;
        var currentCellIndex;
        var currentRowIndex = 0;
        var rowCount = this.headers.count;
        for (var i = 0; i < rowCount; i++) {
            var row = this.headers.getHeader(i);
            var colCount = row.cells.count;
            for (var j = 0; j < colCount; j++) {
                var cell = row.cells.getCell(j);
                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {
                    if (cell.columnSpan + j > row.cells.count) {
                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());
                    }
                    if (cell.rowSpan + i > this.headers.count) {
                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());
                    }
                    if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {
                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());
                    }
                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {
                        colSpan = cell.columnSpan;
                        rowSpan = cell.rowSpan;
                        currentCellIndex = j;
                        currentRowIndex = i;
                        cell.isCellMergeStart = true;
                        cell.isRowMergeStart = true;
                        while (colSpan > 1) {
                            currentCellIndex++;
                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;
                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;
                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;
                            colSpan--;
                        }
                        currentCellIndex = j;
                        colSpan = cell.columnSpan;
                        while (rowSpan > 1) {
                            currentRowIndex++;
                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;
                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;
                            rowSpan--;
                            while (colSpan > 1) {
                                currentCellIndex++;
                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;
                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;
                                colSpan--;
                            }
                            colSpan = cell.columnSpan;
                            currentCellIndex = j;
                        }
                    }
                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {
                        colSpan = cell.columnSpan;
                        currentCellIndex = j;
                        cell.isCellMergeStart = true;
                        while (colSpan > 1) {
                            currentCellIndex++;
                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;
                            colSpan--;
                        }
                    }
                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {
                        rowSpan = cell.rowSpan;
                        currentRowIndex = i;
                        while (rowSpan > 1) {
                            currentRowIndex++;
                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;
                            rowSpan--;
                        }
                    }
                }
            }
        }
    };
    PdfGrid.prototype.getFormat = function (format) {
        var f = format;
        return f;
    };
    PdfGrid.prototype.layoutInternal = function (param) {
        this.initialWidth = param.bounds.width;
        var format = this.getFormat(param.format);
        this.currentPage = param.page;
        if (this.currentPage !== null) {
            var pageHeight = this.currentPage.getClientSize().height;
            var pageWidth = this.currentPage.getClientSize().width;
            this.currentPageBounds = this.currentPage.getClientSize();
        }
        else {
            throw Error('Can not set page as null');
        }
        this.currentGraphics = this.currentPage.graphics;
        var index = 0;
        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);
        this.listOfNavigatePages.push(index);
        this.currentBounds = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["c" /* RectangleF */](new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["a" /* PointF */](param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);
        if (this.rows.count !== 0) {
            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :
                (this.currentBounds.width - this.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);
        }
        else if (this.headers.count !== 0) {
            this.currentBounds.width = param.bounds.width;
        }
        else {
            throw Error('Please add row or header into grid');
        }
        this.startLocation = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["a" /* PointF */](param.bounds.x, param.bounds.y);
        if (param.bounds.height > 0 && !this.isChildGrid) {
            this.currentBounds.height = param.bounds.height;
        }
        this.hType = this.style.horizontalOverflowType;
        if (!this.style.allowHorizontalOverflow) {
            this.measureColumnsWidth(this.currentBounds);
            this.columnRanges.push([0, this.columns.count - 1]);
        }
        else {
            this.measureColumnsWidth();
            this.determineColumnDrawRanges();
        }
        var result = this.layoutOnPage(param);
        return result;
    };
    PdfGrid.prototype.measureColumnsWidth = function (bounds) {
        if (typeof bounds !== 'undefined') {
            var widths = this.columns.getDefaultWidths(bounds.width);
            var tempWidth = this.columns.getColumn(0).width;
            for (var i = 0, count = this.columns.count; i < count; i++) {
                this.columns.getColumn(i).width = widths[i];
            }
        }
        else {
            var widths = [];
            var cellWidth = 0;
            var cellWidths = 0;
            if (this.headers.count > 0) {
                var colCount = this.headers.getHeader(0).cells.count;
                var rowCount = this.headers.count;
                for (var i = 0; i < colCount; i++) {
                    cellWidth = 0;
                    for (var j = 0; j < rowCount; j++) {
                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);
                        cellWidth = Math.max(cellWidth, rowWidth);
                    }
                    widths[i] = cellWidth;
                }
            }
            else {
                var colCount = this.rows.getRow(0).cells.count;
                var rowCount = this.rows.count;
                for (var i = 0; i < colCount; i++) {
                    cellWidth = 0;
                    for (var j = 0; j < rowCount; j++) {
                        var rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);
                        cellWidth = Math.max(cellWidth, rowWidth);
                    }
                    widths[i] = cellWidth;
                }
            }
            cellWidth = 0;
            for (var i = 0, colCount = this.columns.count; i < colCount; i++) {
                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {
                    if (this.rows.getRow(j).cells.getCell(i).columnSpan == 1 || this.rows.getRow(j).cells.getCell(i).value !== null || this.rows.getRow(j).cells.getCell(i).rowSpan >= 1) {
                        if (this.rows.getRow(j).cells.getCell(i).value !== null &&
                            !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {
                            var value = this.rows.getRow(j).grid.style.cellPadding.right +
                                this.rows.getRow(j).grid.style.cellPadding.left
                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2
                                + this.gridLocation.x;
                            this.rows.getRow(j).cells.getCell(i).value.initialWidth = this.initialWidth - value;
                        }
                        var rowWidth = 0;
                        var internalWidth = this.rows.getRow(j).cells.getCell(i).width;
                        internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;
                        internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;
                        var internalHeight = this.rows.getRow(j).cells.getCell(i).height;
                        internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);
                        internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);
                        var isCorrectWidth = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;
                        var isCorrectHeight = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;
                        if (isCorrectWidth || isCorrectHeight) {
                            throw Error('Image size exceeds client size of the page. Can not insert this image');
                        }
                        rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);
                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));
                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);
                    }
                }
                widths[i] = cellWidth;
                cellWidth = 0;
            }
            for (var i = 0, count = this.columns.count; i < count; i++) {
                this.columns.getColumn(i).width = widths[i];
            }
        }
    };
    PdfGrid.prototype.determineColumnDrawRanges = function () {
        var startColumn = 0;
        var endColumn = 0;
        var cellWidths = 0;
        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;
        for (var i = 0; i < this.columns.count; i++) {
            cellWidths += this.columns.getColumn(i).width;
            if (cellWidths >= availableWidth) {
                var subWidths = 0;
                for (var j = startColumn; j <= i; j++) {
                    subWidths += this.columns.getColumn(j).width;
                    if (subWidths > availableWidth) {
                        break;
                    }
                    endColumn = j;
                }
                this.columnRanges.push([startColumn, endColumn]);
                startColumn = endColumn + 1;
                endColumn = startColumn;
                cellWidths = (endColumn <= i) ? this.columns.getColumn(i).width : 0;
            }
        }
        this.columnRanges.push([startColumn, this.columns.count - 1]);
    };
    PdfGrid.prototype.layoutOnPage = function (param) {
        this.pageBounds.x = param.bounds.x;
        this.pageBounds.y = param.bounds.y;
        this.pageBounds.height = param.bounds.height;
        var format = this.getFormat(param.format);
        var endArgs = null;
        var result = null;
        var layoutedPages = new __WEBPACK_IMPORTED_MODULE_8__collections_object_object_pair_dictionary__["a" /* TemporaryDictionary */]();
        var startPage = param.page;
        var isParentCell = false;
        var cellBounds = [];
        for (var index = 0; index < this.columnRanges.length; index++) {
            var range = this.columnRanges[index];
            this.cellStartIndex = range[0];
            this.cellEndIndex = range[1];
            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);
            this.currentBounds = returnObject.currentBounds;
            this.currentRowIndex = returnObject.currentRowIndex;
            var drawHeader = void 0;
            for (var i_1 = 0; i_1 < this.headers.count; i_1++) {
                var row = this.headers.getHeader(i_1);
                var headerHeight = this.currentBounds.y;
                var headerResult = this.drawRow(row);
                drawHeader = false;
            }
            var i = 0;
            var length_1 = this.rows.count;
            var repeatRow = void 0;
            var startingHeight = 0;
            var flag = true;
            cellBounds = [];
            for (var j = 0; j < this.rows.count; j++) {
                var row = this.rows.getRow(j);
                i++;
                this.currentRowIndex = i - 1;
                var originalHeight = this.currentBounds.y;
                startPage = this.currentPage;
                PdfGrid.repeatRowIndex = -1;
                var rowResult = this.drawRow(row);
                cellBounds.push(rowResult.bounds.width);
                if (originalHeight === this.currentBounds.y) {
                    repeatRow = true;
                    PdfGrid.repeatRowIndex = this.rows.rowCollection.indexOf(row);
                }
                else {
                    repeatRow = false;
                    PdfGrid.repeatRowIndex = -1;
                }
                if (!rowResult.isFinish && startPage !== null && format.layout !== __WEBPACK_IMPORTED_MODULE_7__graphics_figures_enum__["a" /* PdfLayoutType */].OnePage && repeatRow) {
                    this.startLocation.x = this.currentBounds.x;
                    var isAddNextPage = false;
                    this.currentPage = this.getNextPage(format);
                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&
                        param.bounds.height > 0 && !this.isChildGrid) {
                        this.currentBounds.height = param.bounds.height;
                    }
                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&
                        param.bounds.y > 0 && !this.isChildGrid) {
                        this.currentBounds.y = param.bounds.y;
                    }
                    this.startLocation.y = this.currentBounds.y;
                    if ((format.paginateBounds.x === format.paginateBounds.y) &&
                        (format.paginateBounds.y === format.paginateBounds.height) &&
                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {
                        this.currentBounds.x += this.startLocation.x;
                    }
                    if (this.currentBounds.x === __WEBPACK_IMPORTED_MODULE_5__styles_pdf_borders__["a" /* PdfBorders */].default.left.width / 2) {
                        this.currentBounds.y += this.startLocation.x;
                    }
                    if (this.repeatHeader) {
                        for (var i_2 = 0; i_2 < this.headers.count; i_2++) {
                            var header = this.headers.getHeader(i_2);
                            this.drawRow(header);
                        }
                    }
                    this.drawRow(row);
                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {
                        layoutedPages.add(this.currentPage, range);
                    }
                }
            }
            var isPdfGrid = false;
            var maximumCellBoundsWidth = 0;
            if (cellBounds.length > 0) {
                maximumCellBoundsWidth = cellBounds[0];
            }
            var largeNavigatePage = [];
            if (!isPdfGrid && cellBounds.length > 0) {
                for (var c = 0; c < i - 1; c++) {
                    if (maximumCellBoundsWidth < cellBounds[c]) {
                        maximumCellBoundsWidth = cellBounds[c];
                    }
                }
                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;
            }
            else {
                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];
            }
            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== __WEBPACK_IMPORTED_MODULE_7__graphics_figures_enum__["a" /* PdfLayoutType */].OnePage) {
                this.currentPage = this.getNextPage(format);
                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)
                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {
                    this.currentBounds.x += this.startLocation.x;
                    this.currentBounds.y += this.startLocation.y;
                }
            }
        }
        result = this.getLayoutResult();
        if (this.style.allowHorizontalOverflow && this.style.horizontalOverflowType == __WEBPACK_IMPORTED_MODULE_6__styles_style__["e" /* PdfHorizontalOverflowType */].NextPage) {
            this.reArrangePages(layoutedPages);
        }
        this.raisePageLayouted(result);
        return result;
    };
    PdfGrid.prototype.getNextPage = function (format) {
        var section = this.currentPage.section;
        var nextPage = null;
        var index = section.indexOf(this.currentPage);
        this.flag = false;
        if (index === section.count - 1) {
            nextPage = section.add();
        }
        else {
            nextPage = section.getPages()[index + 1];
        }
        this.currentGraphics = nextPage.graphics;
        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);
        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {
            this.listOfNavigatePages.push(pageindex);
        }
        this.currentBounds = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["c" /* RectangleF */](new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["a" /* PointF */](0, 0), nextPage.getClientSize());
        return nextPage;
    };
    PdfGrid.prototype.getLayoutResult = function () {
        var bounds;
        bounds = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["c" /* RectangleF */](this.startLocation, new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["b" /* SizeF */](this.currentBounds.width, this.currentBounds.y - this.startLocation.y));
        return new PdfGridLayoutResult(this.currentPage, bounds);
    };
    PdfGrid.prototype.ReCalculateHeight = function (row, height) {
        var newHeight = 0.0;
        return Math.max(height, newHeight);
    };
    PdfGrid.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {
        var cancel = false;
        if (this.raiseBeginPageLayout) {
            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);
            this.beginPageLayout(this, args);
            cancel = args.cancel;
            currentBounds = args.bounds;
            currentRow = args.startRowIndex;
        }
        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };
    };
    PdfGrid.prototype.raisePageLayouted = function (result) {
        var args = new PdfGridEndPageLayoutEventArgs(result);
        if (this.raiseEndPageLayout) {
            this.endPageLayout(this, args);
        }
        return args;
    };
    PdfGrid.prototype.drawRow = function (row, result, height) {
        if (typeof result === 'undefined') {
            var result_1 = new RowLayoutResult();
            var rowHeightWithSpan = 0;
            var location_1 = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["a" /* PointF */](0, 0);
            var size = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["b" /* SizeF */](0, 0);
            var isHeader = false;
            if (row.rowSpanExists) {
                var maxSpan = 0;
                var currRowIndex = this.rows.rowCollection.indexOf(row);
                if (currRowIndex === -1) {
                    currRowIndex = this.headers.indexOf(row);
                    if (currRowIndex !== -1) {
                        isHeader = true;
                    }
                }
                for (var i = 0; i < row.cells.count; i++) {
                    var cell = row.cells.getCell(i);
                    maxSpan = Math.max(maxSpan, cell.rowSpan);
                }
                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {
                    rowHeightWithSpan += (isHeader ? this.headers.getHeader(i).height : this.rows.getRow(i).height);
                }
            }
            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;
            if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||
                this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||
                this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {
                result_1.isFinish = false;
            }
            else {
                result_1.isFinish = true;
                this.drawRow(row, result_1, calculatedHeight);
            }
            return result_1;
        }
        else {
            var skipcell = false;
            var location_2 = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["a" /* PointF */](this.currentBounds.x, this.currentBounds.y);
            result.bounds = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["c" /* RectangleF */](location_2, new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["b" /* SizeF */](0, 0));
            height = this.ReCalculateHeight(row, height);
            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {
                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));
                if (!cancelSpans) {
                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {
                        row.cells.getCell(i + j).isCellMergeContinue = true;
                    }
                }
                var size = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["b" /* SizeF */](this.columns.getColumn(i).width, height);
                if (!this.CheckIfDefaultFormat(this.columns.getColumn(i).format) &&
                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {
                    row.cells.getCell(i).stringFormat = this.columns.getColumn(i).format;
                }
                var cellstyle = row.cells.getCell(i).style;
                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&
                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');
                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["c" /* RectangleF */](location_2, size), tempValue, cellstyle);
                var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["c" /* RectangleF */](location_2, size), cancelSpans);
                if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {
                    row.rowOverflowIndex = this.cellEndIndex;
                }
                if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan > this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) && row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {
                    row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ? stringResult.remainder : '' : '';
                    row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;
                    row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;
                    row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;
                }
                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&
                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');
                this.RaiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["c" /* RectangleF */](location_2, size), tempValue, row.cells.getCell(i).style);
                location_2.x += this.columns.getColumn(i).width;
            }
            this.currentBounds.y += height;
            result.bounds = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["c" /* RectangleF */](new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["a" /* PointF */](result.bounds.x, result.bounds.y), new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["b" /* SizeF */](location_2.x, location_2.y));
        }
    };
    PdfGrid.prototype.CheckIfDefaultFormat = function (format) {
        var defaultFormat = new __WEBPACK_IMPORTED_MODULE_9__graphics_fonts_pdf_string_format__["a" /* PdfStringFormat */]();
        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&
            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&
            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&
            format.lineAlignment === defaultFormat.lineAlignment
            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&
            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&
            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&
            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&
            format.wordWrap === defaultFormat.wordWrap);
    };
    PdfGrid.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {
        var args = null;
        if (this.raiseBeginCellDraw) {
            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);
            this.beginCellDraw(this, args);
            style = args.style;
        }
        return style;
    };
    PdfGrid.prototype.RaiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {
        var args = null;
        if (this.raiseEndCellDraw) {
            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);
            this.endCellDraw(this, args);
        }
    };
    PdfGrid.prototype.reArrangePages = function (layoutedPages) {
        var document = this.currentPage.document;
        var pages = [];
        var keys = layoutedPages.keys();
        var values = layoutedPages.values();
        for (var i = 0; i < keys.length; i++) {
            var page = keys[i];
            page.section = null;
            pages.push(page);
            document.pages.remove(page);
        }
        for (var i = 0; i < layoutedPages.size(); i++) {
            var count = 0;
            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {
                var page = pages[j];
                if (document.pages.indexOf(page) === -1) {
                    document.pages.add(page);
                }
            }
        }
    };
    return PdfGrid;
}(__WEBPACK_IMPORTED_MODULE_3__graphics_figures_layout_element__["a" /* PdfLayoutElement */]));

PdfGrid.repeatRowIndex = -1;
var GridCellEventArgs = (function () {
    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {
        this.gridRowIndex = rowIndex;
        this.gridCellIndex = cellIndex;
        this.internalValue = value;
        this.gridBounds = bounds;
        this.pdfGraphics = graphics;
    }
    Object.defineProperty(GridCellEventArgs.prototype, "rowIndex", {
        get: function () {
            return this.gridRowIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridCellEventArgs.prototype, "cellIndex", {
        get: function () {
            return this.gridCellIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridCellEventArgs.prototype, "value", {
        get: function () {
            return this.internalValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridCellEventArgs.prototype, "bounds", {
        get: function () {
            return this.gridBounds;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridCellEventArgs.prototype, "graphics", {
        get: function () {
            return this.pdfGraphics;
        },
        enumerable: true,
        configurable: true
    });
    return GridCellEventArgs;
}());

var PdfGridBeginCellDrawEventArgs = (function (_super) {
    __extends(PdfGridBeginCellDrawEventArgs, _super);
    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {
        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;
        _this.style = style;
        return _this;
    }
    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, "skip", {
        get: function () {
            return this.bSkip;
        },
        set: function (value) {
            this.bSkip = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, "style", {
        get: function () {
            return this.cellStyle;
        },
        set: function (value) {
            this.cellStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGridBeginCellDrawEventArgs;
}(GridCellEventArgs));

var PdfGridEndCellDrawEventArgs = (function (_super) {
    __extends(PdfGridEndCellDrawEventArgs, _super);
    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {
        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;
        _this.cellStyle = style;
        return _this;
    }
    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, "style", {
        get: function () {
            return this.cellStyle;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGridEndCellDrawEventArgs;
}(GridCellEventArgs));

var PdfCancelEventArgs = (function () {
    function PdfCancelEventArgs() {
    }
    Object.defineProperty(PdfCancelEventArgs.prototype, "cancel", {
        get: function () {
            return this.isCancel;
        },
        set: function (value) {
            this.isCancel = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfCancelEventArgs;
}());

var BeginPageLayoutEventArgs = (function (_super) {
    __extends(BeginPageLayoutEventArgs, _super);
    function BeginPageLayoutEventArgs(bounds, page) {
        var _this = _super.call(this) || this;
        _this.bounds = bounds;
        _this.pdfPage = page;
        return _this;
    }
    Object.defineProperty(BeginPageLayoutEventArgs.prototype, "bounds", {
        get: function () {
            return this.cellBounds;
        },
        set: function (value) {
            this.cellBounds = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BeginPageLayoutEventArgs.prototype, "page", {
        get: function () {
            return this.pdfPage;
        },
        enumerable: true,
        configurable: true
    });
    return BeginPageLayoutEventArgs;
}(PdfCancelEventArgs));

var EndPageLayoutEventArgs = (function (_super) {
    __extends(EndPageLayoutEventArgs, _super);
    function EndPageLayoutEventArgs(result) {
        var _this = _super.call(this) || this;
        _this.layoutResult = result;
        return _this;
    }
    Object.defineProperty(EndPageLayoutEventArgs.prototype, "result", {
        get: function () {
            return this.layoutResult;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EndPageLayoutEventArgs.prototype, "nextPage", {
        get: function () {
            return this.nextPdfPage;
        },
        set: function (value) {
            this.nextPdfPage = value;
        },
        enumerable: true,
        configurable: true
    });
    return EndPageLayoutEventArgs;
}(PdfCancelEventArgs));

var PdfGridBeginPageLayoutEventArgs = (function (_super) {
    __extends(PdfGridBeginPageLayoutEventArgs, _super);
    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {
        var _this = _super.call(this, bounds, page) || this;
        _this.startRow = startRow;
        return _this;
    }
    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, "startRowIndex", {
        get: function () {
            return this.startRow;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGridBeginPageLayoutEventArgs;
}(BeginPageLayoutEventArgs));

var PdfGridEndPageLayoutEventArgs = (function (_super) {
    __extends(PdfGridEndPageLayoutEventArgs, _super);
    function PdfGridEndPageLayoutEventArgs(result) {
        return _super.call(this, result) || this;
    }
    return PdfGridEndPageLayoutEventArgs;
}(EndPageLayoutEventArgs));

var RowLayoutResult = (function () {
    function RowLayoutResult() {
        this.layoutedBounds = new __WEBPACK_IMPORTED_MODULE_2__drawing_pdf_drawing__["c" /* RectangleF */](0, 0, 0, 0);
    }
    Object.defineProperty(RowLayoutResult.prototype, "isFinish", {
        get: function () {
            return this.bIsFinished;
        },
        set: function (value) {
            this.bIsFinished = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RowLayoutResult.prototype, "bounds", {
        get: function () {
            return this.layoutedBounds;
        },
        set: function (value) {
            this.layoutedBounds = value;
        },
        enumerable: true,
        configurable: true
    });
    return RowLayoutResult;
}());

var PdfGridLayoutResult = (function (_super) {
    __extends(PdfGridLayoutResult, _super);
    function PdfGridLayoutResult(page, bounds) {
        return _super.call(this, page, bounds) || this;
    }
    return PdfGridLayoutResult;
}(__WEBPACK_IMPORTED_MODULE_4__graphics_figures_base_element_layouter__["d" /* PdfLayoutResult */]));



/***/ }),
/* 248 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__position__ = __webpack_require__(68);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__position__["b"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_0__position__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__collision__ = __webpack_require__(113);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__collision__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __WEBPACK_IMPORTED_MODULE_1__collision__["b"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "e", function() { return __WEBPACK_IMPORTED_MODULE_1__collision__["c"]; });




/***/ }),
/* 249 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ButtonProps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Dialog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return dialogBuilder; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__popup_popup__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_buttons__ = __webpack_require__(91);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};








var ButtonProps = (function (_super) {
    __extends(ButtonProps, _super);
    function ButtonProps() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ButtonProps;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["ChildProperty"]));

__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])()
], ButtonProps.prototype, "buttonModel", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])()
], ButtonProps.prototype, "click", void 0);
var ROOT = 'e-dialog';
var RTL = 'e-rtl';
var DLG_HEADER_CONTENT = 'e-dlg-header-content';
var DLG_HEADER = 'e-dlg-header';
var DLG_FOOTER_CONTENT = 'e-footer-content';
var MODAL_DLG = 'e-dlg-modal';
var DLG_CONTENT = 'e-dlg-content';
var DLG_CLOSE_ICON = 'e-icon-dlg-close';
var DLG_OVERLAY = 'e-dlg-overlay';
var DLG_CONTAINER = 'e-dlg-container';
var SCROLL_DISABLED = 'e-scroll-disabled';
var DLG_PRIMARY_BUTTON = 'e-primary';
var ICON = 'e-icons';
var POPUP_ROOT = 'e-popup';
var DEVICE = 'e-device';
var FULLSCREEN = 'e-dlg-fullscreen';
var DLG_CLOSE_ICON_BTN = 'e-dlg-closeicon-btn';
var DLG_HIDE = 'e-popup-close';
var DLG_SHOW = 'e-popup-open';
var Dialog = (function (_super) {
    __extends(Dialog, _super);
    function Dialog(options, element) {
        return _super.call(this, options, element) || this;
    }
    Dialog.prototype.render = function () {
        this.initialize();
        this.initRender();
        this.wireEvents();
    };
    Dialog.prototype.preRender = function () {
        var _this = this;
        this.closeIconClickEventHandler = function (event) {
            _this.hide();
            _this.closedFrom = event;
        };
        this.dlgOverlayClickEventHandler = function (event) {
            _this.trigger('overlayClick', event);
        };
    };
    ;
    Dialog.prototype.keyDown = function (event) {
        var _this = this;
        if (event.keyCode === 9) {
            event.preventDefault();
            for (var u = 0; u < this.focusElements.length; u++) {
                if (this.focusElements[u].disabled) {
                    this.focusElements.splice(u, 1);
                }
            }
            var focusIndex = void 0;
            if (event.shiftKey) {
                focusIndex = (this.focusIndex === 0 || __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.focusIndex)) ?
                    this.focusElements.length - 1 : this.focusIndex - 1;
            }
            else {
                focusIndex = (this.focusElements.length - 1 === this.focusIndex || __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.focusIndex)) ?
                    0 : this.focusIndex + 1;
            }
            var element_1 = this.focusElements[focusIndex];
            element_1.focus();
            if (element_1 instanceof HTMLInputElement) {
                element_1.select();
            }
        }
        var element = document.activeElement;
        var isTagName = (['input', 'textarea'].indexOf(element.tagName.toLowerCase()) > -1);
        var isContentEdit = false;
        if (!isTagName) {
            isContentEdit = element.hasAttribute('contenteditable') && element.getAttribute('contenteditable') === 'true';
        }
        if (event.keyCode === 27 && this.closeOnEscape) {
            this.hide();
            this.closedFrom = event;
        }
        if ((event.keyCode === 13 && element.tagName.toLowerCase() === 'button' &&
            element.classList.contains(DLG_PRIMARY_BUTTON) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.primaryButtonEle)) ||
            (event.keyCode === 13 && !event.ctrlKey && element.tagName.toLowerCase() !== 'textarea' &&
                isTagName && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.primaryButtonEle)) ||
            (event.keyCode === 13 && event.ctrlKey && (element.tagName.toLowerCase() === 'textarea' ||
                isContentEdit)) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.primaryButtonEle)) {
            var buttonIndex_1;
            var firstPrimary = this.buttons.some(function (data, index) {
                buttonIndex_1 = index;
                var buttonModel = data.buttonModel;
                return !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(buttonModel) && buttonModel.isPrimary === true;
            });
            if (firstPrimary && typeof (this.buttons[buttonIndex_1].click) === 'function') {
                setTimeout(function () {
                    _this.buttons[buttonIndex_1].click.call(_this, event);
                });
            }
        }
    };
    Dialog.prototype.initialize = function () {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.target)) {
            this.targetEle = ((typeof this.target) === 'string') ?
                document.querySelector(this.target) : this.target;
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], ROOT);
        if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], DEVICE);
        }
        this.setCSSClass();
        this.setMaxHeight();
    };
    Dialog.prototype.initRender = function () {
        var _this = this;
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { role: 'dialog' });
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.zIndex)) {
            this.getZindexPartial();
        }
        if (this.header !== '') {
            this.setHeader();
        }
        if (this.showCloseIcon) {
            this.renderCloseIcon();
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.content) && this.content !== '') {
            this.setContent();
        }
        else if (this.element.hasChildNodes()) {
            this.contentEle = this.element;
        }
        if (this.footerTemplate !== '') {
            this.setFooterTemplate();
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.buttons[0].buttonModel) && this.footerTemplate === '') {
            this.setButton();
        }
        if (this.allowDragging && (!this.isModal) && (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.headerContent))) {
            this.setAllowDragging();
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { 'aria-modal': (this.isModal ? 'true' : 'false') });
        if (this.isModal) {
            this.setIsModal();
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.targetEle)) {
            this.isModal ? this.targetEle.appendChild(this.dlgContainer) : this.targetEle.appendChild(this.element);
        }
        this.popupObj = new __WEBPACK_IMPORTED_MODULE_1__popup_popup__["a" /* Popup */](this.element, {
            height: this.height,
            width: this.width,
            zIndex: this.zIndex,
            relateTo: this.target,
            actionOnScroll: 'none',
            open: function () {
                _this.focusContent();
                _this.trigger('open');
            },
            close: function (event) {
                if (_this.isModal) {
                    _this.dlgContainer.style.display = 'none';
                }
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(_this.focusElements) && _this.focusElements.length > 0) {
                    _this.unBindEvent((__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(_this.focusIndex) ? _this.element : _this.focusElements[_this.focusIndex]));
                }
                else {
                    _this.unBindEvent(_this.element);
                }
                _this.trigger('close', _this.closedFrom);
                _this.closedFrom = {};
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(_this.storeActiveElement)) {
                    _this.storeActiveElement.focus();
                }
            }
        });
        this.positionChange();
        this.setEnableRTL();
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], DLG_HIDE);
        if (this.visible) {
            this.show();
        }
        else {
            if (this.isModal) {
                this.dlgOverlay.style.display = 'none';
            }
        }
    };
    Dialog.prototype.positionChange = function () {
        if (!this.isModal) {
            this.popupObj.setProperties({
                position: {
                    X: this.position.X, Y: this.position.Y
                }
            });
        }
        else {
            this.dlgContainer.classList.add('e-dlg-' + this.position.X + '-' + this.position.Y);
        }
    };
    Dialog.prototype.getZindexPartial = function () {
        var dialogParent = this.element.parentElement;
        var parentZindex = [];
        while (dialogParent) {
            if (dialogParent.tagName !== 'BODY') {
                var index = document.defaultView.getComputedStyle(dialogParent, null).getPropertyValue('z-index');
                var position = document.defaultView.getComputedStyle(dialogParent, null).getPropertyValue('position');
                if (index !== 'auto' && position !== 'static') {
                    parentZindex.push(index);
                }
                dialogParent = dialogParent.parentElement;
            }
            else {
                break;
            }
        }
        var childrenZindex = [];
        for (var i = 0; i < document.body.children.length; i++) {
            if (!this.element.isEqualNode(document.body.children[i])) {
                var index = document.defaultView.getComputedStyle(document.body.children[i], null).getPropertyValue('z-index');
                var position = document.defaultView.getComputedStyle(document.body.children[i], null).getPropertyValue('position');
                if (index !== 'auto' && position !== 'static') {
                    childrenZindex.push(index);
                }
            }
        }
        childrenZindex.push('999');
        var finalValue = parentZindex.concat(childrenZindex);
        this.zIndex = Math.max.apply(Math, finalValue) + 1;
    };
    ;
    Dialog.prototype.setAllowDragging = function () {
        var _this = this;
        var handleContent = '.' + DLG_HEADER_CONTENT;
        this.dragObj = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Draggable"](this.element, {
            clone: false,
            handle: handleContent,
            dragStart: function (event) {
                _this.trigger('dragStart', event);
            },
            dragStop: function (event) {
                _this.trigger('dragStop', event);
            },
            drag: function (event) {
                _this.trigger('drag', event);
            }
        });
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.targetEle)) {
            this.dragObj.dragArea = this.targetEle;
        }
    };
    Dialog.prototype.setButton = function () {
        this.buttonContent = [];
        var primaryBtnFlag = true;
        for (var i = 0; i < this.buttons.length; i++) {
            var btn = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('button');
            this.buttonContent.push(btn.outerHTML);
        }
        this.setFooterTemplate();
        for (var i = 0; i < this.buttons.length; i++) {
            this.btnObj = new __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_buttons__["Button"](this.buttons[i].buttonModel);
            if (typeof (this.buttons[i].click) === 'function') {
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.ftrTemplateContent.children[i], 'click', this.buttons[i].click, this);
            }
            this.btnObj.appendTo(this.ftrTemplateContent.children[i]);
            this.primaryButtonEle = this.element.getElementsByClassName('e-primary')[0];
        }
    };
    Dialog.prototype.setContent = function () {
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { 'aria-describedby': this.element.id + '_dialog-content' });
        this.contentEle = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: DLG_CONTENT, id: this.element.id + '_dialog-content' });
        typeof (this.content) === 'string' ? this.contentEle.innerHTML = this.content : this.contentEle.appendChild(this.content);
        !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.headerContent) ? this.element.insertBefore(this.contentEle, this.element.children[1]) :
            this.element.insertBefore(this.contentEle, this.element.children[0]);
        if (this.height === 'auto') {
            this.setMaxHeight();
        }
    };
    Dialog.prototype.setMaxHeight = function () {
        var display = this.element.style.display;
        this.element.style.display = 'none';
        this.element.style.maxHeight = (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.target)) ?
            (this.targetEle.offsetHeight - 20) + 'px' : (window.innerHeight - 20) + 'px';
        this.element.style.display = display;
    };
    Dialog.prototype.setEnableRTL = function () {
        this.enableRtl ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], RTL) : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], RTL);
    };
    Dialog.prototype.setHeader = function () {
        this.headerEle = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { id: this.element.id + '_title', className: DLG_HEADER, innerHTML: this.header });
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(this.element, { 'aria-labelledby': this.element.id + '_title' });
        this.createHeaderContent();
        this.headerContent.appendChild(this.headerEle);
        this.element.insertBefore(this.headerContent, this.element.children[0]);
    };
    Dialog.prototype.setFooterTemplate = function () {
        this.ftrTemplateContent = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', {
            className: DLG_FOOTER_CONTENT,
            innerHTML: (this.footerTemplate !== '' ? this.footerTemplate : this.buttonContent.join(''))
        });
        this.element.appendChild(this.ftrTemplateContent);
    };
    Dialog.prototype.createHeaderContent = function () {
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.headerContent)) {
            this.headerContent = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: DLG_HEADER_CONTENT });
        }
    };
    Dialog.prototype.renderCloseIcon = function () {
        this.closeIcon = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('button', { className: DLG_CLOSE_ICON_BTN });
        this.closeIconBtnObj = new __WEBPACK_IMPORTED_MODULE_2__syncfusion_ej2_buttons__["Button"]({ cssClass: 'e-flat', iconCss: DLG_CLOSE_ICON + ' ' + ICON });
        this.closeIconTitle();
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.headerContent)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["prepend"])([this.closeIcon], this.headerContent);
        }
        else {
            this.createHeaderContent();
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["prepend"])([this.closeIcon], this.headerContent);
            this.element.insertBefore(this.headerContent, this.element.children[0]);
        }
        this.closeIconBtnObj.appendTo(this.closeIcon);
    };
    Dialog.prototype.closeIconTitle = function () {
        if (this.locale !== '') {
            var l10n = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["L10n"]('Dialog', { locale: 'Close' });
            l10n.setLocale(this.locale);
            var closeIconTitle = l10n.getConstant('Close');
            this.closeIcon.setAttribute('title', closeIconTitle);
        }
        else {
            this.closeIcon.setAttribute('title', 'Close');
        }
    };
    Dialog.prototype.setCSSClass = function (oldCSSClass) {
        if (this.cssClass) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], this.cssClass.split(' '));
        }
        if (oldCSSClass) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], oldCSSClass.split(' '));
        }
    };
    Dialog.prototype.setIsModal = function () {
        this.dlgContainer = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: DLG_CONTAINER });
        this.element.parentNode.insertBefore(this.dlgContainer, this.element);
        this.dlgContainer.appendChild(this.element);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], MODAL_DLG);
        this.dlgOverlay = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: DLG_OVERLAY });
        this.dlgOverlay.style.zIndex = (this.zIndex - 1).toString();
        this.dlgContainer.appendChild(this.dlgOverlay);
    };
    Dialog.prototype.focusContentEle = function (container) {
        var _this = this;
        var value = 'input,select,textarea,button,a,[contenteditable="true"]';
        var items = container.querySelectorAll(value);
        var item;
        this.focusElements = [];
        this.focusIndex = 0;
        for (var u = 0; u < items.length; u++) {
            item = items[u];
            if ((item.clientHeight > 0 || (item.tagName.toLowerCase() === 'a' && item.hasAttribute('href'))) && item.tabIndex > -1 &&
                !item.disabled && !this.disableElement(item, '[disabled],[aria-disabled="true"],[type="hidden"]')) {
                this.focusElements.push(item);
            }
        }
        if (0 < this.focusElements.length) {
            var autofocusEle = [].slice.call(this.focusElements);
            var isAutoFocus_1 = autofocusEle.some(function (value, index) {
                if (value.hasAttribute('autofocus')) {
                    _this.focusIndex = index;
                    isAutoFocus_1 = true;
                }
                else {
                    isAutoFocus_1 = false;
                }
                return isAutoFocus_1;
            });
            if (!isAutoFocus_1) {
                var index = this.showCloseIcon && this.focusElements.length > 1 ? 1 : 0;
                var contentEle = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.contentEle) &&
                    this.focusElements[index];
                if (contentEle) {
                    this.focusIndex = this.focusElements.indexOf(contentEle);
                }
                else if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.primaryButtonEle)) {
                    var ele = this.element.querySelector('.' + DLG_PRIMARY_BUTTON);
                    this.focusIndex = this.focusElements.indexOf(ele);
                }
            }
            var element = this.focusElements[this.focusIndex];
            element.focus();
            this.bindEvent(element);
            if (element instanceof HTMLInputElement) {
                element.select();
            }
        }
    };
    Dialog.prototype.disableElement = function (element, t) {
        var elementMatch = element ? element.matches || element.webkitMatchesSelector || element.msMatchesSelector : null;
        if (elementMatch) {
            for (; element; element = element.parentNode) {
                if (element instanceof Element && elementMatch.call(element, t)) {
                    return element;
                }
            }
        }
        return null;
    };
    Dialog.prototype.focusContent = function () {
        this.focusContentEle(this.element);
        if (this.focusElements.length === 0) {
            this.element.focus();
            this.bindEvent(this.element);
        }
    };
    Dialog.prototype.bindEvent = function (element) {
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(element, 'keydown', this.keyDown, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(element, 'blur', this.focusOut, this);
    };
    Dialog.prototype.unBindEvent = function (element) {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(element)) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(element, 'keydown', this.keyDown);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(element, 'blur', this.focusOut);
        }
    };
    Dialog.prototype.focusOut = function (e) {
        var _this = this;
        var element = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.focusIndex) ? this.element : this.focusElements[this.focusIndex];
        setTimeout(function () {
            var tags = ['input', 'select', 'textarea', 'button', 'a'];
            var activeEle = document.activeElement;
            var isValid = (tags.indexOf(activeEle.tagName.toLowerCase()) > -1) ||
                (activeEle.hasAttribute('contenteditable') && activeEle.getAttribute('contenteditable') === 'true');
            if (_this.dialogOpen && _this.element.contains(activeEle)) {
                _this.focusIndex = isValid ? _this.focusElements.indexOf(activeEle) : null;
                _this.unBindEvent(element);
                _this.bindEvent((__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(_this.focusIndex) ? _this.element : activeEle));
            }
        });
    };
    Dialog.prototype.getModuleName = function () {
        return 'dialog';
    };
    Dialog.prototype.onPropertyChanged = function (newProp, oldProp) {
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'content':
                    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.content) && this.content !== '') {
                        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.contentEle) && this.contentEle.getAttribute('role') !== 'dialog') {
                            this.contentEle.innerHTML = '';
                            typeof (this.content) === 'string' ?
                                this.contentEle.innerHTML = this.content : this.contentEle.appendChild(this.content);
                            this.setMaxHeight();
                        }
                        else {
                            this.setContent();
                        }
                    }
                    else {
                        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.contentEle)) {
                            this.element.removeChild(this.contentEle);
                        }
                    }
                    break;
                case 'header':
                    if (this.header === '') {
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.headerEle);
                    }
                    else {
                        this.element.getElementsByClassName(DLG_HEADER).length > 0 ?
                            this.element.getElementsByClassName(DLG_HEADER)[0].innerHTML = this.header
                            : this.setHeader();
                    }
                    break;
                case 'footerTemplate':
                    this.element.getElementsByClassName(DLG_FOOTER_CONTENT).length > 0 ?
                        this.ftrTemplateContent.innerHTML = this.footerTemplate : this.setFooterTemplate();
                    break;
                case 'showCloseIcon':
                    if (this.element.getElementsByClassName(DLG_CLOSE_ICON).length > 0) {
                        if (!this.showCloseIcon && this.header === '') {
                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.headerContent);
                        }
                        else if (!this.showCloseIcon) {
                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.closeIcon);
                        }
                    }
                    else {
                        this.renderCloseIcon();
                        this.wireEvents();
                    }
                    break;
                case 'locale':
                    if (this.showCloseIcon) {
                        this.closeIconTitle();
                    }
                    break;
                case 'visible':
                    this.visible ? this.show() : this.hide();
                    break;
                case 'isModal':
                    this.element.setAttribute('aria-modal', this.isModal ? 'true' : 'false');
                    if (this.isModal) {
                        this.setIsModal();
                        this.wireEvents();
                        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.targetEle)) {
                            this.isModal ? this.targetEle.appendChild(this.dlgContainer) : this.targetEle.appendChild(this.element);
                        }
                    }
                    else {
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], MODAL_DLG);
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([document.body], SCROLL_DISABLED);
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.dlgOverlay);
                        while (this.dlgContainer.firstChild) {
                            this.dlgContainer.parentElement.insertBefore(this.dlgContainer.firstChild, this.dlgContainer);
                        }
                        this.dlgContainer.parentElement.removeChild(this.dlgContainer);
                    }
                    break;
                case 'height':
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.element, { 'height': __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(newProp.height) });
                    break;
                case 'width':
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["setStyleAttribute"])(this.element, { 'width': __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(newProp.width) });
                    break;
                case 'zIndex':
                    this.popupObj.zIndex = this.zIndex;
                    break;
                case 'cssClass':
                    this.setCSSClass(oldProp.cssClass);
                    break;
                case 'animationSettings':
                    this.show();
                    break;
                case 'buttons':
                    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.buttons[0].buttonModel) && this.footerTemplate === '') {
                        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.ftrTemplateContent)) {
                            this.ftrTemplateContent.innerHTML = '';
                        }
                        this.setButton();
                    }
                    break;
                case 'allowDragging':
                    if (this.allowDragging && (!this.isModal) && (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.headerContent))) {
                        this.setAllowDragging();
                    }
                    else {
                        this.dragObj.destroy();
                    }
                    break;
                case 'position':
                    if (oldProp.position.X === this.position.X && oldProp.position.Y === this.position.Y) {
                        break;
                    }
                    if (this.isModal) {
                        this.dlgContainer.classList.remove('e-dlg-' + oldProp.position.X + '-' + oldProp.position.Y);
                        this.dlgContainer.classList.add('e-dlg-' + this.position.X + '-' + this.position.Y);
                    }
                    else {
                        this.popupObj.position = this.position;
                        break;
                    }
                    break;
                case 'enableRtl':
                    this.setEnableRTL();
                    break;
            }
        }
    };
    Dialog.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    Dialog.prototype.destroy = function () {
        if (this.element.classList.contains(ROOT)) {
            this.unWireEvents();
            _super.prototype.destroy.call(this);
            var classArray = [
                ROOT, RTL, MODAL_DLG
            ];
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element, this.element], classArray);
            if (this.popupObj.element.classList.contains(POPUP_ROOT)) {
                this.popupObj.destroy();
            }
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.btnObj)) {
                this.btnObj.destroy();
            }
            if (this.isModal) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.dlgOverlay);
                this.dlgContainer.parentNode.insertBefore(this.element, this.dlgContainer);
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["detach"])(this.dlgContainer);
            }
            this.element.innerHTML = '';
        }
    };
    Dialog.prototype.wireEvents = function () {
        if (this.showCloseIcon) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.closeIcon, 'click', this.closeIconClickEventHandler, this);
        }
        if (this.isModal) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.dlgOverlay, 'click', this.dlgOverlayClickEventHandler, this);
        }
    };
    Dialog.prototype.unWireEvents = function () {
        if (this.showCloseIcon) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.closeIcon, 'click', this.closeIconClickEventHandler);
        }
        if (this.isModal) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.dlgOverlay, 'click', this.dlgOverlayClickEventHandler);
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.buttons[0].buttonModel)) {
            for (var i = 0; i < this.buttons.length; i++) {
                if (typeof (this.buttons[i].click) === 'function') {
                    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.ftrTemplateContent.children[i], 'click', this.buttons[i].click);
                }
            }
        }
    };
    Dialog.prototype.refreshPosition = function () {
        this.popupObj.refreshPosition();
    };
    Dialog.prototype.show = function (isFullScreen) {
        if (!this.element.classList.contains(DLG_SHOW) || (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(isFullScreen))) {
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(isFullScreen)) {
                this.fullScreen(isFullScreen);
            }
            this.storeActiveElement = document.activeElement;
            this.element.tabIndex = -1;
            this.trigger('beforeOpen');
            if (this.isModal && (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.dlgOverlay))) {
                this.dlgOverlay.style.display = 'block';
                this.dlgContainer.style.display = 'flex';
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.targetEle)) {
                    if (this.targetEle === document.body) {
                        this.dlgContainer.style.position = 'fixed';
                    }
                    else {
                        this.dlgContainer.style.position = 'absolute';
                    }
                    this.dlgOverlay.style.position = 'absolute';
                    this.element.style.position = 'relative';
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.targetEle], SCROLL_DISABLED);
                }
                else {
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([document.body], SCROLL_DISABLED);
                }
            }
            var openAnimation = {
                name: this.animationSettings.effect + 'In',
                duration: this.animationSettings.duration,
                delay: this.animationSettings.delay
            };
            this.animationSettings.effect === 'None' ? this.popupObj.show() : this.popupObj.show(openAnimation);
            this.dialogOpen = true;
            this.visible = true;
        }
    };
    Dialog.prototype.hide = function () {
        this.trigger('beforeClose');
        if (this.isModal) {
            this.dlgOverlay.style.display = 'none';
            !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.targetEle) ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.targetEle], SCROLL_DISABLED) :
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([document.body], SCROLL_DISABLED);
        }
        var closeAnimation = {
            name: this.animationSettings.effect + 'Out',
            duration: this.animationSettings.duration,
            delay: this.animationSettings.delay
        };
        this.animationSettings.effect === 'None' ? this.popupObj.hide() : this.popupObj.hide(closeAnimation);
        this.dialogOpen = false;
        this.visible = false;
    };
    Dialog.prototype.fullScreen = function (args) {
        var top = this.element.offsetTop;
        var left = this.element.offsetLeft;
        if (args) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], FULLSCREEN);
            var display = this.element.style.display;
            this.element.style.display = 'none';
            this.element.style.maxHeight = (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.target)) ?
                (this.targetEle.offsetHeight) + 'px' : (window.innerHeight) + 'px';
            this.element.style.display = display;
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([document.body], SCROLL_DISABLED);
            if (this.allowDragging && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.dragObj)) {
                this.dragObj.destroy();
            }
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], FULLSCREEN);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([document.body], SCROLL_DISABLED);
            if (this.allowDragging && (!this.isModal) && (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.headerContent))) {
                this.setAllowDragging();
            }
        }
        return args;
    };
    return Dialog;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Component"]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Dialog.prototype, "content", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], Dialog.prototype, "showCloseIcon", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], Dialog.prototype, "isModal", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Dialog.prototype, "header", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(true)
], Dialog.prototype, "visible", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('auto')
], Dialog.prototype, "height", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('100%')
], Dialog.prototype, "width", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Dialog.prototype, "cssClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])()
], Dialog.prototype, "zIndex", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(null)
], Dialog.prototype, "target", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Dialog.prototype, "footerTemplate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], Dialog.prototype, "allowDragging", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Collection"])([{}], ButtonProps)
], Dialog.prototype, "buttons", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(true)
], Dialog.prototype, "closeOnEscape", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])({ effect: 'Fade', duration: 400, delay: 0 })
], Dialog.prototype, "animationSettings", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])({ X: 'center', Y: 'center' })
], Dialog.prototype, "position", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('')
], Dialog.prototype, "locale", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Dialog.prototype, "created", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Dialog.prototype, "open", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Dialog.prototype, "beforeOpen", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Dialog.prototype, "close", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Dialog.prototype, "beforeClose", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Dialog.prototype, "dragStart", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Dialog.prototype, "dragStop", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Dialog.prototype, "drag", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Dialog.prototype, "overlayClick", void 0);
Dialog = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], Dialog);

var dialogBuilder = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["CreateBuilder"])(Dialog);


/***/ }),
/* 250 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__dialog__ = __webpack_require__(249);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__dialog__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__dialog__["b"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_0__dialog__["c"]; });



/***/ }),
/* 251 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__popup__ = __webpack_require__(114);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__popup__["a"]; });



/***/ }),
/* 252 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tooltip__ = __webpack_require__(253);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__tooltip__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__tooltip__["b"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_0__tooltip__["c"]; });



/***/ }),
/* 253 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Animation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Tooltip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return tooltipBuilder; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__popup_popup__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_position__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_collision__ = __webpack_require__(113);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};








var TOUCHEND_HIDE_DELAY = 1500;
var TAPHOLD_THRESHOLD = 500;
var SHOW_POINTER_TIP_GAP = 0;
var HIDE_POINTER_TIP_GAP = 8;
var MOUSE_TRAIL_GAP = 2;
var POINTER_ADJUST = 2;
var ROOT = 'e-tooltip';
var RTL = 'e-rtl';
var DEVICE = 'e-bigger';
var ICON = 'e-icons';
var CLOSE = 'e-tooltip-close';
var TOOLTIP_WRAP = 'e-tooltip-wrap';
var CONTENT = 'e-tip-content';
var ARROW_TIP = 'e-arrow-tip';
var ARROW_TIP_OUTER = 'e-arrow-tip-outer';
var ARROW_TIP_INNER = 'e-arrow-tip-inner';
var TIP_BOTTOM = 'e-tip-bottom';
var TIP_TOP = 'e-tip-top';
var TIP_LEFT = 'e-tip-left';
var TIP_RIGHT = 'e-tip-right';
var POPUP_ROOT = 'e-popup';
var POPUP_OPEN = 'e-popup-open';
var POPUP_CLOSE = 'e-popup-close';
var Animation = (function (_super) {
    __extends(Animation, _super);
    function Animation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Animation;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["ChildProperty"]));

__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])({ effect: 'FadeIn', duration: 150, delay: 0 })
], Animation.prototype, "open", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])({ effect: 'FadeOut', duration: 150, delay: 0 })
], Animation.prototype, "close", void 0);
var Tooltip = (function (_super) {
    __extends(Tooltip, _super);
    function Tooltip(options, element) {
        return _super.call(this, options, element) || this;
    }
    Tooltip.prototype.initialize = function () {
        this.formatPosition();
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.element], ROOT);
    };
    Tooltip.prototype.formatPosition = function () {
        if (this.position.indexOf('top') === 0 || this.position.indexOf('bottom') === 0) {
            _a = this.position.split(' '), this.tooltipPositionY = _a[0], this.tooltipPositionX = _a[1];
        }
        else {
            _b = this.position.split(' '), this.tooltipPositionX = _b[0], this.tooltipPositionY = _b[1];
        }
        var _a, _b;
    };
    Tooltip.prototype.renderArrow = function () {
        this.setTipClass(this.position);
        var tip = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: ARROW_TIP + ' ' + this.tipClass });
        tip.appendChild(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: ARROW_TIP_OUTER + ' ' + this.tipClass }));
        tip.appendChild(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: ARROW_TIP_INNER + ' ' + this.tipClass }));
        this.tooltipEle.appendChild(tip);
    };
    Tooltip.prototype.setTipClass = function (position) {
        if (position.indexOf('right') === 0) {
            this.tipClass = TIP_LEFT;
        }
        else if (position.indexOf('bottom') === 0) {
            this.tipClass = TIP_TOP;
        }
        else if (position.indexOf('left') === 0) {
            this.tipClass = TIP_RIGHT;
        }
        else {
            this.tipClass = TIP_BOTTOM;
        }
    };
    Tooltip.prototype.renderPopup = function (target) {
        var elePos = this.mouseTrail ? { top: 0, left: 0 } : this.getTooltipPosition(target);
        this.popupObj = new __WEBPACK_IMPORTED_MODULE_1__popup_popup__["a" /* Popup */](this.tooltipEle, {
            height: this.height,
            width: this.width,
            position: {
                X: elePos.left,
                Y: elePos.top
            },
            enableRtl: this.enableRtl,
            open: this.openPopupHandler.bind(this),
            close: this.closePopupHandler.bind(this)
        });
    };
    Tooltip.prototype.getTooltipPosition = function (target) {
        var pos = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_position__["a" /* calculatePosition */])(target, this.tooltipPositionX, this.tooltipPositionY);
        var offsetPos = this.calculateTooltipOffset(this.position);
        var elePos = this.collisionFlipFit(target, pos.left + offsetPos.left, pos.top + offsetPos.top);
        return elePos;
    };
    Tooltip.prototype.reposition = function (target) {
        var elePos = this.getTooltipPosition(target);
        this.popupObj.position = { X: elePos.left, Y: elePos.top };
        this.popupObj.dataBind();
    };
    Tooltip.prototype.openPopupHandler = function () {
        this.trigger('afterOpen', this.tooltipEventArgs);
    };
    Tooltip.prototype.closePopupHandler = function () {
        this.clear();
        this.trigger('afterClose', this.tooltipEventArgs);
    };
    Tooltip.prototype.calculateTooltipOffset = function (position) {
        var pos = { top: 0, left: 0 };
        var tooltipEleWidth = this.tooltipEle.offsetWidth;
        var tooltipEleHeight = this.tooltipEle.offsetHeight;
        var arrowEle = this.tooltipEle.querySelector('.' + ARROW_TIP);
        var tipWidth = arrowEle ? arrowEle.offsetWidth : 0;
        var tipHeight = arrowEle ? arrowEle.offsetHeight : 0;
        var tipAdjust = (this.showTipPointer ? SHOW_POINTER_TIP_GAP : HIDE_POINTER_TIP_GAP);
        var tipHeightAdjust = (tipHeight / 2) + POINTER_ADJUST + (this.tooltipEle.offsetHeight - this.tooltipEle.clientHeight);
        var tipWidthAdjust = (tipWidth / 2) + POINTER_ADJUST + (this.tooltipEle.offsetWidth - this.tooltipEle.clientWidth);
        if (this.mouseTrail) {
            tipAdjust += MOUSE_TRAIL_GAP;
        }
        switch (position) {
            case 'right top':
                pos.left += tipWidth + tipAdjust;
                pos.top -= tooltipEleHeight - tipHeightAdjust;
                break;
            case 'right center':
                pos.left += tipWidth + tipAdjust;
                pos.top -= (tooltipEleHeight / 2);
                break;
            case 'right bottom':
                pos.left += tipWidth + tipAdjust;
                pos.top -= (tipHeightAdjust);
                break;
            case 'bottom right':
                pos.top += (tipHeight + tipAdjust);
                pos.left -= (tipWidthAdjust);
                break;
            case 'bottom center':
                pos.top += (tipHeight + tipAdjust);
                pos.left -= (tooltipEleWidth / 2);
                break;
            case 'bottom left':
                pos.top += (tipHeight + tipAdjust);
                pos.left -= (tooltipEleWidth - tipWidthAdjust);
                break;
            case 'left bottom':
                pos.left -= (tipWidth + tooltipEleWidth + tipAdjust);
                pos.top -= (tipHeightAdjust);
                break;
            case 'left center':
                pos.left -= (tipWidth + tooltipEleWidth + tipAdjust);
                pos.top -= (tooltipEleHeight / 2);
                break;
            case 'left top':
                pos.left -= (tipWidth + tooltipEleWidth + tipAdjust);
                pos.top -= (tooltipEleHeight - tipHeightAdjust);
                break;
            case 'top left':
                pos.top -= (tooltipEleHeight + tipHeight + tipAdjust);
                pos.left -= (tooltipEleWidth - tipWidthAdjust);
                break;
            case 'top right':
                pos.top -= (tooltipEleHeight + tipHeight + tipAdjust);
                pos.left -= (tipWidthAdjust);
                break;
            default:
                pos.top -= (tooltipEleHeight + tipHeight + tipAdjust);
                pos.left -= (tooltipEleWidth / 2);
                break;
        }
        pos.left += this.offsetX;
        pos.top += this.offsetY;
        return pos;
    };
    Tooltip.prototype.updateTipPosition = function (position) {
        var selEle = this.tooltipEle.querySelectorAll('.' + ARROW_TIP + ',.' + ARROW_TIP_OUTER + ',.' + ARROW_TIP_INNER);
        var removeList = [TIP_BOTTOM, TIP_TOP, TIP_LEFT, TIP_RIGHT];
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])(selEle, removeList);
        this.setTipClass(position);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])(selEle, this.tipClass);
    };
    Tooltip.prototype.adjustArrow = function (target, position, tooltipPositionX, tooltipPositionY) {
        if (this.showTipPointer === false) {
            return;
        }
        this.updateTipPosition(position);
        var leftValue;
        var topValue;
        var tooltipWidth = this.tooltipEle.clientWidth;
        var tooltipHeight = this.tooltipEle.clientHeight;
        var arrowEle = this.tooltipEle.querySelector('.' + ARROW_TIP);
        var tipWidth = arrowEle.offsetWidth;
        var tipHeight = arrowEle.offsetHeight;
        if (this.tipClass === TIP_BOTTOM || this.tipClass === TIP_TOP) {
            topValue = this.tipClass === TIP_BOTTOM ? '100%' : -(tipHeight) + 'px';
            var tipPosExclude = tooltipPositionX !== 'center' || (tooltipWidth > target.offsetWidth) || this.mouseTrail;
            if ((tipPosExclude && tooltipPositionX === 'left') || (!tipPosExclude && this.tipPointerPosition === 'end')) {
                leftValue = (tooltipWidth - tipWidth - POINTER_ADJUST) + 'px';
            }
            else if ((tipPosExclude && tooltipPositionX === 'right') || (!tipPosExclude && this.tipPointerPosition === 'start')) {
                leftValue = POINTER_ADJUST + 'px';
            }
            else {
                leftValue = ((tooltipWidth / 2) - (tipWidth / 2)) + 'px';
            }
        }
        else {
            leftValue = this.tipClass === TIP_RIGHT ? tooltipWidth + 'px' : -(tipWidth) + 'px';
            var tipPosExclude = tooltipPositionY !== 'center' || (tooltipHeight > target.offsetHeight) || this.mouseTrail;
            if ((tipPosExclude && tooltipPositionY === 'top') || (!tipPosExclude && this.tipPointerPosition === 'end')) {
                topValue = (tooltipHeight - tipHeight - POINTER_ADJUST) + 'px';
            }
            else if ((tipPosExclude && tooltipPositionY === 'bottom') || (!tipPosExclude && this.tipPointerPosition === 'start')) {
                topValue = POINTER_ADJUST + 'px';
            }
            else {
                topValue = ((tooltipHeight / 2) - (tipHeight / 2)) + 'px';
            }
        }
        arrowEle.style.top = topValue;
        arrowEle.style.left = leftValue;
    };
    Tooltip.prototype.renderContent = function (target) {
        var tooltipContent = this.tooltipEle.querySelector('.' + CONTENT);
        if (target && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(target.getAttribute('title'))) {
            target.setAttribute('data-content', target.getAttribute('title'));
            target.removeAttribute('title');
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.content)) {
            if (typeof (this.content) === 'string') {
                tooltipContent.innerHTML = this.content;
            }
            else {
                while (tooltipContent.firstChild) {
                    tooltipContent.removeChild(tooltipContent.firstChild);
                }
                tooltipContent.appendChild(this.content);
            }
        }
        else {
            if (target && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(target.getAttribute('data-content'))) {
                tooltipContent.innerHTML = target.getAttribute('data-content');
            }
        }
    };
    Tooltip.prototype.renderCloseIcon = function () {
        if (!this.isSticky) {
            return;
        }
        var tipClose = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: ICON + ' ' + CLOSE });
        this.tooltipEle.appendChild(tipClose);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(tipClose, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchStartEvent, this.onStickyClose, this);
    };
    Tooltip.prototype.addDescribedBy = function (target, id) {
        var describedby = (target.getAttribute('aria-describedby') || '').split(/\s+/);
        if (describedby.indexOf(id) < 0) {
            describedby.push(id);
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["attributes"])(target, { 'aria-describedby': describedby.join(' ').trim(), 'data-tooltip-id': id });
    };
    Tooltip.prototype.removeDescribedBy = function (target) {
        var id = target.getAttribute('data-tooltip-id');
        var describedby = (target.getAttribute('aria-describedby') || '').split(/\s+/);
        var index = describedby.indexOf(id);
        if (index !== -1) {
            describedby.splice(index, 1);
        }
        target.removeAttribute('data-tooltip-id');
        var orgdescribedby = describedby.join(' ').trim();
        if (orgdescribedby) {
            target.setAttribute('aria-describedby', orgdescribedby);
        }
        else {
            target.removeAttribute('aria-describedby');
        }
    };
    Tooltip.prototype.tapHoldHandler = function (evt) {
        clearTimeout(this.autoCloseTimer);
        this.targetHover(evt.originalEvent);
    };
    Tooltip.prototype.touchEndHandler = function (e) {
        var _this = this;
        if (this.isSticky) {
            return;
        }
        var close = function () {
            _this.close();
        };
        this.autoCloseTimer = setTimeout(close, TOUCHEND_HIDE_DELAY);
    };
    Tooltip.prototype.targetClick = function (e) {
        var target;
        if (this.target) {
            target = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(e.target, this.target);
        }
        else {
            target = this.element;
        }
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(target)) {
            return;
        }
        if (target.getAttribute('data-tooltip-id') === null) {
            this.targetHover(e);
        }
        else if (!this.isSticky) {
            this.hideTooltip(this.animation.close, e, target);
        }
    };
    Tooltip.prototype.targetHover = function (e) {
        var target;
        if (this.target) {
            target = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(e.target, this.target);
        }
        else {
            target = this.element;
        }
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(target) || target.getAttribute('data-tooltip-id') !== null) {
            return;
        }
        var targetList = [].slice.call(document.querySelectorAll('[data-tooltip-id= ' + this.ctrlId + '_content]'));
        for (var _i = 0, targetList_1 = targetList; _i < targetList_1.length; _i++) {
            var target_1 = targetList_1[_i];
            this.restoreElement(target_1);
        }
        this.showTooltip(target, this.animation.open, e);
        this.wireMouseEvents(e, target);
    };
    Tooltip.prototype.showTooltip = function (target, showAnimation, e) {
        var _this = this;
        clearTimeout(this.showTimer);
        clearTimeout(this.hideTimer);
        this.tooltipEventArgs = e ? { type: e.type, cancel: false, target: target, event: e, element: this.tooltipEle } :
            { type: null, cancel: false, target: target, event: null, element: this.tooltipEle };
        this.trigger('beforeRender', this.tooltipEventArgs);
        if (this.tooltipEventArgs.cancel) {
            this.isHidden = true;
            this.clear();
            return;
        }
        this.isHidden = false;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.tooltipEle)) {
            this.ctrlId = this.element.getAttribute('id') ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getUniqueID"])(this.element.getAttribute('id')) : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["getUniqueID"])('tooltip');
            this.tooltipEle = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', {
                className: TOOLTIP_WRAP + ' ' + POPUP_ROOT, attrs: {
                    role: 'tooltip', 'aria-hidden': 'false', 'id': this.ctrlId + '_content'
                }, styles: 'width:' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(this.width) + ';height:' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(this.height) + ';position:absolute;'
            });
            if (this.cssClass) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.tooltipEle], this.cssClass);
            }
            if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.tooltipEle], DEVICE);
            }
            if (this.width !== 'auto') {
                this.tooltipEle.style.maxWidth = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(this.width);
            }
            this.tooltipEle.appendChild(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["createElement"])('div', { className: CONTENT }));
            document.body.appendChild(this.tooltipEle);
            this.addDescribedBy(target, this.ctrlId + '_content');
            this.renderContent(target);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.tooltipEle], POPUP_OPEN);
            if (this.showTipPointer) {
                this.renderArrow();
            }
            this.renderCloseIcon();
            this.renderPopup(target);
        }
        else {
            this.adjustArrow(target, this.position, this.tooltipPositionX, this.tooltipPositionY);
            this.addDescribedBy(target, this.ctrlId + '_content');
            this.renderContent(target);
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Animation"].stop(this.tooltipEle);
            this.reposition(target);
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.tooltipEle], POPUP_OPEN);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.tooltipEle], POPUP_CLOSE);
        this.tooltipEventArgs = e ? { type: e.type, cancel: false, target: target, event: e, element: this.tooltipEle } :
            { type: null, cancel: false, target: target, event: null, element: this.tooltipEle };
        this.trigger('beforeOpen', this.tooltipEventArgs);
        if (this.tooltipEventArgs.cancel) {
            this.isHidden = true;
            this.clear();
            return;
        }
        var openAnimation = {
            name: showAnimation.effect, duration: showAnimation.duration, delay: showAnimation.delay, timingFunction: 'easeOut'
        };
        if (showAnimation.effect === 'None') {
            openAnimation = undefined;
        }
        if (this.openDelay > 0) {
            var show = function () {
                if (_this.popupObj) {
                    _this.popupObj.show(openAnimation);
                }
            };
            this.showTimer = setTimeout(show, this.openDelay);
        }
        else {
            this.popupObj.show(openAnimation);
        }
    };
    Tooltip.prototype.checkCollision = function (target, x, y) {
        var elePos = {
            left: x, top: y, position: this.position,
            horizontal: this.tooltipPositionX, vertical: this.tooltipPositionY
        };
        var affectedPos = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_collision__["a" /* isCollide */])(this.tooltipEle, (this.target ? this.element : null), x, y);
        if (affectedPos.length > 0) {
            elePos.horizontal = affectedPos.indexOf('left') >= 0 ? 'right' : affectedPos.indexOf('right') >= 0 ? 'left' :
                this.tooltipPositionX;
            elePos.vertical = affectedPos.indexOf('top') >= 0 ? 'bottom' : affectedPos.indexOf('bottom') >= 0 ? 'top' :
                this.tooltipPositionY;
        }
        return elePos;
    };
    Tooltip.prototype.collisionFlipFit = function (target, x, y) {
        var elePos = this.checkCollision(target, x, y);
        var newpos = elePos.position;
        if (this.tooltipPositionY !== elePos.vertical) {
            newpos = ((this.position.indexOf('bottom') === 0 || this.position.indexOf('top') === 0) ?
                elePos.vertical + ' ' + this.tooltipPositionX : this.tooltipPositionX + ' ' + elePos.vertical);
        }
        if (this.tooltipPositionX !== elePos.horizontal) {
            if (newpos.indexOf('left') === 0) {
                elePos.vertical = (newpos === 'left top' || newpos === 'left center') ? 'top' : 'bottom';
                newpos = (elePos.vertical + ' ' + 'left');
            }
            if (newpos.indexOf('right') === 0) {
                elePos.vertical = (newpos === 'right top' || newpos === 'right center') ? 'top' : 'bottom';
                newpos = (elePos.vertical + ' ' + 'right');
            }
            elePos.horizontal = this.tooltipPositionX;
        }
        if (elePos.position !== newpos) {
            var pos = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_position__["a" /* calculatePosition */])(target, this.tooltipPositionX, elePos.vertical);
            this.adjustArrow(target, newpos, elePos.horizontal, elePos.vertical);
            var offsetPos = this.calculateTooltipOffset(newpos);
            elePos.position = newpos;
            elePos.left = pos.left + offsetPos.left;
            elePos.top = pos.top + offsetPos.top;
        }
        else {
            this.adjustArrow(target, newpos, elePos.horizontal, elePos.vertical);
        }
        var eleOffset = { left: elePos.left, top: elePos.top };
        var left = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_collision__["b" /* fit */])(this.tooltipEle, (this.target ? this.element : null), { X: true, Y: false }, eleOffset).left;
        if (this.showTipPointer && (newpos.indexOf('bottom') === 0 || newpos.indexOf('top') === 0)) {
            var arrowEle = this.tooltipEle.querySelector('.' + ARROW_TIP);
            var arrowleft = parseInt(arrowEle.style.left, 10) - (left - elePos.left);
            if (arrowleft < 0) {
                arrowleft = 0;
            }
            else if ((arrowleft + arrowEle.offsetWidth) > this.tooltipEle.clientWidth) {
                arrowleft = this.tooltipEle.clientWidth - arrowEle.offsetWidth;
            }
            arrowEle.style.left = arrowleft.toString() + 'px';
        }
        eleOffset.left = left;
        return eleOffset;
    };
    Tooltip.prototype.hideTooltip = function (hideAnimation, e, targetElement) {
        var _this = this;
        var target;
        if (e) {
            target = this.target ? (targetElement || e.target) : this.element;
            this.tooltipEventArgs = {
                type: e.type, cancel: false, target: target, event: e, element: this.tooltipEle
            };
        }
        else {
            target = document.querySelector('[data-tooltip-id= ' + this.ctrlId + '_content]');
            this.tooltipEventArgs = {
                type: null, cancel: false, target: target, event: null, element: this.tooltipEle
            };
        }
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(target)) {
            return;
        }
        this.trigger('beforeClose', this.tooltipEventArgs);
        if (!this.tooltipEventArgs.cancel) {
            this.restoreElement(target);
            this.isHidden = true;
            var closeAnimation_1 = {
                name: hideAnimation.effect, duration: hideAnimation.duration, delay: hideAnimation.delay, timingFunction: 'easeIn'
            };
            if (hideAnimation.effect === 'None') {
                closeAnimation_1 = undefined;
            }
            if (this.closeDelay > 0) {
                var hide = function () {
                    if (_this.popupObj) {
                        _this.popupObj.hide(closeAnimation_1);
                    }
                };
                this.hideTimer = setTimeout(hide, this.closeDelay);
            }
            else {
                this.popupObj.hide(closeAnimation_1);
            }
        }
        else {
            this.isHidden = false;
        }
    };
    Tooltip.prototype.restoreElement = function (target) {
        this.unwireMouseEvents(target);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(target.getAttribute('data-content'))) {
            target.setAttribute('title', target.getAttribute('data-content'));
            target.removeAttribute('data-content');
        }
        this.removeDescribedBy(target);
    };
    Tooltip.prototype.clear = function () {
        if (this.tooltipEle) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.tooltipEle], POPUP_CLOSE);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.tooltipEle], POPUP_OPEN);
        }
        if (this.isHidden) {
            if (this.popupObj) {
                this.popupObj.destroy();
            }
            if (this.tooltipEle) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["remove"])(this.tooltipEle);
            }
            this.tooltipEle = null;
            this.popupObj = null;
        }
    };
    Tooltip.prototype.onMouseOut = function (e) {
        this.hideTooltip(this.animation.close, e);
    };
    Tooltip.prototype.onStickyClose = function (e) {
        this.close();
    };
    Tooltip.prototype.onMouseMove = function (event) {
        var eventPageX = 0;
        var eventPageY = 0;
        if (event.type.indexOf('touch') > -1) {
            event.preventDefault();
            eventPageX = event.touches[0].pageX;
            eventPageY = event.touches[0].pageY;
        }
        else {
            eventPageX = event.pageX;
            eventPageY = event.pageY;
        }
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Animation"].stop(this.tooltipEle);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.tooltipEle], POPUP_CLOSE);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.tooltipEle], POPUP_OPEN);
        this.adjustArrow(event.target, this.position, this.tooltipPositionX, this.tooltipPositionY);
        var pos = this.calculateTooltipOffset(this.position);
        var x = eventPageX + pos.left + this.offsetX;
        var y = eventPageY + pos.top + this.offsetY;
        var elePos = this.checkCollision(event.target, x, y);
        if (this.tooltipPositionX !== elePos.horizontal || this.tooltipPositionY !== elePos.vertical) {
            var newpos = (this.position.indexOf('bottom') === 0 || this.position.indexOf('top') === 0) ?
                elePos.vertical + ' ' + elePos.horizontal : elePos.horizontal + ' ' + elePos.vertical;
            elePos.position = newpos;
            this.adjustArrow(event.target, elePos.position, elePos.horizontal, elePos.vertical);
            var colpos = this.calculateTooltipOffset(elePos.position);
            elePos.left = eventPageX + colpos.left + this.offsetX;
            elePos.top = eventPageY + colpos.top + this.offsetY;
        }
        this.tooltipEle.style.left = elePos.left + 'px';
        this.tooltipEle.style.top = elePos.top + 'px';
    };
    Tooltip.prototype.keyDown = function (event) {
        if (this.tooltipEle && event.keyCode === 27) {
            this.close();
        }
    };
    Tooltip.prototype.touchEnd = function (e) {
        if (this.tooltipEle && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["closest"])(e.target, '.' + ROOT) === null) {
            this.close();
        }
    };
    Tooltip.prototype.scrollHandler = function (e) {
        if (this.tooltipEle) {
            this.close();
        }
    };
    Tooltip.prototype.render = function () {
        this.initialize();
        this.wireEvents(this.opensOn);
    };
    Tooltip.prototype.preRender = function () {
        this.tipClass = TIP_BOTTOM;
        this.tooltipPositionX = 'center';
        this.tooltipPositionY = 'top';
        this.isHidden = true;
    };
    Tooltip.prototype.wireEvents = function (trigger) {
        var triggerList = this.getTriggerList(trigger);
        for (var _i = 0, triggerList_1 = triggerList; _i < triggerList_1.length; _i++) {
            var opensOn = triggerList_1[_i];
            if (opensOn === 'custom') {
                return;
            }
            if (opensOn === 'focus') {
                this.wireFocusEvents();
            }
            if (opensOn === 'click') {
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchStartEvent, this.targetClick, this);
            }
            if (opensOn === 'hover') {
                if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
                    this.touchModule = new __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Touch"](this.element, {
                        tapHoldThreshold: TAPHOLD_THRESHOLD,
                        tapHold: this.tapHoldHandler.bind(this)
                    });
                    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchEndEvent, this.touchEndHandler, this);
                }
                else {
                    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'mouseover', this.targetHover, this);
                }
            }
        }
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(document, 'touchend', this.touchEnd, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(document, 'scroll', this.scrollHandler, this);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(document, 'keydown', this.keyDown, this);
    };
    Tooltip.prototype.getTriggerList = function (trigger) {
        if (trigger === 'auto') {
            trigger = (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) ? 'hover' : 'hover focus';
        }
        return trigger.split(' ');
    };
    Tooltip.prototype.wireFocusEvents = function () {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.target)) {
            var targetList = [].slice.call(this.element.querySelectorAll(this.target));
            for (var _i = 0, targetList_2 = targetList; _i < targetList_2.length; _i++) {
                var target = targetList_2[_i];
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(target, 'focus', this.targetHover, this);
            }
        }
        else {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(this.element, 'focus', this.targetHover, this);
        }
    };
    Tooltip.prototype.wireMouseEvents = function (e, target) {
        if (!this.isSticky) {
            if (e.type === 'focus') {
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(target, 'blur', this.onMouseOut, this);
            }
            if (e.type === 'mouseover') {
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(target, 'mouseleave', this.onMouseOut, this);
            }
        }
        if (this.mouseTrail) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].add(target, 'mousemove touchstart', this.onMouseMove, this);
        }
    };
    Tooltip.prototype.unwireEvents = function (trigger) {
        var triggerList = this.getTriggerList(trigger);
        for (var _i = 0, triggerList_2 = triggerList; _i < triggerList_2.length; _i++) {
            var opensOn = triggerList_2[_i];
            if (opensOn === 'custom') {
                return;
            }
            if (opensOn === 'focus') {
                this.unwireFocusEvents();
            }
            if (opensOn === 'click') {
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchStartEvent, this.targetClick);
            }
            if (opensOn === 'hover') {
                if (__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
                    if (this.touchModule) {
                        this.touchModule.destroy();
                    }
                    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].touchEndEvent, this.touchEndHandler);
                }
                else {
                    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'mouseover', this.targetHover);
                }
            }
        }
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(document, 'touchend', this.touchEnd);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(document, 'scroll', this.scrollHandler);
        __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(document, 'keydown', this.keyDown);
    };
    Tooltip.prototype.unwireFocusEvents = function () {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["isNullOrUndefined"])(this.target)) {
            var targetList = [].slice.call(this.element.querySelectorAll(this.target));
            for (var _i = 0, targetList_3 = targetList; _i < targetList_3.length; _i++) {
                var target = targetList_3[_i];
                __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(target, 'focus', this.targetHover);
            }
        }
        else {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(this.element, 'focus', this.targetHover);
        }
    };
    Tooltip.prototype.unwireMouseEvents = function (target) {
        if (!this.isSticky) {
            var triggerList = this.getTriggerList(this.opensOn);
            for (var _i = 0, triggerList_3 = triggerList; _i < triggerList_3.length; _i++) {
                var opensOn = triggerList_3[_i];
                if (opensOn === 'focus') {
                    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(target, 'blur', this.onMouseOut);
                }
                if (opensOn === 'hover' && !__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Browser"].isDevice) {
                    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(target, 'mouseleave', this.onMouseOut);
                }
            }
        }
        if (this.mouseTrail) {
            __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["EventHandler"].remove(target, 'mousemove touchstart', this.onMouseMove);
        }
    };
    Tooltip.prototype.getModuleName = function () {
        return 'tooltip';
    };
    Tooltip.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    Tooltip.prototype.onPropertyChanged = function (newProp, oldProp) {
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'width':
                    if (this.tooltipEle) {
                        this.tooltipEle.style.width = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(newProp.width);
                    }
                    break;
                case 'height':
                    if (this.tooltipEle) {
                        this.tooltipEle.style.height = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["formatUnit"])(newProp.height);
                    }
                    break;
                case 'content':
                    if (this.tooltipEle) {
                        this.renderContent();
                    }
                    break;
                case 'opensOn':
                    this.unwireEvents(oldProp.opensOn);
                    this.wireEvents(newProp.opensOn);
                    break;
                case 'position':
                    this.formatPosition();
                    var target = document.querySelector('[data-tooltip-id= ' + this.ctrlId + '_content]');
                    if (this.tooltipEle && target) {
                        this.reposition(target);
                    }
                    break;
                case 'tipPointerPosition':
                    var trgt = document.querySelector('[data-tooltip-id= ' + this.ctrlId + '_content]');
                    if (this.tooltipEle && trgt) {
                        this.reposition(trgt);
                    }
                    break;
                case 'offsetX':
                    if (this.tooltipEle) {
                        var x = newProp.offsetX - oldProp.offsetX;
                        this.tooltipEle.style.left = (parseInt(this.tooltipEle.style.left, 10) + (x)).toString() + 'px';
                    }
                    break;
                case 'offsetY':
                    if (this.tooltipEle) {
                        var y = newProp.offsetY - oldProp.offsetY;
                        this.tooltipEle.style.top = (parseInt(this.tooltipEle.style.top, 10) + (y)).toString() + 'px';
                    }
                    break;
                case 'cssClass':
                    if (this.tooltipEle) {
                        if (oldProp.cssClass) {
                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.tooltipEle], oldProp.cssClass);
                        }
                        if (newProp.cssClass) {
                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.tooltipEle], newProp.cssClass);
                        }
                    }
                    break;
                case 'enableRtl':
                    if (this.tooltipEle) {
                        if (this.enableRtl) {
                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["addClass"])([this.tooltipEle], RTL);
                        }
                        else {
                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.tooltipEle], RTL);
                        }
                    }
                    break;
            }
        }
    };
    Tooltip.prototype.open = function (element, animation) {
        if (animation === void 0) { animation = this.animation.open; }
        if (element.style.display === 'none') {
            return;
        }
        this.showTooltip(element, animation);
    };
    Tooltip.prototype.close = function (animation) {
        if (animation === void 0) { animation = this.animation.close; }
        this.hideTooltip(animation);
    };
    Tooltip.prototype.refresh = function (target) {
        if (this.tooltipEle) {
            this.renderContent(target);
        }
        if (this.popupObj && target) {
            this.reposition(target);
        }
    };
    Tooltip.prototype.destroy = function () {
        _super.prototype.destroy.call(this);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["removeClass"])([this.element], ROOT);
        this.unwireEvents(this.opensOn);
        if (this.popupObj) {
            this.popupObj.destroy();
        }
        if (this.tooltipEle) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["remove"])(this.tooltipEle);
        }
        this.tooltipEle = null;
        this.popupObj = null;
    };
    return Tooltip;
}(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Component"]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('auto')
], Tooltip.prototype, "width", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('auto')
], Tooltip.prototype, "height", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])()
], Tooltip.prototype, "content", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])()
], Tooltip.prototype, "target", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('top center')
], Tooltip.prototype, "position", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(0)
], Tooltip.prototype, "offsetX", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(0)
], Tooltip.prototype, "offsetY", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(true)
], Tooltip.prototype, "showTipPointer", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('auto')
], Tooltip.prototype, "tipPointerPosition", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])('auto')
], Tooltip.prototype, "opensOn", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], Tooltip.prototype, "mouseTrail", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], Tooltip.prototype, "isSticky", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Complex"])({}, Animation)
], Tooltip.prototype, "animation", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(0)
], Tooltip.prototype, "openDelay", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(0)
], Tooltip.prototype, "closeDelay", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])()
], Tooltip.prototype, "cssClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Property"])(false)
], Tooltip.prototype, "enableRtl", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Tooltip.prototype, "beforeRender", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Tooltip.prototype, "beforeOpen", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Tooltip.prototype, "afterOpen", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Tooltip.prototype, "beforeClose", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Tooltip.prototype, "afterClose", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Tooltip.prototype, "created", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["Event"])()
], Tooltip.prototype, "destroyed", void 0);
Tooltip = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["NotifyPropertyChanges"]
], Tooltip);

var tooltipBuilder = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__syncfusion_ej2_base__["CreateBuilder"])(Tooltip);


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(69), __webpack_require__(267), __webpack_require__(261), __webpack_require__(187), __webpack_require__(259), __webpack_require__(186), __webpack_require__(185), __webpack_require__(264), __webpack_require__(263), __webpack_require__(265), __webpack_require__(260), __webpack_require__(184), __webpack_require__(256), __webpack_require__(268), __webpack_require__(255), __webpack_require__(269), __webpack_require__(257), __webpack_require__(180), __webpack_require__(183), __webpack_require__(116), __webpack_require__(182), __webpack_require__(181), __webpack_require__(258), __webpack_require__(262), __webpack_require__(115)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, data_1, sort_1, page_1, selection_1, filter_1, search_1, scroll_1, resize_1, reorder_1, row_reorder_1, group_1, print_1, detail_row_1, toolbar_1, aggregate_1, virtual_scroll_1, edit_1, batch_edit_1, inline_edit_1, normal_edit_1, dialog_edit_1, column_chooser_1, excel_export_1, pdf_export_1, export_helper_1) {
    "use strict";
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    __export(data_1);
    __export(sort_1);
    __export(page_1);
    __export(selection_1);
    __export(filter_1);
    __export(search_1);
    __export(scroll_1);
    __export(resize_1);
    __export(reorder_1);
    __export(row_reorder_1);
    __export(group_1);
    __export(print_1);
    __export(detail_row_1);
    __export(toolbar_1);
    __export(aggregate_1);
    __export(virtual_scroll_1);
    __export(edit_1);
    __export(batch_edit_1);
    __export(inline_edit_1);
    __export(normal_edit_1);
    __export(dialog_edit_1);
    __export(column_chooser_1);
    __export(excel_export_1);
    __export(pdf_export_1);
    __export(export_helper_1);
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(7), __webpack_require__(3), __webpack_require__(279), __webpack_require__(281), __webpack_require__(54)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, enum_1, constant_1, footer_renderer_1, summary_cell_renderer_1, summary_model_generator_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Aggregate = (function () {
        function Aggregate(parent, locator) {
            this.parent = parent;
            this.locator = locator;
            this.addEventListener();
        }
        Aggregate.prototype.getModuleName = function () {
            return 'aggregate';
        };
        Aggregate.prototype.initiateRender = function () {
            var _this = this;
            var cellFac = this.locator.getService('cellRendererFactory');
            var instance = new summary_cell_renderer_1.SummaryCellRenderer(this.parent, this.locator);
            [enum_1.CellType.Summary, enum_1.CellType.CaptionSummary, enum_1.CellType.GroupSummary].forEach(function (type) {
                return cellFac.addCellRenderer(type, instance);
            });
            this.footerRenderer = new footer_renderer_1.FooterRenderer(this.parent, this.locator);
            this.footerRenderer.renderPanel();
            this.footerRenderer.renderTable();
            this.locator.register('footerRenderer', this.footerRenderer);
            var fn = function () {
                _this.prepareSummaryInfo();
                _this.parent.off(constant_1.dataReady, fn);
            };
            this.parent.on(constant_1.dataReady, fn, this);
            this.parent.on(constant_1.dataReady, this.footerRenderer.refresh, this.footerRenderer);
        };
        Aggregate.prototype.prepareSummaryInfo = function () {
            var _this = this;
            summaryIterator(this.parent.aggregates, function (column) {
                var dataColumn = _this.parent.getColumnByField(column.field) || {};
                var type = dataColumn.type;
                column.format = _this.getFormatFromType(column.format, type);
                column.setFormatter();
                column.columnName = column.columnName || column.field;
            });
        };
        Aggregate.prototype.getFormatFromType = function (format, type) {
            if (ej2_base_2.isNullOrUndefined(type) || typeof format !== 'string') {
                return format;
            }
            var obj;
            switch (type) {
                case 'number':
                    obj = { format: format };
                    break;
                case 'date':
                    obj = { type: type, skeleton: format };
                    break;
                case 'datetime':
                    obj = { type: 'dateTime', skeleton: format };
                    break;
            }
            return obj;
        };
        Aggregate.prototype.onPropertyChanged = function (e) {
            if (e.module !== this.getModuleName()) {
                return;
            }
            if (ej2_base_2.isNullOrUndefined(this.footerRenderer)) {
                this.initiateRender();
            }
            this.prepareSummaryInfo();
            this.footerRenderer.refresh();
            var cModel = new summary_model_generator_1.CaptionSummaryModelGenerator(this.parent);
            var gModel = new summary_model_generator_1.GroupSummaryModelGenerator(this.parent);
            if (gModel.getData().length !== 0 || !cModel.isEmpty()) {
                this.parent.notify(constant_1.modelChanged, {});
            }
        };
        Aggregate.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(constant_1.initialEnd, this.initiateRender, this);
            this.parent.on(constant_1.uiUpdate, this.onPropertyChanged, this);
        };
        Aggregate.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.footerRenderer.removeEventListener();
            this.parent.off(constant_1.initialEnd, this.initiateRender);
            this.parent.off(constant_1.dataReady, this.footerRenderer.refresh);
            this.parent.off(constant_1.uiUpdate, this.onPropertyChanged);
        };
        Aggregate.prototype.destroy = function () {
            this.removeEventListener();
            ej2_base_1.remove(this.parent.getFooterContent());
        };
        return Aggregate;
    }());
    exports.Aggregate = Aggregate;
    function summaryIterator(aggregates, callback) {
        aggregates.forEach(function (row) {
            row.columns.forEach(function (column) {
                callback(column, row);
            });
        });
    }
    exports.summaryIterator = summaryIterator;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(188), __webpack_require__(2), __webpack_require__(3), __webpack_require__(52)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, grid_1, util_1, events, aria_service_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DetailRow = (function () {
        function DetailRow(parent) {
            this.aria = new aria_service_1.AriaService();
            this.parent = parent;
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.click, this.clickHandler, this);
            this.parent.on(events.destroy, this.destroy, this);
            this.parent.on(events.keyPressed, this.keyPressHandler, this);
        }
        DetailRow.prototype.clickHandler = function (e) {
            this.toogleExpandcollapse(ej2_base_1.closest(e.target, 'td'));
        };
        DetailRow.prototype.toogleExpandcollapse = function (target) {
            var gObj = this.parent;
            var parent = 'parentDetails';
            if (target && (target.classList.contains('e-detailrowcollapse') || target.classList.contains('e-detailrowexpand'))) {
                var tr = target.parentElement;
                var nextRow = this.parent.getContentTable().querySelector('tbody').children[tr.rowIndex + 1];
                if (target.classList.contains('e-detailrowcollapse')) {
                    var key = 'records';
                    var currentViewData = gObj.allowGrouping && gObj.groupSettings.columns.length ?
                        gObj.currentViewData[key] : gObj.currentViewData;
                    var data = currentViewData[tr.getAttribute('aria-rowindex')];
                    if (this.isDetailRow(nextRow)) {
                        nextRow.style.display = '';
                    }
                    else if (gObj.getDetailTemplate() || gObj.childGrid) {
                        var detailRow = ej2_base_1.createElement('tr', { className: 'e-detailrow' });
                        var detailCell = ej2_base_1.createElement('td', { className: 'e-detailcell' });
                        detailCell.setAttribute('colspan', this.parent.getVisibleColumns().length.toString());
                        for (var i = 0, len = gObj.groupSettings.columns.length; i < len; i++) {
                            detailRow.appendChild(ej2_base_1.createElement('td', { className: 'e-indentcell' }));
                        }
                        detailRow.appendChild(ej2_base_1.createElement('td', { className: 'e-detailindentcell' }));
                        if (gObj.detailTemplate) {
                            util_1.appendChildren(detailCell, gObj.getDetailTemplate()(data));
                        }
                        else {
                            gObj.childGrid[parent] = {
                                parentID: gObj.element.id,
                                parentPrimaryKeys: gObj.getPrimaryKeyFieldNames(),
                                parentKeyField: gObj.childGrid.queryString,
                                parentKeyFieldValue: data[gObj.childGrid.queryString],
                                parentRowData: data
                            };
                            var grid = new grid_1.Grid(gObj.childGrid);
                            var modules = grid.getInjectedModules();
                            var injectedModues = gObj.getInjectedModules();
                            if (!modules || modules.length !== injectedModues.length) {
                                grid.setInjectedModules(injectedModues);
                            }
                            var gridElem = ej2_base_1.createElement('div', {
                                id: 'child' + util_1.parents(tr, 'e-grid').length +
                                    '_grid' + tr.rowIndex + util_1.getUid('')
                            });
                            grid.appendTo(gridElem);
                            detailCell.appendChild(gridElem);
                        }
                        detailRow.appendChild(detailCell);
                        tr.parentNode.insertBefore(detailRow, tr.nextSibling);
                        gObj.getRows().splice(tr.rowIndex + 1, 0, detailRow);
                        gObj.trigger(events.detailDataBound, { detailElement: detailCell, data: data });
                    }
                    ej2_base_1.classList(target, ['e-detailrowexpand'], ['e-detailrowcollapse']);
                    ej2_base_1.classList(target.firstElementChild, ['e-dtdiagonaldown', 'e-icon-gdownarrow'], ['e-dtdiagonalright', 'e-icon-grightarrow']);
                    this.aria.setExpand(target, true);
                }
                else {
                    if (this.isDetailRow(nextRow)) {
                        nextRow.style.display = 'none';
                    }
                    ej2_base_1.classList(target, ['e-detailrowcollapse'], ['e-detailrowexpand']);
                    ej2_base_1.classList(target.firstElementChild, ['e-dtdiagonalright', 'e-icon-grightarrow'], ['e-dtdiagonaldown', 'e-icon-gdownarrow']);
                    this.aria.setExpand(target, false);
                }
            }
        };
        DetailRow.prototype.isDetailRow = function (row) {
            return row && row.classList.contains('e-detailrow');
        };
        DetailRow.prototype.destroy = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.click, this.clickHandler);
            this.parent.off(events.destroy, this.destroy);
            this.parent.off(events.keyPressed, this.keyPressHandler);
        };
        DetailRow.prototype.getTDfromIndex = function (index, className) {
            var tr = this.parent.getDataRows()[index];
            if (tr && tr.querySelector(className)) {
                return tr.querySelector(className);
            }
            return null;
        };
        DetailRow.prototype.expand = function (target) {
            if (!isNaN(target)) {
                target = this.getTDfromIndex(target, '.e-detailrowcollapse');
            }
            if (target && target.classList.contains('e-detailrowcollapse')) {
                this.toogleExpandcollapse(target);
            }
        };
        DetailRow.prototype.collapse = function (target) {
            if (!isNaN(target)) {
                target = this.getTDfromIndex(target, '.e-detailrowexpand');
            }
            if (target && target.classList.contains('e-detailrowexpand')) {
                this.toogleExpandcollapse(target);
            }
        };
        DetailRow.prototype.expandAll = function () {
            this.expandCollapse(true);
        };
        DetailRow.prototype.collapseAll = function () {
            this.expandCollapse(false);
        };
        DetailRow.prototype.expandCollapse = function (isExpand) {
            var td;
            var rows = this.parent.getDataRows();
            for (var i = 0, len = rows.length; i < len; i++) {
                td = rows[i].querySelector('.e-detailrowcollapse, .e-detailrowexpand');
                isExpand ? this.expand(td) : this.collapse(td);
            }
        };
        DetailRow.prototype.keyPressHandler = function (e) {
            var gObj = this.parent;
            switch (e.action) {
                case 'ctrlDownArrow':
                    this.expandAll();
                    break;
                case 'ctrlUpArrow':
                    this.collapseAll();
                    break;
                case 'altUpArrow':
                case 'altDownArrow':
                    var selected = gObj.allowSelection ? gObj.getSelectedRowIndexes() : [];
                    if (selected.length) {
                        var dataRow = gObj.getDataRows()[selected[selected.length - 1]];
                        var td = dataRow.querySelector('.e-detailrowcollapse, .e-detailrowexpand');
                        e.action === 'altDownArrow' ? this.expand(td) : this.collapse(td);
                    }
                    break;
            }
        };
        DetailRow.prototype.getModuleName = function () {
            return 'detailRow';
        };
        return DetailRow;
    }());
    exports.DetailRow = DetailRow;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(3), __webpack_require__(195), __webpack_require__(190), __webpack_require__(194), __webpack_require__(198), __webpack_require__(192), __webpack_require__(183), __webpack_require__(180), __webpack_require__(182), __webpack_require__(34), __webpack_require__(2), __webpack_require__(34), __webpack_require__(36)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, ej2_base_4, events, edit_renderer_1, boolean_edit_cell_1, dropdown_edit_cell_1, numeric_edit_cell_1, default_edit_cell_1, inline_edit_1, batch_edit_1, dialog_edit_1, ej2_popups_1, util_1, ej2_popups_2, ej2_inputs_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Edit = (function () {
        function Edit(parent, serviceLocator) {
            this.editCellType = {
                'dropdownedit': dropdown_edit_cell_1.DropDownEditCell,
                'numericedit': numeric_edit_cell_1.NumericEditCell, 'booleanedit': boolean_edit_cell_1.BooleanEditCell, 'default': default_edit_cell_1.DefaultEditCell
            };
            this.editType = { 'inline': inline_edit_1.InlineEdit, 'normal': inline_edit_1.InlineEdit, 'batch': batch_edit_1.BatchEdit, 'dialog': dialog_edit_1.DialogEdit };
            this.tapped = false;
            this.parent = parent;
            this.serviceLocator = serviceLocator;
            this.addEventListener();
            this.updateEditObj();
        }
        Edit.prototype.updateColTypeObj = function () {
            for (var _i = 0, _a = this.parent.columns; _i < _a.length; _i++) {
                var col = _a[_i];
                col.edit = ej2_base_2.extend(new this.editCellType[col.editType && this.editCellType[col.editType] ?
                    col.editType : 'default'](this.parent, this.serviceLocator), col.edit || {});
            }
        };
        Edit.prototype.getModuleName = function () {
            return 'edit';
        };
        Edit.prototype.onPropertyChanged = function (e) {
            if (e.module !== this.getModuleName()) {
                return;
            }
            var gObj = this.parent;
            var newProp = e.properties;
            for (var _i = 0, _a = Object.keys(e.properties); _i < _a.length; _i++) {
                var prop = _a[_i];
                switch (prop) {
                    case 'allowAdding':
                    case 'allowDeleting':
                    case 'allowEditing':
                        if (gObj.editSettings.allowAdding || gObj.editSettings.allowEditing || gObj.editSettings.allowDeleting) {
                            this.initialEnd();
                        }
                        break;
                    case 'mode':
                        this.updateEditObj();
                        gObj.isEdit = false;
                        gObj.refresh();
                        break;
                }
            }
        };
        Edit.prototype.updateEditObj = function () {
            if (this.editModule) {
                this.editModule.destroy();
            }
            this.renderer = new edit_renderer_1.EditRender(this.parent, this.serviceLocator);
            this.editModule = new this.editType[this.parent.editSettings.mode](this.parent, this.serviceLocator, this.renderer);
        };
        Edit.prototype.initialEnd = function () {
            this.updateColTypeObj();
            this.l10n = this.serviceLocator.getService('localization');
            this.createAlertDlg();
            this.createConfirmDlg();
        };
        Edit.prototype.wireEvents = function () {
            ej2_base_1.EventHandler.add(this.parent.getContent(), 'touchstart', this.tapEvent, this);
        };
        Edit.prototype.unwireEvents = function () {
            ej2_base_1.EventHandler.remove(this.parent.getContent(), 'touchstart', this.tapEvent);
        };
        Edit.prototype.tapEvent = function (e) {
            if (this.getUserAgent()) {
                if (!this.tapped) {
                    this.tapped = setTimeout(this.timeoutHandler(), 300);
                }
                else {
                    clearTimeout(this.tapped);
                    this.parent.notify(events.doubleTap, e);
                    this.tapped = null;
                }
            }
        };
        Edit.prototype.getUserAgent = function () {
            var userAgent = window.navigator.userAgent.toLowerCase();
            return /iphone|ipod|ipad/.test(userAgent);
        };
        Edit.prototype.timeoutHandler = function () {
            this.tapped = null;
        };
        Edit.prototype.startEdit = function (tr) {
            var gObj = this.parent;
            if (!gObj.editSettings.allowEditing || gObj.isEdit || gObj.editSettings.mode === 'batch') {
                return;
            }
            if (!gObj.getSelectedRows().length) {
                if (!tr) {
                    this.showDialog('EditOperationAlert', this.alertDObj);
                    return;
                }
            }
            else if (!tr) {
                tr = gObj.getSelectedRows()[0];
            }
            if (tr.style.display === 'none') {
                return;
            }
            this.editModule.startEdit(tr);
            this.refreshToolbar();
            gObj.element.querySelector('.e-gridpopup').style.display = 'none';
        };
        Edit.prototype.closeEdit = function () {
            if (this.parent.editSettings.mode === 'batch' && this.parent.editSettings.showConfirmDialog
                && this.parent.element.querySelectorAll('.e-updatedtd').length) {
                this.showDialog('CancelEdit', this.dialogObj);
                return;
            }
            this.editModule.closeEdit();
            this.refreshToolbar();
        };
        Edit.prototype.refreshToolbar = function () {
            this.parent.notify(events.toolbarRefresh, {});
        };
        Edit.prototype.addRecord = function (data) {
            if (!this.parent.editSettings.allowAdding) {
                return;
            }
            this.editModule.addRecord(data);
            this.refreshToolbar();
        };
        Edit.prototype.deleteRecord = function (fieldname, data) {
            var gObj = this.parent;
            if (!gObj.editSettings.allowDeleting) {
                return;
            }
            if (!data) {
                if (ej2_base_4.isNullOrUndefined(gObj.selectedRowIndex) || gObj.selectedRowIndex === -1) {
                    this.showDialog('DeleteOperationAlert', this.alertDObj);
                    return;
                }
                if (gObj.editSettings.showDeleteConfirmDialog) {
                    this.showDialog('ConfirmDelete', this.dialogObj);
                    return;
                }
            }
            this.editModule.deleteRecord(fieldname, data);
        };
        Edit.prototype.deleteRow = function (tr) {
            this.deleteRecord(null, this.parent.getCurrentViewRecords()[parseInt(tr.getAttribute('aria-rowindex'), 10)]);
        };
        Edit.prototype.endEdit = function () {
            if (this.parent.editSettings.mode === 'batch' && this.parent.editSettings.showConfirmDialog) {
                this.showDialog('BatchSaveConfirm', this.dialogObj);
                return;
            }
            this.endEditing();
        };
        Edit.prototype.updateCell = function (rowIndex, field, value) {
            this.editModule.updateCell(rowIndex, field, value);
        };
        Edit.prototype.updateRow = function (index, data) {
            this.editModule.updateRow(index, data);
        };
        Edit.prototype.batchCancel = function () {
            this.closeEdit();
        };
        Edit.prototype.batchSave = function () {
            this.endEdit();
        };
        Edit.prototype.editCell = function (index, field) {
            this.editModule.editCell(index, field);
        };
        Edit.prototype.editFormValidate = function () {
            if (this.formObj) {
                return this.formObj.validate();
            }
            return false;
        };
        Edit.prototype.getBatchChanges = function () {
            return this.editModule.getBatchChanges ? this.editModule.getBatchChanges() : {};
        };
        Edit.prototype.getCurrentEditCellData = function () {
            var obj = this.getCurrentEditedData(this.formObj.element, {});
            return obj[Object.keys(obj)[0]];
        };
        Edit.prototype.saveCell = function () {
            this.editModule.saveCell();
        };
        Edit.prototype.endEditing = function () {
            this.editModule.endEdit();
            this.refreshToolbar();
        };
        Edit.prototype.showDialog = function (content, obj) {
            obj.content = '<div>' + this.l10n.getConstant(content) + '</div>';
            obj.show();
        };
        Edit.prototype.getValueFromType = function (col, value) {
            var val = value;
            switch (col.type) {
                case 'number':
                    val = !ej2_base_4.isNullOrUndefined(parseFloat(value)) ? parseFloat(value) : null;
                    break;
                case 'boolean':
                    if (col.editType !== 'booleanedit') {
                        val = value === this.l10n.getConstant('True') ? true : false;
                    }
                    break;
                case 'date':
                    if (col.editType !== 'datepicker') {
                        val = new Date(value);
                    }
                    break;
            }
            return val;
        };
        Edit.prototype.destroyToolTip = function () {
            var elements = [].slice.call(this.parent.element.getElementsByClassName('e-tooltip'));
            for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
                var elem = elements_1[_i];
                elem.ej2_instances[0].destroy();
            }
        };
        Edit.prototype.createConfirmDlg = function () {
            this.dialogObj = this.dlgWidget([
                {
                    click: this.dlgOk.bind(this),
                    buttonModel: { content: this.l10n.getConstant('OKButton'), cssClass: 'e-primary', isPrimary: true }
                },
                {
                    click: this.dlgCancel.bind(this),
                    buttonModel: { cssClass: 'e-flat', content: this.l10n.getConstant('CancelButton') }
                }
            ], 'EditConfirm');
        };
        Edit.prototype.createAlertDlg = function () {
            this.alertDObj = this.dlgWidget([
                {
                    click: this.alertClick.bind(this), buttonModel: { content: this.l10n.getConstant('OKButton'), cssClass: 'e-flat', isPrimary: true }
                }
            ], 'EditAlert');
        };
        Edit.prototype.alertClick = function () {
            this.alertDObj.hide();
        };
        Edit.prototype.dlgWidget = function (btnOptions, name) {
            var div = ej2_base_3.createElement('div', { id: this.parent.element.id + name });
            this.parent.element.appendChild(div);
            var options = {
                showCloseIcon: false,
                isModal: true,
                visible: false,
                closeOnEscape: true,
                target: this.parent.element,
                width: '320px',
                animationSettings: { effect: 'None' }
            };
            options.buttons = btnOptions;
            var obj = new ej2_popups_1.Dialog(options);
            obj.appendTo(div);
            return obj;
        };
        Edit.prototype.dlgCancel = function () {
            this.dialogObj.hide();
        };
        Edit.prototype.dlgOk = function (e) {
            switch (this.dialogObj.element.querySelector('.e-dlg-content').firstElementChild.innerText) {
                case this.l10n.getConstant('ConfirmDelete'):
                    this.editModule.deleteRecord();
                    break;
                case this.l10n.getConstant('CancelEdit'):
                    this.editModule.closeEdit();
                    break;
                case this.l10n.getConstant('BatchSaveConfirm'):
                    this.endEditing();
                    break;
                case this.l10n.getConstant('BatchSaveLostChanges'):
                    this.executeAction();
                    break;
            }
            this.dlgCancel();
        };
        Edit.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);
            this.parent.on(events.initialEnd, this.initialEnd, this);
            this.parent.on(events.keyPressed, this.keyPressHandler, this);
            this.parent.on(events.autoCol, this.updateColTypeObj, this);
            this.parent.on(events.tooltipDestroy, this.destroyToolTip, this);
            this.parent.on(events.preventBatch, this.preventBatch, this);
            this.parent.on(events.destroyForm, this.destroyForm, this);
            this.parent.addEventListener(events.actionBegin, this.onActionBegin.bind(this));
            this.parent.addEventListener(events.actionComplete, this.actionComplete.bind(this));
            this.parent.on(events.initialEnd, this.wireEvents, this);
        };
        Edit.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);
            this.parent.off(events.initialEnd, this.initialEnd);
            this.parent.off(events.keyPressed, this.keyPressHandler);
            this.parent.off(events.autoCol, this.updateColTypeObj);
            this.parent.off(events.tooltipDestroy, this.destroyToolTip);
            this.parent.off(events.preventBatch, this.preventBatch);
            this.parent.off(events.destroyForm, this.destroyForm);
            this.parent.removeEventListener(events.actionComplete, this.actionComplete);
            this.parent.removeEventListener(events.actionBegin, this.onActionBegin);
            this.parent.off(events.initialEnd, this.unwireEvents);
        };
        Edit.prototype.actionComplete = function (e) {
            if (e.requestType !== 'add' && e.requestType !== 'beginEdit' && e.requestType !== 'delete') {
                this.parent.isEdit = false;
            }
            this.refreshToolbar();
        };
        Edit.prototype.getCurrentEditedData = function (form, editedData) {
            var gObj = this.parent;
            var inputs = [].slice.call(form.querySelectorAll('.e-field'));
            for (var i = 0, len = inputs.length; i < len; i++) {
                var col = gObj.getColumnByUid(inputs[i].getAttribute('e-mappinguid'));
                var value = void 0;
                if (col) {
                    var temp = col.edit.read;
                    if (typeof temp === 'string') {
                        temp = ej2_base_2.getValue(temp, window);
                    }
                    value = gObj.editModule.getValueFromType(col, col.edit.read(inputs[i]));
                    ej2_base_4.setValue(col.field, value, editedData);
                }
            }
            return editedData;
        };
        Edit.prototype.onActionBegin = function (e) {
            if (this.parent.editSettings.mode !== 'batch' && this.formObj && !this.formObj.isDestroyed && !e.cancel) {
                this.destroyForm();
                this.destroyWidgets();
            }
        };
        Edit.prototype.destroyWidgets = function (cols) {
            cols = cols ? cols : this.parent.columns;
            for (var _i = 0, cols_1 = cols; _i < cols_1.length; _i++) {
                var col = cols_1[_i];
                if (col.edit.destroy) {
                    col.edit.destroy();
                }
            }
        };
        Edit.prototype.destroyForm = function () {
            this.parent.notify(events.tooltipDestroy, {});
            if (this.formObj && !this.formObj.isDestroyed) {
                this.formObj.destroy();
            }
            this.parent.notify(events.tooltipDestroy, {});
        };
        Edit.prototype.destroy = function () {
            this.removeEventListener();
            this.dialogObj.destroy();
            this.alertDObj.destroy();
            this.unwireEvents();
        };
        Edit.prototype.keyPressHandler = function (e) {
            switch (e.action) {
                case 'insert':
                    this.addRecord();
                    break;
                case 'delete':
                    this.deleteRecord();
                    break;
                case 'f2':
                    this.startEdit();
                    break;
                case 'enter':
                    if (this.parent.editSettings.mode !== 'batch' &&
                        util_1.parentsUntil(e.target, 'e-gridcontent') && !document.querySelectorAll('.e-popup-open').length) {
                        e.preventDefault();
                        this.endEdit();
                    }
                    break;
                case 'escape':
                    this.closeEdit();
                    break;
            }
        };
        Edit.prototype.preventBatch = function (args) {
            this.preventObj = args;
            this.showDialog('BatchSaveLostChanges', this.dialogObj);
        };
        Edit.prototype.executeAction = function () {
            this.preventObj.handler.call(this.preventObj.instance, this.preventObj.arg1, this.preventObj.arg2, this.preventObj.arg3, this.preventObj.arg4, this.preventObj.arg5, this.preventObj.arg6, this.preventObj.arg7);
        };
        Edit.prototype.applyFormValidation = function (cols) {
            var _this = this;
            var gObj = this.parent;
            var form = gObj.element.querySelector('.e-gridform');
            var rules = {};
            cols = cols ? cols : gObj.columns;
            for (var _i = 0, cols_2 = cols; _i < cols_2.length; _i++) {
                var col = cols_2[_i];
                if (col.validationRules && form.querySelectorAll('#' + gObj.element.id + col.field).length) {
                    rules[col.field] = col.validationRules;
                }
            }
            this.parent.editModule.formObj = new ej2_inputs_1.FormValidator(form, {
                rules: rules,
                validationComplete: function (args) {
                    _this.validationComplete(args);
                },
                customPlacement: function (inputElement, error) {
                    _this.valErrorPlacement(inputElement, error);
                }
            });
        };
        Edit.prototype.valErrorPlacement = function (inputElement, error) {
            if (this.parent.isEdit) {
                var td = util_1.parentsUntil(inputElement, 'e-rowcell');
                if (!td.ej2_instances || !td.ej2_instances.length) {
                    var tooltip = new ej2_popups_2.Tooltip({
                        opensOn: 'custom', content: error, position: 'bottom center', cssClass: 'e-griderror',
                        animation: { open: { effect: 'None' }, close: { effect: 'None' } }
                    });
                    tooltip.appendTo(td);
                    tooltip.open(td);
                }
                else {
                    td.ej2_instances[0].content = error;
                }
            }
        };
        Edit.prototype.validationComplete = function (args) {
            if (this.parent.isEdit) {
                var elem = util_1.parentsUntil(document.getElementById(this.parent.element.id + args.inputName), 'e-rowcell');
                if (elem && elem.ej2_instances && elem.ej2_instances.length) {
                    var tObj = elem.ej2_instances[0];
                    if (args.status === 'failure') {
                        tObj.open(util_1.parentsUntil(args.element, 'e-rowcell'));
                    }
                    else {
                        tObj.close();
                    }
                    tObj.refresh();
                }
            }
        };
        return Edit;
    }());
    exports.Edit = Edit;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(3), __webpack_require__(217), __webpack_require__(0), __webpack_require__(69), __webpack_require__(115), __webpack_require__(54), __webpack_require__(7), __webpack_require__(14)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, events, ej2_excel_export_1, ej2_base_1, data_1, export_helper_1, summary_model_generator_1, enum_1, ej2_data_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ExcelExport = (function () {
        function ExcelExport(parent) {
            this.book = {};
            this.workSheet = [];
            this.rows = [];
            this.columns = [];
            this.styles = [];
            this.rowLength = 1;
            this.expType = 'appendtosheet';
            this.includeHiddenColumn = false;
            this.isCsvExport = false;
            this.init(parent);
        }
        ExcelExport.prototype.getModuleName = function () {
            return 'ExcelExport';
        };
        ExcelExport.prototype.init = function (gObj) {
            this.parent = gObj;
            if (this.parent.isDestroyed) {
                return;
            }
            this.isExporting = undefined;
            this.book = {};
            this.workSheet = [];
            this.rows = [];
            this.columns = [];
            this.styles = [];
            this.data = new data_1.Data(this.parent);
            this.rowLength = 1;
            this.footer = undefined;
            this.expType = 'appendtosheet';
            this.includeHiddenColumn = false;
            this.exportValueFormatter = new export_helper_1.ExportValueFormatter();
            this.theme = 'material';
        };
        ExcelExport.prototype.Map = function (grid, exportProperties, isMultipleExport, workbook, isCsv) {
            var gObj = grid;
            this.isExporting = true;
            if (isCsv) {
                this.isCsvExport = isCsv;
            }
            else {
                this.isCsvExport = false;
            }
            gObj.trigger(events.beforeExcelExport);
            return this.processRecords(grid, exportProperties, isMultipleExport, workbook);
        };
        ExcelExport.prototype.processRecords = function (gObj, exportProperties, isMultipleExport, workbook) {
            var _this = this;
            if (exportProperties !== undefined && exportProperties.dataSource !== undefined &&
                exportProperties.dataSource instanceof ej2_data_1.DataManager) {
                var promise = void 0;
                return promise = new Promise(function (resolve, reject) {
                    var dataManager = new ej2_data_1.DataManager({ url: exportProperties.dataSource.dataSource.url, adaptor: exportProperties.dataSource.adaptor }).executeQuery(new ej2_data_1.Query());
                    dataManager.then(function (r) {
                        _this.init(gObj);
                        _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, r);
                        resolve(_this.book);
                    });
                });
            }
            else {
                var promise = void 0;
                return promise = new Promise(function (resolve, reject) {
                    var dataManager = _this.data.getData({}, _this.data.generateQuery(true).requiresCount());
                    dataManager.then(function (r) {
                        _this.init(gObj);
                        _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, r);
                        resolve(_this.book);
                    });
                });
            }
        };
        ExcelExport.prototype.processInnerRecords = function (gObj, exportProperties, isMultipleExport, workbook, r) {
            var blankRows = 5;
            if (exportProperties !== undefined && exportProperties.multipleExport !== undefined) {
                this.expType = (exportProperties.multipleExport.type !== undefined ? exportProperties.multipleExport.type : 'appendtosheet');
                if (exportProperties.multipleExport.blankRows !== undefined) {
                    blankRows = exportProperties.multipleExport.blankRows;
                }
            }
            if (workbook === undefined) {
                this.workSheet = [];
                this.rows = [];
                this.columns = [];
                this.styles = [];
            }
            else if (this.expType === 'newsheet') {
                this.workSheet = workbook.worksheets;
                this.rows = [];
                this.columns = [];
                this.styles = workbook.styles;
            }
            else {
                this.workSheet = [];
                this.rows = workbook.worksheets[0].rows;
                this.columns = workbook.worksheets[0].columns;
                this.styles = workbook.styles;
                this.rowLength = (this.rows[this.rows.length - 1].index + blankRows);
                this.rowLength++;
            }
            if (exportProperties !== undefined) {
                if (isMultipleExport !== undefined) {
                    if (exportProperties.header !== undefined && (isMultipleExport || this.expType === 'newsheet')) {
                        this.processExcelHeader(JSON.parse(JSON.stringify(exportProperties.header)));
                    }
                    if (exportProperties.footer !== undefined) {
                        if (this.expType === 'appendtosheet') {
                            if (!isMultipleExport) {
                                this.footer = JSON.parse(JSON.stringify(exportProperties.footer));
                            }
                        }
                        else {
                            this.footer = JSON.parse(JSON.stringify(exportProperties.footer));
                        }
                    }
                }
                else {
                    if (exportProperties.header !== undefined) {
                        this.processExcelHeader(JSON.parse(JSON.stringify(exportProperties.header)));
                    }
                    if (exportProperties.footer !== undefined) {
                        this.footer = JSON.parse(JSON.stringify(exportProperties.footer));
                    }
                }
            }
            this.includeHiddenColumn = (exportProperties !== undefined ? exportProperties.includeHiddenColumn : false);
            var headerRow = new export_helper_1.ExportHelper(gObj).getHeaders(gObj.columns, this.includeHiddenColumn);
            var groupIndent = 0;
            if ((r.result).level !== undefined) {
                groupIndent += (r.result).level;
                groupIndent += (r.result).childLevels;
            }
            this.processHeaderContent(gObj, headerRow, exportProperties, groupIndent);
            if (exportProperties !== undefined && exportProperties.dataSource !== undefined && !(exportProperties.dataSource instanceof ej2_data_1.DataManager)) {
                this.processRecordContent(gObj, r, headerRow, isMultipleExport, exportProperties.dataSource);
            }
            else if (exportProperties !== undefined && exportProperties.exportType === 'currentview') {
                this.processRecordContent(gObj, r, headerRow, isMultipleExport, gObj.getCurrentViewRecords());
            }
            else {
                this.processRecordContent(gObj, r, headerRow, isMultipleExport);
            }
            this.isExporting = false;
            gObj.trigger(events.excelExportComplete);
        };
        ExcelExport.prototype.processRecordContent = function (gObj, returnType, headerRow, isMultipleExport, currentViewRecords) {
            var column = gObj.columns;
            var record = undefined;
            if (currentViewRecords !== undefined) {
                record = currentViewRecords;
            }
            else {
                record = returnType.result;
            }
            if (record.level !== undefined) {
                this.processGroupedRows(gObj, record, headerRow, record.level);
            }
            else {
                this.processRecordRows(gObj, record, headerRow, 0);
                if (returnType.aggregates !== undefined) {
                    if (currentViewRecords !== undefined) {
                        this.processAggregates(gObj, returnType.result, currentViewRecords);
                    }
                    else {
                        this.processAggregates(gObj, returnType.result);
                    }
                }
            }
            if (this.footer !== undefined) {
                if ((this.expType === 'appendtosheet' && !isMultipleExport) || (this.expType === 'newsheet')) {
                    this.processExcelFooter(this.footer);
                }
            }
            var sheet = {};
            if (this.columns.length > 0) {
                sheet.columns = this.columns;
            }
            sheet.rows = this.rows;
            this.workSheet.push(sheet);
            this.book.worksheets = this.workSheet;
            this.book.styles = this.styles;
            if (!isMultipleExport) {
                if (this.isCsvExport) {
                    var book = new ej2_excel_export_1.Workbook(this.book, 'csv');
                    book.save('Export.csv');
                }
                else {
                    var book = new ej2_excel_export_1.Workbook(this.book, 'xlsx');
                    book.save('Export.xlsx');
                }
            }
        };
        ExcelExport.prototype.processGroupedRows = function (gObj, dataSource, headerRow, level) {
            for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {
                var item = dataSource_1[_i];
                var cells = [];
                var index = 1;
                var cell = {};
                cell.index = index + level;
                var args = {
                    value: item.key,
                    column: gObj.getColumnByField(item.field),
                    style: undefined
                };
                cell.value = item.field + ': ' + this.exportValueFormatter.formatCellValue(args) + ' - ';
                if (item.count > 1) {
                    cell.value += item.count + ' items';
                }
                else {
                    cell.value += item.count + ' item';
                }
                cell.style = this.getCaptionThemeStyle(this.theme);
                var captionModelGen = new summary_model_generator_1.CaptionSummaryModelGenerator(gObj);
                var groupCaptionSummaryRows = captionModelGen.generateRows(item);
                this.fillAggregates(gObj, groupCaptionSummaryRows, dataSource.level + dataSource.childLevels, this.rowLength);
                cells.push(cell);
                if (this.rows[this.rowLength - 1].cells.length > 0) {
                    var lIndex = dataSource.level + dataSource.childLevels + groupCaptionSummaryRows[0].cells.length;
                    var hIndex = 0;
                    for (var _a = 0, _b = this.rows[this.rowLength - 1].cells; _a < _b.length; _a++) {
                        var tCell = _b[_a];
                        if (tCell.index < lIndex) {
                            lIndex = tCell.index;
                        }
                        if (tCell.index > hIndex) {
                            hIndex = tCell.index;
                        }
                        tCell.style = this.getCaptionThemeStyle(this.theme);
                        cells.push(tCell);
                    }
                    if ((lIndex - cell.index) > 1) {
                        cell.colSpan = lIndex - cell.index;
                    }
                    while (hIndex < (headerRow.columns.length + index + level)) {
                        var sCell = {};
                        if (dataSource.childLevels === 0) {
                            sCell.index = (hIndex);
                        }
                        else {
                            sCell.index = (hIndex + 1);
                        }
                        sCell.style = this.getCaptionThemeStyle(this.theme);
                        cells.push(sCell);
                        hIndex++;
                    }
                }
                else {
                    var span = 0;
                    for (var _c = 0, _d = headerRow.columns; _c < _d.length; _c++) {
                        var col = _d[_c];
                        if (col.visible) {
                            span++;
                        }
                    }
                    cell.colSpan = (dataSource.childLevels + span);
                }
                this.rows[this.rowLength - 1].cells = cells;
                this.rowLength++;
                if (dataSource.childLevels !== undefined && dataSource.childLevels > 0) {
                    this.processGroupedRows(gObj, item.items, headerRow, item.items.level);
                }
                else {
                    this.processRecordRows(gObj, item.items, headerRow, (level));
                    this.processAggregates(gObj, item, undefined, (level));
                }
            }
        };
        ExcelExport.prototype.processRecordRows = function (gObj, record, headerRow, level) {
            var rLen = Object.keys(record).length;
            var index = 1;
            var cells = [];
            for (var r = 0; r < rLen; r++) {
                cells = [];
                index = 1;
                for (var c = 0, len = headerRow.columns.length; c < len; c++) {
                    var value = record[r][headerRow.columns[c].field];
                    if (!ej2_base_1.isNullOrUndefined(value)) {
                        var args = {
                            column: headerRow.columns[c], value: value, style: undefined
                        };
                        gObj.trigger(events.excelQueryCellInfo, args);
                        var cell = {};
                        cell.index = index + level;
                        cell.value = args.value;
                        if (args.style !== undefined) {
                            var styleIndex = this.getColumnStyle(gObj, index + level);
                            cell.style = this.mergeOptions(this.styles[styleIndex], args.style);
                        }
                        else {
                            cell.style = { name: gObj.element.id + 'column' + (index + level) };
                        }
                        cells.push(cell);
                    }
                    index++;
                }
                this.rows.push({ index: this.rowLength++, cells: cells });
            }
        };
        ExcelExport.prototype.processAggregates = function (gObj, rec, currentViewRecords, indent) {
            var summaryModel = new summary_model_generator_1.SummaryModelGenerator(gObj);
            var data = undefined;
            if (currentViewRecords !== undefined) {
                data = currentViewRecords;
            }
            else {
                data = rec;
            }
            if (indent === undefined) {
                indent = 0;
            }
            if (gObj.groupSettings.columns.length > 0) {
                var groupSummaryModel = new summary_model_generator_1.GroupSummaryModelGenerator(gObj);
                var groupSummaryRows = groupSummaryModel.generateRows(data, { level: data.level });
                if (groupSummaryRows.length > 0) {
                    this.fillAggregates(gObj, groupSummaryRows, indent);
                }
            }
            var sRows = summaryModel.generateRows(data, rec.aggregates);
            if (sRows.length > 0) {
                this.fillAggregates(gObj, sRows, indent);
            }
        };
        ExcelExport.prototype.fillAggregates = function (gObj, cells, indent, customIndex) {
            for (var _i = 0, cells_1 = cells; _i < cells_1.length; _i++) {
                var row = cells_1[_i];
                var cells_2 = [];
                var index = 0;
                for (var _a = 0, _b = row.cells; _a < _b.length; _a++) {
                    var cell = _b[_a];
                    var eCell = {};
                    if ((cell.visible || this.includeHiddenColumn)) {
                        index++;
                        if (cell.isDataCell) {
                            eCell.index = index + indent;
                            var templateFn = {};
                            if (cell.column.footerTemplate !== undefined) {
                                templateFn[ej2_base_1.getEnumValue(enum_1.CellType, enum_1.CellType.Summary)] = ej2_base_1.compile(cell.column.footerTemplate);
                                var txt = (templateFn[ej2_base_1.getEnumValue(enum_1.CellType, cell.cellType)](row.data[cell.column.field]));
                                eCell.value = txt[0].wholeText;
                            }
                            else if (cell.column.groupFooterTemplate !== undefined) {
                                templateFn[ej2_base_1.getEnumValue(enum_1.CellType, enum_1.CellType.GroupSummary)] = ej2_base_1.compile(cell.column.groupFooterTemplate);
                                var txt = (templateFn[ej2_base_1.getEnumValue(enum_1.CellType, cell.cellType)](row.data[cell.column.field]));
                                eCell.value = txt[0].wholeText;
                            }
                            else if (cell.column.groupCaptionTemplate !== undefined) {
                                templateFn[ej2_base_1.getEnumValue(enum_1.CellType, enum_1.CellType.CaptionSummary)] = ej2_base_1.compile(cell.column.groupCaptionTemplate);
                                var txt = (templateFn[ej2_base_1.getEnumValue(enum_1.CellType, cell.cellType)](row.data[cell.column.field]));
                                eCell.value = txt[0].wholeText;
                            }
                            else {
                                for (var _c = 0, _d = Object.keys(row.data[cell.column.field]); _c < _d.length; _c++) {
                                    var key = _d[_c];
                                    if (key === cell.column.type) {
                                        if (row.data[cell.column.field].sum !== undefined) {
                                            eCell.value = row.data[cell.column.field].sum;
                                        }
                                        else if (row.data[cell.column.field].average !== undefined) {
                                            eCell.value = row.data[cell.column.field].average;
                                        }
                                        else if (row.data[cell.column.field].max !== undefined) {
                                            eCell.value = row.data[cell.column.field].max;
                                        }
                                        else if (row.data[cell.column.field].min !== undefined) {
                                            eCell.value = row.data[cell.column.field].min;
                                        }
                                        else if (row.data[cell.column.field].count !== undefined) {
                                            eCell.value = row.data[cell.column.field].count;
                                        }
                                        else if (row.data[cell.column.field].truecount !== undefined) {
                                            eCell.value = row.data[cell.column.field].truecount;
                                        }
                                        else if (row.data[cell.column.field].falsecount !== undefined) {
                                            eCell.value = row.data[cell.column.field].falsecount;
                                        }
                                        else if (row.data[cell.column.field].custom !== undefined) {
                                            eCell.value = row.data[cell.column.field].custom;
                                        }
                                    }
                                }
                            }
                            eCell.style = this.getCaptionThemeStyle(this.theme);
                            cells_2.push(eCell);
                        }
                        else {
                            if (customIndex === undefined) {
                                eCell.index = index + indent;
                                eCell.style = this.getCaptionThemeStyle(this.theme);
                                cells_2.push(eCell);
                            }
                        }
                    }
                }
                if (customIndex !== undefined) {
                    this.rows.push({ index: customIndex, cells: cells_2 });
                }
                else {
                    this.rows.push({ index: this.rowLength++, cells: cells_2 });
                }
            }
        };
        ExcelExport.prototype.mergeOptions = function (JSON1, JSON2) {
            var result = {};
            var attrname = Object.keys(JSON1);
            for (var index = 0; index < attrname.length; index++) {
                if (attrname[index] !== 'name') {
                    result[attrname[index]] = JSON1[attrname[index]];
                }
            }
            attrname = Object.keys(JSON2);
            for (var index = 0; index < attrname.length; index++) {
                if (attrname[index] !== 'name') {
                    result[attrname[index]] = JSON2[attrname[index]];
                }
            }
            return result;
        };
        ExcelExport.prototype.getColumnStyle = function (gObj, columnIndex) {
            var index = 0;
            for (var _i = 0, _a = this.styles; _i < _a.length; _i++) {
                var style = _a[_i];
                if (style.name === gObj.element.id + 'column' + columnIndex) {
                    return index;
                }
                index++;
            }
            return undefined;
        };
        ExcelExport.prototype.processHeaderContent = function (gObj, headerRow, exportProperties, indent) {
            var column = gObj.columns;
            var rowIndex = 1;
            var returnValue = headerRow;
            var gridRows = returnValue.rows;
            var gridColumns = returnValue.columns;
            var spannedCells = [];
            if (indent > 0) {
                var index = 0;
                while (index !== indent) {
                    this.columns.push({ index: index + 1, width: 30 });
                    index++;
                }
            }
            for (var row = 0; row < gridRows.length; row++) {
                var currentCellIndex = 1 + indent;
                var cells = [];
                for (var column_1 = 0; column_1 < gridRows[row].cells.length; column_1++) {
                    var style = {};
                    var cell = {};
                    var gridCell = gridRows[row].cells[column_1];
                    var result = { contains: true, index: 1 };
                    while (result.contains) {
                        result = this.getIndex(spannedCells, rowIndex, currentCellIndex);
                        currentCellIndex = result.index;
                        if (!result.contains) {
                            cell.index = result.index;
                            break;
                        }
                    }
                    if (gridCell.rowSpan !== undefined && gridCell.rowSpan !== 1) {
                        cell.rowSpan = gridCell.rowSpan;
                        for (var i = rowIndex; i < gridCell.rowSpan + rowIndex; i++) {
                            var spannedCell = { rowIndex: 0, columnIndex: 0 };
                            spannedCell.rowIndex = i;
                            spannedCell.columnIndex = currentCellIndex;
                            spannedCells.push(spannedCell);
                        }
                    }
                    if (gridCell.colSpan !== undefined && gridCell.colSpan !== 1) {
                        cell.colSpan = gridCell.colSpan;
                        currentCellIndex = currentCellIndex + cell.colSpan - 1;
                    }
                    cell.value = gridCell.column.headerText;
                    if (exportProperties !== undefined && exportProperties.theme !== undefined) {
                        this.theme = exportProperties.theme;
                    }
                    cell.style = this.getHeaderThemeStyle(this.theme);
                    if (gridCell.column.textAlign !== undefined) {
                        style.hAlign = gridCell.column.textAlign;
                    }
                    if (gridCell.column.headerTextAlign !== undefined) {
                        style.hAlign = gridCell.column.headerTextAlign;
                    }
                    cell.style = style;
                    cells.push(cell);
                    currentCellIndex++;
                }
                this.rows.push({ index: this.rowLength++, cells: cells });
            }
            for (var col = 0; col < gridColumns.length; col++) {
                this.parseStyles(gObj, gridColumns[col], this.getRecordThemeStyle(this.theme), indent + col + 1);
            }
        };
        ExcelExport.prototype.getHeaderThemeStyle = function (theme) {
            var style = {};
            switch (theme) {
                case 'fabric':
                    style.fontColor = '#666666';
                    style.fontName = 'Segoe UI';
                    style.fontSize = 14;
                    style.borders = { color: '#EAEAEA' };
                    break;
                case 'bootstrap':
                    style.fontColor = '#33330F';
                    style.fontSize = 14;
                    style.bold = true;
                    style.borders = { color: '#33330F' };
                    break;
                default:
                    style.fontSize = 12;
                    style.borders = { color: '#E0E0E0' };
                    break;
            }
            return style;
        };
        ExcelExport.prototype.getCaptionThemeStyle = function (theme) {
            var style = {};
            switch (theme) {
                case 'fabric':
                    style.fontColor = '#33330F';
                    style.fontName = 'Segoe UI';
                    style.fontSize = 14;
                    style.backColor = '#F6F6F6';
                    style.borders = { color: '#EAEAEA' };
                    break;
                case 'bootstrap':
                    style.fontColor = '#33330F';
                    style.fontSize = 14;
                    style.bold = true;
                    style.borders = { color: '#EAEAEA' };
                    break;
                default:
                    style.fontSize = 13;
                    style.backColor = '#F6F6F6';
                    break;
            }
            return style;
        };
        ExcelExport.prototype.getRecordThemeStyle = function (theme) {
            var style = {};
            switch (theme) {
                case 'fabric':
                    style.fontColor = '#333333';
                    style.fontName = 'Segoe UI';
                    style.fontSize = 13;
                    style.borders = { color: '#EAEAEA' };
                    break;
                case 'bootstrap':
                    style.fontColor = '#33330F';
                    style.fontSize = 14;
                    style.borders = { color: '#DDDDDD' };
                    break;
                default:
                    style.fontSize = 13;
                    style.borders = { color: '#E0E0E0' };
                    break;
            }
            return style;
        };
        ExcelExport.prototype.processExcelHeader = function (header) {
            if (header.rows !== undefined && (this.expType === 'newsheet' || this.rowLength === 1)) {
                var noRows = void 0;
                if (header.headerRows === undefined) {
                    this.rowLength = header.rows.length;
                }
                else {
                    this.rowLength = header.headerRows;
                }
                if (this.rowLength < header.rows.length) {
                    noRows = this.rowLength;
                }
                else {
                    noRows = header.rows.length;
                }
                this.rowLength++;
                for (var row = 0; row < noRows; row++) {
                    var json = header.rows[row];
                    if (!(json.index !== null && json.index !== undefined)) {
                        json.index = (row + 1);
                    }
                    this.updatedCellIndex(json);
                }
            }
        };
        ExcelExport.prototype.updatedCellIndex = function (json) {
            var cellsLength = json.cells.length;
            for (var cellId = 0; cellId < cellsLength; cellId++) {
                var jsonCell = json.cells[cellId];
                if (!(jsonCell.index !== null && jsonCell.index !== undefined)) {
                    jsonCell.index = (cellId + 1);
                }
            }
            this.rows.push(json);
        };
        ExcelExport.prototype.processExcelFooter = function (footer) {
            if (footer.rows !== undefined) {
                var noRows = void 0;
                if (footer.footerRows === undefined) {
                    this.rowLength += footer.rows.length;
                }
                else {
                    if (footer.footerRows > footer.rows.length) {
                        this.rowLength += (footer.footerRows - footer.rows.length);
                        noRows = footer.rows.length;
                    }
                    else {
                        noRows = footer.footerRows;
                    }
                }
                for (var row = 0; row < noRows; row++) {
                    var json = footer.rows[row];
                    if (json.index === null || json.index === undefined) {
                        json.index = this.rowLength++;
                    }
                    else {
                        json.index += this.rowLength;
                    }
                    this.updatedCellIndex(json);
                }
            }
        };
        ExcelExport.prototype.getIndex = function (spannedCells, rowIndex, columnIndex) {
            for (var _i = 0, spannedCells_1 = spannedCells; _i < spannedCells_1.length; _i++) {
                var spannedCell = spannedCells_1[_i];
                if ((spannedCell.rowIndex === rowIndex) && (spannedCell.columnIndex === columnIndex)) {
                    columnIndex = columnIndex + 1;
                    return { contains: true, index: columnIndex };
                }
            }
            return { contains: false, index: columnIndex };
        };
        ExcelExport.prototype.parseStyles = function (gObj, col, style, index) {
            if (col.format !== undefined) {
                if (col.format.skeleton !== undefined) {
                    style.numberFormat = col.format.skeleton;
                    if (col.format.type !== undefined) {
                        style.type = col.format.type;
                    }
                }
                else {
                    style.numberFormat = col.format;
                    style.type = col.type;
                }
            }
            if (col.textAlign !== undefined) {
                style.hAlign = col.textAlign;
            }
            if (Object.keys(style).length > 0) {
                style.name = gObj.element.id + 'column' + index;
                this.styles.push(style);
            }
            if (col.width !== undefined) {
                this.columns.push({ index: index, width: col.width });
            }
        };
        ExcelExport.prototype.destroy = function () {
        };
        return ExcelExport;
    }());
    exports.ExcelExport = ExcelExport;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(2), __webpack_require__(0), __webpack_require__(14), __webpack_require__(3), __webpack_require__(7), __webpack_require__(35), __webpack_require__(51), __webpack_require__(42), __webpack_require__(117)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, util_1, ej2_base_3, ej2_data_1, events, enum_1, row_renderer_1, cell_1, row_1, filter_cell_renderer_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Filter = (function () {
        function Filter(parent, filterSettings, serviceLocator) {
            this.predicate = 'and';
            this.contentRefresh = true;
            this.values = {};
            this.filterOperators = {
                contains: 'contains', endsWith: 'endswith', equal: 'equal', greaterThan: 'greaterthan', greaterThanOrEqual: 'greaterthanorequal',
                lessThan: 'lessthan', lessThanOrEqual: 'lessthanorequal', notEqual: 'notequal', startsWith: 'startswith'
            };
            this.parent = parent;
            this.filterSettings = filterSettings;
            this.serviceLocator = serviceLocator;
            this.addEventListener();
        }
        Filter.prototype.render = function () {
            var gObj = this.parent;
            if (gObj.columns.length) {
                var rowRenderer = new row_renderer_1.RowRenderer(this.serviceLocator, enum_1.CellType.Filter);
                var row = void 0;
                var cellrender = this.serviceLocator.getService('cellRendererFactory');
                cellrender.addCellRenderer(enum_1.CellType.Filter, new filter_cell_renderer_1.FilterCellRenderer(this.parent, this.serviceLocator));
                this.l10n = this.serviceLocator.getService('localization');
                this.valueFormatter = this.serviceLocator.getService('valueFormatter');
                rowRenderer.element = ej2_base_3.createElement('tr', { className: 'e-filterbar' });
                row = this.generateRow();
                row.data = this.values;
                this.element = rowRenderer.render(row, gObj.getColumns());
                this.parent.getHeaderContent().querySelector('thead').appendChild(this.element);
                var detail = this.element.querySelector('.e-detailheadercell');
                if (detail) {
                    detail.className = 'e-filterbarcell e-mastercell';
                }
                this.wireEvents();
            }
        };
        Filter.prototype.destroy = function () {
            this.filterSettings.columns = [];
            this.updateFilterMsg();
            this.removeEventListener();
            this.unWireEvents();
            ej2_base_3.remove(this.element);
        };
        Filter.prototype.generateRow = function (index) {
            var options = {};
            var row = new row_1.Row(options);
            row.cells = this.generateCells();
            return row;
        };
        Filter.prototype.generateCells = function () {
            var cells = [];
            if (this.parent.allowGrouping) {
                for (var c = 0, len = this.parent.groupSettings.columns.length; c < len; c++) {
                    cells.push(this.generateCell({}, enum_1.CellType.HeaderIndent));
                }
            }
            if (this.parent.detailTemplate || this.parent.childGrid) {
                cells.push(this.generateCell({}, enum_1.CellType.DetailHeader));
            }
            for (var _i = 0, _a = this.parent.getColumns(); _i < _a.length; _i++) {
                var dummy = _a[_i];
                cells.push(this.generateCell(dummy));
            }
            return cells;
        };
        Filter.prototype.generateCell = function (column, cellType) {
            var opt = {
                'visible': column.visible,
                'isDataCell': false,
                'rowId': '',
                'column': column,
                'cellType': cellType ? cellType : enum_1.CellType.Filter,
                'attributes': { title: this.l10n.getConstant('FilterbarTitle') }
            };
            return new cell_1.Cell(opt);
        };
        Filter.prototype.updateModel = function () {
            this.currentFilterObject = {
                field: this.fieldName, operator: this.operator, value: this.value, predicate: this.predicate,
                matchCase: this.matchCase, actualFilterValue: {}, actualOperator: {}
            };
            var index = this.getFilteredColsIndexByField(this.fieldName);
            if (index > -1) {
                this.filterSettings.columns[index] = this.currentFilterObject;
            }
            else {
                this.filterSettings.columns.push(this.currentFilterObject);
            }
            this.filterSettings.columns = this.filterSettings.columns;
            this.parent.dataBind();
        };
        Filter.prototype.getFilteredColsIndexByField = function (field) {
            var cols = this.filterSettings.columns;
            for (var i = 0, len = cols.length; i < len; i++) {
                if (cols[i].field === field) {
                    return i;
                }
            }
            return -1;
        };
        Filter.prototype.onActionComplete = function (e) {
            var args = !this.isRemove ? {
                currentFilterObject: this.currentFilterObject, currentFilteringColumn: this.column.field,
                columns: this.filterSettings.columns, requestType: 'filtering', type: events.actionComplete
            } : {
                requestType: 'filtering', type: events.actionComplete
            };
            this.parent.trigger(events.actionComplete, ej2_base_2.extend(e, args));
            this.isRemove = false;
        };
        Filter.prototype.wireEvents = function () {
            ej2_base_1.EventHandler.add(this.parent.getHeaderContent(), 'mousedown', this.updateSpanClass, this);
            ej2_base_1.EventHandler.add(this.parent.element, 'focusin', this.updateSpanClass, this);
            ej2_base_1.EventHandler.add(this.parent.getHeaderContent(), 'keyup', this.keyUpHandler, this);
        };
        Filter.prototype.unWireEvents = function () {
            ej2_base_1.EventHandler.remove(this.parent.element, 'focusin', this.updateSpanClass);
            ej2_base_1.EventHandler.remove(this.parent.getHeaderContent(), 'mousedown', this.updateSpanClass);
            ej2_base_1.EventHandler.remove(this.parent.getHeaderContent(), 'keyup', this.keyUpHandler);
        };
        Filter.prototype.enableAfterRender = function (e) {
            if (e.module === this.getModuleName() && e.enable) {
                this.render();
            }
        };
        Filter.prototype.initialEnd = function () {
            this.parent.off(events.contentReady, this.initialEnd);
            if (this.parent.getColumns().length && this.filterSettings.columns.length) {
                var gObj = this.parent;
                this.contentRefresh = false;
                for (var _i = 0, _a = gObj.filterSettings.columns; _i < _a.length; _i++) {
                    var col = _a[_i];
                    this.filterByColumn(col.field, col.operator, col.value, col.predicate, col.matchCase, col.actualFilterValue, col.actualOperator);
                }
                this.updateFilterMsg();
                this.contentRefresh = true;
            }
        };
        Filter.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.uiUpdate, this.enableAfterRender, this);
            this.parent.on(events.filterComplete, this.onActionComplete, this);
            this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);
            this.parent.on(events.keyPressed, this.keyUpHandler, this);
            this.parent.on(events.columnPositionChanged, this.columnPositionChanged, this);
            this.parent.on(events.headerRefreshed, this.render, this);
            this.parent.on(events.contentReady, this.initialEnd, this);
        };
        Filter.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.uiUpdate, this.enableAfterRender);
            this.parent.off(events.filterComplete, this.onActionComplete);
            this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);
            this.parent.off(events.keyPressed, this.keyUpHandler);
            this.parent.off(events.columnPositionChanged, this.columnPositionChanged);
            this.parent.off(events.headerRefreshed, this.render);
        };
        Filter.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, actualFilterValue, actualOperator) {
            var gObj = this.parent;
            var filterCell;
            this.column = gObj.getColumnByField(fieldName);
            filterCell = this.element.querySelector('#' + this.column.field + '_filterBarcell');
            if (!ej2_base_2.isNullOrUndefined(this.column.allowFiltering) && !this.column.allowFiltering) {
                return;
            }
            if (util_1.isActionPrevent(gObj)) {
                gObj.notify(events.preventBatch, {
                    instance: this, handler: this.filterByColumn, arg1: fieldName, arg2: filterOperator, arg3: filterValue, arg4: predicate,
                    arg5: matchCase, arg6: actualFilterValue, arg7: actualOperator
                });
                return;
            }
            this.value = filterValue;
            this.matchCase = matchCase || false;
            this.fieldName = fieldName;
            this.predicate = predicate || 'and';
            this.operator = filterOperator;
            filterValue = filterValue.toString();
            this.values[this.column.field] = filterValue;
            gObj.getColumnHeaderByField(fieldName).setAttribute('aria-filtered', 'true');
            if (filterValue.length < 1 || this.checkForSkipInput(this.column, filterValue)) {
                this.filterStatusMsg = filterValue.length < 1 ? '' : this.l10n.getConstant('InvalidFilterMessage');
                this.updateFilterMsg();
                return;
            }
            if (filterCell.value !== filterValue) {
                filterCell.value = filterValue;
            }
            if (this.checkAlreadyColFiltered(this.column.field)) {
                return;
            }
            this.updateModel();
        };
        Filter.prototype.onPropertyChanged = function (e) {
            if (e.module !== this.getModuleName()) {
                return;
            }
            for (var _i = 0, _a = Object.keys(e.properties); _i < _a.length; _i++) {
                var prop = _a[_i];
                switch (prop) {
                    case 'columns':
                        if (this.contentRefresh) {
                            this.parent.notify(events.modelChanged, {
                                currentFilterObject: this.currentFilterObject, currentFilteringColumn: this.column ?
                                    this.column.field : undefined,
                                columns: this.filterSettings.columns, requestType: 'filtering', type: events.actionBegin
                            });
                            this.updateFilterMsg();
                        }
                        break;
                    case 'showFilterBarStatus':
                        if (e.properties[prop]) {
                            this.updateFilterMsg();
                        }
                        else if (this.parent.allowPaging) {
                            this.parent.updateExternalMessage('');
                        }
                        break;
                }
            }
        };
        Filter.prototype.clearFiltering = function () {
            var cols = util_1.getActualPropFromColl(this.filterSettings.columns);
            if (util_1.isActionPrevent(this.parent)) {
                this.parent.notify(events.preventBatch, { instance: this, handler: this.clearFiltering });
                return;
            }
            for (var i = 0, len = cols.length; i < len; i++) {
                this.removeFilteredColsByField(cols[i].field, true);
            }
            this.isRemove = true;
            this.filterStatusMsg = '';
            this.updateFilterMsg();
        };
        Filter.prototype.checkAlreadyColFiltered = function (field) {
            var columns = this.filterSettings.columns;
            for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {
                var col = columns_1[_i];
                if (col.field === field && col.value === this.value &&
                    col.operator === this.operator && col.predicate === this.predicate) {
                    return true;
                }
            }
            return false;
        };
        Filter.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {
            var cols = this.filterSettings.columns;
            if (util_1.isActionPrevent(this.parent)) {
                this.parent.notify(events.preventBatch, {
                    instance: this, handler: this.removeFilteredColsByField,
                    arg1: field, arg2: isClearFilterBar
                });
                return;
            }
            for (var i = 0, len = cols.length; i < len; i++) {
                if (cols[i].field === field) {
                    if (!(isClearFilterBar === false)) {
                        this.element.querySelector('#' + cols[i].field + '_filterBarcell').value = '';
                        delete this.values[field];
                    }
                    cols.splice(i, 1);
                    this.parent.getColumnHeaderByField(field).removeAttribute('aria-filtered');
                    this.isRemove = true;
                    this.parent.notify(events.modelChanged, {
                        requestType: 'filtering', type: events.actionBegin
                    });
                    break;
                }
            }
            this.updateFilterMsg();
        };
        Filter.prototype.getModuleName = function () {
            return 'filter';
        };
        Filter.prototype.keyUpHandler = function (e) {
            var gObj = this.parent;
            var target = e.target;
            if (ej2_base_3.matches(target, '.e-filterbar input')) {
                this.column = gObj.getColumnByField(target.id.split('_')[0]);
                if (!this.column) {
                    return;
                }
                this.updateCrossIcon(target);
                if ((this.filterSettings.mode === 'immediate' || e.keyCode === 13) && e.keyCode !== 9) {
                    this.value = target.value.trim();
                    this.processFilter(e);
                }
            }
        };
        Filter.prototype.updateSpanClass = function (e) {
            var target = e.target;
            if (e.type === 'mousedown' && target.classList.contains('e-cancel')) {
                var targetText = target.previousElementSibling;
                targetText.value = '';
                target.classList.add('e-hide');
                targetText.focus();
                e.preventDefault();
            }
            if (e.type === 'focusin' && target.classList.contains('e-filtertext') && !target.disabled) {
                if (this.lastFilterElement) {
                    this.lastFilterElement.nextElementSibling.classList.add('e-hide');
                }
                this.updateCrossIcon(target);
                this.lastFilterElement = target;
            }
            if (e.type === 'focusin' && !target.classList.contains('e-filtertext') && this.lastFilterElement) {
                this.lastFilterElement.nextElementSibling.classList.add('e-hide');
            }
            return false;
        };
        Filter.prototype.updateCrossIcon = function (element) {
            if (element.value.length) {
                element.nextElementSibling.classList.remove('e-hide');
            }
        };
        Filter.prototype.updateFilterMsg = function () {
            var gObj = this.parent;
            var columns = this.filterSettings.columns;
            var column;
            if (!this.filterSettings.showFilterBarStatus) {
                return;
            }
            if (columns.length > 0 && this.filterStatusMsg !== this.l10n.getConstant('InvalidFilterMessage')) {
                this.filterStatusMsg = '';
                for (var index = 0; index < columns.length; index++) {
                    column = gObj.getColumnByField(columns[index].field);
                    if (index) {
                        this.filterStatusMsg += ' && ';
                    }
                    this.filterStatusMsg += column.headerText + ': ' + this.values[column.field];
                }
            }
            if (gObj.allowPaging) {
                gObj.updateExternalMessage(this.filterStatusMsg);
            }
            this.filterStatusMsg = '';
        };
        Filter.prototype.checkForSkipInput = function (column, value) {
            var isSkip;
            var skipInput;
            if (column.type === 'number') {
                skipInput = ['=', ' ', '!'];
                if (ej2_data_1.DataUtil.operatorSymbols[value] || skipInput.indexOf(value) > -1) {
                    isSkip = true;
                }
            }
            else if (column.type === 'string') {
                skipInput = ['>', '<', '=', '!'];
                for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {
                    var val = value_1[_i];
                    if (skipInput.indexOf(val) > -1) {
                        isSkip = true;
                    }
                }
            }
            return isSkip;
        };
        Filter.prototype.processFilter = function (e) {
            this.stopTimer();
            this.startTimer(e);
        };
        Filter.prototype.startTimer = function (e) {
            var _this = this;
            this.timer = window.setInterval(function () { _this.onTimerTick(); }, e.keyCode === 13 ? 0 : this.filterSettings.immediateModeDelay);
        };
        Filter.prototype.stopTimer = function () {
            window.clearInterval(this.timer);
        };
        Filter.prototype.onTimerTick = function () {
            var filterElement = this.element.querySelector('#' + this.column.field + '_filterBarcell');
            var filterValue = JSON.parse(JSON.stringify(filterElement.value));
            this.stopTimer();
            if (this.value === '') {
                this.removeFilteredColsByField(this.column.field);
                return;
            }
            this.validateFilterValue(this.value);
            this.filterByColumn(this.column.field, this.operator, this.value, this.predicate, this.matchCase);
            this.values[this.column.field] = filterValue;
            filterElement.value = filterValue;
            this.updateFilterMsg();
        };
        Filter.prototype.validateFilterValue = function (value) {
            var gObj = this.parent;
            var skipInput;
            var index;
            this.matchCase = true;
            switch (this.column.type) {
                case 'number':
                    this.operator = this.filterOperators.equal;
                    skipInput = ['>', '<', '=', '!'];
                    for (var i = 0; i < value.length; i++) {
                        if (skipInput.indexOf(value[i]) > -1) {
                            index = i;
                            break;
                        }
                    }
                    this.getOperator(value.substring(index));
                    if (index !== 0) {
                        this.value = value.substring(0, index);
                    }
                    if (this.value !== '' && value.length >= 1) {
                        this.value = this.valueFormatter.fromView(this.value, this.column.getParser(), this.column.type);
                    }
                    if (isNaN(this.value)) {
                        this.filterStatusMsg = this.l10n.getConstant('InvalidFilterMessage');
                    }
                    break;
                case 'date':
                case 'datetime':
                    this.operator = this.filterOperators.equal;
                    this.getOperator(value);
                    if (this.value !== '') {
                        this.value = this.valueFormatter.fromView(this.value, this.column.getParser(), this.column.type);
                        if (ej2_base_2.isNullOrUndefined(this.value)) {
                            this.filterStatusMsg = this.l10n.getConstant('InvalidFilterMessage');
                        }
                    }
                    break;
                case 'string':
                    this.matchCase = false;
                    if (value.charAt(0) === '*') {
                        this.value = this.value.slice(1);
                        this.operator = this.filterOperators.startsWith;
                    }
                    else if (value.charAt(value.length - 1) === '%') {
                        this.value = this.value.slice(0, -1);
                        this.operator = this.filterOperators.startsWith;
                    }
                    else if (value.charAt(0) === '%') {
                        this.value = this.value.slice(1);
                        this.operator = this.filterOperators.endsWith;
                    }
                    else {
                        this.operator = this.filterOperators.startsWith;
                    }
                    break;
                case 'boolean':
                    if (value.toLowerCase() === 'true' || value === '1') {
                        this.value = true;
                    }
                    else if (value.toLowerCase() === 'false' || value === '0') {
                        this.value = false;
                    }
                    else if (value.length) {
                        this.filterStatusMsg = this.l10n.getConstant('InvalidFilterMessage');
                    }
                    this.operator = this.filterOperators.equal;
                    break;
                default:
                    this.operator = this.filterOperators.equal;
            }
        };
        Filter.prototype.getOperator = function (value) {
            var singleOp = value.charAt(0);
            var multipleOp = value.slice(0, 2);
            var operators = ej2_base_2.extend({ '=': this.filterOperators.equal, '!': this.filterOperators.notEqual }, ej2_data_1.DataUtil.operatorSymbols);
            if (operators.hasOwnProperty(singleOp) || operators.hasOwnProperty(multipleOp)) {
                this.operator = operators[singleOp];
                this.value = value.substring(1);
                if (!this.operator) {
                    this.operator = operators[multipleOp];
                    this.value = value.substring(2);
                }
            }
            if (this.operator === this.filterOperators.lessThan || this.operator === this.filterOperators.greaterThan) {
                if (this.value.charAt(0) === '=') {
                    this.operator = this.operator + 'orequal';
                    this.value = this.value.substring(1);
                }
            }
        };
        Filter.prototype.columnPositionChanged = function (e) {
            var filterCells = [].slice.call(this.element.querySelectorAll('.e-filterbarcell'));
            filterCells.splice(e.toIndex, 0, filterCells.splice(e.fromIndex, 1)[0]);
            this.element.innerHTML = '';
            for (var _i = 0, filterCells_1 = filterCells; _i < filterCells_1.length; _i++) {
                var cell = filterCells_1[_i];
                this.element.appendChild(cell);
            }
        };
        return Filter;
    }());
    exports.Filter = Filter;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(2), __webpack_require__(3), __webpack_require__(52)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, util_1, events, aria_service_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Group = (function () {
        function Group(parent, groupSettings, sortedColumns, serviceLocator) {
            var _this = this;
            this.visualElement = ej2_base_2.createElement('div', {
                className: 'e-cloneproperties e-dragclone e-gdclone',
                styles: 'line-height:23px', attrs: { action: 'grouping' }
            });
            this.helper = function (e) {
                var gObj = _this.parent;
                var target = e.sender.target;
                var element = target.classList.contains('e-groupheadercell') ? target :
                    util_1.parentsUntil(target, 'e-groupheadercell');
                if (!element) {
                    return false;
                }
                _this.column = gObj.getColumnByField(element.firstElementChild.getAttribute('ej-mappingname'));
                _this.visualElement.textContent = element.textContent;
                _this.visualElement.style.width = element.offsetWidth + 2 + 'px';
                _this.visualElement.style.height = element.offsetHeight + 2 + 'px';
                _this.visualElement.setAttribute('e-mappinguid', _this.column.uid);
                gObj.element.appendChild(_this.visualElement);
                return _this.visualElement;
            };
            this.dragStart = function () {
                _this.parent.element.classList.add('e-ungroupdrag');
            };
            this.drag = function (e) {
                var target = e.target;
                var cloneElement = _this.parent.element.querySelector('.e-cloneproperties');
                _this.parent.trigger(events.columnDrag, { target: target, draggableType: 'headercell', column: _this.column });
                ej2_base_2.classList(cloneElement, ['e-defaultcur'], ['e-notallowedcur']);
                if (!(util_1.parentsUntil(target, 'e-gridcontent') || util_1.parentsUntil(target, 'e-headercell'))) {
                    ej2_base_2.classList(cloneElement, ['e-notallowedcur'], ['e-defaultcur']);
                }
            };
            this.dragStop = function (e) {
                _this.parent.element.classList.remove('e-ungroupdrag');
                if (!(util_1.parentsUntil(e.target, 'e-gridcontent') || util_1.parentsUntil(e.target, 'e-gridheader'))) {
                    ej2_base_2.remove(e.helper);
                    return;
                }
            };
            this.drop = function (e) {
                var gObj = _this.parent;
                var column = gObj.getColumnByUid(e.droppedElement.getAttribute('e-mappinguid'));
                _this.element.classList.remove('e-hover');
                ej2_base_2.remove(e.droppedElement);
                _this.aria.setDropTarget(_this.parent.element.querySelector('.e-groupdroparea'), false);
                _this.aria.setGrabbed(_this.parent.getHeaderTable().querySelector('[aria-grabbed=true]'), false);
                if (ej2_base_3.isNullOrUndefined(column) || column.allowGrouping === false ||
                    util_1.parentsUntil(gObj.getColumnHeaderByUid(column.uid), 'e-grid').getAttribute('id') !==
                        gObj.element.getAttribute('id')) {
                    return;
                }
                _this.groupColumn(column.field);
            };
            this.contentRefresh = true;
            this.aria = new aria_service_1.AriaService();
            this.parent = parent;
            this.groupSettings = groupSettings;
            this.serviceLocator = serviceLocator;
            this.sortedColumns = sortedColumns;
            this.addEventListener();
        }
        Group.prototype.columnDrag = function (e) {
            var gObj = this.parent;
            var cloneElement = this.parent.element.querySelector('.e-cloneproperties');
            ej2_base_2.classList(cloneElement, ['e-defaultcur'], ['e-notallowedcur']);
            if (!util_1.parentsUntil(e.target, 'e-groupdroparea') &&
                !(this.parent.allowReordering && util_1.parentsUntil(e.target, 'e-headercell'))) {
                ej2_base_2.classList(cloneElement, ['e-notallowedcur'], ['e-defaultcur']);
            }
            e.target.classList.contains('e-groupdroparea') ? this.element.classList.add('e-hover') : this.element.classList.remove('e-hover');
        };
        Group.prototype.columnDragStart = function (e) {
            if (e.target.classList.contains('e-stackedheadercell')) {
                return;
            }
            var gObj = this.parent;
            var dropArea = this.parent.element.querySelector('.e-groupdroparea');
            this.aria.setDropTarget(dropArea, e.column.allowGrouping);
            var element = e.target.classList.contains('e-headercell') ? e.target : util_1.parentsUntil(e.target, 'e-headercell');
            this.aria.setGrabbed(element, true, !e.column.allowGrouping);
        };
        Group.prototype.columnDrop = function (e) {
            var gObj = this.parent;
            if (e.droppedElement.getAttribute('action') === 'grouping') {
                var column = gObj.getColumnByUid(e.droppedElement.getAttribute('e-mappinguid'));
                if (ej2_base_3.isNullOrUndefined(column) || column.allowGrouping === false ||
                    util_1.parentsUntil(gObj.getColumnHeaderByUid(column.uid), 'e-grid').getAttribute('id') !==
                        gObj.element.getAttribute('id')) {
                    return;
                }
                this.ungroupColumn(column.field);
            }
        };
        Group.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.uiUpdate, this.enableAfterRender, this);
            this.parent.on(events.groupComplete, this.onActionComplete, this);
            this.parent.on(events.ungroupComplete, this.onActionComplete, this);
            this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);
            this.parent.on(events.click, this.clickHandler, this);
            this.parent.on(events.columnDrag, this.columnDrag, this);
            this.parent.on(events.columnDragStart, this.columnDragStart, this);
            this.parent.on(events.columnDrop, this.columnDrop, this);
            this.parent.on(events.headerRefreshed, this.refreshSortIcons, this);
            this.parent.on(events.sortComplete, this.refreshSortIcons, this);
            this.parent.on(events.keyPressed, this.keyPressHandler, this);
            this.parent.on(events.contentReady, this.initialEnd, this);
            this.parent.on(events.initialEnd, this.render, this);
            this.parent.on(events.headerDrop, this.headerDrop, this);
        };
        Group.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.initialEnd, this.render);
            this.parent.off(events.uiUpdate, this.enableAfterRender);
            this.parent.off(events.groupComplete, this.onActionComplete);
            this.parent.off(events.ungroupComplete, this.onActionComplete);
            this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);
            this.parent.off(events.click, this.clickHandler);
            this.parent.off(events.columnDrag, this.columnDrag);
            this.parent.off(events.columnDragStart, this.columnDragStart);
            this.parent.off(events.columnDrop, this.columnDrop);
            this.parent.off(events.headerRefreshed, this.refreshSortIcons);
            this.parent.off(events.sortComplete, this.refreshSortIcons);
            this.parent.off(events.keyPressed, this.keyPressHandler);
            this.parent.off(events.headerDrop, this.headerDrop);
        };
        Group.prototype.initialEnd = function () {
            var gObj = this.parent;
            this.parent.off(events.contentReady, this.initialEnd);
            if (this.parent.getColumns().length && this.groupSettings.columns.length) {
                this.contentRefresh = false;
                for (var _i = 0, _a = gObj.groupSettings.columns; _i < _a.length; _i++) {
                    var col = _a[_i];
                    this.groupColumn(col);
                }
                this.contentRefresh = true;
            }
        };
        Group.prototype.keyPressHandler = function (e) {
            var gObj = this.parent;
            if (!this.groupSettings.columns.length) {
                return;
            }
            e.preventDefault();
            switch (e.action) {
                case 'altDownArrow':
                case 'altUpArrow':
                    var selected = gObj.allowSelection ? gObj.getSelectedRowIndexes() : [];
                    if (selected.length) {
                        var rows = gObj.getContentTable().querySelector('tbody').children;
                        var dataRow = gObj.getDataRows()[selected[selected.length - 1]];
                        var grpRow = void 0;
                        for (var i = dataRow.rowIndex; i >= 0; i--) {
                            if (!rows[i].classList.contains('e-row') && !rows[i].classList.contains('e-detailrow')) {
                                grpRow = rows[i];
                                break;
                            }
                        }
                        this.expandCollapseRows(grpRow.querySelector(e.action === 'altUpArrow' ?
                            '.e-recordplusexpand' : '.e-recordpluscollapse'));
                    }
                    break;
                case 'ctrlDownArrow':
                    this.expandAll();
                    break;
                case 'ctrlUpArrow':
                    this.collapseAll();
                    break;
            }
        };
        Group.prototype.clickHandler = function (e) {
            this.expandCollapseRows(e.target);
            this.applySortFromTarget(e.target);
            this.unGroupFromTarget(e.target);
            this.toogleGroupFromHeader(e.target);
        };
        Group.prototype.unGroupFromTarget = function (target) {
            if (target.classList.contains('e-ungroupbutton')) {
                this.ungroupColumn(target.parentElement.getAttribute('ej-mappingname'));
            }
        };
        Group.prototype.toogleGroupFromHeader = function (target) {
            if (this.groupSettings.showToggleButton) {
                if (target.classList.contains('e-grptogglebtn')) {
                    if (target.classList.contains('e-toggleungroup')) {
                        this.ungroupColumn(this.parent.getColumnByUid(target.parentElement.getAttribute('e-mappinguid')).field);
                    }
                    else {
                        this.groupColumn(this.parent.getColumnByUid(target.parentElement.getAttribute('e-mappinguid')).field);
                    }
                }
                else {
                    if (target.classList.contains('e-toggleungroup')) {
                        this.ungroupColumn(target.parentElement.getAttribute('ej-mappingname'));
                    }
                }
            }
        };
        Group.prototype.applySortFromTarget = function (target) {
            var gObj = this.parent;
            var gHeader = ej2_base_2.closest(target, '.e-groupheadercell');
            if (gObj.allowSorting && gHeader && !target.classList.contains('e-ungroupbutton') &&
                !target.classList.contains('e-toggleungroup')) {
                var field = gHeader.firstElementChild.getAttribute('ej-mappingname');
                if (gObj.getColumnHeaderByField(field).querySelectorAll('.e-ascending').length) {
                    gObj.sortColumn(field, 'descending', true);
                }
                else {
                    gObj.sortColumn(field, 'ascending', true);
                }
            }
        };
        Group.prototype.expandCollapseRows = function (target) {
            var trgt = util_1.parentsUntil(target, 'e-recordplusexpand') ||
                util_1.parentsUntil(target, 'e-recordpluscollapse');
            if (trgt) {
                var cellIdx = trgt.cellIndex;
                var rowIdx = trgt.parentElement.rowIndex;
                var rowNodes = this.parent.getContentTable().querySelector('tbody').children;
                var rows = [].slice.call(rowNodes).slice(rowIdx + 1, rowNodes.length);
                var isHide = void 0;
                var expandElem = void 0;
                var toExpand = [];
                var indent = trgt.parentElement.querySelectorAll('.e-indentcell').length;
                var expand = false;
                if (trgt.classList.contains('e-recordpluscollapse')) {
                    trgt.className = 'e-recordplusexpand';
                    trgt.firstElementChild.className = 'e-icons e-gdiagonaldown e-icon-gdownarrow';
                    expand = true;
                }
                else {
                    isHide = true;
                    trgt.className = 'e-recordpluscollapse';
                    trgt.firstElementChild.className = 'e-icons e-gnextforward e-icon-grightarrow';
                }
                this.aria.setExpand(trgt, expand);
                for (var i = 0, len = rows.length; i < len; i++) {
                    if (rows[i].querySelectorAll('td')[cellIdx] &&
                        rows[i].querySelectorAll('td')[cellIdx].classList.contains('e-indentcell') && rows) {
                        if (isHide) {
                            rows[i].style.display = 'none';
                        }
                        else {
                            if (rows[i].querySelectorAll('.e-indentcell').length === indent + 1) {
                                rows[i].style.display = '';
                                expandElem = rows[i].querySelector('.e-recordplusexpand');
                                if (expandElem) {
                                    toExpand.push(expandElem);
                                }
                                if (rows[i].classList.contains('e-detailrow')) {
                                    if (rows[i - 1].querySelectorAll('.e-detailrowcollapse').length) {
                                        rows[i].style.display = 'none';
                                    }
                                }
                            }
                        }
                    }
                    else {
                        break;
                    }
                }
                for (var i = 0, len = toExpand.length; i < len; i++) {
                    toExpand[i].className = 'e-recordpluscollapse';
                    toExpand[i].firstElementChild.className = 'e-icons e-gnextforward e-icon-grightarrow';
                    this.expandCollapseRows(toExpand[i]);
                }
            }
        };
        Group.prototype.expandCollapse = function (isExpand) {
            var rowNodes = this.parent.getContentTable().querySelector('tbody').children;
            var row;
            for (var i = 0, len = rowNodes.length; i < len; i++) {
                if (rowNodes[i].querySelectorAll('.e-recordplusexpand, .e-recordpluscollapse').length) {
                    row = rowNodes[i].querySelector(isExpand ? '.e-recordpluscollapse' : '.e-recordplusexpand');
                    if (row) {
                        row.className = isExpand ? 'e-recordplusexpand' : 'e-recordpluscollapse';
                        row.firstElementChild.className = isExpand ? 'e-icons e-gdiagonaldown e-icon-gdownarrow' :
                            'e-icons e-gnextforward e-icon-grightarrow';
                    }
                    if (!(rowNodes[i].firstElementChild.classList.contains('e-recordplusexpand') ||
                        rowNodes[i].firstElementChild.classList.contains('e-recordpluscollapse'))) {
                        rowNodes[i].style.display = isExpand ? '' : 'none';
                    }
                }
                else {
                    rowNodes[i].style.display = isExpand ? '' : 'none';
                }
            }
        };
        Group.prototype.expandAll = function () {
            this.expandCollapse(true);
        };
        Group.prototype.collapseAll = function () {
            this.expandCollapse(false);
        };
        Group.prototype.render = function () {
            this.l10n = this.serviceLocator.getService('localization');
            this.renderGroupDropArea();
            this.initDragAndDrop();
            this.refreshToggleBtn();
        };
        Group.prototype.renderGroupDropArea = function () {
            this.element = ej2_base_2.createElement('div', { className: 'e-groupdroparea', attrs: { 'tabindex': '-1' } });
            this.updateGroupDropArea();
            this.parent.element.insertBefore(this.element, this.parent.element.firstChild);
            if (!this.groupSettings.showDropArea) {
                this.element.style.display = 'none';
            }
        };
        Group.prototype.updateGroupDropArea = function () {
            if (this.groupSettings.showDropArea && !this.groupSettings.columns.length) {
                var dragLabel = this.l10n.getConstant('GroupDropArea');
                this.element.innerHTML = dragLabel;
                this.element.classList.remove('e-grouped');
            }
            else {
                if (this.element.innerHTML === this.l10n.getConstant('GroupDropArea') && this.groupSettings.columns.length === 1) {
                    this.element.innerHTML = '';
                }
                this.element.classList.add('e-grouped');
            }
        };
        Group.prototype.initDragAndDrop = function () {
            this.initializeGHeaderDrop();
            this.initializeGHeaderDrag();
        };
        Group.prototype.initializeGHeaderDrag = function () {
            var drag = new ej2_base_1.Draggable(this.element, {
                dragTarget: '.e-groupheadercell',
                distance: 5,
                helper: this.helper,
                dragStart: this.dragStart,
                drag: this.drag,
                dragStop: this.dragStop
            });
        };
        Group.prototype.headerDrop = function (e) {
            if (!e.uid) {
                return;
            }
            var column = this.parent.getColumnByUid(e.uid);
            this.ungroupColumn(column.field);
        };
        Group.prototype.initializeGHeaderDrop = function () {
            var gObj = this.parent;
            var drop = new ej2_base_1.Droppable(this.element, {
                accept: '.e-dragclone',
                drop: this.drop
            });
        };
        Group.prototype.groupColumn = function (columnName) {
            var gObj = this.parent;
            var column = gObj.getColumnByField(columnName);
            if (ej2_base_3.isNullOrUndefined(column) || column.allowGrouping === false ||
                (this.contentRefresh && this.groupSettings.columns.indexOf(columnName) > -1)) {
                return;
            }
            if (util_1.isActionPrevent(gObj)) {
                gObj.notify(events.preventBatch, { instance: this, handler: this.groupColumn, arg1: columnName });
                return;
            }
            column.visible = gObj.groupSettings.showGroupedColumn;
            this.colName = columnName;
            if (this.contentRefresh) {
                this.updateModel();
            }
            else {
                this.addColToGroupDrop(columnName);
            }
            this.updateGroupDropArea();
        };
        Group.prototype.ungroupColumn = function (columnName) {
            var gObj = this.parent;
            var column = this.parent.enableColumnVirtualization ?
                this.parent.columns.filter(function (c) { return c.field === columnName; })[0] : gObj.getColumnByField(columnName);
            if (ej2_base_3.isNullOrUndefined(column) || column.allowGrouping === false || this.groupSettings.columns.indexOf(columnName) < 0) {
                return;
            }
            if (util_1.isActionPrevent(gObj)) {
                gObj.notify(events.preventBatch, { instance: this, handler: this.ungroupColumn, arg1: columnName });
                return;
            }
            column.visible = true;
            this.colName = column.field;
            var columns = JSON.parse(JSON.stringify(this.groupSettings.columns));
            columns.splice(columns.indexOf(this.colName), 1);
            if (this.sortedColumns.indexOf(columnName) < 0) {
                for (var i = 0, len = gObj.sortSettings.columns.length; i < len; i++) {
                    if (columnName === gObj.sortSettings.columns[i].field) {
                        gObj.sortSettings.columns.splice(i, 1);
                        break;
                    }
                }
            }
            this.groupSettings.columns = columns;
            if (gObj.allowGrouping) {
                this.parent.dataBind();
            }
        };
        Group.prototype.updateModel = function () {
            var gObj = this.parent;
            var i = 0;
            var columns = JSON.parse(JSON.stringify(this.groupSettings.columns));
            columns.push(this.colName);
            this.groupSettings.columns = columns;
            while (i < gObj.sortSettings.columns.length) {
                if (gObj.sortSettings.columns[i].field === this.colName) {
                    break;
                }
                i++;
            }
            if (gObj.sortSettings.columns.length === i) {
                gObj.sortSettings.columns.push({ field: this.colName, direction: 'ascending' });
            }
            else if (!gObj.allowSorting) {
                gObj.sortSettings.columns[i].direction = 'ascending';
            }
            this.parent.dataBind();
        };
        Group.prototype.onActionComplete = function (e) {
            var gObj = this.parent;
            if (e.requestType === 'grouping') {
                this.addColToGroupDrop(this.colName);
            }
            else {
                this.removeColFromGroupDrop(this.colName);
            }
            var args = this.groupSettings.columns.indexOf(this.colName) > -1 ? {
                columnName: this.colName, requestType: 'grouping', type: events.actionComplete
            } : { requestType: 'ungrouping', type: events.actionComplete };
            this.parent.trigger(events.actionComplete, ej2_base_3.extend(e, args));
        };
        Group.prototype.addColToGroupDrop = function (field) {
            var gObj = this.parent;
            var direction = 'ascending';
            var groupedColumn = ej2_base_2.createElement('div', { className: 'e-grid-icon e-groupheadercell' });
            var childDiv = ej2_base_2.createElement('div', { attrs: { 'ej-mappingname': field } });
            var column = this.parent.getColumnByField(field);
            var headerCell = gObj.getColumnHeaderByUid(column.uid);
            childDiv.appendChild(ej2_base_2.createElement('span', {
                className: 'e-grouptext', innerHTML: column.headerText,
                attrs: { tabindex: '-1', 'aria-label': 'sort the grouped column' }
            }));
            if (this.groupSettings.showToggleButton) {
                childDiv.appendChild(ej2_base_2.createElement('span', {
                    className: 'e-togglegroupbutton e-icons e-icon-ungroup e-toggleungroup', innerHTML: '&nbsp;',
                    attrs: { tabindex: '-1', 'aria-label': 'ungroup button' }
                }));
            }
            if (headerCell.querySelectorAll('.e-ascending,.e-descending').length) {
                direction = headerCell.querySelector('.e-ascending') ? 'ascending' : 'descending';
            }
            childDiv.appendChild(ej2_base_2.createElement('span', {
                className: 'e-groupsort e-icons ' + ('e-' + direction + ' e-icon-' + direction), innerHTML: '&nbsp;',
                attrs: { tabindex: '-1', 'aria-label': 'sort the grouped column' }
            }));
            childDiv.appendChild(ej2_base_2.createElement('span', {
                className: 'e-ungroupbutton e-icons e-icon-hide', innerHTML: '&nbsp;',
                attrs: { title: this.l10n.getConstant('UnGroup'), tabindex: '-1', 'aria-label': 'ungroup the grouped column' },
                styles: this.groupSettings.showUngroupButton ? '' : 'display:none'
            }));
            groupedColumn.appendChild(childDiv);
            this.element.appendChild(groupedColumn);
        };
        Group.prototype.refreshToggleBtn = function (isRemove) {
            if (this.groupSettings.showToggleButton) {
                var headers = [].slice.call(this.parent.element.getElementsByClassName('e-headercelldiv'));
                for (var i = 0, len = headers.length; i < len; i++) {
                    if (!(headers[i].classList.contains('e-emptycell'))) {
                        var column = this.parent.getColumnByUid(headers[i].getAttribute('e-mappinguid'));
                        if (headers[i].querySelectorAll('.e-grptogglebtn').length) {
                            ej2_base_2.remove(headers[i].querySelectorAll('.e-grptogglebtn')[0]);
                        }
                        if (!isRemove) {
                            headers[i].appendChild(ej2_base_2.createElement('span', {
                                className: 'e-grptogglebtn e-icons ' +
                                    (this.groupSettings.columns.indexOf(column.field) > -1 ? 'e-toggleungroup e-icon-ungroup'
                                        : 'e-togglegroup e-icon-group'), attrs: { tabindex: '-1', 'aria-label': 'Group button' }
                            }));
                        }
                    }
                }
            }
        };
        Group.prototype.removeColFromGroupDrop = function (field) {
            ej2_base_2.remove(this.getGHeaderCell(field));
            this.updateGroupDropArea();
        };
        Group.prototype.onPropertyChanged = function (e) {
            if (e.module !== this.getModuleName()) {
                return;
            }
            for (var _i = 0, _a = Object.keys(e.properties); _i < _a.length; _i++) {
                var prop = _a[_i];
                switch (prop) {
                    case 'columns':
                        if (this.contentRefresh) {
                            var args = this.groupSettings.columns.indexOf(this.colName) > -1 ? {
                                columnName: this.colName, requestType: 'grouping', type: events.actionBegin
                            } : { requestType: 'ungrouping', type: events.actionBegin };
                            this.parent.notify(events.modelChanged, args);
                        }
                        break;
                    case 'showDropArea':
                        this.updateGroupDropArea();
                        this.groupSettings.showDropArea ? this.element.style.display = '' : this.element.style.display = 'none';
                        break;
                    case 'showGroupedColumn':
                        this.updateGroupedColumn(this.groupSettings.showGroupedColumn);
                        this.parent.notify(events.modelChanged, { requestType: 'refresh' });
                        break;
                    case 'showUngroupButton':
                        this.updateButtonVisibility(this.groupSettings.showUngroupButton, 'e-ungroupbutton');
                        break;
                    case 'showToggleButton':
                        this.updateButtonVisibility(this.groupSettings.showToggleButton, 'e-togglegroupbutton ');
                        this.parent.refreshHeader();
                        break;
                }
            }
        };
        Group.prototype.updateGroupedColumn = function (isVisible) {
            for (var i = 0; i < this.groupSettings.columns.length; i++) {
                this.parent.getColumnByField(this.groupSettings.columns[i]).visible = isVisible;
            }
        };
        Group.prototype.updateButtonVisibility = function (isVisible, className) {
            var gHeader = [].slice.call(this.element.querySelectorAll('.' + className));
            for (var i = 0; i < gHeader.length; i++) {
                gHeader[i].style.display = isVisible ? '' : 'none';
            }
        };
        Group.prototype.enableAfterRender = function (e) {
            if (e.module === this.getModuleName() && e.enable) {
                this.render();
            }
        };
        Group.prototype.destroy = function () {
            this.clearGrouping();
            this.removeEventListener();
            this.refreshToggleBtn(true);
            ej2_base_2.remove(this.element);
        };
        Group.prototype.clearGrouping = function () {
            var cols = JSON.parse(JSON.stringify(this.groupSettings.columns));
            this.contentRefresh = false;
            for (var i = 0, len = cols.length; i < len; i++) {
                this.ungroupColumn(cols[i]);
            }
            this.contentRefresh = true;
        };
        Group.prototype.getModuleName = function () {
            return 'group';
        };
        Group.prototype.refreshSortIcons = function (e) {
            var gObj = this.parent;
            var header;
            var cols = gObj.sortSettings.columns;
            var gCols = gObj.groupSettings.columns;
            var fieldNames = this.parent.getColumns().map(function (c) { return c.field; });
            this.refreshToggleBtn();
            for (var i = 0, len = cols.length; i < len; i++) {
                if (fieldNames.indexOf(cols[i].field) === -1) {
                    continue;
                }
                header = gObj.getColumnHeaderByField(cols[i].field);
                if (!gObj.allowSorting && (this.sortedColumns.indexOf(cols[i].field) > -1 ||
                    this.groupSettings.columns.indexOf(cols[i].field) > -1)) {
                    ej2_base_2.classList(header.querySelector('.e-sortfilterdiv'), ['e-ascending', 'e-icon-ascending'], []);
                    if (cols.length > 1) {
                        header.querySelector('.e-headercelldiv').appendChild(ej2_base_2.createElement('span', { className: 'e-sortnumber', innerHTML: (i + 1).toString() }));
                    }
                }
                else if (this.getGHeaderCell(cols[i].field) && this.getGHeaderCell(cols[i].field).querySelectorAll('.e-groupsort').length) {
                    if (cols[i].direction === 'ascending') {
                        ej2_base_2.classList(this.getGHeaderCell(cols[i].field).querySelector('.e-groupsort'), ['e-ascending', 'e-icon-ascending'], ['e-descending', 'e-icon-descending']);
                    }
                    else {
                        ej2_base_2.classList(this.getGHeaderCell(cols[i].field).querySelector('.e-groupsort'), ['e-descending', 'e-icon-descending'], ['e-ascending', 'e-icon-ascending']);
                    }
                }
            }
            for (var i = 0, len = gCols.length; i < len; i++) {
                if (fieldNames.indexOf(gCols[i]) === -1) {
                    continue;
                }
                gObj.getColumnHeaderByField(gCols[i]).setAttribute('aria-grouped', 'true');
            }
        };
        Group.prototype.getGHeaderCell = function (field) {
            if (this.element && this.element.querySelector('[ej-mappingname=' + field + ']')) {
                return this.element.querySelector('[ej-mappingname=' + field + ']').parentElement;
            }
            return null;
        };
        return Group;
    }());
    exports.Group = Group;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(74), __webpack_require__(288), __webpack_require__(73), __webpack_require__(2), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, pager_1, pager_dropdown_1, external_message_1, util_1, events) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    pager_1.Pager.Inject(external_message_1.ExternalMessage, pager_dropdown_1.PagerDropDown);
    var Page = (function () {
        function Page(parent, pageSettings) {
            this.parent = parent;
            this.pageSettings = pageSettings;
            this.addEventListener();
        }
        Page.prototype.getModuleName = function () {
            return 'pager';
        };
        Page.prototype.render = function () {
            var gObj = this.parent;
            var pagerObj;
            this.element = ej2_base_2.createElement('div', { className: 'e-gridpager' });
            pagerObj = util_1.extend({}, ej2_base_1.extend({}, util_1.getActualProperties(this.pageSettings)), {
                click: this.clickHandler.bind(this),
                dropDownChanged: this.onSelect.bind(this),
                enableRtl: gObj.enableRtl, locale: gObj.locale,
                created: this.addAriaAttr.bind(this)
            }, ['parentObj', 'propName']);
            this.pagerObj = new pager_1.Pager(pagerObj);
        };
        Page.prototype.onSelect = function (e) {
            this.pageSettings.pageSize = e.pageSize;
            this.pageSettings.currentPage = 1;
        };
        Page.prototype.addAriaAttr = function () {
            var _this = this;
            var numericContainer = this.element.querySelector('.e-numericcontainer');
            var links = numericContainer.querySelectorAll('a');
            for (var i = 0; i < links.length; i++) {
                if (this.parent.getContentTable()) {
                    links[i].setAttribute('aria-owns', this.parent.getContentTable().id);
                }
            }
            var classList = ['.e-mfirst', '.e-mprev', '.e-first', '.e-prev', '.e-next', '.e-last', '.e-mnext', '.e-mlast'];
            classList.forEach(function (value) {
                var element = _this.element.querySelector(value);
                if (_this.parent.getContentTable()) {
                    element.setAttribute('aria-owns', _this.parent.getContentTable().id);
                }
            });
        };
        Page.prototype.dataReady = function (e) {
            this.updateModel(e);
        };
        Page.prototype.refresh = function () {
            this.pagerObj.refresh();
        };
        Page.prototype.goToPage = function (pageNo) {
            this.pagerObj.goToPage(pageNo);
        };
        Page.prototype.updateModel = function (e) {
            this.parent.pageSettings.totalRecordsCount = e.count;
            this.parent.dataBind();
        };
        Page.prototype.onActionComplete = function (e) {
            this.parent.trigger(events.actionComplete, ej2_base_1.extend(e, {
                currentPage: this.parent.pageSettings.currentPage, requestType: 'paging',
                type: events.actionComplete
            }));
        };
        Page.prototype.onPropertyChanged = function (e) {
            if (e.module !== this.getModuleName()) {
                return;
            }
            var newProp = e.properties;
            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
                var prop = _a[_i];
                this.pagerObj[prop] = newProp[prop];
            }
            this.pagerObj.dataBind();
        };
        Page.prototype.clickHandler = function (e) {
            var gObj = this.parent;
            if (this.isForceCancel || util_1.isActionPrevent(gObj)) {
                if (!this.isForceCancel) {
                    gObj.notify(events.preventBatch, { instance: this, handler: this.goToPage, arg1: e.currentPage });
                    this.pagerObj.currentPage = gObj.pageSettings.currentPage;
                    this.isForceCancel = true;
                }
                else {
                    this.isForceCancel = false;
                }
                e.cancel = true;
                return;
            }
            var prevPage = this.pageSettings.currentPage;
            this.pageSettings.currentPage = e.currentPage;
            this.parent.notify(events.modelChanged, {
                requestType: 'paging',
                previousPage: prevPage,
                currentPage: e.currentPage,
                type: events.actionBegin
            });
        };
        Page.prototype.keyPressHandler = function (e) {
            if (this.canSkipAction(e.action)) {
                return;
            }
            if (e.action in keyActions) {
                e.preventDefault();
                this.element.querySelector(keyActions[e.action]).click();
            }
        };
        Page.prototype.canSkipAction = function (action) {
            var page = {
                pageUp: function (el) { return el.scrollTop !== 0; },
                pageDown: function (el) { return !(el.scrollTop >= el.scrollHeight - el.clientHeight); }
            };
            var activeElement = document.activeElement;
            if (activeElement.classList.contains('e-content') &&
                activeElement.isEqualNode(this.parent.getContent().firstElementChild) && ['pageUp', 'pageDown'].indexOf(action) !== -1) {
                return page[action](this.parent.getContent().firstChild);
            }
            return false;
        };
        Page.prototype.updateExternalMessage = function (message) {
            if (!this.pagerObj.enableExternalMessage) {
                this.pagerObj.enableExternalMessage = true;
                this.pagerObj.dataBind();
            }
            this.pagerObj.externalMessage = message;
            this.pagerObj.dataBind();
        };
        Page.prototype.appendToElement = function (e) {
            this.parent.element.appendChild(this.element);
            this.parent.setGridPager(this.element);
            this.pagerObj.appendTo(this.element);
        };
        Page.prototype.enableAfterRender = function (e) {
            if (e.module === this.getModuleName() && e.enable) {
                this.render();
                this.appendToElement();
            }
        };
        Page.prototype.addEventListener = function () {
            this.handlers = {
                load: this.render,
                end: this.appendToElement,
                ready: this.dataReady,
                complete: this.onActionComplete,
                updateLayout: this.enableAfterRender,
                inboundChange: this.onPropertyChanged,
                keyPress: this.keyPressHandler
            };
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.initialLoad, this.handlers.load, this);
            this.parent.on(events.initialEnd, this.handlers.end, this);
            this.parent.on(events.dataReady, this.handlers.ready, this);
            this.parent.on(events.pageComplete, this.handlers.complete, this);
            this.parent.on(events.uiUpdate, this.handlers.updateLayout, this);
            this.parent.on(events.inBoundModelChanged, this.handlers.inboundChange, this);
            this.parent.on(events.keyPressed, this.handlers.keyPress, this);
        };
        Page.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.initialLoad, this.handlers.load);
            this.parent.off(events.initialEnd, this.handlers.end);
            this.parent.off(events.dataReady, this.handlers.ready);
            this.parent.off(events.pageComplete, this.handlers.complete);
            this.parent.off(events.uiUpdate, this.handlers.updateLayout);
            this.parent.off(events.inBoundModelChanged, this.handlers.inboundChange);
            this.parent.off(events.keyPressed, this.handlers.keyPress);
        };
        Page.prototype.destroy = function () {
            this.removeEventListener();
            this.pagerObj.destroy();
            ej2_base_2.remove(this.element);
        };
        return Page;
    }());
    exports.Page = Page;
    var keyActions = {
        pageUp: '.e-prev',
        pageDown: '.e-next',
        ctrlAltPageDown: '.e-last',
        ctrlAltPageUp: '.e-first',
        altPageUp: '.e-pp',
        altPageDown: '.e-np'
    };
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(3), __webpack_require__(41), __webpack_require__(41), __webpack_require__(41), __webpack_require__(41), __webpack_require__(41), __webpack_require__(41), __webpack_require__(115), __webpack_require__(69), __webpack_require__(54), __webpack_require__(0), __webpack_require__(7), __webpack_require__(14)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, events, ej2_pdf_1, ej2_pdf_2, ej2_pdf_3, ej2_pdf_4, ej2_pdf_5, ej2_pdf_6, export_helper_1, data_1, summary_model_generator_1, ej2_base_1, enum_1, ej2_data_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PdfExport = (function () {
        function PdfExport(parent) {
            this.hideColumnInclude = false;
            this.currentViewData = false;
            this.customDataSource = false;
            this.gridTheme = 'material';
            this.isGrouping = false;
            this.parent = parent;
            this.data = new data_1.Data(parent);
            if (this.parent.isDestroyed) {
                return;
            }
        }
        PdfExport.prototype.getModuleName = function () {
            return 'PdfExport';
        };
        PdfExport.prototype.init = function (parent) {
            this.exportValueFormatter = new export_helper_1.ExportValueFormatter();
            this.pdfDocument = undefined;
            this.hideColumnInclude = false;
            this.currentViewData = false;
            this.parent = parent;
            var gObj = parent;
            this.gridTheme = 'material';
            this.isGrouping = false;
            this.isExporting = true;
            gObj.trigger(events.beforePdfExport);
        };
        PdfExport.prototype.Map = function (parent, pdfExportProperties, isMultipleExport, pdfDoc) {
            var _this = this;
            this.data = new data_1.Data(this.parent);
            if (pdfExportProperties !== undefined && pdfExportProperties.dataSource !== undefined && pdfExportProperties.dataSource instanceof ej2_data_1.DataManager) {
                var promise = void 0;
                return promise = new Promise(function (resolve, reject) {
                    new ej2_data_1.DataManager({ url: pdfExportProperties.dataSource.dataSource.url, adaptor: pdfExportProperties.dataSource.adaptor }).executeQuery(new ej2_data_1.Query()).then(function (returnType) {
                        _this.init(parent);
                        if (pdfDoc !== undefined) {
                            _this.pdfDocument = pdfDoc;
                        }
                        else {
                            _this.pdfDocument = new ej2_pdf_1.PdfDocument();
                        }
                        _this.processExport(parent, returnType, pdfExportProperties, isMultipleExport);
                        _this.isExporting = false;
                        parent.trigger(events.pdfExportComplete);
                        resolve(_this.pdfDocument);
                    });
                });
            }
            else {
                var promise = void 0;
                return promise = new Promise(function (resolve, reject) {
                    var dataManager = _this.data.getData({}, _this.data.generateQuery(true).requiresCount());
                    dataManager.then(function (returnType) {
                        _this.init(parent);
                        if (pdfDoc !== undefined) {
                            _this.pdfDocument = pdfDoc;
                        }
                        else {
                            _this.pdfDocument = new ej2_pdf_1.PdfDocument();
                        }
                        _this.processExport(parent, returnType, pdfExportProperties, isMultipleExport);
                        _this.isExporting = false;
                        parent.trigger(events.pdfExportComplete);
                        resolve(_this.pdfDocument);
                    });
                });
            }
        };
        PdfExport.prototype.processExport = function (gObj, returnType, pdfExportProperties, isMultipleExport) {
            var columns = gObj.columns;
            var dataSource = returnType.result;
            var section = this.pdfDocument.sections.add();
            var result = this.processExportProperties(pdfExportProperties, dataSource, section);
            dataSource = result.dataSource;
            if (dataSource.GroupGuid !== undefined) {
                this.isGrouping = true;
            }
            section = result.section;
            var pdfPage = section.pages.add();
            var pdfGrid = new ej2_pdf_1.PdfGrid();
            var headerThemeStyle = this.getHeaderThemeStyle();
            var border = headerThemeStyle.border;
            var headerFont = headerThemeStyle.font;
            var headerBrush = headerThemeStyle.brush;
            var returnValue = (new export_helper_1.ExportHelper(this.parent)).getHeaders(columns, this.hideColumnInclude);
            var rows = returnValue.rows;
            var gridColumns = returnValue.columns;
            pdfGrid = this.processGridHeaders(dataSource.childLevels, pdfGrid, rows, gridColumns, border, headerFont, headerBrush);
            this.setColumnProperties(gridColumns, pdfGrid);
            var captionThemeStyle = this.getSummaryCaptionThemeStyle();
            if (dataSource !== undefined && dataSource !== null && dataSource.length > 0) {
                if (this.isGrouping) {
                    this.processGroupedRecords(pdfGrid, dataSource, gridColumns, gObj, border, 0, captionThemeStyle.font, captionThemeStyle.brush, captionThemeStyle.backgroundBrush, returnType);
                }
                else {
                    this.processRecord(border, gridColumns, gObj, dataSource, pdfGrid);
                }
                if (returnType.aggregates !== undefined) {
                    var summaryModel = new summary_model_generator_1.SummaryModelGenerator(gObj);
                    var sRows = void 0;
                    if (this.customDataSource) {
                        sRows = summaryModel.generateRows(dataSource, returnType.aggregates);
                    }
                    else if (this.currentViewData) {
                        sRows = summaryModel.generateRows(this.parent.getCurrentViewRecords(), returnType.aggregates);
                    }
                    else if (this.isGrouping) {
                        sRows = summaryModel.generateRows(dataSource.records, returnType.aggregates);
                    }
                    else {
                        sRows = summaryModel.generateRows(returnType.result, returnType.aggregates);
                    }
                    this.processAggregates(sRows, pdfGrid, border, captionThemeStyle.font, captionThemeStyle.brush, captionThemeStyle.backgroundBrush, false);
                }
            }
            else {
                var row = pdfGrid.rows.addRow();
                row.style.setBorder(border);
            }
            pdfGrid.draw(pdfPage, 20, 20);
            if (!isMultipleExport) {
                this.pdfDocument.save('Export.pdf');
            }
        };
        PdfExport.prototype.getSummaryCaptionThemeStyle = function () {
            switch (this.gridTheme) {
                case 'bootstrap':
                    return { font: new ej2_pdf_2.PdfStandardFont(ej2_pdf_2.PdfFontFamily.Helvetica, 10.5), brush: new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(51, 51, 51)), backgroundBrush: new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(255, 255, 255)) };
                case 'fabric':
                    return { font: new ej2_pdf_2.PdfStandardFont(ej2_pdf_2.PdfFontFamily.Helvetica, 10.5), brush: new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(51, 51, 51)), backgroundBrush: new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(246, 246, 246)) };
                default:
                    return { font: new ej2_pdf_2.PdfStandardFont(ej2_pdf_2.PdfFontFamily.Helvetica, 9.75), brush: new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(0, 0, 0)), backgroundBrush: new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(246, 246, 246)) };
            }
        };
        PdfExport.prototype.getHeaderThemeStyle = function () {
            var border = new ej2_pdf_1.PdfBorders();
            switch (this.gridTheme) {
                case 'bootstrap':
                    border.all = new ej2_pdf_1.PdfPen(new ej2_pdf_3.PdfColor(221, 221, 221));
                    return { border: border, font: new ej2_pdf_2.PdfStandardFont(ej2_pdf_2.PdfFontFamily.Helvetica, 10.5), brush: new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(51, 51, 51)) };
                case 'fabric':
                    border.all = new ej2_pdf_1.PdfPen(new ej2_pdf_3.PdfColor(224, 224, 224));
                    return { border: border, font: new ej2_pdf_2.PdfStandardFont(ej2_pdf_2.PdfFontFamily.Helvetica, 9), brush: new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(0, 0, 0.54)) };
                default:
                    border.all = new ej2_pdf_1.PdfPen(new ej2_pdf_3.PdfColor(234, 234, 234));
                    return { border: border, font: new ej2_pdf_2.PdfStandardFont(ej2_pdf_2.PdfFontFamily.Helvetica, 10.5), brush: new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(102, 102, 102)) };
            }
        };
        PdfExport.prototype.processGroupedRecords = function (pdfGrid, dataSource, gridColumns, gObj, border, level, font, brush, backgroundBrush, returnType) {
            var groupIndex = level;
            for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {
                var dataSourceItems = dataSource_1[_i];
                var row = pdfGrid.rows.addRow();
                var args = {
                    value: dataSourceItems.key,
                    column: gObj.getColumnByField(dataSourceItems.field),
                    style: undefined
                };
                var value = dataSourceItems.field + ': ' + this.exportValueFormatter.formatCellValue(args) + ' - ' + dataSourceItems.count + (dataSource.count > 1 ? ' items' : ' item');
                row.cells.getCell(groupIndex).value = value;
                row.style.setBorder(border);
                row.style.setFont(font);
                row.style.setTextBrush(brush);
                row.style.setBackgroundBrush(backgroundBrush);
                var sRows = void 0;
                var captionSummaryModel = new summary_model_generator_1.CaptionSummaryModelGenerator(gObj);
                if (dataSourceItems.items.records !== undefined) {
                    sRows = captionSummaryModel.generateRows(dataSourceItems.items.records, returnType.aggregates);
                }
                else {
                    sRows = captionSummaryModel.generateRows(dataSourceItems.items, returnType.aggregates);
                }
                if (sRows !== undefined && sRows.length === 0) {
                    row.cells.getCell(groupIndex + 1).columnSpan = pdfGrid.columns.count - (groupIndex + 1);
                }
                if (dataSource.childLevels !== undefined && dataSource.childLevels > 0) {
                    this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, true, row, groupIndex);
                    this.processGroupedRecords(pdfGrid, dataSourceItems.items, gridColumns, gObj, border, (groupIndex + 1), font, brush, backgroundBrush, returnType);
                    var groupSummaryModel = new summary_model_generator_1.GroupSummaryModelGenerator(gObj);
                    sRows = groupSummaryModel.generateRows(dataSourceItems.items.records, returnType.aggregates);
                    this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, false);
                }
                else {
                    this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, true, row, groupIndex);
                    this.processRecord(border, gridColumns, gObj, dataSourceItems.items, pdfGrid, (groupIndex + 1));
                    var groupSummaryModel = new summary_model_generator_1.GroupSummaryModelGenerator(gObj);
                    sRows = groupSummaryModel.generateRows(dataSourceItems.items, returnType.aggregates);
                    this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, false);
                }
            }
        };
        PdfExport.prototype.processGridHeaders = function (childLevels, pdfGrid, rows, gridColumns, border, headerFont, headerBrush) {
            var columnCount = gridColumns.length;
            if (this.isGrouping) {
                columnCount += (childLevels + 1);
            }
            pdfGrid.columns.add(columnCount);
            if (this.isGrouping) {
                for (var i = 0; i < (childLevels + 1); i++) {
                    pdfGrid.columns.getColumn(i).width = 20;
                }
            }
            pdfGrid.headers.add(rows.length);
            for (var i = 0; i < rows.length; i++) {
                var gridHeader = pdfGrid.headers.getHeader(i);
                gridHeader.style.setBorder(border);
                gridHeader.style.setFont(headerFont);
                gridHeader.style.setTextBrush(headerBrush);
                var cellIndex = this.isGrouping ? (childLevels + 1) : 0;
                if (rows[i].cells.length === 0) {
                    for (var j = 0; j < gridHeader.cells.count; j++) {
                        var cell = gridHeader.cells.getCell(j);
                        cell.value = '';
                    }
                }
                else {
                    for (var j = 0; j < cellIndex; j++) {
                        var cell = gridHeader.cells.getCell(j);
                        cell.value = '';
                    }
                    for (var j = 0; j < rows[i].cells.length; j++) {
                        var cell = gridHeader.cells.getCell(cellIndex);
                        if (cell.value !== null) {
                            cell.value = rows[i].cells[j].column.headerText;
                            if (rows[i].cells[j].column.headerTextAlign !== undefined) {
                                cell.style.stringFormat = this.getHorizontalAlignment(rows[i].cells[j].column.headerTextAlign);
                            }
                            if (rows[i].cells[j].rowSpan !== undefined) {
                                cell.rowSpan = rows[i].cells[j].rowSpan;
                                cell.style.stringFormat = this.getVerticalAlignment('bottom', cell.style.stringFormat, rows[i].cells[j].column.textAlign);
                                for (var k = 1; k < rows[i].cells[j].rowSpan; k++) {
                                    pdfGrid.headers.getHeader(i + k).cells.getCell(cellIndex).value = null;
                                }
                            }
                            if (rows[i].cells[j].colSpan !== undefined) {
                                cell.columnSpan = rows[i].cells[j].colSpan;
                            }
                            cellIndex += cell.columnSpan;
                        }
                        else {
                            cell.value = '';
                            cellIndex += cell.columnSpan;
                            j = j - 1;
                        }
                    }
                }
            }
            if (pdfGrid.columns.count >= 6) {
                pdfGrid.style.allowHorizontalOverflow = true;
            }
            return pdfGrid;
        };
        PdfExport.prototype.processExportProperties = function (pdfExportProperties, dataSource, section) {
            if (pdfExportProperties !== undefined) {
                if (pdfExportProperties.theme !== undefined) {
                    this.gridTheme = pdfExportProperties.theme;
                }
                if (pdfExportProperties.pageOrientation !== undefined || pdfExportProperties.pageSize !== undefined) {
                    var pdfPageSettings = new ej2_pdf_6.PdfPageSettings();
                    pdfPageSettings.orientation = (pdfExportProperties.pageOrientation === 'Landscape') ? ej2_pdf_6.PdfPageOrientation.Landscape : ej2_pdf_6.PdfPageOrientation.Portrait;
                    pdfPageSettings.size = this.getPageSize(pdfExportProperties.pageSize);
                    section.setPageSettings(pdfPageSettings);
                }
                var clientSize = this.pdfDocument.pageSettings.size;
                if (pdfExportProperties.header !== undefined) {
                    var header = pdfExportProperties.header;
                    var position = new ej2_pdf_5.PointF(0, header.fromTop);
                    var size = new ej2_pdf_6.SizeF((clientSize.width - 80), (header.height * 0.75));
                    var bounds = new ej2_pdf_4.RectangleF(position, size);
                    this.pdfDocument.template.top = this.drawPageTemplate(new ej2_pdf_4.PdfPageTemplateElement(bounds), header);
                }
                if (pdfExportProperties.footer !== undefined) {
                    var footer = pdfExportProperties.footer;
                    var position = new ej2_pdf_5.PointF(0, ((clientSize.width - 80) - (footer.fromBottom * 0.75)));
                    var size = new ej2_pdf_6.SizeF((clientSize.width - 80), (footer.height * 0.75));
                    var bounds = new ej2_pdf_4.RectangleF(position, size);
                    this.pdfDocument.template.bottom = this.drawPageTemplate(new ej2_pdf_4.PdfPageTemplateElement(bounds), footer);
                }
                if (pdfExportProperties.includeHiddenColumn !== undefined && !this.isGrouping) {
                    this.hideColumnInclude = pdfExportProperties.includeHiddenColumn;
                }
                if (pdfExportProperties.dataSource !== undefined) {
                    if (!(pdfExportProperties.dataSource instanceof ej2_data_1.DataManager)) {
                        dataSource = pdfExportProperties.dataSource;
                    }
                    this.customDataSource = true;
                    this.currentViewData = false;
                }
                else if (pdfExportProperties.exportType !== undefined) {
                    if (pdfExportProperties.exportType === 'currentview') {
                        dataSource = this.parent.getCurrentViewRecords();
                        this.currentViewData = true;
                        this.customDataSource = false;
                    }
                    else {
                        this.currentViewData = false;
                        this.customDataSource = false;
                    }
                }
                else {
                    this.currentViewData = false;
                    this.customDataSource = false;
                }
            }
            else {
                this.currentViewData = false;
                this.customDataSource = false;
            }
            return { dataSource: dataSource, section: section };
        };
        PdfExport.prototype.drawPageTemplate = function (template, element) {
            for (var _i = 0, _a = element.contents; _i < _a.length; _i++) {
                var content = _a[_i];
                this.processContentValidation(content);
                switch (content.type) {
                    case 'text':
                        if (content.value === '' || content.value === undefined || content.value === null || typeof content.value !== 'string') {
                            throw new Error('please enter the valid input value in text content...');
                        }
                        this.drawText(template, content);
                        break;
                    case 'pageNumber':
                        this.drawPageNumber(template, content);
                        break;
                    case 'image':
                        if (content.src === undefined || content.src === null || content.src === '') {
                            throw new Error('please enter the valid base64 string in image content...');
                        }
                        this.drawImage(template, content);
                        break;
                    case 'line':
                        this.drawLine(template, content);
                        break;
                    default:
                        throw new Error('Please set valid content type...');
                }
            }
            return template;
        };
        PdfExport.prototype.processContentValidation = function (content) {
            if (content.type === '' || content.type === undefined || content.type === null) {
                throw new Error('please set valid content type...');
            }
            else {
                if (content.type === 'line') {
                    if (content.points === '' || content.points === undefined || content.points === null) {
                        throw new Error('please enter valid points in ' + content.type + ' content...');
                    }
                    else {
                        if (content.points.x1 === undefined || content.points.x1 === null || typeof content.points.x1 !== 'number') {
                            throw new Error('please enter valid x1 co-ordinate in ' + content.type + ' points...');
                        }
                        if (content.points.y1 === undefined || content.points.y1 === null || typeof content.points.y1 !== 'number') {
                            throw new Error('please enter valid y1 co-ordinate in ' + content.type + ' points...');
                        }
                        if (content.points.x2 === undefined || content.points.x2 === null || typeof content.points.x2 !== 'number') {
                            throw new Error('please enter valid x2 co-ordinate in ' + content.type + ' points...');
                        }
                        if (content.points.y2 === undefined || content.points.y2 === null || typeof content.points.y2 !== 'number') {
                            throw new Error('please enter valid y2 co-ordinate in ' + content.type + ' points...');
                        }
                    }
                }
                else {
                    if (content.position === '' || content.position === undefined || content.position === null) {
                        throw new Error('please enter valid position in ' + content.type + ' content...');
                    }
                    else {
                        if (content.position.x === undefined || content.position.x === null || typeof content.position.x !== 'number') {
                            throw new Error('please enter valid x co-ordinate in ' + content.type + ' position...');
                        }
                        if (content.position.y === undefined || content.position.y === null || typeof content.position.y !== 'number') {
                            throw new Error('please enter valid y co-ordinate in ' + content.type + ' position...');
                        }
                    }
                }
            }
        };
        PdfExport.prototype.drawText = function (pageTemplate, content) {
            var font = this.getFont(content);
            var brush = this.getBrushFromContent(content);
            var pen = null;
            if (content.style.textPenColor !== undefined) {
                var penColor = this.hexToRgb(content.style.textPenColor);
                pen = new ej2_pdf_1.PdfPen(new ej2_pdf_3.PdfColor(penColor.r, penColor.g, penColor.b));
            }
            if (brush == null && pen == null) {
                brush = new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(0, 0, 0));
            }
            var value = content.value.toString();
            var x = content.position.x * 0.75;
            var y = content.position.y * 0.75;
            var format;
            var result = this.setContentFormat(content, format);
            if (result !== null && result.format !== undefined && result.size !== undefined) {
                pageTemplate.graphics.drawString(value, font, pen, brush, x, y, result.size.width, result.size.height, result.format);
            }
            else {
                pageTemplate.graphics.drawString(value, font, pen, brush, x, y, format);
            }
        };
        PdfExport.prototype.drawPageNumber = function (documentHeader, content) {
            var font = this.getFont(content);
            var brush = null;
            if (content.style.textBrushColor !== undefined) {
                var brushColor = this.hexToRgb(content.style.textBrushColor);
                brush = new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(brushColor.r, brushColor.g, brushColor.b));
            }
            else {
                brush = new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(0, 0, 0));
            }
            var pageNumber = new ej2_pdf_5.PdfPageNumberField(font, brush);
            pageNumber.numberStyle = this.getPageNumberStyle(content.pageNumberType);
            var compositeField;
            var format;
            if (content.format !== undefined) {
                if (content.format.indexOf('$total') !== -1 && content.format.indexOf('$current') !== -1) {
                    var pageCount = new ej2_pdf_6.PdfPageCountField(font);
                    if (content.format.indexOf('$total') > content.format.indexOf('$current')) {
                        format = content.format.replace('$current', '0');
                        format = format.replace('$total', '1');
                    }
                    else {
                        format = content.format.replace('$current', '1');
                        format = format.replace('$total', '0');
                    }
                    compositeField = new ej2_pdf_5.PdfCompositeField(font, brush, format, pageNumber, pageCount);
                }
                else if (content.format.indexOf('$current') !== -1 && content.format.indexOf('$total') === -1) {
                    format = content.format.replace('$current', '0');
                    compositeField = new ej2_pdf_5.PdfCompositeField(font, brush, format, pageNumber);
                }
                else {
                    var pageCount = new ej2_pdf_6.PdfPageCountField(font);
                    format = content.format.replace('$total', '0');
                    compositeField = new ej2_pdf_5.PdfCompositeField(font, brush, format, pageCount);
                }
            }
            else {
                format = '{0}';
                compositeField = new ej2_pdf_5.PdfCompositeField(font, brush, format, pageNumber);
            }
            var x = content.position.x * 0.75;
            var y = content.position.y * 0.75;
            var result = this.setContentFormat(content, compositeField.stringFormat);
            if (result !== null && result.format !== undefined && result.size !== undefined) {
                compositeField.stringFormat = result.format;
                compositeField.bounds = new ej2_pdf_4.RectangleF(x, y, result.size.width, result.size.height);
            }
            compositeField.draw(documentHeader.graphics, x, y);
        };
        PdfExport.prototype.drawImage = function (documentHeader, content) {
            var x = content.position.x * 0.75;
            var y = content.position.y * 0.75;
            var width = (content.size !== undefined) ? (content.size.width * 0.75) : undefined;
            var height = (content.size !== undefined) ? (content.size.height * 0.75) : undefined;
            var image = new ej2_pdf_2.PdfBitmap(content.src);
            if (width !== undefined) {
                documentHeader.graphics.drawImage(image, x, y, width, height);
            }
            else {
                documentHeader.graphics.drawImage(image, x, y);
            }
        };
        PdfExport.prototype.drawLine = function (documentHeader, content) {
            var x1 = content.points.x1 * 0.75;
            var y1 = content.points.y1 * 0.75;
            var x2 = content.points.x2 * 0.75;
            var y2 = content.points.y2 * 0.75;
            var pen = this.getPenFromContent(content);
            if (content.style !== undefined && content.style !== null) {
                if (content.style.penSize !== undefined && content.style.penSize !== null && typeof content.style.penSize === 'number') {
                    pen.width = content.style.penSize * 0.75;
                }
                pen.dashStyle = this.getDashStyle(content.style.dashStyle);
            }
            documentHeader.graphics.drawLine(pen, x1, y1, x2, y2);
        };
        PdfExport.prototype.processAggregates = function (sRows, pdfGrid, border, font, brush, backgroundBrush, isCaption, captionRow, groupIndex) {
            for (var _i = 0, sRows_1 = sRows; _i < sRows_1.length; _i++) {
                var row = sRows_1[_i];
                var startIndex = 0;
                var leastCaptionSummaryIndex = -1;
                var index = 0;
                var isEmpty = true;
                var value = [];
                for (var i = 0; i < pdfGrid.columns.count; i++) {
                    var cell = row.cells[index];
                    if (!this.hideColumnInclude) {
                        while (cell.visible === undefined) {
                            if (captionRow !== undefined) {
                                if (captionRow.cells.getCell(i).value !== undefined) {
                                    value.push('');
                                    value.push(captionRow.cells.getCell(i).value);
                                    isEmpty = false;
                                    i += 1;
                                }
                                else {
                                    value.push('');
                                }
                            }
                            else {
                                value.push('');
                            }
                            i += 1;
                            index = index + 1;
                            cell = row.cells[index];
                        }
                        while (cell.visible !== undefined && !cell.visible) {
                            index = index + 1;
                            cell = row.cells[index];
                        }
                    }
                    if (cell.isDataCell) {
                        var templateFn = {};
                        if (cell.column.footerTemplate !== undefined || cell.column.groupCaptionTemplate !== undefined || cell.column.groupFooterTemplate !== undefined) {
                            var result = this.getTemplateFunction(templateFn, i, leastCaptionSummaryIndex, cell.column);
                            templateFn = result.templateFunction;
                            leastCaptionSummaryIndex = result.leastCaptionSummaryIndex;
                            var txt = (templateFn[ej2_base_1.getEnumValue(enum_1.CellType, cell.cellType)](row.data[cell.column.field]));
                            value.push(txt[0].wholeText);
                            isEmpty = false;
                        }
                        else {
                            var result = this.getSummaryWithoutTemplate(row.data[cell.column.field]);
                            if (result !== undefined) {
                                value.push(result);
                            }
                        }
                    }
                    else {
                        value.push('');
                    }
                    if (isEmpty && value[i] !== '' && value[i] !== undefined && value[i] !== null) {
                        isEmpty = false;
                    }
                    index += 1;
                }
                if (!isEmpty) {
                    if (!isCaption) {
                        var gridRow = pdfGrid.rows.addRow();
                        gridRow.style.setBorder(border);
                        gridRow.style.setFont(font);
                        gridRow.style.setTextBrush(brush);
                        gridRow.style.setBackgroundBrush(backgroundBrush);
                        for (var i = 0; i < pdfGrid.columns.count; i++) {
                            gridRow.cells.getCell(i).value = value[i].toString();
                        }
                    }
                    else {
                        for (var i = 0; i < pdfGrid.columns.count; i++) {
                            captionRow.cells.getCell(i).value = value[i].toString();
                            if (i === (groupIndex + 1) && leastCaptionSummaryIndex !== -1) {
                                captionRow.cells.getCell(i).columnSpan = leastCaptionSummaryIndex - (groupIndex + 1);
                            }
                            else if (i === (groupIndex + 1) && leastCaptionSummaryIndex === -1) {
                                captionRow.cells.getCell(i).columnSpan = pdfGrid.columns.count - (groupIndex + 1);
                            }
                        }
                    }
                }
            }
        };
        PdfExport.prototype.getTemplateFunction = function (templateFn, index, leastCaptionSummaryIndex, column) {
            if (column.footerTemplate !== undefined) {
                templateFn[ej2_base_1.getEnumValue(enum_1.CellType, enum_1.CellType.Summary)] = ej2_base_1.compile(column.footerTemplate);
            }
            else if (column.groupCaptionTemplate !== undefined) {
                if (leastCaptionSummaryIndex === -1) {
                    leastCaptionSummaryIndex = index;
                }
                templateFn[ej2_base_1.getEnumValue(enum_1.CellType, enum_1.CellType.CaptionSummary)] = ej2_base_1.compile(column.groupCaptionTemplate);
            }
            else {
                templateFn[ej2_base_1.getEnumValue(enum_1.CellType, enum_1.CellType.GroupSummary)] = ej2_base_1.compile(column.groupFooterTemplate);
            }
            return { templateFunction: templateFn, leastCaptionSummaryIndex: leastCaptionSummaryIndex };
        };
        PdfExport.prototype.getSummaryWithoutTemplate = function (data) {
            if (data.sum !== undefined) {
                return data.sum;
            }
            else if (data.average !== undefined) {
                return data.average;
            }
            else if (data.max !== undefined) {
                return data.max;
            }
            else if (data.min !== undefined) {
                return data.min;
            }
            else if (data.count !== undefined) {
                return data.count;
            }
            else if (data.truecount !== undefined) {
                return data.truecount;
            }
            else if (data.falsecount !== undefined) {
                return data.falsecount;
            }
            else if (data.custom !== undefined) {
                return data.custom;
            }
        };
        PdfExport.prototype.setColumnProperties = function (gridColumns, pdfGrid) {
            var startIndex = this.isGrouping ? (pdfGrid.columns.count - gridColumns.length) : 0;
            for (var i = 0; i < gridColumns.length; i++) {
                if (gridColumns[i].textAlign !== undefined) {
                    pdfGrid.columns.getColumn(i + startIndex).format = this.getHorizontalAlignment(gridColumns[i].textAlign);
                }
                if (pdfGrid.style.allowHorizontalOverflow && gridColumns[i].width !== undefined) {
                    pdfGrid.columns.getColumn(i + startIndex).width = (gridColumns[i].width * 0.75);
                }
            }
        };
        PdfExport.prototype.setRecordThemeStyle = function (row, border) {
            switch (this.gridTheme) {
                case 'bootstrap':
                    row.style.setTextBrush(new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(51, 51, 51)));
                    break;
                case 'fabric':
                    row.style.setTextBrush(new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(51, 51, 51)));
                    break;
                default:
                    row.style.setTextBrush(new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(0, 0, 0)));
            }
            row.style.setBorder(border);
            return row;
        };
        PdfExport.prototype.processRecord = function (border, columns, gObj, dataSource, pdfGrid, groupIndex) {
            var startIndex = this.isGrouping ? groupIndex : 0;
            for (var _i = 0, _a = dataSource; _i < _a.length; _i++) {
                var items = _a[_i];
                var gridRow = this.setRecordThemeStyle(pdfGrid.rows.addRow(), border);
                for (var j = 0; j < columns.length; j++) {
                    var value = items[columns[j].field];
                    var args = {
                        value: value,
                        column: columns[j],
                        style: undefined
                    };
                    gObj.trigger(events.pdfQueryCellInfo, args);
                    var cell = gridRow.cells.getCell(j + startIndex);
                    cell.value = this.exportValueFormatter.formatCellValue(args);
                    if (args.style !== undefined) {
                        this.processCellStyle(cell, args);
                    }
                }
            }
        };
        PdfExport.prototype.processCellStyle = function (cell, args) {
            if (args.style.backgroundColor !== undefined) {
                var backColor = this.hexToRgb(args.style.backgroundColor);
                cell.style.backgroundBrush = new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(backColor.r, backColor.g, backColor.b));
            }
            if (args.style.textAlignment !== undefined) {
                cell.style.stringFormat = this.getHorizontalAlignment(args.style.textAlignment);
            }
            if (args.style.verticalAlignment !== undefined) {
                cell.style.stringFormat = this.getVerticalAlignment(args.style.verticalAlignment, cell.style.stringFormat);
            }
            if (args.style.textBrushColor !== undefined) {
                var textBrushColor = this.hexToRgb(args.style.textBrushColor);
                cell.style.textBrush = new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));
            }
            if (args.style.textPenColor !== undefined) {
                cell.style.textPen = new ej2_pdf_1.PdfPen(new ej2_pdf_3.PdfColor(args.style.textPenColor.r, args.style.textPenColor.g, args.style.textPenColor.b));
            }
            if (args.style.fontFamily !== undefined || args.style.fontSize !== undefined || args.style.bold !== undefined || args.style.italic !== undefined || args.style.underline !== undefined || args.style.strikeout !== undefined) {
                cell.style.font = this.getFont(args);
            }
            if (args.style.border !== undefined) {
                var border = new ej2_pdf_1.PdfBorders();
                var borderWidth = args.style.border.width;
                var width = (borderWidth !== undefined && typeof borderWidth === 'number') ? (borderWidth * 0.75) : (undefined);
                var color = new ej2_pdf_3.PdfColor(196, 196, 196);
                if (args.style.border.color !== undefined) {
                    var borderColor = this.hexToRgb(args.style.border.color);
                    color = new ej2_pdf_3.PdfColor(borderColor.r, borderColor.g, borderColor.b);
                }
                var pen = new ej2_pdf_1.PdfPen(color, width);
                if (args.style.border.dashStyle !== undefined) {
                    pen.dashStyle = this.getDashStyle(args.style.border.dashStyle);
                }
                border.all = pen;
                cell.style.borders = border;
            }
        };
        PdfExport.prototype.getHorizontalAlignment = function (textAlign, format) {
            if (format === undefined) {
                format = new ej2_pdf_3.PdfStringFormat();
            }
            switch (textAlign) {
                case 'right':
                    format.alignment = ej2_pdf_3.PdfTextAlignment.Right;
                    break;
                case 'center':
                    format.alignment = ej2_pdf_3.PdfTextAlignment.Center;
                    break;
                case 'justify':
                    format.alignment = ej2_pdf_3.PdfTextAlignment.Justify;
                    break;
                case 'left':
                    format.alignment = ej2_pdf_3.PdfTextAlignment.Left;
                    break;
            }
            return format;
        };
        PdfExport.prototype.getVerticalAlignment = function (verticalAlign, format, textAlign) {
            if (format === undefined) {
                format = new ej2_pdf_3.PdfStringFormat();
                format = this.getHorizontalAlignment(textAlign, format);
            }
            switch (verticalAlign) {
                case 'bottom':
                    format.lineAlignment = ej2_pdf_4.PdfVerticalAlignment.Bottom;
                    break;
                case 'middle':
                    format.lineAlignment = ej2_pdf_4.PdfVerticalAlignment.Middle;
                    break;
                case 'top':
                    format.lineAlignment = ej2_pdf_4.PdfVerticalAlignment.Top;
                    break;
            }
            return format;
        };
        PdfExport.prototype.getFontFamily = function (fontFamily) {
            switch (fontFamily) {
                case 'TimesRoman':
                    return 2;
                case 'Courier':
                    return 1;
                case 'Symbol':
                    return 3;
                case 'ZapfDingbats':
                    return 4;
                default:
                    return 0;
            }
        };
        PdfExport.prototype.getFont = function (content) {
            var fontSize = (content.style.fontSize !== undefined) ? (content.style.fontSize * 0.75) : 9.75;
            var fontFamily = (content.style.fontFamily !== undefined) ? (this.getFontFamily(content.style.fontFamily)) : ej2_pdf_2.PdfFontFamily.Helvetica;
            var fontStyle = ej2_pdf_2.PdfFontStyle.Regular;
            if (content.style.bold !== undefined && content.style.bold) {
                fontStyle |= ej2_pdf_2.PdfFontStyle.Bold;
            }
            if (content.style.italic !== undefined && content.style.italic) {
                fontStyle |= ej2_pdf_2.PdfFontStyle.Italic;
            }
            if (content.style.underline !== undefined && content.style.underline) {
                fontStyle |= ej2_pdf_2.PdfFontStyle.Underline;
            }
            if (content.style.strikeout !== undefined && content.style.strikeout) {
                fontStyle |= ej2_pdf_2.PdfFontStyle.Strikeout;
            }
            return new ej2_pdf_2.PdfStandardFont(fontFamily, fontSize, fontStyle);
        };
        PdfExport.prototype.getPageNumberStyle = function (pageNumberType) {
            switch (pageNumberType) {
                case 'LowerLatin':
                    return 2;
                case 'LowerRoman':
                    return 3;
                case 'UpperLatin':
                    return 4;
                case 'UpperRoman':
                    return 5;
                default:
                    return 1;
            }
        };
        PdfExport.prototype.setContentFormat = function (content, format) {
            if (content.size !== undefined) {
                var width = content.size.width * 0.75;
                var height = content.size.height * 0.75;
                format = new ej2_pdf_3.PdfStringFormat(ej2_pdf_3.PdfTextAlignment.Left, ej2_pdf_4.PdfVerticalAlignment.Middle);
                if (content.style.hAlign !== undefined) {
                    switch (content.style.hAlign) {
                        case 'right':
                            format.alignment = ej2_pdf_3.PdfTextAlignment.Right;
                            break;
                        case 'center':
                            format.alignment = ej2_pdf_3.PdfTextAlignment.Center;
                            break;
                        case 'justify':
                            format.alignment = ej2_pdf_3.PdfTextAlignment.Justify;
                            break;
                        default:
                            format.alignment = ej2_pdf_3.PdfTextAlignment.Left;
                    }
                }
                if (content.style.vAlign !== undefined) {
                    format = this.getVerticalAlignment(content.style.vAlign, format);
                }
                return { format: format, size: new ej2_pdf_6.SizeF(width, height) };
            }
            return null;
        };
        PdfExport.prototype.getPageSize = function (pageSize) {
            switch (pageSize) {
                case 'Letter':
                    return new ej2_pdf_6.SizeF(612, 792);
                case 'Note':
                    return new ej2_pdf_6.SizeF(540, 720);
                case 'Legal':
                    return new ej2_pdf_6.SizeF(612, 1008);
                case 'A0':
                    return new ej2_pdf_6.SizeF(2380, 3368);
                case 'A1':
                    return new ej2_pdf_6.SizeF(1684, 2380);
                case 'A2':
                    return new ej2_pdf_6.SizeF(1190, 1684);
                case 'A3':
                    return new ej2_pdf_6.SizeF(842, 1190);
                case 'A5':
                    return new ej2_pdf_6.SizeF(421, 595);
                case 'A6':
                    return new ej2_pdf_6.SizeF(297, 421);
                case 'A7':
                    return new ej2_pdf_6.SizeF(210, 297);
                case 'A8':
                    return new ej2_pdf_6.SizeF(148, 210);
                case 'A9':
                    return new ej2_pdf_6.SizeF(105, 148);
                case 'B0':
                    return new ej2_pdf_6.SizeF(2836, 4008);
                case 'B1':
                    return new ej2_pdf_6.SizeF(2004, 2836);
                case 'B2':
                    return new ej2_pdf_6.SizeF(1418, 2004);
                case 'B3':
                    return new ej2_pdf_6.SizeF(1002, 1418);
                case 'B4':
                    return new ej2_pdf_6.SizeF(709, 1002);
                case 'B5':
                    return new ej2_pdf_6.SizeF(501, 709);
                case 'ArchA':
                    return new ej2_pdf_6.SizeF(648, 864);
                case 'ArchB':
                    return new ej2_pdf_6.SizeF(864, 1296);
                case 'ArchC':
                    return new ej2_pdf_6.SizeF(1296, 1728);
                case 'ArchD':
                    return new ej2_pdf_6.SizeF(1728, 2592);
                case 'ArchE':
                    return new ej2_pdf_6.SizeF(2592, 3456);
                case 'Flsa':
                    return new ej2_pdf_6.SizeF(612, 936);
                case 'HalfLetter':
                    return new ej2_pdf_6.SizeF(396, 612);
                case 'Letter11x17':
                    return new ej2_pdf_6.SizeF(792, 1224);
                case 'Ledger':
                    return new ej2_pdf_6.SizeF(1224, 792);
                default:
                    return new ej2_pdf_6.SizeF(595, 842);
            }
        };
        PdfExport.prototype.getDashStyle = function (dashStyle) {
            switch (dashStyle) {
                case 'Dash':
                    return 1;
                case 'Dot':
                    return 2;
                case 'DashDot':
                    return 3;
                case 'DashDotDot':
                    return 4;
                default:
                    return 0;
            }
        };
        PdfExport.prototype.getPenFromContent = function (content) {
            var pen = new ej2_pdf_1.PdfPen(new ej2_pdf_3.PdfColor(0, 0, 0));
            if (content.style !== undefined && content.style !== null && content.style.penColor !== undefined) {
                var penColor = this.hexToRgb(content.style.penColor);
                pen = new ej2_pdf_1.PdfPen(new ej2_pdf_3.PdfColor(penColor.r, penColor.g, penColor.b));
            }
            return pen;
        };
        PdfExport.prototype.getBrushFromContent = function (content) {
            var brush = null;
            if (content.style.textBrushColor !== undefined) {
                var brushColor = this.hexToRgb(content.style.textBrushColor);
                brush = new ej2_pdf_3.PdfSolidBrush(new ej2_pdf_3.PdfColor(brushColor.r, brushColor.g, brushColor.b));
            }
            return brush;
        };
        PdfExport.prototype.hexToRgb = function (hex) {
            if (hex === null || hex === '' || hex.length !== 7) {
                throw new Error('please set valid hex value for color...');
            }
            hex = hex.substring(1);
            var bigint = parseInt(hex, 16);
            var r = (bigint >> 16) & 255;
            var g = (bigint >> 8) & 255;
            var b = bigint & 255;
            return { r: r, g: g, b: b };
        };
        PdfExport.prototype.destroy = function () {
        };
        return PdfExport;
    }());
    exports.PdfExport = PdfExport;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(2), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, util_1, events) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Reorder = (function () {
        function Reorder(parent) {
            this.parent = parent;
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.headerDrop, this.headerDrop, this);
            this.parent.on(events.uiUpdate, this.enableAfterRender, this);
            this.parent.on(events.reorderComplete, this.onActionComplete, this);
            this.parent.on(events.columnDrag, this.drag, this);
            this.parent.on(events.columnDragStart, this.dragStart, this);
            this.parent.on(events.columnDragStop, this.dragStop, this);
            this.parent.on(events.headerDrop, this.headerDrop, this);
            this.parent.on(events.headerRefreshed, this.createReorderElement, this);
        }
        Reorder.prototype.chkDropPosition = function (srcElem, destElem) {
            return srcElem.parentElement.isEqualNode(destElem.parentElement) && this.targetParentContainerIndex(srcElem, destElem) > -1;
        };
        Reorder.prototype.chkDropAllCols = function (srcElem, destElem) {
            var isFound;
            var headers = [].slice.call(this.parent.element.getElementsByClassName('e-headercell'));
            var header;
            while (!isFound && headers.length > 0) {
                header = headers.pop();
                isFound = srcElem !== header && this.targetParentContainerIndex(srcElem, destElem) > -1;
            }
            return isFound;
        };
        Reorder.prototype.findColParent = function (col, cols, parent) {
            parent = parent;
            for (var i = 0, len = cols.length; i < len; i++) {
                if (col === cols[i]) {
                    return true;
                }
                else if (cols[i].columns) {
                    var cnt = parent.length;
                    parent.push(cols[i]);
                    if (!this.findColParent(col, cols[i].columns, parent)) {
                        parent.splice(cnt, parent.length - cnt);
                    }
                    else {
                        return true;
                    }
                }
            }
            return false;
        };
        Reorder.prototype.getColumnsModel = function (cols) {
            var columnModel = [];
            var subCols = [];
            for (var i = 0, len = cols.length; i < len; i++) {
                columnModel.push(cols[i]);
                if (cols[i].columns) {
                    subCols = subCols.concat(cols[i].columns);
                }
            }
            if (subCols.length) {
                columnModel = columnModel.concat(this.getColumnsModel(subCols));
            }
            return columnModel;
        };
        Reorder.prototype.headerDrop = function (e) {
            var gObj = this.parent;
            if (!ej2_base_2.closest(e.target, 'th')) {
                return;
            }
            var destElem = ej2_base_2.closest(e.target, '.e-headercell');
            if (destElem && !(!this.chkDropPosition(this.element, destElem) || !this.chkDropAllCols(this.element, destElem))) {
                var headers = [].slice.call(this.parent.element.getElementsByClassName('e-headercell'));
                var oldIdx = util_1.getElementIndex(this.element, headers);
                var columns = this.getColumnsModel(this.parent.columns);
                var column = columns[oldIdx];
                var newIndex = this.targetParentContainerIndex(this.element, destElem);
                this.moveColumns(newIndex, column);
            }
        };
        Reorder.prototype.isActionPrevent = function (gObj) {
            return util_1.isActionPrevent(gObj);
        };
        Reorder.prototype.moveColumns = function (destIndex, column) {
            var gObj = this.parent;
            if (this.isActionPrevent(gObj)) {
                gObj.notify(events.preventBatch, { instance: this, handler: this.moveColumns, arg1: destIndex, arg2: column });
                return;
            }
            var parent = this.getColParent(column, this.parent.columns);
            var cols = parent ? parent.columns : this.parent.columns;
            var srcIdx = util_1.inArray(column, cols);
            if (!gObj.allowReordering || srcIdx === destIndex || srcIdx === -1 || destIndex === -1) {
                return;
            }
            cols.splice(destIndex, 0, cols.splice(srcIdx, 1)[0]);
            gObj.getColumns(true);
            gObj.notify(events.columnPositionChanged, { fromIndex: destIndex, toIndex: srcIdx });
            gObj.notify(events.modelChanged, {
                type: events.actionBegin, requestType: 'reorder'
            });
        };
        Reorder.prototype.targetParentContainerIndex = function (srcElem, destElem) {
            var headers = [].slice.call(this.parent.element.getElementsByClassName('e-headercell'));
            var cols = this.parent.columns;
            var flatColumns = this.getColumnsModel(cols);
            var parent = this.getColParent(flatColumns[util_1.getElementIndex(srcElem, headers)], cols);
            cols = parent ? parent.columns : cols;
            return util_1.inArray(flatColumns[util_1.getElementIndex(destElem, headers)], cols);
        };
        Reorder.prototype.getColParent = function (column, columns) {
            var parents = [];
            this.findColParent(column, columns, parents);
            return parents[parents.length - 1];
        };
        Reorder.prototype.reorderColumns = function (fromFName, toFName) {
            var column = this.parent.getColumnByField(toFName);
            var parent = this.getColParent(column, this.parent.columns);
            var columns = parent ? parent.columns : this.parent.columns;
            var destIndex = util_1.inArray(column, columns);
            if (destIndex > -1) {
                this.moveColumns(destIndex, this.parent.getColumnByField(fromFName));
            }
        };
        Reorder.prototype.enableAfterRender = function (e) {
            if (e.module === this.getModuleName() && e.enable) {
                this.createReorderElement();
            }
        };
        Reorder.prototype.createReorderElement = function () {
            var header = this.parent.element.querySelector('.e-headercontent');
            this.upArrow = header.appendChild(ej2_base_2.createElement('div', { className: 'e-icons e-icon-reorderuparrow e-reorderuparrow', attrs: { style: 'display:none' } }));
            this.downArrow = header.appendChild(ej2_base_2.createElement('div', { className: 'e-icons e-icon-reorderdownarrow e-reorderdownarrow', attrs: { style: 'display:none' } }));
        };
        Reorder.prototype.onActionComplete = function (e) {
            this.parent.trigger(events.actionComplete, ej2_base_1.extend(e, { type: events.actionComplete }));
        };
        Reorder.prototype.destroy = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            ej2_base_2.remove(this.upArrow);
            ej2_base_2.remove(this.downArrow);
            this.parent.off(events.headerDrop, this.headerDrop);
            this.parent.off(events.uiUpdate, this.enableAfterRender);
            this.parent.off(events.reorderComplete, this.onActionComplete);
            this.parent.off(events.columnDrag, this.drag);
            this.parent.off(events.columnDragStart, this.dragStart);
            this.parent.off(events.columnDragStop, this.dragStop);
            this.parent.off(events.headerRefreshed, this.createReorderElement);
        };
        Reorder.prototype.drag = function (e) {
            var gObj = this.parent;
            var target = e.target;
            var closest = ej2_base_2.closest(target, '.e-headercell:not(.e-stackedHeaderCell)');
            var cloneElement = gObj.element.querySelector('.e-cloneproperties');
            var isLeft = this.x > util_1.getPosition(e.event).x + gObj.getContent().firstElementChild.scrollLeft;
            ej2_base_2.removeClass(gObj.getHeaderTable().querySelectorAll('.e-reorderindicate'), ['e-reorderindicate']);
            this.setDisplay('none');
            this.stopTimer();
            ej2_base_2.classList(cloneElement, ['e-defaultcur'], ['e-notallowedcur']);
            this.updateScrollPostion(e.event);
            if (closest && !closest.isEqualNode(this.element)) {
                target = closest;
                if (!(!this.chkDropPosition(this.element, target) || !this.chkDropAllCols(this.element, target))) {
                    this.updateArrowPosition(target, isLeft);
                    ej2_base_2.classList(target, ['e-allowDrop', 'e-reorderindicate'], []);
                }
                else if (!(gObj.allowGrouping && util_1.parentsUntil(e.target, 'e-groupdroparea'))) {
                    ej2_base_2.classList(cloneElement, ['e-notallowedcur'], ['e-defaultcur']);
                }
            }
            gObj.trigger(events.columnDrag, { target: target, draggableType: 'headercell', column: e.column });
        };
        Reorder.prototype.updateScrollPostion = function (e) {
            var _this = this;
            var x = util_1.getPosition(e).x;
            var cliRectBase = this.parent.element.getBoundingClientRect();
            var scrollElem = this.parent.getContent().firstElementChild;
            if (x > cliRectBase.left && x < cliRectBase.left + 35) {
                this.timer = window.setInterval(function () { _this.setScrollLeft(scrollElem, true); }, 50);
            }
            else if (x < cliRectBase.right && x > cliRectBase.right - 35) {
                this.timer = window.setInterval(function () { _this.setScrollLeft(scrollElem, false); }, 50);
            }
        };
        Reorder.prototype.setScrollLeft = function (scrollElem, isLeft) {
            var scrollLeft = scrollElem.scrollLeft;
            scrollElem.scrollLeft = scrollElem.scrollLeft + (isLeft ? -5 : 5);
            if (scrollLeft !== scrollElem.scrollLeft) {
                this.setDisplay('none');
            }
        };
        Reorder.prototype.stopTimer = function () {
            window.clearInterval(this.timer);
        };
        Reorder.prototype.updateArrowPosition = function (target, isLeft) {
            var cliRect = target.getBoundingClientRect();
            var cliRectBase = this.parent.element.getBoundingClientRect();
            if ((isLeft && cliRect.left < cliRectBase.left) || (!isLeft && cliRect.right > cliRectBase.right)) {
                return;
            }
            this.upArrow.style.top = cliRect.top + cliRect.height - cliRectBase.top + 'px';
            this.downArrow.style.top = cliRect.top - cliRectBase.top - 4 + 'px';
            this.upArrow.style.left = this.downArrow.style.left = (isLeft ? cliRect.left : cliRect.right) - cliRectBase.left - 4 + 'px';
            this.setDisplay('');
        };
        Reorder.prototype.dragStart = function (e) {
            var gObj = this.parent;
            var target = e.target;
            this.element = target.classList.contains('e-headercell') ? target :
                util_1.parentsUntil(target, 'e-headercell');
            this.x = util_1.getPosition(e.event).x + gObj.getContent().firstElementChild.scrollLeft;
            gObj.trigger(events.columnDragStart, {
                target: target, draggableType: 'headercell', column: e.column
            });
        };
        Reorder.prototype.dragStop = function (e) {
            var gObj = this.parent;
            this.setDisplay('none');
            this.stopTimer();
            if (!e.cancel) {
                gObj.trigger(events.columnDrop, { target: e.target, draggableType: 'headercell', column: e.column });
            }
            ej2_base_2.removeClass(gObj.getHeaderTable().querySelectorAll('.e-reorderindicate'), ['e-reorderindicate']);
        };
        Reorder.prototype.setDisplay = function (display) {
            this.upArrow.style.display = display;
            this.downArrow.style.display = display;
        };
        Reorder.prototype.getModuleName = function () {
            return 'reorder';
        };
        return Reorder;
    }());
    exports.Reorder = Reorder;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(121), __webpack_require__(3), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, width_controller_1, events, util_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.resizeClassList = {
        root: 'e-rhandler',
        suppress: 'e-rsuppress',
        icon: 'e-ricon',
        helper: 'e-rhelper',
        header: 'th.e-headercell',
        cursor: 'e-rcursor',
        lines: 'e-rlines'
    };
    var Resize = (function () {
        function Resize(parent) {
            this.tapped = false;
            this.isDblClk = true;
            this.parent = parent;
            if (this.parent.isDestroyed) {
                return;
            }
            this.widthService = new width_controller_1.ColumnWidthService(parent);
            this.addEventListener();
        }
        Resize.prototype.autoFitColumns = function (fName) {
            var columnName = (fName === undefined || fName === null || fName.length <= 0) ?
                this.parent.getColumns().map(function (x) { return x.field; }) : (typeof fName === 'string') ? [fName] : fName;
            this.findColumn(columnName);
        };
        Resize.prototype.resizeColumn = function (fName, index, id) {
            var gObj = this.parent;
            var tWidth = 0;
            var headerTable = this.parent.getHeaderTable();
            var contentTable = this.parent.getContentTable();
            var headerDivTag = 'e-gridheader';
            var contentDivTag = 'e-gridcontent';
            var indentWidthClone = gObj.getHeaderTable().querySelector('tr').querySelectorAll('.e-grouptopleftcell');
            var indentWidth = 0;
            if (indentWidthClone.length > 0) {
                for (var i = 0; i < indentWidthClone.length; i++) {
                    indentWidth += indentWidthClone[i].offsetWidth;
                }
            }
            var uid = id ? id : this.parent.getUidByColumnField(fName);
            var columnIndex = this.parent.getNormalizedColumnIndex(uid);
            var headerTextClone = headerTable.querySelectorAll('th')[columnIndex].cloneNode(true);
            var headerText = [headerTextClone];
            var contentTextClone = contentTable.querySelectorAll("td:nth-child(" + (columnIndex + 1) + ")");
            var contentText = [];
            for (var i = 0; i < contentTextClone.length; i++) {
                contentText[i] = contentTextClone[i].cloneNode(true);
            }
            var wHeader = this.createTable(headerTable, headerText, headerDivTag);
            var wContent = this.createTable(contentTable, contentText, contentDivTag);
            var columnbyindex = gObj.getColumns()[index];
            var result;
            var width = (wHeader > wContent) ? columnbyindex.width = ej2_base_1.formatUnit(wHeader) : columnbyindex.width = ej2_base_1.formatUnit(wContent);
            this.widthService.setColumnWidth(gObj.getColumns()[index]);
            if (!this.parent.allowResizing) {
                result = gObj.getColumns().some(function (x) { return x.width === null || x.width === undefined || x.width.length <= 0; });
                if (result === false) {
                    gObj.getColumns().forEach(function (element) {
                        if (element.visible) {
                            tWidth = tWidth + parseInt(element.width, 10);
                        }
                    });
                }
                var tableWidth_1 = tWidth + indentWidth;
                if (tWidth > 0) {
                    headerTable.style.width = ej2_base_1.formatUnit(tableWidth_1);
                    contentTable.style.width = ej2_base_1.formatUnit(tableWidth_1);
                }
            }
            var tableWidth = headerTable.offsetWidth;
            var contentwidth = (gObj.getContent().scrollWidth);
            if (contentwidth > tableWidth) {
                headerTable.classList.add('e-tableborder');
                contentTable.classList.add('e-tableborder');
            }
            else {
                headerTable.classList.remove('e-tableborder');
                contentTable.classList.remove('e-tableborder');
            }
        };
        Resize.prototype.destroy = function () {
            this.widthService = null;
            this.unwireEvents();
            this.removeEventListener();
        };
        Resize.prototype.getModuleName = function () {
            return 'resize';
        };
        Resize.prototype.findColumn = function (fName) {
            var _this = this;
            fName.forEach(function (element) {
                var fieldName = element;
                var columnIndex = _this.parent.getColumnIndexByField(fieldName);
                if (_this.parent.getColumns()[columnIndex].visible === true) {
                    _this.resizeColumn(fieldName, columnIndex);
                }
            });
        };
        Resize.prototype.createTable = function (table, text, tag) {
            var myTableDiv = ej2_base_1.createElement('div');
            myTableDiv.className = this.parent.element.className;
            myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';
            var mySubDiv = ej2_base_1.createElement('div');
            mySubDiv.className = tag;
            var myTable = ej2_base_1.createElement('table');
            myTable.className = table.className;
            myTable.style.cssText = 'table-layout: auto;width: auto';
            var myTr = ej2_base_1.createElement('tr');
            text.forEach(function (element) {
                var tr = myTr.cloneNode();
                tr.className = table.querySelector('tr').className;
                tr.appendChild(element);
                myTable.appendChild(tr);
            });
            mySubDiv.appendChild(myTable);
            myTableDiv.appendChild(mySubDiv);
            document.body.appendChild(myTableDiv);
            var offsetWidthValue = myTable.getBoundingClientRect().width;
            document.body.removeChild(myTableDiv);
            return Math.ceil(offsetWidthValue);
        };
        Resize.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.headerRefreshed, this.render, this);
        };
        Resize.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.headerRefreshed, this.render);
        };
        Resize.prototype.render = function () {
            this.wireEvents();
            if (!(this.parent.gridLines === 'vertical' || this.parent.gridLines === 'both')) {
                this.parent.element.classList.add(exports.resizeClassList.lines);
            }
            this.setHandlerHeight();
        };
        Resize.prototype.wireEvents = function () {
            var _this = this;
            this.getResizeHandlers().forEach(function (ele) {
                ele.style.height = ele.parentElement.offsetHeight + 'px';
                ej2_base_1.EventHandler.add(ele, ej2_base_1.Browser.touchStartEvent, _this.resizeStart, _this);
                ej2_base_1.EventHandler.add(ele, events.dblclick, _this.callAutoFit, _this);
            });
        };
        Resize.prototype.unwireEvents = function () {
            var _this = this;
            this.getResizeHandlers().forEach(function (ele) {
                ej2_base_1.EventHandler.remove(ele, ej2_base_1.Browser.touchStartEvent, _this.resizeStart);
                ej2_base_1.EventHandler.remove(ele, events.dblclick, _this.callAutoFit);
            });
        };
        Resize.prototype.getResizeHandlers = function () {
            return [].slice.call(this.parent.getHeaderTable().querySelectorAll('.' + exports.resizeClassList.root));
        };
        Resize.prototype.setHandlerHeight = function () {
            [].slice.call(this.parent.getHeaderTable().querySelectorAll('.' + exports.resizeClassList.suppress)).forEach(function (ele) {
                ele.style.height = ele.parentElement.offsetHeight + 'px';
            });
        };
        Resize.prototype.callAutoFit = function (e) {
            var col = this.getTargetColumn(e);
            this.resizeColumn(col.field, this.parent.getNormalizedColumnIndex(col.uid), col.uid);
        };
        Resize.prototype.resizeStart = function (e) {
            if (!this.helper) {
                this.element = e.target;
                this.appendHelper();
                this.column = this.getTargetColumn(e);
                this.pageX = this.getPointX(e);
                if (this.parent.enableRtl) {
                    this.minMove = parseInt(this.column.width.toString(), 10)
                        - (this.column.minWidth ? parseInt(this.column.minWidth.toString(), 10) : 0);
                }
                else {
                    this.minMove = (this.column.minWidth ? parseInt(this.column.minWidth.toString(), 10) : 0)
                        - parseInt(this.column.width.toString(), 10);
                }
                this.minMove += this.pageX;
            }
            if (ej2_base_1.Browser.isDevice && !this.helper.classList.contains(exports.resizeClassList.icon)) {
                this.helper.classList.add(exports.resizeClassList.icon);
                ej2_base_1.EventHandler.add(document, ej2_base_1.Browser.touchStartEvent, this.removeHelper, this);
                ej2_base_1.EventHandler.add(this.helper, ej2_base_1.Browser.touchStartEvent, this.resizeStart, this);
            }
            else {
                var args = {
                    e: e,
                    column: this.column
                };
                this.parent.trigger(events.resizeStart, args);
                if (args.cancel) {
                    this.cancelResizeAction();
                    return;
                }
                ej2_base_1.EventHandler.add(document, ej2_base_1.Browser.touchEndEvent, this.resizeEnd, this);
                ej2_base_1.EventHandler.add(this.parent.element, ej2_base_1.Browser.touchMoveEvent, this.resizing, this);
                this.updateCursor('add');
            }
        };
        Resize.prototype.cancelResizeAction = function (removeEvents) {
            if (removeEvents) {
                ej2_base_1.EventHandler.remove(this.parent.element, ej2_base_1.Browser.touchMoveEvent, this.resizing);
                ej2_base_1.EventHandler.remove(document, ej2_base_1.Browser.touchEndEvent, this.resizeEnd);
                this.updateCursor('remove');
            }
            if (ej2_base_1.Browser.isDevice) {
                ej2_base_1.EventHandler.remove(document, ej2_base_1.Browser.touchStartEvent, this.removeHelper);
                ej2_base_1.EventHandler.remove(this.helper, ej2_base_1.Browser.touchStartEvent, this.resizeStart);
            }
            ej2_base_1.detach(this.helper);
            this.refresh();
        };
        Resize.prototype.getWidth = function (width, minWidth, maxWidth) {
            if (minWidth && width < minWidth) {
                return minWidth;
            }
            else if ((maxWidth && width > maxWidth)) {
                return maxWidth;
            }
            else {
                return width;
            }
        };
        Resize.prototype.resizing = function (e) {
            var pageX = this.getPointX(e);
            var mousemove = this.parent.enableRtl ? -(pageX - this.pageX) : (pageX - this.pageX);
            var colData = {
                width: parseInt(this.widthService.getWidth(this.column).toString(), 10) + mousemove,
                minWidth: this.column.minWidth ? parseInt(this.column.minWidth.toString(), 10) : null,
                maxWidth: this.column.maxWidth ? parseInt(this.column.maxWidth.toString(), 10) : null
            };
            var width = this.getWidth(colData.width, colData.minWidth, colData.maxWidth);
            if ((!this.parent.enableRtl && this.minMove >= pageX) || (this.parent.enableRtl && this.minMove <= pageX)) {
                width = this.column.minWidth ? parseInt(this.column.minWidth.toString(), 10) : 0;
                this.pageX = pageX = this.minMove;
            }
            if (width !== parseInt(this.column.width.toString(), 10)) {
                this.pageX = pageX;
                this.column.width = ej2_base_1.formatUnit(width);
                var args = {
                    e: e,
                    column: this.column
                };
                this.parent.trigger(events.onResize, args);
                if (args.cancel) {
                    this.cancelResizeAction(true);
                    return;
                }
                this.updateColGroup(this.column);
                this.widthService.setColumnWidth(this.column, null, 'resize');
                this.updateHelper();
            }
            this.isDblClk = false;
        };
        Resize.prototype.resizeEnd = function (e) {
            if (!this.helper) {
                return;
            }
            ej2_base_1.EventHandler.remove(this.parent.element, ej2_base_1.Browser.touchMoveEvent, this.resizing);
            ej2_base_1.EventHandler.remove(document, ej2_base_1.Browser.touchEndEvent, this.resizeEnd);
            this.updateCursor('remove');
            ej2_base_1.detach(this.helper);
            var args = {
                e: e,
                column: this.column
            };
            this.parent.trigger(events.resizeStop, args);
            this.refresh();
            this.doubleTapEvent(e);
            this.isDblClk = true;
        };
        Resize.prototype.getPointX = function (e) {
            if (e.touches && e.touches.length) {
                return e.touches[0].pageX;
            }
            else {
                return e.pageX;
            }
        };
        Resize.prototype.updateColGroup = function (column) {
            for (var _i = 0, _a = this.parent.getColumns(); _i < _a.length; _i++) {
                var col = _a[_i];
                if (col.uid === column.uid) {
                    col.width = column.width;
                    break;
                }
            }
        };
        Resize.prototype.getTargetColumn = function (e) {
            var cell = ej2_base_1.closest(e.target, exports.resizeClassList.header);
            var uid = cell.querySelector('.e-headercelldiv').getAttribute('e-mappinguid');
            return this.parent.getColumnByUid(uid);
        };
        Resize.prototype.updateCursor = function (action) {
            var headerRows = [].slice.call(this.parent.getHeaderContent().querySelectorAll('th'));
            headerRows.push(this.parent.element);
            for (var _i = 0, headerRows_1 = headerRows; _i < headerRows_1.length; _i++) {
                var row = headerRows_1[_i];
                row.classList[action](exports.resizeClassList.cursor);
            }
        };
        Resize.prototype.refresh = function () {
            this.column = null;
            this.pageX = null;
            this.element = null;
            this.helper = null;
        };
        Resize.prototype.appendHelper = function () {
            this.helper = ej2_base_1.createElement('div', {
                className: exports.resizeClassList.helper
            });
            this.parent.element.appendChild(this.helper);
            var height = this.parent.getContent().offsetHeight - this.getScrollBarWidth();
            var rect = ej2_base_1.closest(this.element, exports.resizeClassList.header);
            var tr = [].slice.call(this.parent.getHeaderTable().querySelectorAll('tr'));
            for (var i = tr.indexOf(rect.parentElement); i < tr.length; i++) {
                height += tr[i].offsetHeight;
            }
            var pos = this.calcPos(rect);
            pos.left += (this.parent.enableRtl ? 0 - 1 : rect.offsetWidth - 2);
            this.helper.style.cssText = 'height: ' + height + 'px; top: ' + pos.top + 'px; left:' + Math.floor(pos.left) + 'px;';
        };
        Resize.prototype.getScrollBarWidth = function () {
            var ele = this.parent.getContent().firstChild;
            return ele.scrollWidth > ele.clientWidth ? util_1.getScrollBarWidth() : 0;
        };
        Resize.prototype.removeHelper = function (e) {
            var cls = e.target.classList;
            if (!(cls.contains(exports.resizeClassList.root) || cls.contains(exports.resizeClassList.icon)) && this.helper) {
                ej2_base_1.EventHandler.remove(document, ej2_base_1.Browser.touchStartEvent, this.removeHelper);
                ej2_base_1.EventHandler.remove(this.helper, ej2_base_1.Browser.touchStartEvent, this.resizeStart);
                ej2_base_1.detach(this.helper);
                this.refresh();
            }
        };
        Resize.prototype.updateHelper = function () {
            var rect = ej2_base_1.closest(this.element, exports.resizeClassList.header);
            this.helper.style.left = Math.floor(this.calcPos(rect).left + (this.parent.enableRtl ? 0 - 1 : rect.offsetWidth - 2)) + 'px';
        };
        Resize.prototype.calcPos = function (elem) {
            var parentOffset = {
                top: 0,
                left: 0
            };
            var offset = elem.getBoundingClientRect();
            var doc = elem.ownerDocument;
            var offsetParent = elem.offsetParent || doc.documentElement;
            while (offsetParent &&
                (offsetParent === doc.body || offsetParent === doc.documentElement) &&
                offsetParent.style.position === 'static') {
                offsetParent = offsetParent.parentNode;
            }
            if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {
                parentOffset = offsetParent.getBoundingClientRect();
            }
            return {
                top: offset.top - parentOffset.top,
                left: offset.left - parentOffset.left
            };
        };
        Resize.prototype.doubleTapEvent = function (e) {
            if (this.getUserAgent() && this.isDblClk) {
                if (!this.tapped) {
                    this.tapped = setTimeout(this.timeoutHandler(), 300);
                }
                else {
                    clearTimeout(this.tapped);
                    this.callAutoFit(e);
                    this.tapped = null;
                }
            }
        };
        Resize.prototype.getUserAgent = function () {
            var userAgent = ej2_base_1.Browser.userAgent.toLowerCase();
            return /iphone|ipod|ipad/.test(userAgent);
        };
        Resize.prototype.timeoutHandler = function () {
            this.tapped = null;
        };
        return Resize;
    }());
    exports.Resize = Resize;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(2), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, util_1, events) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var RowDD = (function () {
        function RowDD(parent) {
            var _this = this;
            this.selectedRows = [];
            this.helper = function (e) {
                var gObj = _this.parent;
                if (document.getElementsByClassName('e-griddragarea').length ||
                    !e.sender.target.classList.contains('e-selectionbackground')) {
                    return false;
                }
                var visualElement = ej2_base_3.createElement('div', {
                    className: 'e-cloneproperties e-draganddrop e-grid e-dragclone',
                    styles: 'height:"auto", z-index:2, width:' + gObj.element.offsetWidth
                });
                var table = ej2_base_3.createElement('table', { styles: 'width:' + gObj.element.offsetWidth });
                var tbody = ej2_base_3.createElement('tbody');
                var selectedRows = gObj.getSelectedRows();
                for (var i = 0, len = selectedRows.length; i < len; i++) {
                    var selectedRow = selectedRows[i].cloneNode(true);
                    util_1.removeElement(selectedRow, '.e-indentcell');
                    util_1.removeElement(selectedRow, '.e-detailrowcollapse');
                    util_1.removeElement(selectedRow, '.e-detailrowexpand');
                    tbody.appendChild(selectedRow);
                }
                table.appendChild(tbody);
                visualElement.appendChild(table);
                gObj.element.appendChild(visualElement);
                return visualElement;
            };
            this.dragStart = function (e) {
                var gObj = _this.parent;
                if (document.getElementsByClassName('e-griddragarea').length) {
                    return;
                }
                gObj.trigger(events.rowDragStart, {
                    rows: gObj.getSelectedRows(),
                    target: e.target, draggableType: 'rows', data: gObj.getSelectedRecords()
                });
                var dropElem = document.getElementById(gObj.rowDropSettings.targetID);
                if (gObj.rowDropSettings.targetID && dropElem && dropElem.ej2_instances) {
                    dropElem.ej2_instances[0].getContent().classList.add('e-allowRowDrop');
                }
                _this.isDragStop = false;
            };
            this.drag = function (e) {
                var gObj = _this.parent;
                var cloneElement = _this.parent.element.querySelector('.e-cloneproperties');
                var target = _this.getElementFromPosition(cloneElement, e.event);
                ej2_base_3.classList(cloneElement, ['e-defaultcur'], ['e-notallowedcur']);
                gObj.trigger(events.rowDrag, {
                    rows: gObj.getSelectedRows(),
                    target: target, draggableType: 'rows', data: gObj.getSelectedRecords()
                });
                gObj.element.classList.add('e-rowdrag');
                if (!util_1.parentsUntil(target, 'e-gridcontent') ||
                    util_1.parentsUntil(cloneElement.parentElement, 'e-grid').id === util_1.parentsUntil(target, 'e-grid').id) {
                    ej2_base_3.classList(cloneElement, ['e-notallowedcur'], ['e-defaultcur']);
                }
            };
            this.dragStop = function (e) {
                var gObj = _this.parent;
                var target = _this.getElementFromPosition(e.helper, e.event);
                gObj.element.classList.remove('e-rowdrag');
                var dropElem = document.getElementById(gObj.rowDropSettings.targetID);
                if (gObj.rowDropSettings.targetID && dropElem && dropElem.ej2_instances) {
                    dropElem.ej2_instances[0].getContent().classList.remove('e-allowRowDrop');
                }
                gObj.trigger(events.rowDrop, {
                    target: target, draggableType: 'rows',
                    rows: gObj.getSelectedRows(), data: gObj.getSelectedRecords()
                });
                if (!util_1.parentsUntil(target, 'e-gridcontent')) {
                    ej2_base_3.remove(e.helper);
                    return;
                }
            };
            this.parent = parent;
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.initialEnd, this.initializeDrag, this);
            this.parent.on(events.columnDrop, this.columnDrop, this);
            this.parent.on(events.rowDragAndDropComplete, this.onActionComplete, this);
            this.parent.on(events.uiUpdate, this.enableAfterRender, this);
        }
        RowDD.prototype.initializeDrag = function () {
            var gObj = this.parent;
            var column;
            var drag;
            drag = new ej2_base_1.Draggable(gObj.getContent(), {
                dragTarget: '.e-rowcell',
                distance: 5,
                helper: this.helper,
                dragStart: this.dragStart,
                drag: this.drag,
                dragStop: this.dragStop
            });
        };
        RowDD.prototype.getElementFromPosition = function (element, event) {
            var target;
            var position = util_1.getPosition(event);
            element.style.display = 'none';
            target = document.elementFromPoint(position.x, position.y);
            element.style.display = '';
            return target;
        };
        RowDD.prototype.onActionComplete = function (e) {
            this.parent.trigger(events.actionComplete, ej2_base_2.extend(e, { type: events.actionComplete }));
        };
        RowDD.prototype.getTargetIdx = function (targetRow) {
            return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;
        };
        RowDD.prototype.columnDrop = function (e) {
            var gObj = this.parent;
            if (e.droppedElement.getAttribute('action') !== 'grouping') {
                var targetRow = ej2_base_3.closest(e.target, 'tr');
                var srcControl = void 0;
                var currentIndex = void 0;
                if (e.droppedElement.parentElement.id !== gObj.element.id) {
                    srcControl = e.droppedElement.parentElement.ej2_instances[0];
                }
                else {
                    return;
                }
                if (srcControl.element.id !== gObj.element.id && srcControl.rowDropSettings.targetID !== gObj.element.id) {
                    return;
                }
                var records = srcControl.getSelectedRecords();
                var targetIndex = currentIndex = this.getTargetIdx(targetRow);
                var count = 0;
                if (isNaN(targetIndex)) {
                    targetIndex = currentIndex = 0;
                }
                if (gObj.allowPaging) {
                    targetIndex = targetIndex + (gObj.pageSettings.currentPage * gObj.pageSettings.pageSize) - gObj.pageSettings.pageSize;
                }
                gObj.notify(events.rowsAdded, { toIndex: targetIndex, records: records });
                gObj.notify(events.modelChanged, {
                    type: events.actionBegin, requestType: 'rowdraganddrop'
                });
                var selectedRows = srcControl.getSelectedRowIndexes();
                var skip = srcControl.allowPaging ?
                    (srcControl.pageSettings.currentPage * srcControl.pageSettings.pageSize) - srcControl.pageSettings.pageSize : 0;
                this.selectedRows = [];
                for (var i = 0, len = records.length; i < len; i++) {
                    this.selectedRows.push(skip + selectedRows[i]);
                }
                srcControl.notify(events.rowsRemoved, { indexes: this.selectedRows });
                srcControl.notify(events.modelChanged, {
                    type: events.actionBegin, requestType: 'rowdraganddrop'
                });
            }
        };
        RowDD.prototype.enableAfterRender = function (e) {
            if (e.module === this.getModuleName() && e.enable) {
                this.initializeDrag();
            }
        };
        RowDD.prototype.destroy = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.initialEnd, this.initializeDrag);
            this.parent.off(events.columnDrop, this.columnDrop);
            this.parent.off(events.rowDragAndDropComplete, this.onActionComplete);
            this.parent.off(events.uiUpdate, this.enableAfterRender);
        };
        RowDD.prototype.getModuleName = function () {
            return 'rowDragAndDrop';
        };
        return RowDD;
    }());
    exports.RowDD = RowDD;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(2), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, util_1, events) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ShowHide = (function () {
        function ShowHide(parent) {
            this.parent = parent;
        }
        ShowHide.prototype.show = function (columnName, showBy) {
            var keys = this.getToggleFields(columnName);
            var columns = this.getColumns(keys, showBy);
            columns.forEach(function (value) {
                value.visible = true;
            });
            this.setVisible(columns);
        };
        ShowHide.prototype.hide = function (columnName, hideBy) {
            var keys = this.getToggleFields(columnName);
            var columns = this.getColumns(keys, hideBy);
            columns.forEach(function (value) {
                value.visible = false;
            });
            this.setVisible(columns);
        };
        ShowHide.prototype.getToggleFields = function (key) {
            var finalized = [];
            if (typeof key === 'string') {
                finalized = [key];
            }
            else {
                finalized = key;
            }
            return finalized;
        };
        ShowHide.prototype.getColumns = function (keys, getKeyBy) {
            var _this = this;
            var columns = util_1.iterateArrayOrObject(keys, function (key, index) {
                return util_1.iterateArrayOrObject(_this.parent.getColumns(), function (item, index) {
                    if (item[getKeyBy] === key) {
                        return item;
                    }
                    return undefined;
                })[0];
            });
            return columns;
        };
        ShowHide.prototype.setVisible = function (columns) {
            columns = ej2_base_1.isNullOrUndefined(columns) ? this.parent.getColumns() : columns;
            this.parent.notify(events.columnVisibilityChanged, columns);
        };
        return ShowHide;
    }());
    exports.ShowHide = ShowHide;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(2), __webpack_require__(3), __webpack_require__(52)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, util_1, events, aria_service_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Sort = (function () {
        function Sort(parent, sortSettings, sortedColumns) {
            this.contentRefresh = true;
            this.isModelChanged = true;
            this.aria = new aria_service_1.AriaService();
            this.parent = parent;
            this.sortSettings = sortSettings;
            this.sortedColumns = sortedColumns;
            this.addEventListener();
        }
        Sort.prototype.updateModel = function () {
            var sortedColumn = { field: this.columnName, direction: this.direction };
            var index;
            var gCols = this.parent.groupSettings.columns;
            var flag = false;
            if (!this.isMultiSort) {
                if (!gCols.length) {
                    this.sortSettings.columns = [sortedColumn];
                }
                else {
                    var sortedCols = [];
                    for (var i = 0, len = gCols.length; i < len; i++) {
                        index = this.getSortedColsIndexByField(gCols[i], sortedCols);
                        if (this.columnName === gCols[i]) {
                            flag = true;
                            sortedCols.push(sortedColumn);
                        }
                        else {
                            var sCol = this.getSortColumnFromField(gCols[i]);
                            sortedCols.push({ field: sCol.field, direction: sCol.direction });
                        }
                    }
                    if (!flag) {
                        sortedCols.push(sortedColumn);
                    }
                    this.sortSettings.columns = sortedCols;
                }
            }
            else {
                index = this.getSortedColsIndexByField(this.columnName);
                if (index > -1) {
                    this.sortSettings.columns[index] = sortedColumn;
                }
                else {
                    this.sortSettings.columns.push(sortedColumn);
                }
                this.sortSettings.columns = this.sortSettings.columns;
            }
            this.parent.dataBind();
            this.lastSortedCol = this.columnName;
        };
        Sort.prototype.onActionComplete = function (e) {
            var args = !this.isRemove ? {
                columnName: this.columnName, direction: this.direction, requestType: 'sorting', type: events.actionComplete
            } : { requestType: 'sorting', type: events.actionComplete };
            this.isRemove = false;
            this.parent.trigger(events.actionComplete, ej2_base_2.extend(e, args));
        };
        Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {
            if (this.parent.getColumnByField(columnName).allowSorting === false) {
                return;
            }
            if (this.isActionPrevent()) {
                this.parent.notify(events.preventBatch, {
                    instance: this, handler: this.sortColumn,
                    arg1: columnName, arg2: direction, arg3: isMultiSort
                });
                return;
            }
            this.columnName = columnName;
            this.direction = direction;
            this.isMultiSort = isMultiSort;
            this.removeSortIcons();
            var column = this.parent.getColumnHeaderByField(columnName);
            this.updateSortedCols(columnName, isMultiSort);
            this.updateModel();
        };
        Sort.prototype.updateSortedCols = function (columnName, isMultiSort) {
            if (!isMultiSort) {
                if (this.parent.allowGrouping) {
                    for (var i = 0, len = this.sortedColumns.length; i < len; i++) {
                        if (this.parent.groupSettings.columns.indexOf(this.sortedColumns[i]) < 0) {
                            this.sortedColumns.splice(i, 1);
                            len--;
                            i--;
                        }
                    }
                }
                else {
                    this.sortedColumns.splice(0, this.sortedColumns.length);
                }
            }
            if (this.sortedColumns.indexOf(columnName) < 0) {
                this.sortedColumns.push(columnName);
            }
        };
        Sort.prototype.onPropertyChanged = function (e) {
            if (e.module !== this.getModuleName()) {
                return;
            }
            if (this.contentRefresh) {
                var args = this.sortSettings.columns.length ? {
                    columnName: this.columnName, direction: this.direction, requestType: 'sorting', type: events.actionBegin
                } : { requestType: 'sorting', type: events.actionBegin };
                this.parent.notify(events.modelChanged, args);
            }
            this.removeSortIcons();
            this.addSortIcons();
        };
        Sort.prototype.clearSorting = function () {
            var cols = util_1.getActualPropFromColl(this.sortSettings.columns);
            if (this.isActionPrevent()) {
                this.parent.notify(events.preventBatch, { instance: this, handler: this.clearSorting });
                return;
            }
            for (var i = 0, len = cols.length; i < len; i++) {
                this.removeSortColumn(cols[i].field);
            }
        };
        Sort.prototype.isActionPrevent = function () {
            return util_1.isActionPrevent(this.parent);
        };
        Sort.prototype.removeSortColumn = function (field) {
            var gObj = this.parent;
            var cols = this.sortSettings.columns;
            if (this.isActionPrevent()) {
                this.parent.notify(events.preventBatch, { instance: this, handler: this.removeSortColumn, arg1: field });
                return;
            }
            this.removeSortIcons();
            for (var i = 0, len = cols.length; i < len; i++) {
                if (cols[i].field === field) {
                    if (gObj.allowGrouping && gObj.groupSettings.columns.indexOf(cols[i].field) > -1) {
                        continue;
                    }
                    this.sortedColumns.splice(this.sortedColumns.indexOf(cols[i].field), 1);
                    cols.splice(i, 1);
                    this.isRemove = true;
                    if (this.isModelChanged) {
                        this.parent.notify(events.modelChanged, {
                            requestType: 'sorting', type: events.actionBegin
                        });
                    }
                    break;
                }
            }
            this.addSortIcons();
        };
        Sort.prototype.getSortedColsIndexByField = function (field, sortedColumns) {
            var cols = sortedColumns ? sortedColumns : this.sortSettings.columns;
            for (var i = 0, len = cols.length; i < len; i++) {
                if (cols[i].field === field) {
                    return i;
                }
            }
            return -1;
        };
        Sort.prototype.getModuleName = function () {
            return 'sort';
        };
        Sort.prototype.initialEnd = function () {
            this.parent.off(events.contentReady, this.initialEnd);
            if (this.parent.getColumns().length && this.sortSettings.columns.length) {
                var gObj = this.parent;
                this.contentRefresh = false;
                this.isMultiSort = this.sortSettings.columns.length > 1;
                for (var _i = 0, _a = gObj.sortSettings.columns; _i < _a.length; _i++) {
                    var col = _a[_i];
                    if (this.sortedColumns.indexOf(col.field) > -1) {
                        this.sortColumn(col.field, col.direction, true);
                    }
                }
                this.isMultiSort = false;
                this.contentRefresh = true;
            }
        };
        Sort.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.contentReady, this.initialEnd, this);
            this.parent.on(events.sortComplete, this.onActionComplete, this);
            this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);
            this.parent.on(events.click, this.clickHandler, this);
            this.parent.on(events.headerRefreshed, this.refreshSortIcons, this);
        };
        Sort.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.sortComplete, this.onActionComplete);
            this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);
            this.parent.off(events.click, this.clickHandler);
            this.parent.off(events.headerRefreshed, this.refreshSortIcons);
        };
        Sort.prototype.destroy = function () {
            this.isModelChanged = false;
            if (this.parent.element.querySelector('.e-gridpopup').querySelectorAll('.e-sortdirect').length) {
                this.parent.element.querySelector('.e-gridpopup').style.display = 'none';
            }
            this.clearSorting();
            this.isModelChanged = true;
            this.removeEventListener();
        };
        Sort.prototype.clickHandler = function (e) {
            this.popUpClickHandler(e);
            var target = ej2_base_3.closest(e.target, '.e-headercell');
            if (target && !e.target.classList.contains('e-grptogglebtn') &&
                !e.target.classList.contains('e-stackedheadercell') &&
                !e.target.classList.contains('e-stackedheadercelldiv') &&
                !e.target.classList.contains('e-rhandler')) {
                var gObj = this.parent;
                var field = gObj.getColumnByUid(target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid')).field;
                var direction = !target.querySelectorAll('.e-ascending').length ? 'ascending' :
                    'descending';
                if (!e.shiftKey) {
                    this.sortColumn(field, direction, e.ctrlKey || this.enableSortMultiTouch);
                }
                else {
                    this.removeSortColumn(field);
                }
                if (ej2_base_1.Browser.isDevice) {
                    this.showPopUp(e);
                }
            }
        };
        Sort.prototype.showPopUp = function (e) {
            var target = ej2_base_3.closest(e.target, '.e-headercell');
            if (!ej2_base_2.isNullOrUndefined(target)) {
                util_1.setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-sortdirect e-icons e-icon-sortdirect' + (this.sortedColumns.length > 1 ? ' e-spanclicked' : ''));
            }
        };
        Sort.prototype.popUpClickHandler = function (e) {
            var target = e.target;
            if (ej2_base_3.closest(target, '.e-headercell') || e.target.classList.contains('e-rowcell') ||
                ej2_base_3.closest(target, '.e-gridpopup')) {
                if (target.classList.contains('e-sortdirect')) {
                    if (!target.classList.contains('e-spanclicked')) {
                        target.classList.add('e-spanclicked');
                        this.enableSortMultiTouch = true;
                    }
                    else {
                        target.classList.remove('e-spanclicked');
                        this.enableSortMultiTouch = false;
                        this.parent.element.querySelector('.e-gridpopup').style.display = 'none';
                    }
                }
            }
            else {
                this.parent.element.querySelector('.e-gridpopup').style.display = 'none';
            }
        };
        Sort.prototype.addSortIcons = function () {
            var gObj = this.parent;
            var header;
            var filterElement;
            var cols = this.sortSettings.columns;
            var fieldNames = this.parent.getColumns().map(function (c) { return c.field; });
            for (var i = 0, len = cols.length; i < len; i++) {
                if (fieldNames.indexOf(cols[i].field) === -1) {
                    continue;
                }
                header = gObj.getColumnHeaderByField(cols[i].field);
                this.aria.setSort(header, cols[i].direction);
                if (this.isMultiSort && cols.length > 1) {
                    header.querySelector('.e-headercelldiv').insertBefore(ej2_base_3.createElement('span', { className: 'e-sortnumber', innerHTML: (i + 1).toString() }), header.querySelector('.e-headertext'));
                }
                filterElement = header.querySelector('.e-sortfilterdiv');
                if (cols[i].direction === 'ascending') {
                    ej2_base_3.classList(filterElement, ['e-ascending', 'e-icon-ascending'], []);
                }
                else {
                    ej2_base_3.classList(filterElement, ['e-descending', 'e-icon-descending'], []);
                }
            }
        };
        Sort.prototype.removeSortIcons = function (position) {
            var gObj = this.parent;
            var header;
            var cols = this.sortSettings.columns;
            var fieldNames = this.parent.getColumns().map(function (c) { return c.field; });
            for (var i = position ? position : 0, len = !ej2_base_2.isNullOrUndefined(position) ? position + 1 : cols.length; i < len; i++) {
                if (gObj.allowGrouping && gObj.groupSettings.columns.indexOf(cols[i].field) > -1) {
                    continue;
                }
                if (fieldNames.indexOf(cols[i].field) === -1) {
                    continue;
                }
                header = gObj.getColumnHeaderByField(cols[i].field);
                this.aria.setSort(header, 'none');
                ej2_base_3.classList(header.querySelector('.e-sortfilterdiv'), [], ['e-descending', 'e-icon-descending', 'e-ascending', 'e-icon-ascending']);
                if (header.querySelector('.e-sortnumber')) {
                    header.querySelector('.e-headercelldiv').removeChild(header.querySelector('.e-sortnumber'));
                }
            }
        };
        Sort.prototype.getSortColumnFromField = function (field) {
            for (var i = 0, len = this.sortSettings.columns.length; i < len; i++) {
                if (this.sortSettings.columns[i].field === field) {
                    return this.sortSettings.columns[i];
                }
            }
            return false;
        };
        Sort.prototype.updateAriaAttr = function () {
            var fieldNames = this.parent.getColumns().map(function (c) { return c.field; });
            for (var _i = 0, _a = this.sortedColumns; _i < _a.length; _i++) {
                var col = _a[_i];
                if (fieldNames.indexOf(col) === -1) {
                    continue;
                }
                var header = this.parent.getColumnHeaderByField(col);
                this.aria.setSort(header, this.getSortColumnFromField(col).direction);
            }
        };
        Sort.prototype.refreshSortIcons = function () {
            this.removeSortIcons();
            this.isMultiSort = true;
            this.removeSortIcons();
            this.addSortIcons();
            this.isMultiSort = false;
            this.updateAriaAttr();
        };
        return Sort;
    }());
    exports.Sort = Sort;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(234), __webpack_require__(3), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_navigations_1, events, util_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Toolbar = (function () {
        function Toolbar(parent, serviceLocator) {
            this.predefinedItems = {};
            this.parent = parent;
            this.gridID = parent.element.id;
            this.serviceLocator = serviceLocator;
            this.addEventListener();
        }
        Toolbar.prototype.render = function () {
            this.l10n = this.serviceLocator.getService('localization');
            var preItems = ['add', 'edit', 'update', 'delete', 'cancel', 'print',
                'pdfexport', 'excelexport', 'wordexport', 'csvexport'];
            for (var _i = 0, preItems_1 = preItems; _i < preItems_1.length; _i++) {
                var item = preItems_1[_i];
                var localeName = item[0].toUpperCase() + item.slice(1);
                this.predefinedItems[item] = {
                    id: this.gridID + '_' + item, prefixIcon: 'e-' + item,
                    text: this.l10n.getConstant(localeName), tooltipText: this.l10n.getConstant(localeName)
                };
            }
            this.predefinedItems.search = {
                id: this.gridID + '_search', template: '<div class="e-search" role="search" >\
                         <span id="' + this.gridID + '_searchbutton" class="e-searchfind e-icons" tabindex="-1"\
                         role="button" aria-label= "search"></span>\
                         <input id="' + this.gridID + '_searchbar" aria-multiline= "false" type="search"\
                         placeholder=' + this.l10n.getConstant('Search') + '>\
                         </input></div>', tooltipText: this.l10n.getConstant('Search'), align: 'right'
            };
            this.predefinedItems.columnchooser = {
                id: this.gridID + '_' + 'columnchooser', cssClass: 'e-cc e-ccdiv e-cc-toolbar', suffixIcon: 'e-' + 'columnchooser-btn',
                text: 'Columns', tooltipText: 'columns', align: 'right',
            };
            this.createToolbar();
        };
        Toolbar.prototype.getToolbar = function () {
            return this.toolbar.element;
        };
        Toolbar.prototype.destroy = function () {
            if (!this.toolbar.isDestroyed) {
                this.unWireEvent();
                this.toolbar.destroy();
                this.removeEventListener();
                ej2_base_2.remove(this.element);
            }
        };
        Toolbar.prototype.createToolbar = function () {
            var items = this.getItems();
            this.toolbar = new ej2_navigations_1.Toolbar({
                items: items,
                clicked: this.toolbarClickHandler.bind(this),
                enablePersistence: this.parent.enablePersistence,
                enableRtl: this.parent.enableRtl
            });
            this.element = ej2_base_2.createElement('div', { id: this.gridID + '_toolbarItems' });
            if (this.parent.toolbarTemplate) {
                if (typeof (this.parent.toolbarTemplate) === 'string') {
                    this.toolbar.appendTo(this.parent.toolbarTemplate);
                    this.element = this.toolbar.element;
                }
                else {
                    this.element = util_1.templateCompiler(this.parent.toolbarTemplate)()[1];
                }
            }
            else {
                this.toolbar.appendTo(this.element);
            }
            this.parent.element.insertBefore(this.element, this.parent.getHeaderContent());
            this.searchElement = this.element.querySelector('#' + this.gridID + '_searchbar');
            this.wireEvent();
            this.refreshToolbarItems();
            if (this.parent.searchSettings) {
                this.updateSearchBox();
            }
        };
        Toolbar.prototype.refreshToolbarItems = function (args) {
            var gObj = this.parent;
            var enableItems = [];
            var disableItems = [];
            var edit = gObj.editSettings;
            edit.allowAdding ? enableItems.push(this.gridID + '_add') : disableItems.push(this.gridID + '_add');
            edit.allowEditing ? enableItems.push(this.gridID + '_edit') : disableItems.push(this.gridID + '_edit');
            edit.allowDeleting ? enableItems.push(this.gridID + '_delete') : disableItems.push(this.gridID + '_delete');
            if (gObj.editSettings.mode === 'batch') {
                if (gObj.element.querySelectorAll('.e-updatedtd').length && (edit.allowAdding || edit.allowEditing)) {
                    enableItems.push(this.gridID + '_update');
                    enableItems.push(this.gridID + '_cancel');
                }
                else {
                    disableItems.push(this.gridID + '_update');
                    disableItems.push(this.gridID + '_cancel');
                }
            }
            else {
                if (gObj.isEdit && (edit.allowAdding || edit.allowEditing)) {
                    enableItems = [this.gridID + '_update', this.gridID + '_cancel'];
                    disableItems = [this.gridID + '_add', this.gridID + '_edit', this.gridID + '_delete'];
                }
                else {
                    disableItems.push(this.gridID + '_update');
                    disableItems.push(this.gridID + '_cancel');
                }
            }
            this.enableItems(enableItems, true);
            this.enableItems(disableItems, false);
        };
        Toolbar.prototype.getItems = function () {
            var items = [];
            var toolbarItems = this.parent.toolbar || [];
            if (typeof (this.parent.toolbar) === 'string') {
                return [];
            }
            for (var _i = 0, toolbarItems_1 = toolbarItems; _i < toolbarItems_1.length; _i++) {
                var item = toolbarItems_1[_i];
                typeof (item) === 'string' ? items.push(this.getItemObject(item)) : items.push(this.getItem(item));
            }
            return items;
        };
        Toolbar.prototype.getItem = function (itemObject) {
            var item = this.predefinedItems[itemObject.text];
            if (item) {
                ej2_base_1.extend(item, item, itemObject);
            }
            else {
                item = itemObject;
            }
            return item;
        };
        Toolbar.prototype.getItemObject = function (itemName) {
            return this.predefinedItems[itemName] || { text: itemName, id: this.gridID + '_' + itemName };
        };
        Toolbar.prototype.enableItems = function (items, isEnable) {
            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
                var item = items_1[_i];
                var element = this.element.querySelector('#' + item);
                if (element) {
                    this.toolbar.enableItems(element.parentElement, isEnable);
                }
            }
        };
        Toolbar.prototype.toolbarClickHandler = function (args) {
            var gObj = this.parent;
            var gID = this.gridID;
            if (!args.item) {
                gObj.trigger(events.toolbarClick, args);
                return;
            }
            switch (args.item.id) {
                case gID + '_print':
                    gObj.print();
                    break;
                case gID + '_edit':
                    gObj.startEdit();
                    break;
                case gID + '_update':
                    gObj.endEdit();
                    break;
                case gID + '_cancel':
                    gObj.closeEdit();
                    break;
                case gID + '_add':
                    gObj.addRecord();
                    break;
                case gID + '_delete':
                    gObj.deleteRecord();
                    break;
                case gID + '_search':
                    if (args.originalEvent.target.id === gID + '_searchbutton') {
                        this.search();
                    }
                    break;
                case gID + '_columnchooser':
                    var tarElement = this.parent.element.querySelector('.e-ccdiv');
                    var y = tarElement.getBoundingClientRect().top;
                    var x = tarElement.getBoundingClientRect().left;
                    var targetEle = args.originalEvent.target;
                    y = tarElement.getBoundingClientRect().top + tarElement.offsetTop;
                    gObj.createColumnchooser(x, y, targetEle);
                    break;
                default:
                    gObj.trigger(events.toolbarClick, args);
            }
        };
        Toolbar.prototype.modelChanged = function (e) {
            if (e.module === 'edit') {
                this.refreshToolbarItems();
            }
        };
        Toolbar.prototype.onPropertyChanged = function (e) {
            if (e.module !== this.getModuleName() || !this.parent.toolbar) {
                return;
            }
            if (this.element) {
                ej2_base_2.remove(this.element);
            }
            this.render();
        };
        Toolbar.prototype.keyUpHandler = function (e) {
            if (e.keyCode === 13) {
                this.search();
            }
        };
        Toolbar.prototype.search = function () {
            this.parent.search(this.searchElement.value);
        };
        Toolbar.prototype.updateSearchBox = function () {
            if (this.searchElement) {
                this.searchElement.value = this.parent.searchSettings.key;
            }
        };
        Toolbar.prototype.wireEvent = function () {
            if (this.searchElement) {
                ej2_base_1.EventHandler.add(this.searchElement, 'keyup', this.keyUpHandler, this);
            }
        };
        Toolbar.prototype.unWireEvent = function () {
            if (this.searchElement) {
                ej2_base_1.EventHandler.remove(this.searchElement, 'keyup', this.keyUpHandler);
            }
        };
        Toolbar.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(events.initialEnd, this.render, this);
            this.parent.on(events.uiUpdate, this.onPropertyChanged, this);
            this.parent.on(events.inBoundModelChanged, this.updateSearchBox.bind(this));
            this.parent.on(events.modelChanged, this.refreshToolbarItems, this);
            this.parent.on(events.toolbarRefresh, this.refreshToolbarItems, this);
            this.parent.on(events.inBoundModelChanged, this.modelChanged, this);
            this.parent.on(events.dataBound, this.refreshToolbarItems, this);
        };
        Toolbar.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(events.initialEnd, this.render);
            this.parent.off(events.uiUpdate, this.onPropertyChanged);
            this.parent.off(events.inBoundModelChanged, this.updateSearchBox);
            this.parent.off(events.modelChanged, this.refreshToolbarItems);
            this.parent.off(events.toolbarRefresh, this.refreshToolbarItems);
            this.parent.off(events.inBoundModelChanged, this.modelChanged);
            this.parent.off(events.dataBound, this.refreshToolbarItems);
        };
        Toolbar.prototype.getModuleName = function () {
            return 'toolbar';
        };
        return Toolbar;
    }());
    exports.Toolbar = Toolbar;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(7), __webpack_require__(282), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, util_1, constant_1, enum_1, virtual_content_renderer_1, events) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var VirtualScroll = (function () {
        function VirtualScroll(parent, locator) {
            this.parent = parent;
            this.locator = locator;
            this.addEventListener();
        }
        VirtualScroll.prototype.getModuleName = function () {
            return 'virtualscroll';
        };
        VirtualScroll.prototype.instantiateRenderer = function () {
            var renderer = this.locator.getService('rendererFactory');
            if (this.parent.enableColumnVirtualization) {
                renderer.addRenderer(enum_1.RenderType.Header, new virtual_content_renderer_1.VirtualHeaderRenderer(this.parent, this.locator));
            }
            renderer.addRenderer(enum_1.RenderType.Content, new virtual_content_renderer_1.VirtualContentRenderer(this.parent, this.locator));
            this.ensurePageSize();
        };
        VirtualScroll.prototype.ensurePageSize = function () {
            var rowHeight = util_1.getRowHeight(this.parent.element);
            this.blockSize = ~~(this.parent.height / rowHeight);
            var height = this.blockSize * 2;
            var size = this.parent.pageSettings.pageSize;
            this.parent.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);
        };
        VirtualScroll.prototype.addEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.on(constant_1.initialLoad, this.instantiateRenderer, this);
            this.parent.on(events.columnWidthChanged, this.refreshVirtualElement, this);
        };
        VirtualScroll.prototype.removeEventListener = function () {
            if (this.parent.isDestroyed) {
                return;
            }
            this.parent.off(constant_1.initialLoad, this.instantiateRenderer);
            this.parent.off(events.columnWidthChanged, this.refreshVirtualElement);
        };
        VirtualScroll.prototype.refreshVirtualElement = function (args) {
            if (this.parent.enableColumnVirtualization && args.module === 'resize') {
                var renderer = this.locator.getService('rendererFactory');
                renderer.getRenderer(enum_1.RenderType.Content).refreshVirtualElement();
            }
        };
        VirtualScroll.prototype.destroy = function () {
            this.removeEventListener();
        };
        return VirtualScroll;
    }());
    exports.VirtualScroll = VirtualScroll;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(188), __webpack_require__(7), __webpack_require__(2), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, grid_1, enum_1, util_1, constant_1) {
    "use strict";
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    __export(grid_1);
    __export(enum_1);
    __export(util_1);
    __export(constant_1);
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(75), __webpack_require__(75)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, index, index_1) {
    "use strict";
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    index.Grid.Inject(index.Filter, index.Page, index.Selection, index.Sort, index.Group, index.Reorder, index.RowDD, index.DetailRow, index.Toolbar, index.Aggregate, index.Search, index.VirtualScroll, index.Edit, index.Resize);
    __export(index_1);
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(70)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, column_1) {
    "use strict";
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    __export(column_1);
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(7), __webpack_require__(0), __webpack_require__(72)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, enum_1, ej2_base_3, value_formatter_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var AggregateColumn = (function (_super) {
        __extends(AggregateColumn, _super);
        function AggregateColumn() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.templateFn = {};
            return _this;
        }
        AggregateColumn.prototype.setFormatter = function () {
            var valueFormatter = new value_formatter_1.ValueFormatter();
            if (this.format && (this.format.skeleton || this.format.format)) {
                this.formatFn = valueFormatter.getFormatFunction(this.format);
            }
        };
        AggregateColumn.prototype.getFormatter = function () {
            return this.formatFn;
        };
        AggregateColumn.prototype.setTemplate = function (helper) {
            if (helper === void 0) { helper = {}; }
            if (this.footerTemplate !== undefined) {
                this.templateFn[ej2_base_2.getEnumValue(enum_1.CellType, enum_1.CellType.Summary)] = ej2_base_1.compile(this.footerTemplate, helper);
            }
            if (this.groupFooterTemplate !== undefined) {
                this.templateFn[ej2_base_2.getEnumValue(enum_1.CellType, enum_1.CellType.GroupSummary)] = ej2_base_1.compile(this.groupFooterTemplate, helper);
            }
            if (this.groupCaptionTemplate !== undefined) {
                this.templateFn[ej2_base_2.getEnumValue(enum_1.CellType, enum_1.CellType.CaptionSummary)] = ej2_base_1.compile(this.groupCaptionTemplate, helper);
            }
        };
        AggregateColumn.prototype.getTemplate = function (type) {
            return this.templateFn[ej2_base_2.getEnumValue(enum_1.CellType, type)];
        };
        return AggregateColumn;
    }(ej2_base_3.ChildProperty));
    __decorate([
        ej2_base_3.Property()
    ], AggregateColumn.prototype, "type", void 0);
    __decorate([
        ej2_base_3.Property()
    ], AggregateColumn.prototype, "field", void 0);
    __decorate([
        ej2_base_3.Property()
    ], AggregateColumn.prototype, "columnName", void 0);
    __decorate([
        ej2_base_3.Property()
    ], AggregateColumn.prototype, "format", void 0);
    __decorate([
        ej2_base_3.Property()
    ], AggregateColumn.prototype, "footerTemplate", void 0);
    __decorate([
        ej2_base_3.Property()
    ], AggregateColumn.prototype, "groupFooterTemplate", void 0);
    __decorate([
        ej2_base_3.Property()
    ], AggregateColumn.prototype, "groupCaptionTemplate", void 0);
    __decorate([
        ej2_base_3.Property()
    ], AggregateColumn.prototype, "customAggregate", void 0);
    exports.AggregateColumn = AggregateColumn;
    var AggregateRow = (function (_super) {
        __extends(AggregateRow, _super);
        function AggregateRow() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AggregateRow;
    }(ej2_base_3.ChildProperty));
    __decorate([
        ej2_base_3.Collection([], AggregateColumn)
    ], AggregateRow.prototype, "columns", void 0);
    exports.AggregateRow = AggregateRow;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PageSettings = (function (_super) {
        __extends(PageSettings, _super);
        function PageSettings() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return PageSettings;
    }(ej2_base_1.ChildProperty));
    __decorate([
        ej2_base_1.Property(12)
    ], PageSettings.prototype, "pageSize", void 0);
    __decorate([
        ej2_base_1.Property(8)
    ], PageSettings.prototype, "pageCount", void 0);
    __decorate([
        ej2_base_1.Property(1)
    ], PageSettings.prototype, "currentPage", void 0);
    __decorate([
        ej2_base_1.Property()
    ], PageSettings.prototype, "totalRecordsCount", void 0);
    __decorate([
        ej2_base_1.Property(false)
    ], PageSettings.prototype, "enableQueryString", void 0);
    __decorate([
        ej2_base_1.Property(false)
    ], PageSettings.prototype, "pageSizes", void 0);
    exports.PageSettings = PageSettings;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(118), __webpack_require__(71), __webpack_require__(35), __webpack_require__(18), __webpack_require__(196), __webpack_require__(117), __webpack_require__(200), __webpack_require__(199), __webpack_require__(117), __webpack_require__(119), __webpack_require__(191), __webpack_require__(189), __webpack_require__(193), __webpack_require__(197), __webpack_require__(195), __webpack_require__(190), __webpack_require__(192), __webpack_require__(194), __webpack_require__(198)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, header_renderer_1, content_renderer_1, row_renderer_1, cell_renderer_1, header_cell_renderer_1, filter_cell_renderer_1, stacked_cell_renderer_1, render_1, filter_cell_renderer_2, indent_cell_renderer_1, caption_cell_renderer_1, batch_edit_renderer_1, dialog_edit_renderer_1, inline_edit_renderer_1, edit_renderer_1, boolean_edit_cell_1, default_edit_cell_1, dropdown_edit_cell_1, numeric_edit_cell_1) {
    "use strict";
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    __export(header_renderer_1);
    __export(content_renderer_1);
    __export(row_renderer_1);
    __export(cell_renderer_1);
    __export(header_cell_renderer_1);
    __export(filter_cell_renderer_1);
    __export(stacked_cell_renderer_1);
    __export(render_1);
    __export(filter_cell_renderer_2);
    __export(indent_cell_renderer_1);
    __export(caption_cell_renderer_1);
    __export(batch_edit_renderer_1);
    __export(dialog_edit_renderer_1);
    __export(inline_edit_renderer_1);
    __export(edit_renderer_1);
    __export(boolean_edit_cell_1);
    __export(default_edit_cell_1);
    __export(dropdown_edit_cell_1);
    __export(numeric_edit_cell_1);
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(18)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, cell_renderer_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DetailExpandCellRenderer = (function (_super) {
        __extends(DetailExpandCellRenderer, _super);
        function DetailExpandCellRenderer() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.element = ej2_base_1.createElement('TD', {
                className: 'e-detailrowcollapse',
                attrs: { 'aria-expanded': 'false', role: 'gridcell', tabindex: '-1' }
            });
            return _this;
        }
        DetailExpandCellRenderer.prototype.render = function () {
            var node = this.element.cloneNode();
            node.appendChild(ej2_base_1.createElement('div', { className: 'e-icons e-dtdiagonalright e-icon-grightarrow' }));
            return node;
        };
        return DetailExpandCellRenderer;
    }(cell_renderer_1.CellRenderer));
    exports.DetailExpandCellRenderer = DetailExpandCellRenderer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(18)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, cell_renderer_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DetailHeaderIndentCellRenderer = (function (_super) {
        __extends(DetailHeaderIndentCellRenderer, _super);
        function DetailHeaderIndentCellRenderer() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.element = ej2_base_1.createElement('TH', { className: 'e-detailheadercell' });
            return _this;
        }
        DetailHeaderIndentCellRenderer.prototype.render = function (cell, data) {
            var node = this.element.cloneNode();
            node.appendChild(ej2_base_1.createElement('div', { className: 'e-emptycell' }));
            return node;
        };
        return DetailHeaderIndentCellRenderer;
    }(cell_renderer_1.CellRenderer));
    exports.DetailHeaderIndentCellRenderer = DetailHeaderIndentCellRenderer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(119)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, indent_cell_renderer_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ExpandCellRenderer = (function (_super) {
        __extends(ExpandCellRenderer, _super);
        function ExpandCellRenderer() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ExpandCellRenderer.prototype.render = function (cell, data) {
            var node = this.element.cloneNode();
            node.className = 'e-recordplusexpand';
            node.setAttribute('ej-mappingname', data.field);
            node.setAttribute('ej-mappingvalue', data.key);
            node.setAttribute('aria-expanded', 'true');
            node.setAttribute('tabindex', '-1');
            node.appendChild(ej2_base_1.createElement('div', { className: 'e-icons e-gdiagonaldown e-icon-gdownarrow' }));
            return node;
        };
        return ExpandCellRenderer;
    }(indent_cell_renderer_1.IndentCellRenderer));
    exports.ExpandCellRenderer = ExpandCellRenderer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(3), __webpack_require__(71), __webpack_require__(35), __webpack_require__(54)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, constant_1, content_renderer_1, row_renderer_1, summary_model_generator_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var FooterRenderer = (function (_super) {
        __extends(FooterRenderer, _super);
        function FooterRenderer(gridModule, serviceLocator) {
            var _this = _super.call(this, gridModule, serviceLocator) || this;
            _this.aggregates = {};
            _this.parent = gridModule;
            _this.locator = serviceLocator;
            _this.modelGenerator = new summary_model_generator_1.SummaryModelGenerator(_this.parent);
            _this.addEventListener();
            return _this;
        }
        FooterRenderer.prototype.renderPanel = function () {
            var div = ej2_base_1.createElement('div', { className: 'e-gridfooter' });
            var innerDiv = ej2_base_1.createElement('div', { className: 'e-summarycontent' });
            if (ej2_base_3.Browser.isDevice) {
                innerDiv.style.overflowX = 'scroll';
            }
            div.appendChild(innerDiv);
            this.setPanel(div);
            if (this.parent.getPager() != null) {
                this.parent.element.insertBefore(div, this.parent.getPager());
            }
            else {
                this.parent.element.appendChild(div);
            }
        };
        FooterRenderer.prototype.renderTable = function () {
            var contentDiv = this.getPanel();
            var innerDiv = this.createContentTable();
            var table = innerDiv.querySelector('.e-table');
            var tFoot = ej2_base_1.createElement('tfoot');
            table.appendChild(tFoot);
            this.setTable(table);
        };
        FooterRenderer.prototype.renderSummaryContent = function (e) {
            var input = this.parent.dataSource instanceof Array ? this.parent.dataSource : this.parent.currentViewData;
            var summaries = this.modelGenerator.getData();
            var dummies = this.modelGenerator.getColumns();
            var rows = this.modelGenerator.generateRows(input, e || this.aggregates);
            var fragment = document.createDocumentFragment();
            var rowrenderer = new row_renderer_1.RowRenderer(this.locator);
            rowrenderer.element = ej2_base_1.createElement('TR', { className: 'e-summaryrow' });
            for (var srow = 0, len = summaries.length; srow < len; srow++) {
                var row = rows[srow];
                if (!row) {
                    continue;
                }
                var tr = rowrenderer.render(row, dummies);
                fragment.appendChild(tr);
            }
            this.getTable().tFoot.appendChild(fragment);
            this.aggregates = e;
        };
        FooterRenderer.prototype.refresh = function (e) {
            this.getTable().tFoot.innerHTML = '';
            this.renderSummaryContent(e);
            this.onScroll();
        };
        FooterRenderer.prototype.refreshCol = function () {
            var headerCol = this.parent.element.querySelector('.e-gridheader').querySelector('colgroup').cloneNode(true);
            this.getTable().replaceChild(headerCol, this.getColGroup());
            this.setColGroup(headerCol);
        };
        FooterRenderer.prototype.onWidthChange = function (args) {
            this.getColGroup().children[args.index].style.width = ej2_base_2.formatUnit(args.width);
            if (this.parent.allowResizing) {
                this.updateFooterTableWidth(this.getTable());
            }
        };
        FooterRenderer.prototype.onScroll = function (e) {
            if (e === void 0) { e = { left: this.parent.getContent().firstChild.scrollLeft }; }
            this.getPanel().firstChild.scrollLeft = e.left;
        };
        FooterRenderer.prototype.columnVisibilityChanged = function () {
            this.refresh();
        };
        FooterRenderer.prototype.addEventListener = function () {
            this.parent.on(constant_1.colGroupRefresh, this.refreshCol, this);
            this.parent.on(constant_1.columnWidthChanged, this.onWidthChange, this);
            this.parent.on(constant_1.scroll, this.onScroll, this);
            this.parent.on(constant_1.columnVisibilityChanged, this.columnVisibilityChanged, this);
        };
        FooterRenderer.prototype.removeEventListener = function () {
            this.parent.off(constant_1.colGroupRefresh, this.refreshCol);
            this.parent.off(constant_1.columnWidthChanged, this.onWidthChange);
            this.parent.off(constant_1.scroll, this.onScroll);
            this.parent.off(constant_1.columnVisibilityChanged, this.columnVisibilityChanged);
        };
        FooterRenderer.prototype.updateFooterTableWidth = function (tFoot) {
            var tHead = this.parent.getHeaderTable();
            if (tHead && tFoot) {
                tFoot.style.width = tHead.style.width;
            }
        };
        return FooterRenderer;
    }(content_renderer_1.ContentRender));
    exports.FooterRenderer = FooterRenderer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(18)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, cell_renderer_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var HeaderIndentCellRenderer = (function (_super) {
        __extends(HeaderIndentCellRenderer, _super);
        function HeaderIndentCellRenderer() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.element = ej2_base_1.createElement('TH', { className: 'e-grouptopleftcell' });
            return _this;
        }
        HeaderIndentCellRenderer.prototype.render = function (cell, data) {
            var node = this.element.cloneNode();
            node.appendChild(ej2_base_1.createElement('div', { className: 'e-headercelldiv e-emptycell', innerHTML: '&nbsp;' }));
            return node;
        };
        return HeaderIndentCellRenderer;
    }(cell_renderer_1.CellRenderer));
    exports.HeaderIndentCellRenderer = HeaderIndentCellRenderer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(2), __webpack_require__(18)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, util_1, cell_renderer_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SummaryCellRenderer = (function (_super) {
        __extends(SummaryCellRenderer, _super);
        function SummaryCellRenderer() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.element = ej2_base_2.createElement('TD', { className: 'e-summarycell', attrs: { role: 'gridcell', tabindex: '-1' } });
            return _this;
        }
        SummaryCellRenderer.prototype.getValue = function (field, data, column) {
            var key;
            key = !ej2_base_1.isNullOrUndefined(column.type) ? column.field + ' - ' + (column.type) : column.columnName;
            return data[column.columnName] ? data[column.columnName][key] : '';
        };
        SummaryCellRenderer.prototype.evaluate = function (node, cell, data, attributes) {
            var column = cell.column;
            if (!(column.footerTemplate || column.groupFooterTemplate || column.groupCaptionTemplate)) {
                return true;
            }
            var fn = column.getTemplate(cell.cellType);
            util_1.appendChildren(node, fn(data[column.columnName]));
            return false;
        };
        return SummaryCellRenderer;
    }(cell_renderer_1.CellRenderer));
    exports.SummaryCellRenderer = SummaryCellRenderer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(14), __webpack_require__(2), __webpack_require__(3), __webpack_require__(7), __webpack_require__(71), __webpack_require__(118), __webpack_require__(284), __webpack_require__(286)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, ej2_data_1, util_1, constant_1, enum_1, content_renderer_1, header_renderer_1, intersection_observer_1, virtual_row_model_generator_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var VirtualContentRenderer = (function (_super) {
        __extends(VirtualContentRenderer, _super);
        function VirtualContentRenderer(parent, locator) {
            var _this = _super.call(this, parent, locator) || this;
            _this.prevHeight = 0;
            _this.preventEvent = false;
            _this.actions = ['filtering', 'searching', 'grouping', 'ungrouping'];
            _this.offsets = {};
            _this.tmpOffsets = {};
            _this.virtualEle = new VirtualElementHandler();
            _this.offsetKeys = [];
            _this.isFocused = false;
            _this.locator = locator;
            _this.eventListener('on');
            _this.vgenerator = _this.generator;
            return _this;
        }
        VirtualContentRenderer.prototype.renderTable = function () {
            this.header = this.locator.getService('rendererFactory').getRenderer(enum_1.RenderType.Header);
            _super.prototype.renderTable.call(this);
            this.virtualEle.table = this.getTable();
            this.virtualEle.content = this.content = this.getPanel().firstChild;
            this.virtualEle.renderWrapper();
            this.virtualEle.renderPlaceHolder();
            this.virtualEle.wrapper.style.position = 'absolute';
            var debounceEvent = (this.parent.dataSource instanceof ej2_data_1.DataManager && !this.parent.dataSource.dataSource.offline);
            var opt = {
                container: this.content, pageHeight: this.getBlockHeight() * 2, debounceEvent: debounceEvent,
                axes: this.parent.enableColumnVirtualization ? ['X', 'Y'] : ['Y']
            };
            this.observer = new intersection_observer_1.InterSectionObserver(this.virtualEle.wrapper, opt);
        };
        VirtualContentRenderer.prototype.renderEmpty = function (tbody) {
            this.getTable().appendChild(tbody);
            this.virtualEle.adjustTable(0, 0);
        };
        VirtualContentRenderer.prototype.scrollListener = function (scrollArgs) {
            if (this.preventEvent || this.parent.isDestroyed) {
                this.preventEvent = false;
                return;
            }
            this.isFocused = this.content === ej2_base_1.closest(document.activeElement, '.e-content') || this.content === document.activeElement;
            var info = scrollArgs.sentinel;
            var viewInfo = this.getInfoFromView(scrollArgs.direction, info, scrollArgs.offset);
            if (this.prevInfo && ((info.axis === 'Y' && this.prevInfo.blockIndexes.toString() === viewInfo.blockIndexes.toString())
                || (info.axis === 'X' && this.prevInfo.columnIndexes.toString() === viewInfo.columnIndexes.toString()))) {
                return;
            }
            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);
            this.parent.pageSettings.currentPage = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;
            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo });
        };
        VirtualContentRenderer.prototype.block = function (blk) {
            return this.vgenerator.isBlockAvailable(blk);
        };
        VirtualContentRenderer.prototype.getInfoFromView = function (direction, info, e) {
            var tempBlocks = [];
            var infoType = { direction: direction, sentinelInfo: info, offsets: e };
            infoType.page = this.getPageFromTop(e.top, infoType);
            infoType.blockIndexes = tempBlocks = this.vgenerator.getBlockIndexes(infoType.page);
            infoType.loadSelf = !this.vgenerator.isBlockAvailable(tempBlocks[infoType.block]);
            var blocks = this.ensureBlocks(infoType);
            infoType.blockIndexes = blocks;
            infoType.loadNext = !blocks.filter(function (val) { return tempBlocks.indexOf(val) === -1; })
                .every(this.block.bind(this));
            infoType.event = (infoType.loadNext || infoType.loadSelf) ? constant_1.modelChanged : constant_1.refreshVirtualBlock;
            infoType.nextInfo = infoType.loadNext ? { page: Math.max(1, infoType.page + (direction === 'down' ? 1 : -1)) } : {};
            infoType.columnIndexes = info.axis === 'X' ? this.vgenerator.getColumnIndexes() : this.parent.getColumnIndexesInView();
            if (this.parent.enableColumnVirtualization && info.axis === 'X') {
                infoType.event = constant_1.refreshVirtualBlock;
            }
            return infoType;
        };
        VirtualContentRenderer.prototype.ensureBlocks = function (info) {
            var _this = this;
            var index = info.blockIndexes[info.block];
            var mIdx;
            var old = index;
            var max = Math.max;
            var indexes = info.direction === 'down' ? [max(index, 1), ++index, ++index] : [max(index - 1, 1), index, index + 1];
            indexes = indexes.filter(function (val, ind) { return indexes.indexOf(val) === ind; });
            if (this.prevInfo.blockIndexes.toString() === indexes.toString()) {
                return indexes;
            }
            if (info.loadSelf || (info.direction === 'down' && this.isEndBlock(old))) {
                indexes = this.vgenerator.getBlockIndexes(info.page);
            }
            indexes.some(function (val, ind) {
                var result = val === _this.getTotalBlocks();
                if (result) {
                    mIdx = ind;
                }
                return result;
            });
            if (mIdx !== undefined) {
                indexes = indexes.slice(0, mIdx + 1);
                if (info.block === 0 && indexes.length === 1 && this.vgenerator.isBlockAvailable(indexes[0] - 1)) {
                    indexes = [indexes[0] - 1, indexes[0]];
                }
            }
            return indexes;
        };
        VirtualContentRenderer.prototype.appendContent = function (target, newChild, e) {
            var info = e.virtualInfo;
            this.prevInfo = this.prevInfo || e.virtualInfo;
            var cBlock = (info.columnIndexes[0]) - 1;
            var cOffset = this.getColumnOffset(cBlock);
            var width;
            var blocks = info.blockIndexes;
            if (this.parent.groupSettings.columns.length) {
                this.refreshOffsets();
            }
            var translate = this.getTranslateY(this.content.scrollTop, this.content.getBoundingClientRect().height, info);
            this.virtualEle.adjustTable(cOffset, translate);
            if (this.parent.enableColumnVirtualization) {
                this.header.virtualEle.adjustTable(cOffset, 0);
            }
            if (this.parent.enableColumnVirtualization) {
                var cIndex = info.columnIndexes;
                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';
                this.header.virtualEle.setWrapperWidth(width);
            }
            this.virtualEle.setWrapperWidth(width, this.parent.enableColumnVirtualization || ej2_base_2.Browser.isIE);
            target.appendChild(newChild);
            this.getTable().appendChild(target);
            if (this.parent.groupSettings.columns.length) {
                if (info.direction === 'up') {
                    var blk = this.offsets[this.getTotalBlocks()] - this.prevHeight;
                    this.preventEvent = true;
                    var sTop = this.content.scrollTop;
                    this.content.scrollTop = sTop + blk;
                }
                this.setVirtualHeight();
                this.observer.setPageHeight(this.getOffset(blocks[blocks.length - 1]) - this.getOffset(blocks[0] - 1));
            }
            this.prevInfo = info;
            if (this.isFocused) {
                this.content.focus();
            }
        };
        VirtualContentRenderer.prototype.onDataReady = function (e) {
            if (!ej2_base_3.isNullOrUndefined(e.count)) {
                this.count = e.count;
                this.maxPage = Math.ceil(e.count / this.parent.pageSettings.pageSize);
            }
            this.refreshOffsets();
            this.setVirtualHeight();
            this.resetScrollPosition(e.requestType);
        };
        VirtualContentRenderer.prototype.setVirtualHeight = function () {
            var width = this.parent.enableColumnVirtualization ?
                this.getColumnOffset(this.parent.columns.length + this.parent.groupSettings.columns.length - 1) + 'px' : '100%';
            this.virtualEle.setVirtualHeight(this.offsets[this.getTotalBlocks()], width);
            if (this.parent.enableColumnVirtualization) {
                this.header.virtualEle.setVirtualHeight(1, width);
            }
        };
        VirtualContentRenderer.prototype.getPageFromTop = function (sTop, info) {
            var _this = this;
            var total = this.getTotalBlocks();
            var page = 0;
            var extra = this.offsets[total] - this.prevHeight;
            this.offsetKeys.some(function (offset) {
                var iOffset = Number(offset);
                var border = sTop < _this.offsets[offset] || (iOffset === total && sTop > _this.offsets[offset]);
                if (border) {
                    info.block = iOffset % 2 === 0 ? 1 : 0;
                    page = Math.max(1, Math.min(_this.vgenerator.getPage(iOffset), _this.maxPage));
                }
                return border;
            });
            return page;
        };
        VirtualContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info) {
            if (info === undefined) {
                info = { page: this.getPageFromTop(sTop, {}) };
                info.blockIndexes = this.vgenerator.getBlockIndexes(info.page);
            }
            var block = (info.blockIndexes[0] || 1) - 1;
            var translate = this.getOffset(block);
            var endTranslate = this.getOffset(info.blockIndexes[info.blockIndexes.length - 1]);
            return translate > sTop ? this.getOffset(block - 1) : endTranslate < (sTop + cHeight) ? this.getOffset(block + 1) : translate;
        };
        VirtualContentRenderer.prototype.getOffset = function (block) {
            return Math.min(this.offsets[block] | 0, this.offsets[this.maxBlock]);
        };
        VirtualContentRenderer.prototype.onEntered = function () {
            var _this = this;
            return function (element, current, direction, e) {
                var xAxis = current.axis === 'X';
                var top = _this.prevInfo.offsets ? _this.prevInfo.offsets.top : null;
                var height = _this.content.getBoundingClientRect().height;
                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0] - 1);
                var y = _this.getTranslateY(e.top, height, xAxis && top === e.top ? _this.prevInfo : undefined);
                _this.virtualEle.adjustTable(x, Math.min(y, _this.offsets[_this.maxBlock]));
                if (_this.parent.enableColumnVirtualization) {
                    _this.header.virtualEle.adjustTable(x, 0);
                }
            };
        };
        VirtualContentRenderer.prototype.eventListener = function (action) {
            var _this = this;
            this.parent[action](constant_1.dataReady, this.onDataReady, this);
            this.parent[action](constant_1.refreshVirtualBlock, this.refreshContentRows, this);
            this.actions.forEach(function (event) { return _this.parent[action](event + "-begin", _this.onActionBegin, _this); });
            var fn = function () {
                _this.observer.observe(function (scrollArgs) { return _this.scrollListener(scrollArgs); }, _this.onEntered());
                _this.parent.off(constant_1.contentReady, fn);
            };
            this.parent.on(constant_1.contentReady, fn, this);
        };
        VirtualContentRenderer.prototype.getBlockSize = function () {
            return this.parent.pageSettings.pageSize >> 1;
        };
        VirtualContentRenderer.prototype.getBlockHeight = function () {
            return this.getBlockSize() * util_1.getRowHeight();
        };
        VirtualContentRenderer.prototype.isEndBlock = function (index) {
            var totalBlocks = this.getTotalBlocks();
            return index >= totalBlocks || index === totalBlocks - 1;
        };
        VirtualContentRenderer.prototype.getTotalBlocks = function () {
            return Math.ceil(this.count / this.getBlockSize());
        };
        VirtualContentRenderer.prototype.getColumnOffset = function (block) {
            return this.vgenerator.cOffsets[block] | 0;
        };
        VirtualContentRenderer.prototype.getModelGenerator = function () {
            return new virtual_row_model_generator_1.VirtualRowModelGenerator(this.parent);
        };
        VirtualContentRenderer.prototype.resetScrollPosition = function (action) {
            if (this.actions.some(function (value) { return value === action; })) {
                this.preventEvent = this.content.scrollTop !== 0;
                this.content.scrollTop = 0;
            }
        };
        VirtualContentRenderer.prototype.onActionBegin = function (e) {
            this.parent.setProperties({ pageSettings: { currentPage: 1 } }, true);
        };
        VirtualContentRenderer.prototype.getRows = function () {
            return this.vgenerator.getRows();
        };
        VirtualContentRenderer.prototype.getRowByIndex = function (index) {
            var prev = this.prevInfo.blockIndexes;
            var startIdx = (prev[0] - 1) * this.getBlockSize();
            return this.parent.getDataRows()[index - startIdx];
        };
        VirtualContentRenderer.prototype.refreshOffsets = function () {
            var _this = this;
            var row = 0;
            var bSize = this.getBlockSize();
            var total = this.getTotalBlocks();
            this.prevHeight = this.offsets[total];
            this.maxBlock = total % 2 === 0 ? total - 2 : total - 1;
            this.offsets = {};
            Array.apply(null, Array(total)).map(function () { return ++row; })
                .forEach(function (block) {
                var tmp = (_this.vgenerator.cache[block] || []).length;
                var rem = _this.count % bSize;
                var size = block in _this.vgenerator.cache ?
                    tmp * util_1.getRowHeight() : rem && block === total ? rem * util_1.getRowHeight() : _this.getBlockHeight();
                _this.offsets[block] = (_this.offsets[block - 1] | 0) + size;
                _this.tmpOffsets[block] = _this.offsets[block - 1] | 0;
            });
            this.offsetKeys = Object.keys(this.offsets);
            if (this.parent.enableColumnVirtualization) {
                this.vgenerator.refreshColOffsets();
            }
        };
        VirtualContentRenderer.prototype.refreshVirtualElement = function () {
            this.vgenerator.refreshColOffsets();
            this.setVirtualHeight();
        };
        return VirtualContentRenderer;
    }(content_renderer_1.ContentRender));
    exports.VirtualContentRenderer = VirtualContentRenderer;
    var VirtualHeaderRenderer = (function (_super) {
        __extends(VirtualHeaderRenderer, _super);
        function VirtualHeaderRenderer(parent, locator) {
            var _this = _super.call(this, parent, locator) || this;
            _this.virtualEle = new VirtualElementHandler();
            _this.gen = new virtual_row_model_generator_1.VirtualRowModelGenerator(_this.parent);
            _this.parent.on(constant_1.refreshVirtualBlock, function (e) { return e.virtualInfo.sentinelInfo.axis === 'X' ? _this.refreshUI() : null; }, _this);
            return _this;
        }
        VirtualHeaderRenderer.prototype.renderTable = function () {
            this.gen.refreshColOffsets();
            this.parent.setColumnIndexesInView(this.gen.getColumnIndexes(this.getPanel().firstChild));
            _super.prototype.renderTable.call(this);
            this.virtualEle.table = this.getTable();
            this.virtualEle.content = this.getPanel().firstChild;
            this.virtualEle.content.style.position = 'relative';
            this.virtualEle.renderWrapper();
            this.virtualEle.renderPlaceHolder('absolute');
        };
        VirtualHeaderRenderer.prototype.appendContent = function (table) {
            this.virtualEle.wrapper.appendChild(table);
        };
        VirtualHeaderRenderer.prototype.refreshUI = function () {
            this.gen.refreshColOffsets();
            this.parent.setColumnIndexesInView(this.gen.getColumnIndexes(this.getPanel().firstChild));
            _super.prototype.refreshUI.call(this);
        };
        return VirtualHeaderRenderer;
    }(header_renderer_1.HeaderRender));
    exports.VirtualHeaderRenderer = VirtualHeaderRenderer;
    var VirtualElementHandler = (function () {
        function VirtualElementHandler() {
        }
        VirtualElementHandler.prototype.renderWrapper = function () {
            this.wrapper = ej2_base_1.createElement('div', { className: 'e-virtualtable' });
            this.wrapper.appendChild(this.table);
            this.content.appendChild(this.wrapper);
        };
        VirtualElementHandler.prototype.renderPlaceHolder = function (position) {
            if (position === void 0) { position = 'relative'; }
            this.placeholder = ej2_base_1.createElement('div', { className: 'e-virtualtrack', styles: "position:" + position });
            this.content.appendChild(this.placeholder);
        };
        VirtualElementHandler.prototype.adjustTable = function (xValue, yValue) {
            this.wrapper.style.transform = "translate(" + xValue + "px, " + yValue + "px)";
        };
        VirtualElementHandler.prototype.setWrapperWidth = function (width, full) {
            this.wrapper.style.width = width ? width + "px" : full ? '100%' : '';
        };
        VirtualElementHandler.prototype.setVirtualHeight = function (height, width) {
            this.placeholder.style.height = height + "px";
            this.placeholder.style.width = width;
        };
        return VirtualElementHandler;
    }());
    exports.VirtualElementHandler = VirtualElementHandler;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(201), __webpack_require__(202), __webpack_require__(53), __webpack_require__(120)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, cell_render_factory_1, service_locator_1, row_model_generator_1, group_model_generator_1) {
    "use strict";
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    __export(cell_render_factory_1);
    __export(service_locator_1);
    __export(row_model_generator_1);
    __export(group_model_generator_1);
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var InterSectionObserver = (function () {
        function InterSectionObserver(element, options) {
            var _this = this;
            this.fromWheel = false;
            this.touchMove = false;
            this.options = {};
            this.sentinelInfo = {
                'up': {
                    check: function (rect, info) {
                        var top = rect.top - _this.containerRect.top;
                        info.entered = top >= 0;
                        return top + (_this.options.pageHeight / 2) >= 0;
                    },
                    axis: 'Y'
                },
                'down': {
                    check: function (rect, info) {
                        var cHeight = _this.options.container.clientHeight;
                        var top = rect.bottom;
                        info.entered = rect.bottom <= _this.containerRect.bottom;
                        return top - (_this.options.pageHeight / 2) <= _this.options.pageHeight / 2;
                    }, axis: 'Y'
                },
                'right': {
                    check: function (rect, info) {
                        var right = rect.right;
                        info.entered = right < _this.containerRect.right;
                        return right - _this.containerRect.width <= _this.containerRect.right;
                    }, axis: 'X'
                },
                'left': {
                    check: function (rect, info) {
                        var left = rect.left;
                        info.entered = left > 0;
                        return left + _this.containerRect.width >= _this.containerRect.left;
                    }, axis: 'X'
                }
            };
            this.element = element;
            this.options = options;
        }
        InterSectionObserver.prototype.observe = function (callback, onEnterCallback) {
            var _this = this;
            this.containerRect = this.options.container.getBoundingClientRect();
            ej2_base_1.EventHandler.add(this.options.container, 'wheel', function () { return _this.fromWheel = true; }, this);
            ej2_base_1.EventHandler.add(this.options.container, 'scroll', this.virtualScrollHandler(callback, onEnterCallback), this);
        };
        InterSectionObserver.prototype.check = function (direction) {
            var info = this.sentinelInfo[direction];
            return info.check(this.element.getBoundingClientRect(), info);
        };
        InterSectionObserver.prototype.virtualScrollHandler = function (callback, onEnterCallback) {
            var _this = this;
            var prevTop = 0;
            var prevLeft = 0;
            var debounced100 = ej2_base_2.debounce(callback, 100);
            var debounced50 = ej2_base_2.debounce(callback, 50);
            return function (e) {
                var top = e.target.scrollTop;
                var left = e.target.scrollLeft;
                var direction = prevTop < top ? 'down' : 'up';
                direction = prevLeft === left ? direction : prevLeft < left ? 'right' : 'left';
                prevTop = top;
                prevLeft = left;
                var current = _this.sentinelInfo[direction];
                if (_this.options.axes.indexOf(current.axis) === -1) {
                    return;
                }
                var check = _this.check(direction);
                if (current.entered) {
                    onEnterCallback(_this.element, current, direction, { top: top, left: left });
                }
                if (check) {
                    var fn = _this.fromWheel ? _this.options.debounceEvent ? debounced100 : callback : debounced100;
                    if (current.axis === 'X') {
                        fn = debounced50;
                    }
                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left } });
                }
                _this.fromWheel = false;
            };
        };
        InterSectionObserver.prototype.setPageHeight = function (value) {
            this.options.pageHeight = value;
        };
        return InterSectionObserver;
    }());
    exports.InterSectionObserver = InterSectionObserver;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, enum_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var RendererFactory = (function () {
        function RendererFactory() {
            this.rendererMap = {};
        }
        RendererFactory.prototype.addRenderer = function (name, type) {
            var rName = ej2_base_1.getEnumValue(enum_1.RenderType, name);
            if (ej2_base_1.isNullOrUndefined(this.rendererMap[rName])) {
                this.rendererMap[rName] = type;
            }
        };
        RendererFactory.prototype.getRenderer = function (name) {
            var rName = ej2_base_1.getEnumValue(enum_1.RenderType, name);
            if (ej2_base_1.isNullOrUndefined(this.rendererMap[rName])) {
                throw "The renderer " + rName + " is not found";
            }
            else {
                return this.rendererMap[rName];
            }
        };
        return RendererFactory;
    }());
    exports.RendererFactory = RendererFactory;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(53), __webpack_require__(120)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, row_model_generator_1, group_model_generator_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var VirtualRowModelGenerator = (function () {
        function VirtualRowModelGenerator(parent) {
            this.cOffsets = {};
            this.cache = {};
            this.data = {};
            this.groups = {};
            this.parent = parent;
            this.model = this.parent.pageSettings;
            this.rowModelGenerator = this.parent.allowGrouping ? new group_model_generator_1.GroupModelGenerator(this.parent) : new row_model_generator_1.RowModelGenerator(this.parent);
        }
        VirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {
            var _this = this;
            var info = notifyArgs.virtualInfo = notifyArgs.virtualInfo || this.getData();
            var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';
            var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;
            var result = [];
            var center = ~~(this.model.pageSize / 2);
            var indexes = this.getBlockIndexes(page);
            var loadedBlocks = [];
            this.checkAndResetCache(notifyArgs.requestType);
            if (this.parent.enableColumnVirtualization) {
                info.blockIndexes.forEach(function (value) {
                    if (_this.isBlockAvailable(value)) {
                        _this.cache[value] = _this.rowModelGenerator.refreshRows(_this.cache[value]);
                    }
                });
            }
            info.blockIndexes.forEach(function (value) {
                if (!_this.isBlockAvailable(value)) {
                    var rows = _this.rowModelGenerator.generateRows(data, {
                        virtualInfo: info, startIndex: _this.getStartIndex(value, data)
                    });
                    var median = ~~Math.max(rows.length, _this.model.pageSize) / 2;
                    if (!_this.isBlockAvailable(indexes[0])) {
                        _this.cache[indexes[0]] = rows.slice(0, median);
                    }
                    if (!_this.isBlockAvailable(indexes[1])) {
                        _this.cache[indexes[1]] = rows.slice(median);
                    }
                }
                if (_this.parent.groupSettings.columns.length && !xAxis && _this.cache[value]) {
                    _this.cache[value] = _this.updateGroupRow(_this.cache[value], value);
                }
                result.push.apply(result, _this.cache[value]);
                if (_this.isBlockAvailable(value)) {
                    loadedBlocks.push(value);
                }
            });
            info.blockIndexes = loadedBlocks;
            return result;
        };
        VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {
            return [page + (page - 1), page * 2];
        };
        VirtualRowModelGenerator.prototype.getPage = function (block) {
            return block % 2 === 0 ? block / 2 : (block + 1) / 2;
        };
        VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {
            return value in this.cache;
        };
        VirtualRowModelGenerator.prototype.getData = function () {
            return {
                page: this.model.currentPage,
                blockIndexes: this.getBlockIndexes(this.model.currentPage),
                direction: 'down',
                columnIndexes: this.parent.getColumnIndexesInView()
            };
        };
        VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {
            if (full === void 0) { full = true; }
            var page = this.getPage(blk);
            var even = blk % 2 === 0;
            var index = (page - 1) * this.model.pageSize;
            return full || !even ? index : index + ~~(this.model.pageSize / 2);
        };
        VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {
            var _this = this;
            if (content === void 0) { content = this.parent.getHeaderContent().firstChild; }
            var indexes = [];
            var sLeft = content.scrollLeft | 0;
            var keys = Object.keys(this.cOffsets);
            var cWidth = content.getBoundingClientRect().width;
            sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);
            var calWidth = ej2_base_1.Browser.isDevice ? 2 * cWidth : cWidth / 2;
            var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);
            keys.some(function (offset, indx, input) {
                var iOffset = Number(offset);
                var offsetVal = _this.cOffsets[offset];
                var border = sLeft - calWidth <= offsetVal && left + calWidth >= offsetVal;
                if (border) {
                    indexes.push(iOffset);
                }
                return left + calWidth < offsetVal;
            });
            return indexes;
        };
        VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {
            var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping']
                .some(function (value) { return action === value; });
            if (clear) {
                this.cache = {};
                this.data = {};
                this.groups = {};
            }
            return clear;
        };
        VirtualRowModelGenerator.prototype.refreshColOffsets = function () {
            var _this = this;
            var col = 0;
            this.cOffsets = {};
            var gLen = this.parent.groupSettings.columns.length;
            var cols = this.parent.columns;
            var cLen = cols.length;
            var isVisible = function (column) { return column.visible &&
                (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible); };
            this.parent.groupSettings.columns.forEach(function (c, n) { return _this.cOffsets[n] = (_this.cOffsets[n - 1] | 0) + 30; });
            Array.apply(null, Array(cLen)).map(function () { return col++; }).forEach(function (block, i) {
                block = block + gLen;
                _this.cOffsets[block] = (_this.cOffsets[block - 1] | 0) + (isVisible(cols[i]) ? parseInt(cols[i].width, 10) : 0);
            });
        };
        VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {
            var _this = this;
            var currentFirst = current[0];
            var rows = [];
            Object.keys(this.cache).forEach(function (key) {
                if (Number(key) < block) {
                    rows = rows.concat(_this.cache[key]);
                }
            });
            if (currentFirst.isDataRow || block % 2 === 0) {
                return current;
            }
            return this.iterateGroup(current, rows);
        };
        VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {
            var currentFirst = current[0];
            var offset = 0;
            if (currentFirst.isDataRow) {
                return current;
            }
            var isPresent = current.some(function (row) {
                return rows.some(function (oRow, index) {
                    var res = oRow && oRow.data.field !== undefined && oRow.data.field === row.data.field &&
                        oRow.data.key === row.data.key;
                    if (res) {
                        offset = index;
                    }
                    return res;
                });
            });
            if (isPresent) {
                current.shift();
                current = this.iterateGroup(current, rows.slice(offset));
            }
            return current;
        };
        VirtualRowModelGenerator.prototype.getRows = function () {
            var _this = this;
            var rows = [];
            Object.keys(this.cache).forEach(function (key) { return rows = rows.concat(_this.cache[key]); });
            return rows;
        };
        return VirtualRowModelGenerator;
    }());
    exports.VirtualRowModelGenerator = VirtualRowModelGenerator;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 287 */,
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(129)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_dropdowns_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PagerDropDown = (function () {
        function PagerDropDown(pagerModule) {
            this.pagerModule = pagerModule;
        }
        PagerDropDown.prototype.getModuleName = function () {
            return 'pagerdropdown';
        };
        PagerDropDown.prototype.render = function () {
            var pagerObj = this.pagerModule;
            this.pagerDropDownDiv = ej2_base_1.createElement('div', { className: 'e-pagesizes' });
            var dropDownDiv = ej2_base_1.createElement('div', { className: 'e-pagerdropdown' });
            var defaultTextDiv = ej2_base_1.createElement('div', { className: 'e-pagerconstant' });
            var input = ej2_base_1.createElement('input', { attrs: { type: 'text', tabindex: '1' } });
            this.pagerCons = ej2_base_1.createElement('span', { className: 'e-constant', innerHTML: this.pagerModule.getLocalizedLabel('pagerDropDown') });
            dropDownDiv.appendChild(input);
            defaultTextDiv.appendChild(this.pagerCons);
            this.pagerDropDownDiv.appendChild(dropDownDiv);
            this.pagerDropDownDiv.appendChild(defaultTextDiv);
            this.pagerModule.element.appendChild(this.pagerDropDownDiv);
            var pageSizesModule = this.pagerModule.pageSizes;
            var pageSizesArray = (pageSizesModule.length ? pageSizesModule : [5, 10, 12, 20]);
            var defaultValue = (pageSizesArray).indexOf(this.pagerModule.pageSize) > -1 ? this.pagerModule.pageSize : pageSizesArray[0];
            this.dropDownListObject = new ej2_dropdowns_1.DropDownList({
                dataSource: pageSizesArray,
                value: defaultValue,
                change: this.onChange.bind(this)
            });
            this.dropDownListObject.appendTo(input);
            pagerObj.pageSize = defaultValue;
            pagerObj.dataBind();
            pagerObj.trigger('dropDownChanged', { pageSize: defaultValue });
        };
        PagerDropDown.prototype.onChange = function (e) {
            this.pagerModule.pageSize = this.dropDownListObject.value;
            this.pagerModule.dataBind();
            this.pagerModule.trigger('dropDownChanged', { pageSize: this.dropDownListObject.value });
        };
        PagerDropDown.prototype.destroy = function (args) {
            if (this.dropDownListObject && !this.dropDownListObject.isDestroyed) {
                this.dropDownListObject.destroy();
                ej2_base_1.remove(this.pagerDropDownDiv);
            }
        };
        return PagerDropDown;
    }());
    exports.PagerDropDown = PagerDropDown;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ })
/******/ ]);
this["ej"] = this["ej"] || {}; this["ej"]["pagerModule"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 287);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ajax__ = __webpack_require__(76);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Ajax", function() { return __WEBPACK_IMPORTED_MODULE_0__ajax__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__animation__ = __webpack_require__(77);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Animation", function() { return __WEBPACK_IMPORTED_MODULE_1__animation__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "rippleEffect", function() { return __WEBPACK_IMPORTED_MODULE_1__animation__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "isRippleEnabled", function() { return __WEBPACK_IMPORTED_MODULE_1__animation__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "enableRipple", function() { return __WEBPACK_IMPORTED_MODULE_1__animation__["d"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__base__ = __webpack_require__(8);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Base", function() { return __WEBPACK_IMPORTED_MODULE_2__base__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__browser__ = __webpack_require__(19);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Browser", function() { return __WEBPACK_IMPORTED_MODULE_3__browser__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__canvas_renderer__ = __webpack_require__(78);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "CanvasRenderer", function() { return __WEBPACK_IMPORTED_MODULE_4__canvas_renderer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__component__ = __webpack_require__(79);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Component", function() { return __WEBPACK_IMPORTED_MODULE_5__component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__child_property__ = __webpack_require__(23);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ChildProperty", function() { return __WEBPACK_IMPORTED_MODULE_6__child_property__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__draggable__ = __webpack_require__(80);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Position", function() { return __WEBPACK_IMPORTED_MODULE_7__draggable__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Draggable", function() { return __WEBPACK_IMPORTED_MODULE_7__draggable__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__droppable__ = __webpack_require__(81);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Droppable", function() { return __WEBPACK_IMPORTED_MODULE_8__droppable__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__event_handler__ = __webpack_require__(16);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "EventHandler", function() { return __WEBPACK_IMPORTED_MODULE_9__event_handler__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__internationalization__ = __webpack_require__(24);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "onIntlChange", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "rightToLeft", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "cldrData", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "defaultCulture", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "defaultCurrencyCode", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Internationalization", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "setCulture", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "setCurrencyCode", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "loadCldr", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["i"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "enableRtl", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["j"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getNumericObject", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["k"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getDefaultDateObject", function() { return __WEBPACK_IMPORTED_MODULE_10__internationalization__["l"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__keyboard__ = __webpack_require__(84);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "KeyboardEvents", function() { return __WEBPACK_IMPORTED_MODULE_11__keyboard__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__l10n__ = __webpack_require__(85);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "L10n", function() { return __WEBPACK_IMPORTED_MODULE_12__l10n__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__module_loader__ = __webpack_require__(45);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ModuleLoader", function() { return __WEBPACK_IMPORTED_MODULE_13__module_loader__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__notify_property_change__ = __webpack_require__(12);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Property", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Complex", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "ComplexFactory", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Collection", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "CollectionFactory", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Event", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "NotifyPropertyChanges", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "CreateBuilder", function() { return __WEBPACK_IMPORTED_MODULE_14__notify_property_change__["h"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__svg_renderer__ = __webpack_require__(86);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "SvgRenderer", function() { return __WEBPACK_IMPORTED_MODULE_15__svg_renderer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__touch__ = __webpack_require__(89);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "SwipeSettings", function() { return __WEBPACK_IMPORTED_MODULE_16__touch__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Touch", function() { return __WEBPACK_IMPORTED_MODULE_16__touch__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__template_engine__ = __webpack_require__(87);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return __WEBPACK_IMPORTED_MODULE_17__template_engine__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "setTemplateEngine", function() { return __WEBPACK_IMPORTED_MODULE_17__template_engine__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getTemplateEngine", function() { return __WEBPACK_IMPORTED_MODULE_17__template_engine__["c"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__util__ = __webpack_require__(1);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "createInstance", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "setImmediate", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getValue", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "setValue", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "deleteObject", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getEnumValue", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["i"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "isNullOrUndefined", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["j"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["k"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getUniqueID", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["l"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["m"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "queryParams", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["n"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "isObjectArray", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["o"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "compareElementParent", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["p"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["q"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "print", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["r"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "formatUnit", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["s"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getInstance", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["t"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "addInstance", function() { return __WEBPACK_IMPORTED_MODULE_18__util__["u"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__dom__ = __webpack_require__(11);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "createElement", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "addClass", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "removeClass", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "isVisible", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["d"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "prepend", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["e"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "append", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["f"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "detach", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["g"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["h"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "attributes", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["i"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "select", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["j"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "selectAll", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["k"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "closest", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["l"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "siblings", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["m"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "getAttributeOrDefault", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["n"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "setStyleAttribute", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["o"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "classList", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["p"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "matches", function() { return __WEBPACK_IMPORTED_MODULE_19__dom__["q"]; });






















/***/ }),

/***/ 1:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = createInstance;
/* harmony export (immutable) */ __webpack_exports__["b"] = setImmediate;
/* harmony export (immutable) */ __webpack_exports__["c"] = getValue;
/* harmony export (immutable) */ __webpack_exports__["d"] = setValue;
/* harmony export (immutable) */ __webpack_exports__["e"] = deleteObject;
/* harmony export (immutable) */ __webpack_exports__["f"] = isObject;
/* harmony export (immutable) */ __webpack_exports__["g"] = getEnumValue;
/* harmony export (immutable) */ __webpack_exports__["h"] = merge;
/* harmony export (immutable) */ __webpack_exports__["i"] = extend;
/* harmony export (immutable) */ __webpack_exports__["j"] = isNullOrUndefined;
/* harmony export (immutable) */ __webpack_exports__["k"] = isUndefined;
/* harmony export (immutable) */ __webpack_exports__["l"] = getUniqueID;
/* harmony export (immutable) */ __webpack_exports__["m"] = debounce;
/* harmony export (immutable) */ __webpack_exports__["n"] = queryParams;
/* harmony export (immutable) */ __webpack_exports__["o"] = isObjectArray;
/* harmony export (immutable) */ __webpack_exports__["p"] = compareElementParent;
/* harmony export (immutable) */ __webpack_exports__["q"] = throwError;
/* harmony export (immutable) */ __webpack_exports__["r"] = print;
/* harmony export (immutable) */ __webpack_exports__["s"] = formatUnit;
/* harmony export (immutable) */ __webpack_exports__["t"] = getInstance;
/* harmony export (immutable) */ __webpack_exports__["u"] = addInstance;
var instances = 'ej2_instances';
var uid = 0;
function createInstance(classFunction, params) {
    var arrayParam = params;
    arrayParam.unshift(undefined);
    return new (Function.prototype.bind.apply(classFunction, arrayParam));
}
function setImmediate(handler) {
    var unbind;
    var num = new Uint16Array(5);
    var intCrypto = window.msCrypto || window.crypto;
    intCrypto.getRandomValues(num);
    var secret = 'ej2' + combineArray(num);
    var messageHandler = function (event) {
        if (event.source === window && typeof event.data === 'string' && event.data.length <= 32 && event.data === secret) {
            handler();
            unbind();
        }
    };
    window.addEventListener('message', messageHandler, false);
    window.postMessage(secret, '*');
    return unbind = function () {
        window.removeEventListener('message', messageHandler);
    };
}
function getValue(nameSpace, obj) {
    var value = obj;
    var splits = nameSpace.split('.');
    for (var i = 0; i < splits.length && !isUndefined(value); i++) {
        value = value[splits[i]];
    }
    return value;
}
function setValue(nameSpace, value, obj) {
    var keys = nameSpace.split('.');
    var start = obj || {};
    var fromObj = start;
    var i;
    var length = keys.length;
    var key;
    for (i = 0; i < length; i++) {
        key = keys[i];
        if (i + 1 === length) {
            fromObj[key] = value === undefined ? {} : value;
        }
        else if (isNullOrUndefined(fromObj[key])) {
            fromObj[key] = {};
        }
        fromObj = fromObj[key];
    }
    return start;
}
function deleteObject(obj, key) {
    delete obj[key];
}
function isObject(obj) {
    var objCon = {};
    return (!isNullOrUndefined(obj) && obj.constructor === objCon.constructor);
}
function getEnumValue(enumObject, enumValue) {
    return enumObject[enumValue];
}
function merge(source, destination) {
    if (!isNullOrUndefined(destination)) {
        var temrObj = source;
        var tempProp = destination;
        var keys = Object.keys(destination);
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var key = keys_1[_i];
            temrObj[key] = tempProp[key];
        }
    }
}
function extend(copied, first, second, deep) {
    var result = copied || {};
    var length = arguments.length;
    if (deep) {
        length = length - 1;
    }
    var _loop_1 = function (i) {
        if (!arguments_1[i]) {
            return "continue";
        }
        var obj1 = arguments_1[i];
        Object.keys(obj1).forEach(function (key) {
            var src = result[key];
            var copy = obj1[key];
            var clone;
            if (deep && isObject(copy)) {
                clone = isObject(src) ? src : {};
                result[key] = extend({}, clone, copy, true);
            }
            else {
                result[key] = copy;
            }
        });
    };
    var arguments_1 = arguments;
    for (var i = 1; i < length; i++) {
        _loop_1(i);
    }
    return result;
}
function isNullOrUndefined(value) {
    return value === undefined || value === null;
}
function isUndefined(value) {
    return ('undefined' === typeof value);
}
function getUniqueID(definedName) {
    return definedName + '_' + uid++;
}
function debounce(eventFunction, delay) {
    var out;
    return function () {
        var _this = this;
        var args = arguments;
        var later = function () {
            out = null;
            return eventFunction.apply(_this, args);
        };
        clearTimeout(out);
        out = setTimeout(later, delay);
    };
}
function queryParams(data) {
    var array = [];
    var keys = Object.keys(data);
    for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
        var key = keys_2[_i];
        array.push(encodeURIComponent(key) + '=' + encodeURIComponent('' + data[key]));
    }
    return array.join('&');
}
function isObjectArray(value) {
    var parser = Object.prototype.toString;
    if (parser.call(value) === '[object Array]') {
        if (parser.call(value[0]) === '[object Object]') {
            return true;
        }
    }
    return false;
}
function compareElementParent(child, parent) {
    var node = child;
    if (node === parent) {
        return true;
    }
    else if (node === document || !node) {
        return false;
    }
    else {
        return compareElementParent(node.parentNode, parent);
    }
}
function throwError(message) {
    try {
        throw new Error(message);
    }
    catch (e) {
        throw e.message + '\n' + e.stack;
    }
}
function print(element, printWindow) {
    var div = document.createElement('div');
    var links = [].slice.call(document.getElementsByTagName('head')[0].querySelectorAll('link, style'));
    var reference = '';
    if (isNullOrUndefined(printWindow)) {
        printWindow = window.open('', 'print', 'height=452,width=1024,tabbar=no');
    }
    div.appendChild(element.cloneNode(true));
    for (var i = 0, len = links.length; i < len; i++) {
        reference += links[i].outerHTML;
    }
    printWindow.document.write('<!DOCTYPE html> <html><head>' + reference + '</head><body>' + div.innerHTML +
        '<script> (function() { window.ready = true; })(); </script>' + '</body></html>');
    printWindow.document.close();
    printWindow.focus();
    var interval = setInterval(function () {
        if (printWindow.ready) {
            printWindow.print();
            printWindow.close();
            clearInterval(interval);
        }
    }, 500);
    return printWindow;
}
function formatUnit(value) {
    var result = value + '';
    if (result === 'auto' || result.indexOf('%') !== -1 || result.indexOf('px') !== -1) {
        return result;
    }
    return result + 'px';
}
function getInstance(element, component) {
    var elem = (typeof (element) === 'string') ? document.querySelector(element) : element;
    if (elem[instances]) {
        for (var _i = 0, _a = elem[instances]; _i < _a.length; _i++) {
            var inst = _a[_i];
            if (inst instanceof component) {
                return inst;
            }
        }
    }
    return null;
}
function addInstance(element, instance) {
    var elem = (typeof (element) === 'string') ? document.querySelector(element) : element;
    if (elem[instances]) {
        elem[instances].push(instance);
    }
    else {
        elem[instances] = [instance];
    }
}
function combineArray(num) {
    var ret = '';
    for (var i = 0; i < 5; i++) {
        ret += (i ? ',' : '') + num[i];
    }
    return ret;
}


/***/ }),

/***/ 11:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = createElement;
/* harmony export (immutable) */ __webpack_exports__["b"] = addClass;
/* harmony export (immutable) */ __webpack_exports__["c"] = removeClass;
/* harmony export (immutable) */ __webpack_exports__["d"] = isVisible;
/* harmony export (immutable) */ __webpack_exports__["e"] = prepend;
/* harmony export (immutable) */ __webpack_exports__["f"] = append;
/* harmony export (immutable) */ __webpack_exports__["g"] = detach;
/* harmony export (immutable) */ __webpack_exports__["h"] = remove;
/* harmony export (immutable) */ __webpack_exports__["i"] = attributes;
/* harmony export (immutable) */ __webpack_exports__["j"] = select;
/* harmony export (immutable) */ __webpack_exports__["k"] = selectAll;
/* harmony export (immutable) */ __webpack_exports__["l"] = closest;
/* harmony export (immutable) */ __webpack_exports__["m"] = siblings;
/* harmony export (immutable) */ __webpack_exports__["n"] = getAttributeOrDefault;
/* harmony export (immutable) */ __webpack_exports__["o"] = setStyleAttribute;
/* harmony export (immutable) */ __webpack_exports__["p"] = classList;
/* harmony export (immutable) */ __webpack_exports__["q"] = matches;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__event_handler__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(1);


function createElement(tagName, properties) {
    var element = document.createElement(tagName);
    if (typeof (properties) === 'undefined') {
        return element;
    }
    element.innerHTML = (properties.innerHTML ? properties.innerHTML : '');
    if (properties.className !== undefined) {
        element.className = properties.className;
    }
    if (properties.id !== undefined) {
        element.id = properties.id;
    }
    if (properties.styles !== undefined) {
        element.setAttribute('style', properties.styles);
    }
    if (properties.attrs !== undefined) {
        attributes(element, properties.attrs);
    }
    return element;
}
function addClass(elements, classes) {
    var classList = getClassList(classes);
    for (var _i = 0, _a = elements; _i < _a.length; _i++) {
        var ele = _a[_i];
        for (var _b = 0, classList_1 = classList; _b < classList_1.length; _b++) {
            var className = classList_1[_b];
            if (!ele.classList.contains(className)) {
                ele.classList.add(className);
            }
        }
    }
    return elements;
}
function removeClass(elements, classes) {
    var classList = getClassList(classes);
    for (var _i = 0, _a = elements; _i < _a.length; _i++) {
        var ele = _a[_i];
        if (ele.className !== '') {
            for (var _b = 0, classList_2 = classList; _b < classList_2.length; _b++) {
                var className = classList_2[_b];
                ele.classList.remove(className);
            }
        }
    }
    return elements;
}
function getClassList(classes) {
    var classList = [];
    if (typeof classes === 'string') {
        classList.push(classes);
    }
    else {
        classList = classes;
    }
    return classList;
}
function isVisible(element) {
    var ele = element;
    return (ele.style.visibility === '' && ele.offsetWidth > 0);
}
function prepend(fromElements, toElement) {
    var docFrag = document.createDocumentFragment();
    for (var _i = 0, _a = fromElements; _i < _a.length; _i++) {
        var ele = _a[_i];
        docFrag.appendChild(ele);
    }
    toElement.insertBefore(docFrag, toElement.firstElementChild);
    return fromElements;
}
function append(fromElements, toElement) {
    var docFrag = document.createDocumentFragment();
    for (var _i = 0, _a = fromElements; _i < _a.length; _i++) {
        var ele = _a[_i];
        docFrag.appendChild(ele);
    }
    toElement.appendChild(docFrag);
    return fromElements;
}
function detach(element) {
    var parentNode = element.parentNode;
    return parentNode.removeChild(element);
}
function remove(element) {
    var parentNode = element.parentNode;
    __WEBPACK_IMPORTED_MODULE_0__event_handler__["a" /* EventHandler */].clearEvents(element);
    parentNode.removeChild(element);
}
function attributes(element, attributes) {
    var keys = Object.keys(attributes);
    var ele = element;
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var key = keys_1[_i];
        ele.setAttribute(key, attributes[key]);
    }
    return ele;
}
function select(selector, context) {
    if (context === void 0) { context = document; }
    return context.querySelector(selector);
}
function selectAll(selector, context) {
    if (context === void 0) { context = document; }
    var nodeList = context.querySelectorAll(selector);
    return nodeList;
}
function closest(element, selector) {
    var el = element;
    if (typeof el.closest === 'function') {
        return el.closest(selector);
    }
    while (el && el.nodeType === 1) {
        if (matches(el, selector)) {
            return el;
        }
        el = el.parentNode;
    }
    return null;
}
function siblings(element) {
    var siblings = [];
    var childNodes = Array.prototype.slice.call(element.parentNode.childNodes);
    for (var _i = 0, childNodes_1 = childNodes; _i < childNodes_1.length; _i++) {
        var curNode = childNodes_1[_i];
        if (curNode.nodeType === Node.ELEMENT_NODE && element !== curNode) {
            siblings.push(curNode);
        }
    }
    return siblings;
}
function getAttributeOrDefault(element, property, value) {
    var attrVal = element.getAttribute(property);
    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__["j" /* isNullOrUndefined */])(attrVal)) {
        element.setAttribute(property, value.toString());
        attrVal = value;
    }
    return attrVal;
}
function setStyleAttribute(element, attrs) {
    if (attrs !== undefined) {
        Object.keys(attrs).forEach(function (key) {
            element.style[key] = attrs[key];
        });
    }
}
function classList(element, addClasses, removeClasses) {
    addClass([element], addClasses);
    removeClass([element], removeClasses);
}
function matches(element, selector) {
    var matches = element.matches || element.msMatchesSelector || element.webkitMatchesSelector;
    if (matches) {
        return matches.call(element, selector);
    }
    else {
        return [].indexOf.call(document.querySelectorAll(selector), element) !== -1;
    }
}


/***/ }),

/***/ 12:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = Property;
/* harmony export (immutable) */ __webpack_exports__["b"] = Complex;
/* harmony export (immutable) */ __webpack_exports__["c"] = ComplexFactory;
/* harmony export (immutable) */ __webpack_exports__["d"] = Collection;
/* harmony export (immutable) */ __webpack_exports__["e"] = CollectionFactory;
/* harmony export (immutable) */ __webpack_exports__["f"] = Event;
/* harmony export (immutable) */ __webpack_exports__["g"] = NotifyPropertyChanges;
/* harmony export (immutable) */ __webpack_exports__["h"] = CreateBuilder;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

function getObject(instance, curKey, defaultValue, type) {
    if (!instance.properties.hasOwnProperty(curKey)) {
        instance.properties[curKey] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["a" /* createInstance */])(type, [instance, curKey, defaultValue]);
    }
    return instance.properties[curKey];
}
function getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {
    var result = [];
    var len = defaultValue.length;
    for (var i = 0; i < len; i++) {
        var curType = type;
        if (isFactory) {
            curType = type(defaultValue[i]);
        }
        if (isSetter) {
            var inst = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["a" /* createInstance */])(curType, [instance, curKey, {}, true]);
            inst.setProperties(defaultValue[i], true);
            result.push(inst);
        }
        else {
            result.push(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["a" /* createInstance */])(curType, [instance, curKey, defaultValue[i], true]));
        }
    }
    return result;
}
function propertyGetter(defaultValue, curKey) {
    return function () {
        if (!this.properties.hasOwnProperty(curKey)) {
            this.properties[curKey] = defaultValue;
        }
        return this.properties[curKey];
    };
}
function propertySetter(defaultValue, curKey) {
    return function (newValue) {
        if (this.properties[curKey] !== newValue) {
            var oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;
            this.saveChanges(curKey, newValue, oldVal);
            this.properties[curKey] = newValue;
        }
    };
}
function complexGetter(defaultValue, curKey, type) {
    return function () {
        return getObject(this, curKey, defaultValue, type);
    };
}
function complexSetter(defaultValue, curKey, type) {
    return function (newValue) {
        getObject(this, curKey, defaultValue, type).setProperties(newValue);
    };
}
function complexFactoryGetter(defaultValue, curKey, type) {
    return function () {
        var curType = type({});
        return getObject(this, curKey, defaultValue, curType);
    };
}
function complexFactorySetter(defaultValue, curKey, type) {
    return function (newValue) {
        var curType = type(newValue);
        getObject(this, curKey, defaultValue, curType).setProperties(newValue);
    };
}
function complexArrayGetter(defaultValue, curKey, type) {
    return function () {
        if (!this.properties.hasOwnProperty(curKey)) {
            var defCollection = getObjectArray(this, curKey, defaultValue, type, false);
            this.properties[curKey] = defCollection;
        }
        return this.properties[curKey];
    };
}
function complexArraySetter(defaultValue, curKey, type) {
    return function (newValue) {
        var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);
        var newValCollection = getObjectArray(this, curKey, newValue, type, true);
        this.saveChanges(curKey, newValCollection, oldValueCollection);
        this.properties[curKey] = newValCollection;
    };
}
function complexArrayFactorySetter(defaultValue, curKey, type) {
    return function (newValue) {
        var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false, true);
        var newValCollection = getObjectArray(this, curKey, newValue, type, true, true);
        this.saveChanges(curKey, newValCollection, oldValueCollection);
        this.properties[curKey] = newValCollection;
    };
}
function complexArrayFactoryGetter(defaultValue, curKey, type) {
    return function () {
        var curType = type({});
        if (!this.properties.hasOwnProperty(curKey)) {
            var defCollection = getObjectArray(this, curKey, defaultValue, curType, false);
            this.properties[curKey] = defCollection;
        }
        return this.properties[curKey];
    };
}
function Property(defaultValue) {
    return function (target, key) {
        var propertyDescriptor = {
            set: propertySetter(defaultValue, key),
            get: propertyGetter(defaultValue, key),
            enumerable: true,
            configurable: true
        };
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'prop', defaultValue);
    };
}
function Complex(defaultValue, type) {
    return function (target, key) {
        var propertyDescriptor = {
            set: complexSetter(defaultValue, key, type),
            get: complexGetter(defaultValue, key, type),
            enumerable: true,
            configurable: true
        };
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'complexProp', defaultValue, type);
    };
}
function ComplexFactory(type) {
    return function (target, key) {
        var propertyDescriptor = {
            set: complexFactorySetter({}, key, type),
            get: complexFactoryGetter({}, key, type),
            enumerable: true,
            configurable: true
        };
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'complexProp', {}, type);
    };
}
function Collection(defaultValue, type) {
    return function (target, key) {
        var propertyDescriptor = {
            set: complexArraySetter(defaultValue, key, type),
            get: complexArrayGetter(defaultValue, key, type),
            enumerable: true,
            configurable: true
        };
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'colProp', defaultValue, type);
    };
}
function CollectionFactory(type) {
    return function (target, key) {
        var propertyDescriptor = {
            set: complexArrayFactorySetter([], key, type),
            get: complexArrayFactoryGetter([], key, type),
            enumerable: true,
            configurable: true
        };
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'colProp', {}, type);
    };
}
function Event() {
    return function (target, key) {
        var eventDescriptor = {
            set: function (newValue) {
                var oldValue = this.properties[key];
                if (oldValue !== newValue) {
                    var finalContext = getParentContext(this, key);
                    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(oldValue) === false) {
                        finalContext.context.removeEventListener(finalContext.prefix, oldValue);
                    }
                    finalContext.context.addEventListener(finalContext.prefix, newValue);
                    this.properties[key] = newValue;
                }
            },
            get: propertyGetter(undefined, key),
            enumerable: true,
            configurable: true
        };
        Object.defineProperty(target, key, eventDescriptor);
        addPropertyCollection(target, key, 'event');
    };
}
function NotifyPropertyChanges(classConstructor) {
}
function addPropertyCollection(target, key, propertyType, defaultValue, type) {
    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(target.propList)) {
        target.propList = {
            props: [],
            complexProps: [],
            colProps: [],
            events: [],
            propNames: [],
            complexPropNames: [],
            colPropNames: [],
            eventNames: []
        };
    }
    target.propList[propertyType + 's'].push({
        propertyName: key,
        defaultValue: defaultValue,
        type: type
    });
    target.propList[propertyType + 'Names'].push(key);
}
function getBuilderProperties(component) {
    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(component.prototype.builderObject)) {
        component.prototype.builderObject = {
            properties: {}, propCollections: [], add: function () {
                this.isPropertyArray = true;
                this.propCollections.push(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])({}, this.properties, {}));
            }
        };
        var rex = /complex/;
        for (var _i = 0, _a = Object.keys(component.prototype.propList); _i < _a.length; _i++) {
            var key = _a[_i];
            var _loop_1 = function (prop) {
                if (rex.test(key)) {
                    component.prototype.builderObject[prop.propertyName] = function (value) {
                        var childType = {};
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["h" /* merge */])(childType, getBuilderProperties(prop.type));
                        value(childType);
                        var tempValue;
                        if (!childType.isPropertyArray) {
                            tempValue = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])({}, childType.properties, {});
                        }
                        else {
                            tempValue = childType.propCollections;
                        }
                        this.properties[prop.propertyName] = tempValue;
                        childType.properties = {};
                        childType.propCollections = [];
                        childType.isPropertyArray = false;
                        return this;
                    };
                }
                else {
                    component.prototype.builderObject[prop.propertyName] = function (value) {
                        this.properties[prop.propertyName] = value;
                        return this;
                    };
                }
            };
            for (var _b = 0, _c = component.prototype.propList[key]; _b < _c.length; _b++) {
                var prop = _c[_b];
                _loop_1(prop);
            }
        }
    }
    return component.prototype.builderObject;
}
function CreateBuilder(component) {
    var builderFunction = function (element) {
        this.element = element;
        return this;
    };
    var instanceFunction = function (element) {
        if (!builderFunction.prototype.hasOwnProperty('create')) {
            builderFunction.prototype = getBuilderProperties(component);
            builderFunction.prototype.create = function () {
                var temp = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])({}, {}, this.properties);
                this.properties = {};
                return new component(temp, this.element);
            };
        }
        return new builderFunction(element);
    };
    return instanceFunction;
}
function getParentContext(context, prefix) {
    if (context.hasOwnProperty('parentObj') === false) {
        return { context: context, prefix: prefix };
    }
    else {
        var curText = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('propName', context);
        if (curText) {
            prefix = curText + '-' + prefix;
        }
        return getParentContext(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('parentObj', context), prefix);
    }
}


/***/ }),

/***/ 16:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EventHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

var EventHandler = (function () {
    function EventHandler() {
    }
    EventHandler.addOrGetEventData = function (element) {
        if ('__eventList' in element) {
            return element.__eventList.events;
        }
        else {
            element.__eventList = {};
            return element.__eventList.events = [];
        }
    };
    EventHandler.add = function (element, eventName, listener, bindTo, intDebounce) {
        var eventData = EventHandler.addOrGetEventData(element);
        var debounceListener;
        if (intDebounce) {
            debounceListener = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["m" /* debounce */])(listener, intDebounce);
        }
        else {
            debounceListener = listener;
        }
        if (bindTo) {
            debounceListener = debounceListener.bind(bindTo);
        }
        var event = eventName.split(' ');
        for (var i = 0; i < event.length; i++) {
            eventData.push({
                name: event[i],
                listener: listener,
                debounce: debounceListener
            });
            element.addEventListener(event[i], debounceListener);
        }
        return debounceListener;
    };
    EventHandler.remove = function (element, eventName, listener) {
        var eventData = EventHandler.addOrGetEventData(element);
        var event = eventName.split(' ');
        var _loop_1 = function (j) {
            var index = -1;
            var debounceListener;
            if (eventData && eventData.length !== 0) {
                eventData.some(function (x, i) {
                    return x.name === event[j] && x.listener === listener ?
                        (index = i, debounceListener = x.debounce, true) : false;
                });
            }
            if (index !== -1) {
                eventData.splice(index, 1);
            }
            element.removeEventListener(event[j], debounceListener);
        };
        for (var j = 0; j < event.length; j++) {
            _loop_1(j);
        }
    };
    EventHandler.clearEvents = function (element) {
        var eventData;
        var copyData;
        eventData = EventHandler.addOrGetEventData(element);
        copyData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])([], copyData, eventData);
        for (var i = 0; i < copyData.length; i++) {
            element.removeEventListener(copyData[i].name, copyData[i].debounce);
            eventData.shift();
        }
    };
    EventHandler.trigger = function (element, eventName, eventProp) {
        var eventData = EventHandler.addOrGetEventData(element);
        var fn = null;
        for (var _i = 0, eventData_1 = eventData; _i < eventData_1.length; _i++) {
            var event_1 = eventData_1[_i];
            if (event_1.name === eventName) {
                event_1.debounce.call(this, eventProp);
            }
        }
    };
    return EventHandler;
}());



/***/ }),

/***/ 19:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Browser; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

var REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;
var REGX_IE = /msie|trident/i;
var REGX_IE11 = /Trident\/7\./;
var REGX_IOS = /(ipad|iphone|ipod touch)/i;
var REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\d|(ipad|iphone|ipod touch);.*os 8_\d/i;
var REGX_ANDROID = /android/i;
var REGX_WINDOWS = /trident|windows phone|edge/i;
var REGX_VERSION = /(version)[ \/]([\w.]+)/i;
var REGX_BROWSER = {
    OPERA: /(opera|opr)(?:.*version|)[ \/]([\w.]+)/i,
    EDGE: /(edge)(?:.*version|)[ \/]([\w.]+)/i,
    CHROME: /(chrome|crios)[ \/]([\w.]+)/i,
    PANTHOMEJS: /(phantomjs)[ \/]([\w.]+)/i,
    SAFARI: /(safari)[ \/]([\w.]+)/i,
    WEBKIT: /(webkit)[ \/]([\w.]+)/i,
    MSIE: /(msie|trident) ([\w.]+)/i,
    MOZILLA: /(mozilla)(?:.*? rv:([\w.]+)|)/i
};
window.browserDetails = window.browserDetails || {};
var Browser = (function () {
    function Browser() {
    }
    Browser.extractBrowserDetail = function () {
        var browserInfo = { culture: {} };
        var keys = Object.keys(REGX_BROWSER);
        var clientInfo = [];
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var key = keys_1[_i];
            clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);
            if (clientInfo) {
                browserInfo.name = (clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase());
                browserInfo.name = (clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name);
                browserInfo.version = clientInfo[2];
                browserInfo.culture.name = browserInfo.culture.language = navigator.language;
                if (!!Browser.userAgent.match(REGX_IE11)) {
                    browserInfo.name = 'msie';
                    break;
                }
                var version = Browser.userAgent.match(REGX_VERSION);
                if (browserInfo.name === 'safari' && version) {
                    browserInfo.version = version[2];
                }
                break;
            }
        }
        return browserInfo;
    };
    Browser.getEvent = function (event) {
        var events = {
            start: {
                isPointer: 'pointerdown', isTouch: 'touchstart', isDevice: 'mousedown'
            },
            move: {
                isPointer: 'pointermove', isTouch: 'touchmove', isDevice: 'mousemove'
            },
            end: {
                isPointer: 'pointerup', isTouch: 'touchend', isDevice: 'mouseup'
            }
        };
        return (Browser.isPointer ? events[event].isPointer :
            (Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '')
                : events[event].isDevice));
    };
    Browser.getTouchStartEvent = function () {
        return Browser.getEvent('start');
    };
    Browser.getTouchEndEvent = function () {
        return Browser.getEvent('end');
    };
    Browser.getTouchMoveEvent = function () {
        return Browser.getEvent('move');
    };
    Browser.getValue = function (key, regX) {
        var browserDetails = window.browserDetails;
        if ('undefined' === typeof browserDetails[key]) {
            return browserDetails[key] = regX.test(Browser.userAgent);
        }
        return browserDetails[key];
    };
    Object.defineProperty(Browser, "userAgent", {
        get: function () {
            return Browser.uA;
        },
        set: function (uA) {
            Browser.uA = uA;
            window.browserDetails = {};
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "info", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.info)) {
                return window.browserDetails.info = Browser.extractBrowserDetail();
            }
            return window.browserDetails.info;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isIE", {
        get: function () {
            return Browser.getValue('isIE', REGX_IE);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isTouch", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.isTouch)) {
                return window.browserDetails.isTouch = ('ontouchstart' in window);
            }
            return window.browserDetails.isTouch;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isPointer", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.isPointer)) {
                return window.browserDetails.isPointer = ('pointerEnabled' in window.navigator);
            }
            return window.browserDetails.isPointer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isMSPointer", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.isMSPointer)) {
                return window.browserDetails.isMSPointer = ('msPointerEnabled' in window.navigator);
            }
            return window.browserDetails.isMSPointer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isDevice", {
        get: function () {
            return Browser.getValue('isDevice', REGX_MOBILE);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isIos", {
        get: function () {
            return Browser.getValue('isIos', REGX_IOS);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isIos7", {
        get: function () {
            return Browser.getValue('isIos7', REGX_IOS7);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isAndroid", {
        get: function () {
            return Browser.getValue('isAndroid', REGX_ANDROID);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isWebView", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.isWebView)) {
                window.browserDetails.isWebView = !(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.cordova) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.PhoneGap)
                    && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.phonegap) && window.forge !== 'object');
                return window.browserDetails.isWebView;
            }
            return window.browserDetails.isWebView;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isWindows", {
        get: function () {
            return Browser.getValue('isWindows', REGX_WINDOWS);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "touchStartEvent", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.touchStartEvent)) {
                return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();
            }
            return window.browserDetails.touchStartEvent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "touchMoveEvent", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.touchMoveEvent)) {
                return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();
            }
            return window.browserDetails.touchMoveEvent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "touchEndEvent", {
        get: function () {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(window.browserDetails.touchEndEvent)) {
                return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();
            }
            return window.browserDetails.touchEndEvent;
        },
        enumerable: true,
        configurable: true
    });
    return Browser;
}());

Browser.uA = navigator.userAgent;


/***/ }),

/***/ 20:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return IntlBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parser_base__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__date_formatter__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__number_formatter__ = __webpack_require__(44);




var IntlBase;
(function (IntlBase) {
    IntlBase.negativeDataRegex = /^(('[^']+'|''|[^*#@0,.E])*)(\*.)?((([#,]*[0,]*0+)(\.0*[0-9]*#*)?)|([#,]*@+#*))(E\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;
    IntlBase.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\*.)?((([0#,]*[0,]*[0#]*)(\.[0#]*)?)|([#,]*@+#*))(E\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;
    IntlBase.latnParseRegex = /0|1|2|3|4|5|6|7|8|9/g;
    var fractionRegex = /[0-9]/g;
    IntlBase.defaultCurrency = '$';
    var mapper = ['infinity', 'nan', 'group', 'decimal'];
    var patternRegex = /G|M|L|H|c|'| a|yy|y|EEEE|E/g;
    var patternMatch = {
        'G': '',
        'M': 'm',
        'L': 'm',
        'H': 'h',
        'c': 'd',
        '\'': '"',
        ' a': ' AM/PM',
        'yy': 'yy',
        'y': 'yyyy',
        'EEEE': 'dddd',
        'E': 'ddd'
    };
    IntlBase.formatRegex = /(^[ncpa]{1})([0-1]?[0-9]|20)?$/i;
    var typeMapper = {
        '$': 'isCurrency',
        '%': 'isPercent',
        '-': 'isNegative',
        0: 'nlead',
        1: 'nend'
    };
    IntlBase.dateParseRegex = /([a-z])\1*|'([^']|'')+'|''|./gi;
    IntlBase.basicPatterns = ['short', 'medium', 'long', 'full'];
    IntlBase.defaultObject = {
        'dates': {
            'calendars': {
                'gregorian': {
                    'months': {
                        'stand-alone': {
                            'abbreviated': {
                                '1': 'Jan',
                                '2': 'Feb',
                                '3': 'Mar',
                                '4': 'Apr',
                                '5': 'May',
                                '6': 'Jun',
                                '7': 'Jul',
                                '8': 'Aug',
                                '9': 'Sep',
                                '10': 'Oct',
                                '11': 'Nov',
                                '12': 'Dec'
                            },
                            'narrow': {
                                '1': 'J',
                                '2': 'F',
                                '3': 'M',
                                '4': 'A',
                                '5': 'M',
                                '6': 'J',
                                '7': 'J',
                                '8': 'A',
                                '9': 'S',
                                '10': 'O',
                                '11': 'N',
                                '12': 'D'
                            },
                            'wide': {
                                '1': 'January',
                                '2': 'February',
                                '3': 'March',
                                '4': 'April',
                                '5': 'May',
                                '6': 'June',
                                '7': 'July',
                                '8': 'August',
                                '9': 'September',
                                '10': 'October',
                                '11': 'November',
                                '12': 'December'
                            }
                        }
                    },
                    "days": {
                        "stand-alone": {
                            "abbreviated": {
                                "sun": "Sun",
                                "mon": "Mon",
                                "tue": "Tue",
                                "wed": "Wed",
                                "thu": "Thu",
                                "fri": "Fri",
                                "sat": "Sat"
                            },
                            "narrow": {
                                "sun": "S",
                                "mon": "M",
                                "tue": "T",
                                "wed": "W",
                                "thu": "T",
                                "fri": "F",
                                "sat": "S"
                            },
                            "short": {
                                "sun": "Su",
                                "mon": "Mo",
                                "tue": "Tu",
                                "wed": "We",
                                "thu": "Th",
                                "fri": "Fr",
                                "sat": "Sa"
                            },
                            "wide": {
                                "sun": "Sunday",
                                "mon": "Monday",
                                "tue": "Tuesday",
                                "wed": "Wednesday",
                                "thu": "Thursday",
                                "fri": "Friday",
                                "sat": "Saturday"
                            }
                        }
                    },
                    "dayPeriods": {
                        "format": {
                            "wide": {
                                "am": "AM",
                                "pm": "PM"
                            }
                        }
                    },
                    'eras': {
                        'eraNames': {
                            '0': 'Before Christ',
                            '0-alt-variant': 'Before Common Era',
                            '1': 'Anno Domini',
                            "1-alt-variant": "Common Era"
                        },
                        'eraAbbr': {
                            '0': 'BC',
                            '0-alt-variant': 'BCE',
                            '1': 'AD',
                            '1-alt-variant': 'CE'
                        },
                        'eraNarrow': {
                            '0': 'B',
                            '0-alt-variant': 'BCE',
                            '1': 'A',
                            '1-alt-variant': 'CE'
                        }
                    },
                    'dateFormats': {
                        'full': 'EEEE, MMMM d, y',
                        'long': 'MMMM d, y',
                        'medium': 'MMM d, y',
                        'short': 'M/d/yy'
                    },
                    'timeFormats': {
                        'full': 'h:mm:ss a zzzz',
                        'long': 'h:mm:ss a z',
                        'medium': 'h:mm:ss a',
                        'short': 'h:mm a'
                    },
                    'dateTimeFormats': {
                        'full': "{1} 'at' {0}",
                        'long': "{1} 'at' {0}",
                        'medium': '{1}, {0}',
                        'short': '{1}, {0}',
                        'availableFormats': {
                            'd': 'd',
                            'E': 'ccc',
                            'Ed': 'd E',
                            'Ehm': 'E h:mm a',
                            'EHm': 'E HH:mm',
                            'Ehms': 'E h:mm:ss a',
                            'EHms': 'E HH:mm:ss',
                            'Gy': 'y G',
                            'GyMMM': 'MMM y G',
                            'GyMMMd': 'MMM d, y G',
                            'GyMMMEd': 'E, MMM d, y G',
                            'h': 'h a',
                            'H': 'HH',
                            'hm': 'h:mm a',
                            'Hm': 'HH:mm',
                            'hms': 'h:mm:ss a',
                            'Hms': 'HH:mm:ss',
                            'hmsv': 'h:mm:ss a v',
                            'Hmsv': 'HH:mm:ss v',
                            'hmv': 'h:mm a v',
                            'Hmv': 'HH:mm v',
                            'M': 'L',
                            'Md': 'M/d',
                            'MEd': 'E, M/d',
                            'MMM': 'LLL',
                            'MMMd': 'MMM d',
                            'MMMEd': 'E, MMM d',
                            'MMMMd': 'MMMM d',
                            'ms': 'mm:ss',
                            'y': 'y',
                            'yM': 'M/y',
                            'yMd': 'M/d/y',
                            'yMEd': 'E, M/d/y',
                            'yMMM': 'MMM y',
                            'yMMMd': 'MMM d, y',
                            'yMMMEd': 'E, MMM d, y',
                            'yMMMM': 'MMMM y',
                        },
                    }
                }
            },
            'timeZoneNames': {
                "hourFormat": "+HH:mm;-HH:mm",
                "gmtFormat": "GMT{0}",
                "gmtZeroFormat": "GMT",
            }
        },
        'numbers': {
            'currencies': {
                'USD': {
                    'displayName': 'US Dollar',
                    'symbol': '$',
                    'symbol-alt-narrow': '$'
                },
                'EUR': {
                    'displayName': 'Euro',
                    'symbol': '€',
                    'symbol-alt-narrow': '€'
                },
                'GBP': {
                    'displayName': 'British Pound',
                    'symbol-alt-narrow': '£'
                },
            },
            'defaultNumberingSystem': 'latn',
            'minimumGroupingDigits': '1',
            'symbols-numberSystem-latn': {
                'decimal': '.',
                'group': ',',
                'list': ';',
                'percentSign': '%',
                'plusSign': '+',
                'minusSign': '-',
                'exponential': 'E',
                'superscriptingExponent': '×',
                'perMille': '‰',
                'infinity': '∞',
                'nan': 'NaN',
                'timeSeparator': ':'
            },
            'decimalFormats-numberSystem-latn': {
                'standard': '#,##0.###',
            },
            'percentFormats-numberSystem-latn': {
                'standard': '#,##0%'
            },
            'currencyFormats-numberSystem-latn': {
                'standard': '¤#,##0.00',
                'accounting': '¤#,##0.00;(¤#,##0.00)'
            }
        }
    };
    IntlBase.monthIndex = {
        3: 'abbreviated',
        4: 'wide',
        5: 'narrow',
        1: 'abbreviated'
    };
    IntlBase.month = 'months';
    IntlBase.days = 'days';
    IntlBase.patternMatcher = {
        C: 'currency',
        P: 'percent',
        N: 'decimal',
        A: 'currency'
    };
    function getResultantPattern(skeleton, dateObject, type) {
        var resPattern;
        var iType = type || 'date';
        if (IntlBase.basicPatterns.indexOf(skeleton) !== -1) {
            resPattern = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(iType + 'Formats.' + skeleton, dateObject);
            if (iType === 'dateTime') {
                var dPattern = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('dateFormats.' + skeleton, dateObject);
                var tPattern = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('timeFormats.' + skeleton, dateObject);
                resPattern = resPattern.replace('{1}', dPattern).replace('{0}', tPattern);
            }
        }
        else {
            resPattern = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('dateTimeFormats.availableFormats.' + skeleton, dateObject);
        }
        return resPattern;
    }
    IntlBase.getResultantPattern = getResultantPattern;
    function getDependables(cldr, culture, isNumber) {
        var ret = {};
        ret.parserObject = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getMainObject(cldr, culture) || IntlBase.defaultObject;
        if (isNumber) {
            ret.numericObject = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('numbers', ret.parserObject);
        }
        else {
            ret.dateObject = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('dates.calendars.gregorian', ret.parserObject);
        }
        return ret;
    }
    IntlBase.getDependables = getDependables;
    function getSymbolPattern(type, numSystem, obj, isAccount) {
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(type + 'Formats-numberSystem-' +
            numSystem + (isAccount ? '.accounting' : '.standard'), obj) || (isAccount ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(type + 'Formats-numberSystem-' +
            numSystem + '.standard', obj) : '');
    }
    IntlBase.getSymbolPattern = getSymbolPattern;
    function getProperNumericSkeleton(skeleton) {
        var matches = skeleton.match(IntlBase.formatRegex);
        var ret = {};
        var pattern = matches[1].toUpperCase();
        ret.isAccount = (pattern === 'A');
        ret.type = IntlBase.patternMatcher[pattern];
        if (skeleton.length > 1) {
            ret.fractionDigits = parseInt(matches[2], 10);
        }
        return ret;
    }
    IntlBase.getProperNumericSkeleton = getProperNumericSkeleton;
    function getFormatData(pattern, needFraction, cSymbol, fractionOnly) {
        var nData = fractionOnly ? {} : { nlead: '', nend: '' };
        var match = pattern.match(IntlBase.customRegex);
        if (match) {
            if (!fractionOnly) {
                nData.nlead = changeCurrencySymbol(match[1], cSymbol);
                nData.nend = changeCurrencySymbol(match[10], cSymbol);
                nData.groupPattern = match[4];
            }
            var fraction = match[7];
            if (fraction && needFraction) {
                var fmatch = fraction.match(fractionRegex);
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(fmatch)) {
                    nData.minimumFraction = fmatch.length;
                }
                else {
                    nData.minimumFraction = 0;
                }
                nData.maximumFraction = fraction.length - 1;
            }
        }
        return nData;
    }
    IntlBase.getFormatData = getFormatData;
    function changeCurrencySymbol(val, sym) {
        if (val) {
            return val.replace(IntlBase.defaultCurrency, sym);
        }
        return '';
    }
    function getCurrencySymbol(numericObject, currencyCode) {
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('currencies.' + currencyCode + '.symbol', numericObject) || '$';
    }
    IntlBase.getCurrencySymbol = getCurrencySymbol;
    function customFormat(format, dOptions, obj) {
        var options = {};
        var formatSplit = format.split(';');
        var data = ['pData', 'nData', 'zeroData'];
        for (var i = 0; i < formatSplit.length; i++) {
            options[data[i]] = customNumberFormat(formatSplit[i], dOptions, obj);
        }
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(options.nData)) {
            options.nData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])({}, options.pData);
            options.nData.nlead = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(dOptions) ? '-' + options.nData.nlead : dOptions.minusSymbol + options.nData.nlead;
        }
        return options;
    }
    IntlBase.customFormat = customFormat;
    function customNumberFormat(format, dOptions, numObject) {
        var cOptions = { type: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0 };
        var pattern = format.match(IntlBase.customRegex);
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(pattern) || pattern[5] === '') {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["q" /* throwError */])('Given Format is not valid or Cldr data not loaded');
        }
        cOptions.nlead = pattern[1];
        cOptions.nend = pattern[10];
        var integerPart = pattern[6];
        cOptions.useGrouping = integerPart.indexOf(',') !== -1;
        integerPart = integerPart.replace(/,/g, '');
        var fractionPart = pattern[7];
        if (integerPart.indexOf('0') !== -1) {
            cOptions.minimumIntegerDigits = integerPart.length - integerPart.indexOf('0');
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(fractionPart)) {
            cOptions.minimumFractionDigits = fractionPart.lastIndexOf('0');
            cOptions.maximumFractionDigits = fractionPart.lastIndexOf('#');
            if (cOptions.minimumFractionDigits === -1) {
                cOptions.minimumFractionDigits = 0;
            }
            if (cOptions.maximumFractionDigits === -1 || cOptions.maximumFractionDigits < cOptions.minimumFractionDigits) {
                cOptions.maximumFractionDigits = cOptions.minimumFractionDigits;
            }
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(dOptions)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '$', dOptions.currencySymbol));
            if (!cOptions.isCurrency) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', dOptions.percentSymbol));
            }
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', '%'));
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(numObject)) {
            var symbolPattern = getSymbolPattern(cOptions.type, dOptions.numberMapper.numberSystem, numObject, false);
            if (cOptions.useGrouping) {
                cOptions.groupSeparator = dOptions.numberMapper.numberSymbols[mapper[2]];
                cOptions.groupData = __WEBPACK_IMPORTED_MODULE_3__number_formatter__["a" /* NumberFormat */].getGroupingDetails(symbolPattern.split(';')[0]);
            }
            cOptions.nlead = cOptions.nlead.replace(/\'/g, '');
            cOptions.nend = cOptions.nend.replace(/\'/g, '');
        }
        return cOptions;
    }
    function isCurrencyPercent(parts, actual, symbol) {
        var options = { nlead: parts[0], nend: parts[1] };
        for (var i = 0; i < 2; i++) {
            var part = parts[i];
            var loc = part.indexOf(actual);
            if ((loc !== -1) && ((loc < part.indexOf('\'')) || (loc > part.lastIndexOf('\'')))) {
                options[typeMapper[i]] = part.substr(0, loc) + symbol + part.substr(loc + 1);
                options[typeMapper[actual]] = true;
                options.type = options.isCurrency ? 'currency' : 'percent';
                break;
            }
        }
        return options;
    }
    IntlBase.isCurrencyPercent = isCurrencyPercent;
    function getDateSeparator(dateObj) {
        var value = (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('dateFormats.short', dateObj) || '').match(/[d‏M‏]([^d‏M])[d‏M‏]/i);
        return value ? value[1] : '/';
    }
    IntlBase.getDateSeparator = getDateSeparator;
    function getActualDateTimeFormat(culture, options, cldr, isExcelFormat) {
        var dependable = getDependables(cldr, culture);
        var actualPattern = options.format || getResultantPattern(options.skeleton, dependable.dateObject, options.type);
        if (isExcelFormat) {
            actualPattern = actualPattern.replace(patternRegex, function (pattern) {
                return patternMatch[pattern];
            });
            if (actualPattern.indexOf('z') !== -1) {
                var tLength = actualPattern.match(/z/g).length;
                var timeZonePattern = void 0;
                var options_1 = { 'timeZone': {} };
                options_1.numMapper = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getNumberMapper(dependable.parserObject, __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getNumberingSystem(cldr));
                options_1.timeZone = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('dates.timeZoneNames', dependable.parserObject);
                var value = new Date();
                var timezone = value.getTimezoneOffset();
                var pattern = (tLength < 4) ? '+H;-H' : options_1.timeZone.hourFormat;
                pattern = pattern.replace(/:/g, options_1.numMapper.timeSeparator);
                if (timezone === 0) {
                    timeZonePattern = options_1.timeZone.gmtZeroFormat;
                }
                else {
                    timeZonePattern = __WEBPACK_IMPORTED_MODULE_2__date_formatter__["a" /* DateFormat */].getTimeZoneValue(timezone, pattern);
                    timeZonePattern = options_1.timeZone.gmtFormat.replace(/\{0\}/, timeZonePattern);
                }
                actualPattern = actualPattern.replace(/[z]+/, '"' + timeZonePattern + '"');
            }
            actualPattern = actualPattern.replace(/ $/, '');
        }
        return actualPattern;
    }
    IntlBase.getActualDateTimeFormat = getActualDateTimeFormat;
    function getActualNumberFormat(culture, options, cldr) {
        var dependable = getDependables(cldr, culture, true);
        var parseOptions = { custom: true };
        var minFrac;
        if ((/(c|a)$/ig).test(options.format) && !options.minimumFractionDigits && !options.maximumFractionDigits) {
            var dOptions = {};
            dOptions.numberMapper = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getNumberMapper(dependable.parserObject, __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getNumberingSystem(cldr), true);
            var symbolPattern = getSymbolPattern('currency', dOptions.numberMapper.numberSystem, dependable.numericObject, (/a/i).test(options.format));
            minFrac = getFormatData(symbolPattern.split(';')[0], true, '', true).minimumFraction;
        }
        var actualPattern;
        if ((IntlBase.formatRegex.test(options.format)) || !(options.format)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(parseOptions, getProperNumericSkeleton(options.format || 'N'));
            parseOptions.custom = false;
            actualPattern = '###0';
            if (parseOptions.fractionDigits || options.minimumFractionDigits || options.maximumFractionDigits || minFrac) {
                var defaultMinimum = 0;
                if (parseOptions.fractionDigits) {
                    options.minimumFractionDigits = options.maximumFractionDigits = parseOptions.fractionDigits;
                }
                actualPattern = fractionDigitsPattern(actualPattern, minFrac || parseOptions.fractionDigits ||
                    options.minimumFractionDigits || defaultMinimum, options.maximumFractionDigits || defaultMinimum);
            }
            if (options.minimumIntegerDigits) {
                actualPattern = minimumIntegerPattern(actualPattern, options.minimumIntegerDigits);
            }
            if (options.useGrouping) {
                actualPattern = groupingPattern(actualPattern);
            }
            if (parseOptions.type === 'currency' && !parseOptions.isAccount) {
                actualPattern = '$ ' + actualPattern;
            }
            else if (parseOptions.type === 'currency' && parseOptions.isAccount) {
                actualPattern = '$ ' + actualPattern + ';($ ' + actualPattern + ')';
            }
            if (parseOptions.type === 'percent') {
                actualPattern += ' %';
            }
        }
        else {
            actualPattern = options.format.replace(/\'/g, '"');
        }
        return actualPattern;
    }
    IntlBase.getActualNumberFormat = getActualNumberFormat;
    function fractionDigitsPattern(pattern, minDigits, maxDigits) {
        pattern += '.';
        for (var a = 0; a < minDigits; a++) {
            pattern += '0';
        }
        if (minDigits < maxDigits) {
            var diff = maxDigits - minDigits;
            for (var b = 0; b < diff; b++) {
                pattern += '#';
            }
        }
        return pattern;
    }
    function minimumIntegerPattern(pattern, digits) {
        var temp = pattern.split('.');
        var integer = '';
        for (var x = 0; x < digits; x++) {
            integer += '0';
        }
        return temp[1] ? (integer + '.' + temp[1]) : integer;
    }
    function groupingPattern(pattern) {
        var temp = pattern.split('.');
        var integer = temp[0];
        var no = 3 - integer.length % 3;
        var hash = (no && no === 1) ? '#' : (no === 2 ? '##' : '');
        integer = hash + integer;
        pattern = '';
        for (var x = integer.length - 1; x > 0; x = x - 3) {
            pattern = ',' + integer[x - 2] + integer[x - 1] + integer[x] + pattern;
        }
        pattern = pattern.slice(1);
        return temp[1] ? (pattern + '.' + temp[1]) : pattern;
    }
})(IntlBase || (IntlBase = {}));


/***/ }),

/***/ 21:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ParserBase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
var defaultNumberingSystem = {
    'latn': {
        '_digits': '0123456789',
        '_type': 'numeric'
    }
};

var latnRegex = /^[0-9]*$/;
var defaultNumberSymbols = {
    'decimal': '.',
    'group': ',',
    'percentSign': '%',
    'plusSign': '+',
    'minusSign': '-',
    'infinity': '∞',
    'nan': 'NaN',
    'exponential': 'E'
};
var latnNumberSystem = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
var ParserBase = (function () {
    function ParserBase() {
    }
    ParserBase.getMainObject = function (obj, cName) {
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('main.' + cName, obj);
    };
    ParserBase.getNumberingSystem = function (obj) {
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('supplemental.numberingSystems', obj) || this.numberingSystems;
    };
    ParserBase.reverseObject = function (prop, keys) {
        var propKeys = keys || Object.keys(prop);
        var res = {};
        for (var _i = 0, propKeys_1 = propKeys; _i < propKeys_1.length; _i++) {
            var key = propKeys_1[_i];
            if (!res.hasOwnProperty(prop[key])) {
                res[prop[key]] = key;
            }
        }
        return res;
    };
    ParserBase.getSymbolRegex = function (props) {
        var regexStr = props.map(function (str) {
            return str.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, '\\$1');
        }).join('|');
        return new RegExp(regexStr, 'g');
    };
    ParserBase.getSymbolMatch = function (prop) {
        var matchKeys = Object.keys(defaultNumberSymbols);
        var ret = {};
        for (var _i = 0, matchKeys_1 = matchKeys; _i < matchKeys_1.length; _i++) {
            var key = matchKeys_1[_i];
            ret[prop[key]] = defaultNumberSymbols[key];
        }
        return ret;
    };
    ParserBase.constructRegex = function (val) {
        var len = val.length;
        var ret = '';
        for (var i = 0; i < len; i++) {
            if (i !== len - 1) {
                ret += val[i] + '|';
            }
            else {
                ret += val[i];
            }
        }
        return ret;
    };
    ParserBase.convertValueParts = function (value, regex, obj) {
        return value.replace(regex, function (str) {
            return obj[str];
        });
    };
    ParserBase.getDefaultNumberingSystem = function (obj) {
        var ret = {};
        ret.obj = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('numbers', obj);
        ret.nSystem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('defaultNumberingSystem', ret.obj);
        return ret;
    };
    ParserBase.getCurrentNumericOptions = function (curObj, numberSystem, needSymbols) {
        var ret = {};
        var cur = this.getDefaultNumberingSystem(curObj);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(cur.nSystem)) {
            var digits = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(cur.nSystem + '._digits', numberSystem);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(digits)) {
                ret.numericPair = this.reverseObject(digits, latnNumberSystem);
                ret.numberParseRegex = new RegExp(this.constructRegex(digits), 'g');
                ret.numericRegex = '[' + digits[0] + '-' + digits[9] + ']';
                if (needSymbols) {
                    ret.numericRegex = digits[0] + '-' + digits[9];
                    ret.symbolNumberSystem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('symbols-numberSystem-' + cur.nSystem, cur.obj);
                    ret.symbolMatch = this.getSymbolMatch(ret.symbolNumberSystem);
                    ret.numberSystem = cur.nSystem;
                }
            }
        }
        return ret;
    };
    ParserBase.getNumberMapper = function (curObj, numberSystem, isNumber) {
        var ret = { mapper: {} };
        var cur = this.getDefaultNumberingSystem(curObj);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(cur.nSystem)) {
            ret.numberSystem = cur.nSystem;
            ret.numberSymbols = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('symbols-numberSystem-' + cur.nSystem, cur.obj);
            ret.timeSeparator = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('timeSeparator', ret.numberSymbols);
            var digits = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(cur.nSystem + '._digits', numberSystem);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(digits)) {
                for (var _i = 0, latnNumberSystem_1 = latnNumberSystem; _i < latnNumberSystem_1.length; _i++) {
                    var i = latnNumberSystem_1[_i];
                    ret.mapper[i] = digits[i];
                }
            }
        }
        return ret;
    };
    return ParserBase;
}());

ParserBase.nPair = 'numericPair';
ParserBase.nRegex = 'numericRegex';
ParserBase.numberingSystems = defaultNumberingSystem;


/***/ }),

/***/ 23:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChildProperty; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base__ = __webpack_require__(8);


var ChildProperty = (function () {
    function ChildProperty(parent, propName, defaultValue, isArray) {
        this.properties = {};
        this.changedProperties = {};
        this.childChangedProperties = {};
        this.oldProperties = {};
        this.finalUpdate = function () { };
        this.callChildDataBind = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('callChildDataBind', __WEBPACK_IMPORTED_MODULE_1__base__["a" /* Base */]);
        this.parentObj = parent;
        this.controlParent = this.parentObj.controlParent || this.parentObj;
        this.propName = propName;
        this.setProperties(defaultValue, true);
        this.isParentArray = isArray;
    }
    ChildProperty.prototype.updateChange = function (val, propName) {
        if (val === true) {
            this.parentObj.childChangedProperties[propName] = val;
        }
        else {
            delete this.parentObj.childChangedProperties[propName];
        }
        if (this.parentObj.updateChange) {
            this.parentObj.updateChange(val, this.parentObj.propName);
        }
    };
    ChildProperty.prototype.updateTimeOut = function () {
        if (this.parentObj.updateTimeOut) {
            this.parentObj.finalUpdate();
            this.parentObj.updateTimeOut();
        }
        else {
            this.parentObj.finalUpdate = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["b" /* setImmediate */])(this.parentObj.dataBind.bind(this.parentObj));
        }
    };
    ChildProperty.prototype.clearChanges = function () {
        this.finalUpdate();
        this.updateChange(false, this.propName);
        this.oldProperties = {};
        this.changedProperties = {};
    };
    ChildProperty.prototype.setProperties = function (prop, muteOnChange) {
        if (muteOnChange === true) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["h" /* merge */])(this, prop);
            this.updateChange(false, this.propName);
            this.clearChanges();
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["h" /* merge */])(this, prop);
        }
    };
    ChildProperty.prototype.dataBind = function () {
        this.callChildDataBind(this.childChangedProperties, this);
        if (this.isParentArray) {
            var curIndex = this.parentObj[this.propName].indexOf(this);
            if (Object.keys(this.changedProperties).length) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["d" /* setValue */])(this.propName + '.' + curIndex, this.changedProperties, this.parentObj.changedProperties);
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["d" /* setValue */])(this.propName + '.' + curIndex, this.oldProperties, this.parentObj.oldProperties);
            }
        }
        else {
            this.parentObj.changedProperties[this.propName] = this.changedProperties;
            this.parentObj.oldProperties[this.propName] = this.oldProperties;
        }
        this.clearChanges();
    };
    ChildProperty.prototype.saveChanges = function (key, newValue, oldValue) {
        if (this.controlParent.isProtectedOnChange) {
            return;
        }
        this.oldProperties[key] = oldValue;
        this.changedProperties[key] = newValue;
        this.updateChange(true, this.propName);
        this.finalUpdate();
        this.updateTimeOut();
    };
    return ChildProperty;
}());



/***/ }),

/***/ 24:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return onIntlChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return rightToLeft; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return cldrData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return defaultCulture; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return defaultCurrencyCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return Internationalization; });
/* harmony export (immutable) */ __webpack_exports__["g"] = setCulture;
/* harmony export (immutable) */ __webpack_exports__["h"] = setCurrencyCode;
/* harmony export (immutable) */ __webpack_exports__["i"] = loadCldr;
/* harmony export (immutable) */ __webpack_exports__["j"] = enableRtl;
/* harmony export (immutable) */ __webpack_exports__["k"] = getNumericObject;
/* harmony export (immutable) */ __webpack_exports__["l"] = getDefaultDateObject;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__intl_date_formatter__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__intl_number_formatter__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__intl_date_parser__ = __webpack_require__(82);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__intl_number_parser__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__observer__ = __webpack_require__(30);







var onIntlChange = new __WEBPACK_IMPORTED_MODULE_6__observer__["a" /* Observer */]();
var rightToLeft = false;
var cldrData = {};
var defaultCulture = 'en-US';
var defaultCurrencyCode = 'USD';
var mapper = ['numericObject', 'dateObject'];
var Internationalization = (function () {
    function Internationalization(cultureName) {
        if (cultureName) {
            this.culture = cultureName;
        }
    }
    Internationalization.prototype.getDateFormat = function (options) {
        return __WEBPACK_IMPORTED_MODULE_0__intl_date_formatter__["a" /* DateFormat */].dateFormat(this.getCulture(), options || { type: 'date', skeleton: 'short' }, cldrData);
    };
    Internationalization.prototype.getNumberFormat = function (options) {
        if (options && !options.currency) {
            options.currency = defaultCurrencyCode;
        }
        return __WEBPACK_IMPORTED_MODULE_1__intl_number_formatter__["a" /* NumberFormat */].numberFormatter(this.getCulture(), options || {}, cldrData);
    };
    Internationalization.prototype.getDateParser = function (options) {
        return __WEBPACK_IMPORTED_MODULE_2__intl_date_parser__["a" /* DateParser */].dateParser(this.getCulture(), options || { skeleton: 'short', type: 'date' }, cldrData);
    };
    Internationalization.prototype.getNumberParser = function (options) {
        return __WEBPACK_IMPORTED_MODULE_3__intl_number_parser__["a" /* NumberParser */].numberParser(this.getCulture(), options || { format: 'N' }, cldrData);
    };
    Internationalization.prototype.formatNumber = function (value, option) {
        return this.getNumberFormat(option)(value);
    };
    Internationalization.prototype.formatDate = function (value, option) {
        return this.getDateFormat(option)(value);
    };
    Internationalization.prototype.parseDate = function (value, option) {
        return this.getDateParser(option)(value);
    };
    Internationalization.prototype.parseNumber = function (value, option) {
        return this.getNumberParser(option)(value);
    };
    Internationalization.prototype.getDatePattern = function (option, isExcelFormat) {
        return __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getActualDateTimeFormat(this.getCulture(), option, cldrData, isExcelFormat);
    };
    Internationalization.prototype.getNumberPattern = function (option) {
        return __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getActualNumberFormat(this.getCulture(), option, cldrData);
    };
    Internationalization.prototype.getCulture = function () {
        return this.culture || defaultCulture;
    };
    return Internationalization;
}());

function setCulture(cultureName) {
    defaultCulture = cultureName;
    onIntlChange.notify('notifyExternalChange', { 'locale': defaultCulture });
}
function setCurrencyCode(currencyCode) {
    defaultCurrencyCode = currencyCode;
}
function loadCldr() {
    var data = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        data[_i] = arguments[_i];
    }
    for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {
        var obj = data_1[_a];
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util__["i" /* extend */])(cldrData, obj, {}, true);
    }
}
function enableRtl(status) {
    if (status === void 0) { status = true; }
    rightToLeft = status;
    onIntlChange.notify('notifyExternalChange', { enableRtl: rightToLeft });
}
function getNumericObject(locale, type) {
    var numObject = __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getDependables(cldrData, locale, true)[mapper[0]];
    var dateObject = __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getDependables(cldrData, locale)[mapper[1]];
    var numSystem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util__["c" /* getValue */])('defaultNumberingSystem', numObject);
    var symbPattern = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util__["c" /* getValue */])('symbols-numberSystem-' + numSystem, numObject);
    var pattern = __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getSymbolPattern(type || 'decimal', numSystem, numObject, false);
    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util__["i" /* extend */])(symbPattern, __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getFormatData(pattern, true, '', true), { 'dateSeparator': __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getDateSeparator(dateObject) });
}
function getDefaultDateObject() {
    return __WEBPACK_IMPORTED_MODULE_4__intl_intl_base__["a" /* IntlBase */].getDependables(cldrData, '', false)[mapper[1]];
}


/***/ }),

/***/ 287:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(74), __webpack_require__(73), __webpack_require__(55), __webpack_require__(56)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, pager_1, external_message_1, numeric_container_1, pager_message_1) {
    "use strict";
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    __export(pager_1);
    __export(external_message_1);
    __export(numeric_container_1);
    __export(pager_message_1);
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),

/***/ 30:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Observer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

var Observer = (function () {
    function Observer(context) {
        this.boundedEvents = {};
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(context)) {
            return;
        }
        this.context = context;
    }
    ;
    Observer.prototype.on = function (property, handler, context) {
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(handler)) {
            return;
        }
        var cntxt = context || this.context;
        if (this.notExist(property)) {
            this.boundedEvents[property] = [{ handler: handler, context: cntxt }];
            return;
        }
        if (!this.isHandlerPresent(this.boundedEvents[property], handler)) {
            this.boundedEvents[property].push({ handler: handler, context: cntxt });
        }
    };
    Observer.prototype.off = function (property, handler) {
        if (this.notExist(property)) {
            return;
        }
        var curObject = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(property, this.boundedEvents);
        if (handler) {
            for (var i = 0; i < curObject.length; i++) {
                if (handler === curObject[i].handler) {
                    curObject.splice(i, 1);
                    break;
                }
            }
        }
        else {
            delete this.boundedEvents[property];
        }
    };
    Observer.prototype.notify = function (property, argument) {
        if (this.notExist(property)) {
            return;
        }
        if (argument) {
            argument.name = property;
        }
        var curObject = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(property, this.boundedEvents).slice(0);
        for (var _i = 0, curObject_1 = curObject; _i < curObject_1.length; _i++) {
            var cur = curObject_1[_i];
            cur.handler.call(cur.context, argument);
        }
    };
    Observer.prototype.destroy = function () {
        this.boundedEvents = this.context = undefined;
    };
    Observer.prototype.notExist = function (prop) {
        return this.boundedEvents.hasOwnProperty(prop) === false;
    };
    Observer.prototype.isHandlerPresent = function (boundedEvents, handler) {
        for (var _i = 0, boundedEvents_1 = boundedEvents; _i < boundedEvents_1.length; _i++) {
            var cur = boundedEvents_1[_i];
            if (cur.handler === handler) {
                return true;
            }
        }
        return false;
    };
    return Observer;
}());



/***/ }),

/***/ 43:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export basicPatterns */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DateFormat; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__parser_base__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__intl_base__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util__ = __webpack_require__(1);



var abbreviateRegexGlobal = /\/MMMMM|MMMM|MMM|a|LLL|EEEEE|EEEE|E|K|ccc|G+|z+/gi;
var standalone = 'stand-alone';
var weekdayKey = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];
var basicPatterns = ['short', 'medium', 'long', 'full'];
var timeSetter = {
    m: 'getMinutes',
    h: 'getHours',
    H: 'getHours',
    s: 'getSeconds',
    d: 'getDate',
};
var datePartMatcher = {
    'M': 'month',
    'd': 'day',
    'E': 'weekday',
    'c': 'weekday',
    'y': 'year',
    'm': 'minute',
    'h': 'hour',
    'H': 'hour',
    's': 'second',
    'L': 'month',
    'a': 'designator',
    'z': 'timeZone',
    'Z': 'timeZone',
    'G': 'era'
};
var timeSeparator = 'timeSeparator';
var DateFormat = (function () {
    function DateFormat() {
    }
    DateFormat.dateFormat = function (culture, option, cldr) {
        var _this = this;
        var dependable = __WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].getDependables(cldr, culture);
        var formatOptions = {};
        var resPattern = option.format || __WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].getResultantPattern(option.skeleton, dependable.dateObject, option.type);
        formatOptions.dateSeperator = __WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].getDateSeparator(dependable.dateObject);
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(resPattern)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["q" /* throwError */])('Format options or type given must be invalid');
        }
        else {
            formatOptions.pattern = resPattern;
            formatOptions.numMapper = __WEBPACK_IMPORTED_MODULE_0__parser_base__["a" /* ParserBase */].getNumberMapper(dependable.parserObject, __WEBPACK_IMPORTED_MODULE_0__parser_base__["a" /* ParserBase */].getNumberingSystem(cldr));
            var patternMatch = resPattern.match(abbreviateRegexGlobal) || [];
            for (var _i = 0, patternMatch_1 = patternMatch; _i < patternMatch_1.length; _i++) {
                var str = patternMatch_1[_i];
                var len = str.length;
                var char = str[0];
                if (char === 'K') {
                    char = 'h';
                }
                var charKey = datePartMatcher[char];
                switch (char) {
                    case 'E':
                    case 'c':
                        formatOptions.weekday = dependable.dateObject[__WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].days][standalone][__WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].monthIndex[len]];
                        break;
                    case 'M':
                    case 'L':
                        formatOptions.month = dependable.dateObject[__WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].month][standalone][__WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].monthIndex[len]];
                        break;
                    case 'a':
                        formatOptions.designator = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["c" /* getValue */])('dayPeriods.format.wide', dependable.dateObject);
                        break;
                    case 'G':
                        var eText = (len <= 3) ? 'eraAbbr' : (len === 4) ? 'eraNames' : 'eraNarrow';
                        formatOptions.era = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["c" /* getValue */])('eras.' + eText, dependable.dateObject);
                        break;
                    case 'z':
                        formatOptions.timeZone = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["c" /* getValue */])('dates.timeZoneNames', dependable.parserObject);
                        break;
                }
            }
        }
        return function (value) {
            if (isNaN(value.getDate())) {
                return null;
            }
            return _this.intDateFormatter(value, formatOptions);
        };
    };
    DateFormat.intDateFormatter = function (value, options) {
        var pattern = options.pattern;
        var ret = '';
        var matches = pattern.match(__WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].dateParseRegex);
        for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {
            var match = matches_1[_i];
            var length_1 = match.length;
            var char = match[0];
            if (char === 'K') {
                char = 'h';
            }
            var curval = void 0;
            var isNumber = void 0;
            var processNumber = void 0;
            var curstr = '';
            switch (char) {
                case 'M':
                case 'L':
                    curval = value.getMonth() + 1;
                    if (length_1 > 2) {
                        ret += options.month[curval];
                    }
                    else {
                        isNumber = true;
                    }
                    break;
                case 'E':
                case 'c':
                    ret += options.weekday[weekdayKey[value.getDay()]];
                    break;
                case 'H':
                case 'h':
                case 'm':
                case 's':
                case 'd':
                    isNumber = true;
                    curval = value[timeSetter[char]]();
                    if (char === 'h') {
                        curval = curval % 12 || 12;
                    }
                    break;
                case 'y':
                    processNumber = true;
                    curstr += value.getFullYear();
                    if (length_1 === 2) {
                        curstr = curstr.substr(curstr.length - 2);
                    }
                    break;
                case 'a':
                    var desig = value.getHours() < 12 ? 'am' : 'pm';
                    ret += options.designator[desig];
                    break;
                case 'G':
                    var dec = value.getFullYear() < 0 ? 0 : 1;
                    ret += options.era[dec];
                    break;
                case '\'':
                    ret += (match === '\'\'') ? '\'' : match.replace(/\'/g, '');
                    break;
                case 'z':
                    var timezone = value.getTimezoneOffset();
                    var pattern_1 = (length_1 < 4) ? '+H;-H' : options.timeZone.hourFormat;
                    pattern_1 = pattern_1.replace(/:/g, options.numMapper.timeSeparator);
                    if (timezone === 0) {
                        ret += options.timeZone.gmtZeroFormat;
                    }
                    else {
                        processNumber = true;
                        curstr = this.getTimeZoneValue(timezone, pattern_1);
                    }
                    curstr = options.timeZone.gmtFormat.replace(/\{0\}/, curstr);
                    break;
                case ':':
                    ret += options.numMapper.numberSymbols[timeSeparator];
                    break;
                case '/':
                    ret += options.dateSeperator;
                    break;
                default:
                    ret += match;
            }
            if (isNumber) {
                processNumber = true;
                curstr = this.checkTwodigitNumber(curval, length_1);
            }
            if (processNumber) {
                ret += __WEBPACK_IMPORTED_MODULE_0__parser_base__["a" /* ParserBase */].convertValueParts(curstr, __WEBPACK_IMPORTED_MODULE_1__intl_base__["a" /* IntlBase */].latnParseRegex, options.numMapper.mapper);
            }
        }
        return ret;
    };
    DateFormat.checkTwodigitNumber = function (val, len) {
        var ret = val + '';
        if (len === 2 && ret.length !== 2) {
            return '0' + ret;
        }
        return ret;
    };
    DateFormat.getTimeZoneValue = function (tVal, pattern) {
        var _this = this;
        var splt = pattern.split(';');
        var curPattern = splt[tVal > 0 ? 1 : 0];
        var no = Math.abs(tVal);
        return curPattern = curPattern.replace(/HH?|mm/g, function (str) {
            var len = str.length;
            var ishour = str.indexOf('H') !== -1;
            return _this.checkTwodigitNumber(Math.floor(ishour ? (no / 60) : (no % 60)), len);
        });
    };
    return DateFormat;
}());



/***/ }),

/***/ 44:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NumberFormat; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__internationalization__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__intl_base__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__parser_base__ = __webpack_require__(21);




var errorText = {
    'ms': 'minimumSignificantDigits',
    'ls': 'maximumSignificantDigits',
    'mf': 'minimumFractionDigits',
    'lf': 'maximumFractionDigits',
};
var integerError = 'minimumIntegerDigits';
var percentSign = 'percentSign';
var minusSign = 'minusSign';
var spaceRegex = /\s/;
var mapper = ['infinity', 'nan', 'group', 'decimal'];
var infinity = 'infinity';
var nan = 'nan';
var NumberFormat = (function () {
    function NumberFormat() {
    }
    NumberFormat.numberFormatter = function (culture, option, cldr) {
        var _this = this;
        var fOptions = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])({}, option);
        var cOptions = {};
        var dOptions = {};
        var symbolPattern;
        var dependable = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getDependables(cldr, culture, true);
        dOptions.numberMapper = __WEBPACK_IMPORTED_MODULE_3__parser_base__["a" /* ParserBase */].getNumberMapper(dependable.parserObject, __WEBPACK_IMPORTED_MODULE_3__parser_base__["a" /* ParserBase */].getNumberingSystem(cldr), true);
        dOptions.currencySymbol = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getCurrencySymbol(dependable.numericObject, fOptions.currency || __WEBPACK_IMPORTED_MODULE_1__internationalization__["e" /* defaultCurrencyCode */]);
        dOptions.percentSymbol = dOptions.numberMapper.numberSymbols[percentSign];
        dOptions.minusSymbol = dOptions.numberMapper.numberSymbols[minusSign];
        var symbols = dOptions.numberMapper.numberSymbols;
        if ((option.format) && !(__WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].formatRegex.test(option.format))) {
            cOptions = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].customFormat(option.format, dOptions, dependable.numericObject);
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(fOptions, __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getProperNumericSkeleton(option.format || 'N'));
            fOptions.isCurrency = fOptions.type === 'currency';
            fOptions.isPercent = fOptions.type === 'percent';
            symbolPattern = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getSymbolPattern(fOptions.type, dOptions.numberMapper.numberSystem, dependable.numericObject, fOptions.isAccount);
            fOptions.groupOne = this.checkValueRange(fOptions.maximumSignificantDigits, fOptions.minimumSignificantDigits, true);
            this.checkValueRange(fOptions.maximumFractionDigits, fOptions.minimumFractionDigits, false, true);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(fOptions.fractionDigits)) {
                fOptions.minimumFractionDigits = fOptions.maximumFractionDigits = fOptions.fractionDigits;
            }
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(fOptions.useGrouping)) {
                fOptions.useGrouping = true;
            }
            if (fOptions.isCurrency) {
                symbolPattern = symbolPattern.replace(/\u00A4/g, __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].defaultCurrency);
            }
            var split = symbolPattern.split(';');
            cOptions.nData = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getFormatData(split[1] || '-' + split[0], true, dOptions.currencySymbol);
            cOptions.pData = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getFormatData(split[0], false, dOptions.currencySymbol);
            if (fOptions.useGrouping) {
                fOptions.groupSeparator = symbols[mapper[2]];
                fOptions.groupData = this.getGroupingDetails(split[0]);
            }
            var minFrac = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(fOptions.minimumFractionDigits);
            if (minFrac) {
                fOptions.minimumFractionDigits = cOptions.nData.minimumFraction;
            }
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(fOptions.maximumFractionDigits)) {
                var mval = cOptions.nData.maximumFraction;
                fOptions.maximumFractionDigits = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(mval) && fOptions.isPercent ? 0 : mval;
            }
            var mfrac = fOptions.minimumFractionDigits;
            var lfrac = fOptions.maximumFractionDigits;
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(mfrac) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(lfrac)) {
                if (mfrac > lfrac) {
                    fOptions.maximumFractionDigits = mfrac;
                }
            }
        }
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(cOptions.nData, fOptions);
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(cOptions.pData, fOptions);
        return function (value) {
            if (isNaN(value)) {
                return symbols[mapper[1]];
            }
            else if (!isFinite(value)) {
                return symbols[mapper[0]];
            }
            return _this.intNumberFormatter(value, cOptions, dOptions);
        };
    };
    NumberFormat.getGroupingDetails = function (pattern) {
        var ret = {};
        var match = pattern.match(__WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].negativeDataRegex);
        if (match && match[4]) {
            var pattern_1 = match[4];
            var p = pattern_1.lastIndexOf(',');
            if (p !== -1) {
                var temp = pattern_1.split('.')[0];
                ret.primary = (temp.length - p) - 1;
                var s = pattern_1.lastIndexOf(',', p - 1);
                if (s !== -1) {
                    ret.secondary = p - 1 - s;
                }
            }
        }
        return ret;
    };
    NumberFormat.checkValueRange = function (val1, val2, checkbothExist, isFraction) {
        var decide = isFraction ? 'f' : 's';
        var dint = 0;
        var str1 = errorText['l' + decide];
        var str2 = errorText['m' + decide];
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(val1)) {
            this.checkRange(val1, str1, isFraction);
            dint++;
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(val2)) {
            this.checkRange(val2, str2, isFraction);
            dint++;
        }
        if (dint === 2) {
            if (val1 < val2) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["q" /* throwError */])(str2 + 'specified must be less than the' + str1);
            }
            else {
                return true;
            }
        }
        else if (checkbothExist && dint === 1) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["q" /* throwError */])('Both' + str2 + 'and' + str2 + 'must be present');
        }
        return false;
    };
    NumberFormat.checkRange = function (val, text, isFraction) {
        var range = isFraction ? [0, 20] : [1, 21];
        if (val < range[0] || val > range[1]) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["q" /* throwError */])(text + 'value must be within the range' + range[0] + 'to' + range[1]);
        }
    };
    NumberFormat.intNumberFormatter = function (value, fOptions, dOptions) {
        var curData;
        if (value < 0) {
            value = value * -1;
            curData = fOptions.nData;
        }
        else if (value === 0) {
            curData = fOptions.zeroData || fOptions.pData;
        }
        else {
            curData = fOptions.pData;
        }
        var fValue = '';
        if (curData.isPercent) {
            value = value * 100;
        }
        if (curData.groupOne) {
            fValue = this.processSignificantDigits(value, curData.minimumSignificantDigits, curData.maximumSignificantDigits);
        }
        else {
            fValue = this.processFraction(value, curData.minimumFractionDigits, curData.maximumFractionDigits);
            if (curData.minimumIntegerDigits) {
                fValue = this.processMinimumIntegers(fValue, curData.minimumIntegerDigits);
            }
        }
        fValue = fValue.replace('.', dOptions.numberMapper.numberSymbols[mapper[3]]);
        if (curData.useGrouping) {
            fValue = this.groupNumbers(fValue, curData.groupData.primary, curData.groupSeparator || ',', dOptions.numberMapper.numberSymbols[mapper[3]] || '.', curData.groupData.secondary);
        }
        fValue = __WEBPACK_IMPORTED_MODULE_3__parser_base__["a" /* ParserBase */].convertValueParts(fValue, __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].latnParseRegex, dOptions.numberMapper.mapper);
        return curData.nlead + fValue + curData.nend;
    };
    NumberFormat.processSignificantDigits = function (value, min, max) {
        var temp = value + '';
        var tn;
        var length = temp.length;
        if (length < min) {
            return value.toPrecision(min);
        }
        else {
            temp = value.toPrecision(max);
            tn = +temp;
            return tn + '';
        }
    };
    NumberFormat.groupNumbers = function (val, level1, sep, decimalSymbol, level2) {
        var flag = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(level2) && level2 !== 0;
        var split = val.split(decimalSymbol);
        var prefix = split[0];
        var length = prefix.length;
        var str = '';
        while (length > level1) {
            str = prefix.slice(length - level1, length) + (str.length ?
                (sep + str) : '');
            length -= level1;
            if (flag) {
                level1 = level2;
                flag = false;
            }
        }
        split[0] = prefix.slice(0, length) + (str.length ? sep : '') + str;
        return split.join(decimalSymbol);
    };
    NumberFormat.processFraction = function (value, min, max) {
        var temp = (value + '').split('.')[1];
        var length = temp ? temp.length : 0;
        if (min && length < min) {
            var ret = '';
            if (length === 0) {
                ret = value.toFixed(min);
            }
            else {
                ret += value;
                for (var j = 0; j < min - length; j++) {
                    ret += '0';
                }
                return ret;
            }
            return value.toFixed(min);
        }
        else if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(max) && (length > max || max === 0)) {
            return value.toFixed(max);
        }
        return value + '';
    };
    NumberFormat.processMinimumIntegers = function (value, min) {
        var temp = value.split('.');
        var lead = temp[0];
        var len = lead.length;
        if (len < min) {
            for (var i = 0; i < min - len; i++) {
                lead = '0' + lead;
            }
            temp[0] = lead;
        }
        return temp.join('.');
    };
    return NumberFormat;
}());



/***/ }),

/***/ 45:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ModuleLoader; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

var MODULE_SUFFIX = 'Module';
var ModuleLoader = (function () {
    function ModuleLoader(parent) {
        this.loadedModules = [];
        this.parent = parent;
    }
    ;
    ModuleLoader.prototype.inject = function (requiredModules, moduleList) {
        var reqLength = requiredModules.length;
        if (reqLength === 0) {
            this.clean();
            return;
        }
        if (this.loadedModules.length) {
            this.clearUnusedModule(requiredModules);
        }
        for (var i = 0; i < reqLength; i++) {
            var modl = requiredModules[i];
            for (var _i = 0, moduleList_1 = moduleList; _i < moduleList_1.length; _i++) {
                var module = moduleList_1[_i];
                var modName = modl.member;
                if (module.prototype.getModuleName() === modl.member && !this.isModuleLoaded(modName)) {
                    var moduleObject = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["a" /* createInstance */])(module, modl.args);
                    var memberName = this.getMemberName(modName);
                    if (modl.isProperty) {
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["d" /* setValue */])(memberName, module, this.parent);
                    }
                    else {
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["d" /* setValue */])(memberName, moduleObject, this.parent);
                    }
                    var loadedModule = modl;
                    loadedModule.member = memberName;
                    this.loadedModules.push(loadedModule);
                }
            }
        }
    };
    ModuleLoader.prototype.clean = function () {
        for (var _i = 0, _a = this.loadedModules; _i < _a.length; _i++) {
            var modules = _a[_i];
            if (!modules.isProperty) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(modules.member, this.parent).destroy();
            }
        }
        this.loadedModules = [];
    };
    ModuleLoader.prototype.clearUnusedModule = function (moduleList) {
        var _this = this;
        var usedModules = moduleList.map(function (arg) { return _this.getMemberName(arg.member); });
        var removableModule = this.loadedModules.filter(function (module) {
            return usedModules.indexOf(module.member) === -1;
        });
        for (var _i = 0, removableModule_1 = removableModule; _i < removableModule_1.length; _i++) {
            var mod = removableModule_1[_i];
            if (!mod.isProperty) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(mod.member, this.parent).destroy();
            }
            this.loadedModules.splice(this.loadedModules.indexOf(mod), 1);
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["e" /* deleteObject */])(this.parent, mod.member);
        }
    };
    ModuleLoader.prototype.getMemberName = function (name) {
        return name[0].toLowerCase() + name.substring(1) + MODULE_SUFFIX;
    };
    ModuleLoader.prototype.isModuleLoaded = function (modName) {
        for (var _i = 0, _a = this.loadedModules; _i < _a.length; _i++) {
            var mod = _a[_i];
            if (mod.member === this.getMemberName(modName)) {
                return true;
            }
        }
        return false;
    };
    return ModuleLoader;
}());



/***/ }),

/***/ 55:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var NumericContainer = (function () {
        function NumericContainer(pagerModule) {
            this.pagerModule = pagerModule;
        }
        NumericContainer.prototype.render = function () {
            this.pagerElement = this.pagerModule.element;
            this.renderNumericContainer();
            this.refreshNumericLinks();
            this.wireEvents();
        };
        NumericContainer.prototype.refresh = function () {
            var pagerObj = this.pagerModule;
            pagerObj.totalPages = (pagerObj.totalRecordsCount % pagerObj.pageSize === 0) ? (pagerObj.totalRecordsCount / pagerObj.pageSize) :
                (parseInt((pagerObj.totalRecordsCount / pagerObj.pageSize).toString(), 10) + 1);
            if (this.links.length) {
                this.updateLinksHtml();
            }
            this.updateStyles();
        };
        NumericContainer.prototype.refreshNumericLinks = function () {
            var link;
            var pagerObj = this.pagerModule;
            var div = pagerObj.element.querySelector('.e-numericcontainer');
            var frag = document.createDocumentFragment();
            div.innerHTML = '';
            for (var i = 1; i <= pagerObj.pageCount; i++) {
                link = ej2_base_3.createElement('a', {
                    className: 'e-link e-numericitem e-spacing e-pager-default',
                    attrs: { role: 'link', tabindex: '-1', 'aria-label': 'Goto Page ' + i }
                });
                if (pagerObj.currentPage === i) {
                    ej2_base_3.classList(link, ['e-currentitem', 'e-active'], ['e-pager-default']);
                }
                frag.appendChild(link);
            }
            div.appendChild(frag);
            this.links = [].slice.call(div.childNodes);
        };
        NumericContainer.prototype.wireEvents = function () {
            ej2_base_2.EventHandler.add(this.pagerElement, 'click', this.clickHandler, this);
        };
        NumericContainer.prototype.unwireEvents = function () {
            ej2_base_2.EventHandler.remove(this.pagerElement, 'click', this.clickHandler);
        };
        NumericContainer.prototype.destroy = function () {
            this.unwireEvents();
        };
        NumericContainer.prototype.renderNumericContainer = function () {
            this.element = ej2_base_3.createElement('div', {
                className: 'e-pagercontainer', attrs: { 'role': 'navigation' }
            });
            this.renderFirstNPrev(this.element);
            this.renderPrevPagerSet(this.element);
            this.element.appendChild(ej2_base_3.createElement('div', { className: 'e-numericcontainer' }));
            this.renderNextPagerSet(this.element);
            this.renderNextNLast(this.element);
            this.pagerModule.element.appendChild(this.element);
        };
        NumericContainer.prototype.renderFirstNPrev = function (pagerContainer) {
            this.first = ej2_base_3.createElement('div', {
                className: 'e-first e-icons e-icon-first',
                attrs: {
                    title: this.pagerModule.getLocalizedLabel('firstPageTooltip'),
                    'aria-label': this.pagerModule.getLocalizedLabel('firstPageTooltip'),
                    tabindex: '-1'
                }
            });
            this.prev = ej2_base_3.createElement('div', {
                className: 'e-prev e-icons e-icon-prev',
                attrs: {
                    title: this.pagerModule.getLocalizedLabel('previousPageTooltip'),
                    'aria-label': this.pagerModule.getLocalizedLabel('previousPageTooltip'),
                    tabindex: '-1'
                }
            });
            ej2_base_3.append([this.first, this.prev], pagerContainer);
        };
        NumericContainer.prototype.renderPrevPagerSet = function (pagerContainer) {
            this.PP = ej2_base_3.createElement('a', {
                className: 'e-link e-pp e-spacing', innerHTML: '...',
                attrs: {
                    title: this.pagerModule.getLocalizedLabel('previousPagerTooltip'), role: 'link',
                    'aria-label': this.pagerModule.getLocalizedLabel('previousPagerTooltip'),
                    tabindex: '-1'
                }
            });
            pagerContainer.appendChild(this.PP);
        };
        NumericContainer.prototype.renderNextPagerSet = function (pagerContainer) {
            this.NP = ej2_base_3.createElement('a', {
                className: 'e-link e-np e-spacing',
                innerHTML: '...', attrs: {
                    title: this.pagerModule.getLocalizedLabel('nextPagerTooltip'), role: 'link',
                    'aria-label': this.pagerModule.getLocalizedLabel('nextPagerTooltip'),
                    tabindex: '-1'
                }
            });
            pagerContainer.appendChild(this.NP);
        };
        NumericContainer.prototype.renderNextNLast = function (pagerContainer) {
            this.next = ej2_base_3.createElement('div', {
                className: 'e-next e-icons e-icon-next',
                attrs: {
                    title: this.pagerModule.getLocalizedLabel('nextPageTooltip'),
                    'aria-label': this.pagerModule.getLocalizedLabel('nextPageTooltip'),
                    tabindex: '-1'
                }
            });
            this.last = ej2_base_3.createElement('div', {
                className: 'e-last e-icons e-icon-last',
                attrs: {
                    title: this.pagerModule.getLocalizedLabel('lastPageTooltip'),
                    'aria-label': this.pagerModule.getLocalizedLabel('lastPageTooltip'),
                    tabindex: '-1'
                }
            });
            ej2_base_3.append([this.next, this.last], pagerContainer);
        };
        NumericContainer.prototype.clickHandler = function (e) {
            var pagerObj = this.pagerModule;
            var target = e.target;
            pagerObj.previousPageNo = pagerObj.currentPage;
            if (!target.classList.contains('e-disable') && !ej2_base_1.isNullOrUndefined(target.getAttribute('index'))) {
                pagerObj.currentPage = parseInt(target.getAttribute('index'), 10);
                pagerObj.dataBind();
            }
            return false;
        };
        NumericContainer.prototype.updateLinksHtml = function () {
            var pagerObj = this.pagerModule;
            var currentPageSet;
            var pageNo;
            pagerObj.currentPage = pagerObj.totalPages === 1 ? 1 : pagerObj.currentPage;
            if (pagerObj.currentPage > pagerObj.totalPages && pagerObj.totalPages) {
                pagerObj.currentPage = pagerObj.totalPages;
            }
            currentPageSet = parseInt((pagerObj.currentPage / pagerObj.pageCount).toString(), 10);
            if (pagerObj.currentPage % pagerObj.pageCount === 0 && currentPageSet > 0) {
                currentPageSet = currentPageSet - 1;
            }
            for (var i = 0; i < pagerObj.pageCount; i++) {
                pageNo = (currentPageSet * pagerObj.pageCount) + 1 + i;
                if (pageNo <= pagerObj.totalPages) {
                    this.links[i].style.display = '';
                    this.links[i].setAttribute('index', pageNo.toString());
                    this.links[i].innerHTML = !pagerObj.customText ? pageNo.toString() : pagerObj.customText + pageNo;
                    if (pagerObj.currentPage !== pageNo) {
                        this.links[i].classList.add('e-pager-default');
                    }
                    else {
                        this.links[i].classList.remove('e-pager-default');
                    }
                }
                else {
                    this.links[i].style.display = 'none';
                }
                ej2_base_3.classList(this.links[i], [], ['e-currentitem', 'e-active']);
            }
            this.first.setAttribute('index', '1');
            this.last.setAttribute('index', pagerObj.totalPages.toString());
            this.prev.setAttribute('index', (pagerObj.currentPage - 1).toString());
            this.next.setAttribute('index', (pagerObj.currentPage + 1).toString());
            this.pagerElement.querySelector('.e-mfirst').setAttribute('index', '1');
            this.pagerElement.querySelector('.e-mlast').setAttribute('index', pagerObj.totalPages.toString());
            this.pagerElement.querySelector('.e-mprev').setAttribute('index', (pagerObj.currentPage - 1).toString());
            this.pagerElement.querySelector('.e-mnext').setAttribute('index', (pagerObj.currentPage + 1).toString());
            this.PP.setAttribute('index', (parseInt(this.links[0].getAttribute('index'), 10) - pagerObj.pageCount).toString());
            this.NP.setAttribute('index', (parseInt(this.links[this.links.length - 1].getAttribute('index'), 10) + 1).toString());
        };
        NumericContainer.prototype.updateStyles = function () {
            this.updateFirstNPrevStyles();
            this.updatePrevPagerSetStyles();
            this.updateNextPagerSetStyles();
            this.updateNextNLastStyles();
            if (this.links.length) {
                ej2_base_3.classList(this.links[(this.pagerModule.currentPage - 1) % this.pagerModule.pageCount], ['e-currentitem', 'e-active'], []);
            }
        };
        NumericContainer.prototype.updateFirstNPrevStyles = function () {
            var firstPage = ['e-firstpage', 'e-pager-default'];
            var firstPageDisabled = ['e-firstpagedisabled', 'e-disable'];
            var prevPage = ['e-prevpage', 'e-pager-default'];
            var prevPageDisabled = ['e-prevpagedisabled', 'e-disable'];
            if (this.pagerModule.currentPage > 1) {
                ej2_base_3.classList(this.prev, prevPage, prevPageDisabled);
                ej2_base_3.classList(this.first, firstPage, firstPageDisabled);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mfirst'), firstPage, firstPageDisabled);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mprev'), prevPage, prevPageDisabled);
            }
            else {
                ej2_base_3.classList(this.prev, prevPageDisabled, prevPage);
                ej2_base_3.classList(this.first, firstPageDisabled, firstPage);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mprev'), prevPageDisabled, prevPage);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mfirst'), firstPageDisabled, firstPage);
            }
        };
        NumericContainer.prototype.updatePrevPagerSetStyles = function () {
            if (this.pagerModule.currentPage > this.pagerModule.pageCount) {
                ej2_base_3.classList(this.PP, ['e-numericitem', 'e-pager-default'], ['e-nextprevitemdisabled', 'e-disable']);
            }
            else {
                ej2_base_3.classList(this.PP, ['e-nextprevitemdisabled', 'e-disable'], ['e-numericitem', 'e-pager-default']);
            }
        };
        NumericContainer.prototype.updateNextPagerSetStyles = function () {
            var pagerObj = this.pagerModule;
            var firstPage = this.links[0].innerHTML.replace(pagerObj.customText, '');
            if (!firstPage.length || !this.links.length || (parseInt(firstPage, 10) + pagerObj.pageCount > pagerObj.totalPages)) {
                ej2_base_3.classList(this.NP, ['e-nextprevitemdisabled', 'e-disable'], ['e-numericitem', 'e-pager-default']);
            }
            else {
                ej2_base_3.classList(this.NP, ['e-numericitem', 'e-pager-default'], ['e-nextprevitemdisabled', 'e-disable']);
            }
        };
        NumericContainer.prototype.updateNextNLastStyles = function () {
            var lastPage = ['e-lastpage', 'e-pager-default'];
            var lastPageDisabled = ['e-lastpagedisabled', 'e-disable'];
            var nextPage = ['e-nextpage', 'e-pager-default'];
            var nextPageDisabled = ['e-nextpagedisabled', 'e-disable'];
            var pagerObj = this.pagerModule;
            if (pagerObj.currentPage === pagerObj.totalPages || pagerObj.totalRecordsCount === 0) {
                ej2_base_3.classList(this.last, lastPageDisabled, lastPage);
                ej2_base_3.classList(this.next, nextPageDisabled, nextPage);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mlast'), lastPageDisabled, lastPage);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mnext'), nextPageDisabled, nextPage);
            }
            else {
                ej2_base_3.classList(this.last, lastPage, lastPageDisabled);
                ej2_base_3.classList(this.next, nextPage, nextPageDisabled);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mlast'), lastPage, lastPageDisabled);
                ej2_base_3.classList(this.pagerElement.querySelector('.e-mnext'), nextPage, nextPageDisabled);
            }
        };
        return NumericContainer;
    }());
    exports.NumericContainer = NumericContainer;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),

/***/ 56:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var PagerMessage = (function () {
        function PagerMessage(pagerModule) {
            this.pagerModule = pagerModule;
        }
        PagerMessage.prototype.render = function () {
            var div = ej2_base_1.createElement('div', { className: 'e-parentmsgbar', attrs: { 'aria-label': 'Pager Information' } });
            this.pageNoMsgElem = ej2_base_1.createElement('span', { className: 'e-pagenomsg', styles: 'textalign:right' });
            this.pageCountMsgElem = ej2_base_1.createElement('span', { className: 'e-pagecountmsg', styles: 'textalign:right' });
            ej2_base_1.append([this.pageNoMsgElem, this.pageCountMsgElem], div);
            this.pagerModule.element.appendChild(div);
            this.refresh();
        };
        PagerMessage.prototype.refresh = function () {
            var pagerObj = this.pagerModule;
            this.pageNoMsgElem.textContent = this.format(pagerObj.getLocalizedLabel('currentPageInfo'), [pagerObj.totalRecordsCount === 0 ? 0 :
                    pagerObj.currentPage, pagerObj.totalPages || 0]) + ' ';
            this.pageCountMsgElem.textContent = this.format(pagerObj.getLocalizedLabel('totalItemsInfo'), [pagerObj.totalRecordsCount || 0]);
            this.pageNoMsgElem.parentElement.setAttribute('aria-label', this.pageNoMsgElem.textContent + this.pageCountMsgElem.textContent);
        };
        PagerMessage.prototype.hideMessage = function () {
            if (this.pageNoMsgElem) {
                this.pageNoMsgElem.style.display = 'none';
            }
            if (this.pageCountMsgElem) {
                this.pageCountMsgElem.style.display = 'none';
            }
        };
        PagerMessage.prototype.showMessage = function () {
            if (!this.pageNoMsgElem) {
                this.render();
            }
            this.pageNoMsgElem.style.display = '';
            this.pageCountMsgElem.style.display = '';
        };
        PagerMessage.prototype.destroy = function () {
        };
        PagerMessage.prototype.format = function (str, args) {
            var regx;
            for (var i = 0; i < args.length; i++) {
                regx = new RegExp('\\{' + (i) + '\\}', 'gm');
                str = str.replace(regx, args[i].toString());
            }
            return str;
        };
        return PagerMessage;
    }());
    exports.PagerMessage = PagerMessage;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),

/***/ 73:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ExternalMessage = (function () {
        function ExternalMessage(pagerModule) {
            this.pagerModule = pagerModule;
        }
        ExternalMessage.prototype.getModuleName = function () {
            return 'externalMessage';
        };
        ExternalMessage.prototype.render = function () {
            this.element = ej2_base_1.createElement('div', { className: 'e-pagerexternalmsg', attrs: { 'aria-label': 'Pager external message' } });
            this.pagerModule.element.appendChild(this.element);
            this.refresh();
        };
        ExternalMessage.prototype.refresh = function () {
            if (this.pagerModule.externalMessage && this.pagerModule.externalMessage.toString().length) {
                this.showMessage();
                this.element.innerHTML = this.pagerModule.externalMessage;
            }
            else {
                this.hideMessage();
            }
        };
        ExternalMessage.prototype.hideMessage = function () {
            this.element.style.display = 'none';
        };
        ExternalMessage.prototype.showMessage = function () {
            this.element.style.display = '';
        };
        ExternalMessage.prototype.destroy = function () {
            ej2_base_1.remove(this.element);
        };
        return ExternalMessage;
    }());
    exports.ExternalMessage = ExternalMessage;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),

/***/ 74:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(0), __webpack_require__(55), __webpack_require__(56)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, ej2_base_3, ej2_base_4, numeric_container_1, pager_message_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Pager = (function (_super) {
        __extends(Pager, _super);
        function Pager(options, element) {
            var _this = _super.call(this, options, element) || this;
            _this.defaultConstants = {
                currentPageInfo: '{0} of {1} pages',
                totalItemsInfo: '({0} items)',
                firstPageTooltip: 'Go to first page',
                lastPageTooltip: 'Go to last page',
                nextPageTooltip: 'Go to next page',
                previousPageTooltip: 'Go to previous page',
                nextPagerTooltip: 'Go to next pager',
                previousPagerTooltip: 'Go to previous pager',
                pagerDropDown: 'Items per page'
            };
            _this.containerModule = new numeric_container_1.NumericContainer(_this);
            _this.pagerMessageModule = new pager_message_1.PagerMessage(_this);
            return _this;
        }
        Pager.prototype.requiredModules = function () {
            var modules = [];
            if (this.enableExternalMessage) {
                modules.push({
                    member: 'externalMessage',
                    args: [this]
                });
            }
            if (this.checkpagesizes()) {
                modules.push({
                    member: 'pagerdropdown',
                    args: [this]
                });
            }
            return modules;
        };
        Pager.prototype.preRender = function () {
        };
        Pager.prototype.render = function () {
            this.initLocalization();
            this.updateRTL();
            this.totalRecordsCount = this.totalRecordsCount || 0;
            this.renderFirstPrevDivForDevice();
            this.containerModule.render();
            if (this.enablePagerMessage) {
                this.pagerMessageModule.render();
            }
            this.renderNextLastDivForDevice();
            if (this.checkpagesizes()) {
                this.pagerdropdownModule.render();
            }
            this.addAriaLabel();
            if (this.enableExternalMessage && this.externalMessageModule) {
                this.externalMessageModule.render();
            }
            this.refresh();
            this.trigger('created', { 'currentPage': this.currentPage, 'totalRecordsCount': this.totalRecordsCount });
        };
        Pager.prototype.getPersistData = function () {
            var keyEntity = ['enableExternalMessage', 'enablePagerMessage', 'currentPage', 'enableQueryString', 'pageSizes',
                'pageSize', 'pageCount', 'totalRecordsCount', 'externalMessage', 'customText', 'click', 'created', 'dropDownChanged'];
            return this.addOnPersist(keyEntity);
        };
        Pager.prototype.destroy = function () {
            _super.prototype.destroy.call(this);
            this.containerModule.destroy();
            this.pagerMessageModule.destroy();
            this.element.innerHTML = '';
        };
        Pager.prototype.getModuleName = function () {
            return 'pager';
        };
        Pager.prototype.onPropertyChanged = function (newProp, oldProp) {
            if (this.isDestroyed) {
                return;
            }
            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
                var prop = _a[_i];
                switch (prop) {
                    case 'pageCount':
                        this.containerModule.refreshNumericLinks();
                        this.containerModule.refresh();
                        break;
                    case 'currentPage':
                        if (this.checkGoToPage(newProp.currentPage, oldProp.currentPage)) {
                            this.currentPageChanged();
                        }
                        break;
                    case 'pageSize':
                    case 'totalRecordsCount':
                    case 'customText':
                        this.refresh();
                        break;
                    case 'pageSizes':
                        if (this.checkpagesizes()) {
                            this.pagerdropdownModule.destroy();
                            this.pagerdropdownModule.render();
                        }
                        this.refresh();
                        break;
                    case 'locale':
                        this.initLocalization();
                        this.refresh();
                        break;
                    case 'enableExternalMessage':
                        if (this.enableExternalMessage) {
                            this.externalMessageModule.render();
                        }
                        break;
                    case 'externalMessage':
                        if (this.externalMessageModule) {
                            this.externalMessageModule.refresh();
                        }
                        break;
                    case 'enableRtl':
                        this.updateRTL();
                        break;
                    case 'enablePagerMessage':
                        if (this.enablePagerMessage) {
                            this.pagerMessageModule.showMessage();
                        }
                        else {
                            this.pagerMessageModule.hideMessage();
                        }
                        break;
                }
            }
        };
        Pager.prototype.getLocalizedLabel = function (key) {
            return this.localeObj.getConstant(key);
        };
        Pager.prototype.goToPage = function (pageNo) {
            if (this.checkGoToPage(pageNo)) {
                this.currentPage = pageNo;
                this.dataBind();
            }
        };
        Pager.prototype.checkpagesizes = function () {
            if (this.pageSizes === true || this.pageSizes.length) {
                return true;
            }
            return false;
        };
        Pager.prototype.checkGoToPage = function (newPageNo, oldPageNo) {
            if (newPageNo !== this.currentPage) {
                this.previousPageNo = this.currentPage;
            }
            if (!ej2_base_3.isNullOrUndefined(oldPageNo)) {
                this.previousPageNo = oldPageNo;
            }
            if (this.previousPageNo !== newPageNo && (newPageNo >= 1 && newPageNo <= this.totalPages)) {
                return true;
            }
            return false;
        };
        Pager.prototype.currentPageChanged = function () {
            if (this.enableQueryString) {
                this.updateQueryString(this.currentPage);
            }
            var args = { currentPage: this.currentPage, cancel: false };
            this.trigger('click', args);
            if (!args.cancel) {
                this.refresh();
            }
        };
        Pager.prototype.refresh = function () {
            this.updateRTL();
            this.containerModule.refresh();
            if (this.enablePagerMessage) {
                this.pagerMessageModule.refresh();
            }
            if (this.enableExternalMessage && this.externalMessageModule) {
                this.externalMessageModule.refresh();
            }
        };
        Pager.prototype.updateRTL = function () {
            if (this.enableRtl) {
                this.element.classList.add('e-rtl');
            }
            else {
                this.element.classList.remove('e-rtl');
            }
        };
        Pager.prototype.initLocalization = function () {
            this.localeObj = new ej2_base_1.L10n(this.getModuleName(), this.defaultConstants, this.locale);
        };
        Pager.prototype.updateQueryString = function (value) {
            var updatedUrl = this.getUpdatedURL(window.location.href, 'page', value.toString());
            window.history.pushState({ path: updatedUrl }, '', updatedUrl);
        };
        Pager.prototype.getUpdatedURL = function (uri, key, value) {
            var regx = new RegExp('([?|&])' + key + '=.*?(&|#|$)', 'i');
            if (uri.match(regx)) {
                return uri.replace(regx, '$1' + key + '=' + value + '$2');
            }
            else {
                var hash = '';
                if (uri.indexOf('#') !== -1) {
                    hash = uri.replace(/.*#/, '#');
                    uri = uri.replace(/#.*/, '');
                }
                return uri + (uri.indexOf('?') !== -1 ? '&' : '?') + key + '=' + value + hash;
            }
        };
        Pager.prototype.renderFirstPrevDivForDevice = function () {
            this.element.appendChild(ej2_base_2.createElement('div', {
                className: 'e-mfirst e-icons e-icon-first',
                attrs: { title: this.getLocalizedLabel('firstPageTooltip'), tabindex: '-1' }
            }));
            this.element.appendChild(ej2_base_2.createElement('div', {
                className: 'e-mprev e-icons e-icon-prev',
                attrs: { title: this.getLocalizedLabel('previousPageTooltip'), tabindex: '-1' }
            }));
        };
        Pager.prototype.renderNextLastDivForDevice = function () {
            this.element.appendChild(ej2_base_2.createElement('div', {
                className: 'e-mnext e-icons e-icon-next',
                attrs: { title: this.getLocalizedLabel('nextPageTooltip'), tabindex: '-1' }
            }));
            this.element.appendChild(ej2_base_2.createElement('div', {
                className: 'e-mlast e-icons e-icon-last',
                attrs: { title: this.getLocalizedLabel('lastPageTooltip'), tabindex: '-1' }
            }));
        };
        Pager.prototype.addAriaLabel = function () {
            var _this = this;
            var classList = ['.e-mfirst', '.e-mprev', '.e-mnext', '.e-mlast'];
            if (!ej2_base_1.Browser.isDevice) {
                classList.forEach(function (value) {
                    var element = _this.element.querySelector(value);
                    element.setAttribute('aria-label', element.getAttribute('title'));
                });
            }
        };
        return Pager;
    }(ej2_base_1.Component));
    __decorate([
        ej2_base_4.Property(false)
    ], Pager.prototype, "enableQueryString", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Pager.prototype, "enableExternalMessage", void 0);
    __decorate([
        ej2_base_4.Property(true)
    ], Pager.prototype, "enablePagerMessage", void 0);
    __decorate([
        ej2_base_4.Property(12)
    ], Pager.prototype, "pageSize", void 0);
    __decorate([
        ej2_base_4.Property(10)
    ], Pager.prototype, "pageCount", void 0);
    __decorate([
        ej2_base_4.Property(1)
    ], Pager.prototype, "currentPage", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Pager.prototype, "totalRecordsCount", void 0);
    __decorate([
        ej2_base_4.Property()
    ], Pager.prototype, "externalMessage", void 0);
    __decorate([
        ej2_base_4.Property(false)
    ], Pager.prototype, "pageSizes", void 0);
    __decorate([
        ej2_base_4.Property('')
    ], Pager.prototype, "customText", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Pager.prototype, "click", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Pager.prototype, "dropDownChanged", void 0);
    __decorate([
        ej2_base_4.Event()
    ], Pager.prototype, "created", void 0);
    Pager = __decorate([
        ej2_base_4.NotifyPropertyChanges
    ], Pager);
    exports.Pager = Pager;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),

/***/ 76:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Ajax; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

var headerRegex = /^(.*?):[ \t]*([^\r\n]*)$/gm;
var defaultType = 'GET';
var Ajax = (function () {
    function Ajax(options, type, async) {
        this.mode = true;
        this.options = {};
        if (typeof options === 'string') {
            this.url = options;
            this.type = type ? type.toUpperCase() : defaultType;
            this.mode = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(async) ? async : true;
        }
        else if (typeof options === 'object') {
            this.options = options;
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["h" /* merge */])(this, this.options);
        }
        this.type = this.type ? this.type.toUpperCase() : defaultType;
    }
    Ajax.prototype.send = function (data) {
        var _this = this;
        this.data = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(data) ? this.data : data;
        var promise = new Promise(function (resolve, reject) {
            _this.httpRequest = new XMLHttpRequest();
            _this.httpRequest.onreadystatechange = function () { _this.stateChange(resolve, reject); };
            _this.httpRequest.open(_this.type, _this.url, _this.mode);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(_this.data)) {
                _this.httpRequest.setRequestHeader('Content-Type', _this.contentType || 'application/json; charset=utf-8');
            }
            if (_this.beforeSend) {
                _this.beforeSend();
            }
            _this.httpRequest.send(!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(_this.data) ? _this.data : null);
        });
        return promise;
    };
    Ajax.prototype.successHandler = function (data) {
        if (this.onSuccess) {
            this.onSuccess(data, this);
        }
        return data;
    };
    Ajax.prototype.failureHandler = function (reason) {
        if (this.onFailure) {
            this.onFailure(this.httpRequest);
        }
        return reason;
    };
    Ajax.prototype.stateChange = function (resolve, reject) {
        var data = this.httpRequest.responseText;
        if (this.dataType && this.dataType.toLowerCase() === 'json') {
            if (data === '') {
                data = undefined;
            }
            else {
                try {
                    data = JSON.parse(data);
                }
                catch (error) {
                }
            }
        }
        if (this.httpRequest.readyState === 4) {
            if (this.httpRequest.status === 200 || this.httpRequest.status === 304) {
                resolve(this.successHandler(data));
            }
            else {
                reject(new Error(this.failureHandler(this.httpRequest.statusText)));
            }
        }
    };
    Ajax.prototype.getResponseHeader = function (key) {
        var responseHeaders;
        var header;
        responseHeaders = {};
        var headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());
        while (headers) {
            responseHeaders[headers[1].toLowerCase()] = headers[2];
            headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());
        }
        header = responseHeaders[key.toLowerCase()];
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(header) ? null : header;
    };
    return Ajax;
}());



/***/ }),

/***/ 77:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Animation; });
/* harmony export (immutable) */ __webpack_exports__["b"] = rippleEffect;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return isRippleEnabled; });
/* harmony export (immutable) */ __webpack_exports__["d"] = enableRipple;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__dom__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__browser__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__event_handler__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__notify_property_change__ = __webpack_require__(12);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var Animation = Animation_1 = (function (_super) {
    __extends(Animation, _super);
    function Animation(options) {
        var _this = _super.call(this, options, undefined) || this;
        _this.easing = {
            ease: 'cubic-bezier(0.250, 0.100, 0.250, 1.000)',
            linear: 'cubic-bezier(0.250, 0.250, 0.750, 0.750)',
            easeIn: 'cubic-bezier(0.420, 0.000, 1.000, 1.000)',
            easeOut: 'cubic-bezier(0.000, 0.000, 0.580, 1.000)',
            easeInOut: 'cubic-bezier(0.420, 0.000, 0.580, 1.000)',
            elasticInOut: 'cubic-bezier(0.5,-0.58,0.38,1.81)',
            elasticIn: 'cubic-bezier(0.17,0.67,0.59,1.81)',
            elasticOut: 'cubic-bezier(0.7,-0.75,0.99,1.01)'
        };
        return _this;
    }
    Animation.prototype.animate = function (element, options) {
        options = !options ? {} : options;
        var model = this.getModel(options);
        if (typeof element === 'string') {
            var elements = Array.prototype.slice.call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__dom__["k" /* selectAll */])(element, document));
            for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
                var element_1 = elements_1[_i];
                model.element = element_1;
                Animation_1.delayAnimation(model);
            }
        }
        else {
            model.element = element;
            Animation_1.delayAnimation(model);
        }
    };
    Animation.stop = function (element, model) {
        element.style.animation = '';
        element.removeAttribute('e-animate');
        var animationId = element.getAttribute('e-animation-id');
        if (animationId) {
            var frameId = parseInt(animationId, 10);
            cancelAnimationFrame(frameId);
            element.removeAttribute('e-animation-id');
        }
        if (model && model.end) {
            model.end.call(this, model);
        }
    };
    Animation.delayAnimation = function (model) {
        if (model.delay) {
            setTimeout(function () { Animation_1.applyAnimation(model); }, model.delay);
        }
        else {
            Animation_1.applyAnimation(model);
        }
    };
    Animation.applyAnimation = function (model) {
        var _this = this;
        model.timeStamp = 0;
        var step = 0;
        var timerId = 0;
        var startTime = 0;
        var prevTimeStamp = 0;
        var duration = model.duration;
        model.element.setAttribute('e-animate', 'true');
        var startAnimation = function (timeStamp) {
            try {
                if (timeStamp) {
                    prevTimeStamp = prevTimeStamp === 0 ? timeStamp : prevTimeStamp;
                    model.timeStamp = (timeStamp + model.timeStamp) - prevTimeStamp;
                    prevTimeStamp = timeStamp;
                    if (!step && model.begin) {
                        model.begin.call(_this, model);
                    }
                    step = step + 1;
                    var avg = model.timeStamp / step;
                    if (model.timeStamp < duration && model.timeStamp + avg < duration && model.element.getAttribute('e-animate')) {
                        model.element.style.animation = model.name + ' ' + model.duration + 'ms ' + model.timingFunction;
                        if (model.progress) {
                            model.progress.call(_this, model);
                        }
                        requestAnimationFrame(startAnimation);
                    }
                    else {
                        cancelAnimationFrame(timerId);
                        model.element.removeAttribute('e-animation-id');
                        model.element.removeAttribute('e-animate');
                        model.element.style.animation = '';
                        if (model.end) {
                            model.end.call(_this, model);
                        }
                    }
                }
                else {
                    startTime = performance.now();
                    timerId = requestAnimationFrame(startAnimation);
                    model.element.setAttribute('e-animation-id', timerId.toString());
                }
            }
            catch (e) {
                cancelAnimationFrame(timerId);
                model.element.removeAttribute('e-animation-id');
                if (model.fail) {
                    model.fail.call(_this, e);
                }
            }
        };
        startAnimation();
    };
    Animation.prototype.getModel = function (options) {
        return {
            name: options.name || this.name,
            delay: options.delay || this.delay,
            duration: (options.duration !== undefined ? options.duration : this.duration),
            begin: options.begin || this.begin,
            end: options.end || this.end,
            fail: options.fail || this.fail,
            progress: options.progress || this.progress,
            timingFunction: this.easing[options.timingFunction] ? this.easing[options.timingFunction] :
                (options.timingFunction || this.easing[this.timingFunction])
        };
    };
    Animation.prototype.onPropertyChanged = function (newProp, oldProp) {
    };
    Animation.prototype.getModuleName = function () {
        return 'animation';
    };
    Animation.prototype.destroy = function () {
    };
    return Animation;
}(__WEBPACK_IMPORTED_MODULE_1__base__["a" /* Base */]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["a" /* Property */])('FadeIn')
], Animation.prototype, "name", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["a" /* Property */])(400)
], Animation.prototype, "duration", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["a" /* Property */])('ease')
], Animation.prototype, "timingFunction", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["a" /* Property */])(0)
], Animation.prototype, "delay", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["f" /* Event */])()
], Animation.prototype, "progress", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["f" /* Event */])()
], Animation.prototype, "begin", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["f" /* Event */])()
], Animation.prototype, "end", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__notify_property_change__["f" /* Event */])()
], Animation.prototype, "fail", void 0);
Animation = Animation_1 = __decorate([
    __WEBPACK_IMPORTED_MODULE_4__notify_property_change__["g" /* NotifyPropertyChanges */]
], Animation);

function rippleEffect(element, rippleOptions, done) {
    var rippleModel = getRippleModel(rippleOptions);
    if (rippleModel.rippleFlag === false || (rippleModel.rippleFlag === undefined && !isRippleEnabled)) {
        return Function;
    }
    element.setAttribute('data-ripple', 'true');
    __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].add(element, 'mousedown', rippleHandler, { parent: element, rippleOptions: rippleModel });
    __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].add(element, 'mouseup', rippleUpHandler, { parent: element, rippleOptions: rippleModel, done: done });
    __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].add(element, 'mouseleave', rippleLeaveHandler, { parent: element, rippleOptions: rippleModel });
    if (__WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].isPointer) {
        __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].add(element, 'transitionend', rippleLeaveHandler, { parent: element, rippleOptions: rippleModel });
    }
    return (function () {
        element.removeAttribute('data-ripple');
        __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].remove(element, 'mousedown', rippleHandler);
        __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].remove(element, 'mouseup', rippleUpHandler);
        __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].remove(element, 'mouseleave', rippleLeaveHandler);
        __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].remove(element, 'transitionend', rippleLeaveHandler);
    });
}
function getRippleModel(rippleOptions) {
    var rippleModel = {
        selector: rippleOptions && rippleOptions.selector ? rippleOptions.selector : null,
        ignore: rippleOptions && rippleOptions.ignore ? rippleOptions.ignore : null,
        rippleFlag: rippleOptions && rippleOptions.rippleFlag,
        isCenterRipple: rippleOptions && rippleOptions.isCenterRipple,
        duration: rippleOptions && rippleOptions.duration ? rippleOptions.duration : 350
    };
    return rippleModel;
}
function rippleHandler(e) {
    var target = (e.target);
    var selector = this.rippleOptions.selector;
    var element = selector ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__dom__["l" /* closest */])(target, selector) : target;
    if (!element || (this.rippleOptions && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__dom__["l" /* closest */])(target, this.rippleOptions.ignore))) {
        return;
    }
    var offset = element.getBoundingClientRect();
    var offsetX = e.pageX - document.body.scrollLeft;
    var offsetY = e.pageY - document.body.scrollTop;
    var pageX = Math.max(Math.abs(offsetX - offset.left), Math.abs(offsetX - offset.right));
    var pageY = Math.max(Math.abs(offsetY - offset.top), Math.abs(offsetY - offset.bottom));
    var radius = Math.sqrt(pageX * pageX + pageY * pageY);
    var diameter = radius * 2 + 'px';
    var x = offsetX - offset.left - radius;
    var y = offsetY - offset.top - radius;
    if (this.rippleOptions && this.rippleOptions.isCenterRipple) {
        x = 0;
        y = 0;
        diameter = '100%';
    }
    element.classList.add('e-ripple');
    var duration = this.rippleOptions.duration.toString();
    var styles = 'width: ' + diameter + ';height: ' + diameter + ';left: ' + x + 'px;top: ' + y + 'px;' +
        'transition-duration: ' + duration + 'ms;';
    var rippleElement = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__dom__["a" /* createElement */])('div', { className: 'e-ripple-element', styles: styles });
    element.appendChild(rippleElement);
    window.getComputedStyle(rippleElement).getPropertyValue('opacity');
    rippleElement.style.transform = 'scale(1)';
    if (element !== this.parent) {
        __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].add(element, 'mouseleave', rippleLeaveHandler, { parent: this.parent, rippleOptions: this.rippleOptions });
    }
}
function rippleUpHandler(e) {
    removeRipple(e, this);
}
function rippleLeaveHandler(e) {
    removeRipple(e, this);
}
function removeRipple(e, eventArgs) {
    var duration = eventArgs.rippleOptions.duration;
    var target = (e.target);
    var selector = eventArgs.rippleOptions.selector;
    var element = selector ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__dom__["l" /* closest */])(target, selector) : target;
    if (!element || (element && element.className.indexOf('e-ripple') === -1)) {
        return;
    }
    var rippleElements = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__dom__["k" /* selectAll */])('.e-ripple-element', element);
    var rippleElement = rippleElements[rippleElements.length - 1];
    if (rippleElement) {
        rippleElement.style.opacity = '0.5';
    }
    if (eventArgs.parent !== element) {
        __WEBPACK_IMPORTED_MODULE_3__event_handler__["a" /* EventHandler */].remove(element, 'mouseleave', rippleLeaveHandler);
    }
    setTimeout(function () {
        if (rippleElement && rippleElement.parentNode) {
            rippleElement.parentNode.removeChild(rippleElement);
        }
        if (!element.getElementsByClassName('e-ripple-element').length) {
            element.classList.remove('e-ripple');
        }
        if (eventArgs.done) {
            eventArgs.done(e);
        }
    }, duration);
}
var isRippleEnabled = false;
function enableRipple(isRipple) {
    isRippleEnabled = isRipple;
    return isRippleEnabled;
}
var Animation_1;


/***/ }),

/***/ 78:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CanvasRenderer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

var CanvasRenderer = (function () {
    function CanvasRenderer(rootID) {
        this.rootId = rootID;
    }
    CanvasRenderer.prototype.getOptionValue = function (options, key) {
        return options[key];
    };
    CanvasRenderer.prototype.createCanvas = function (options) {
        var canvasObj = document.createElement('canvas');
        canvasObj.setAttribute('id', this.rootId + '_canvas');
        this.ctx = canvasObj.getContext('2d');
        this.canvasObj = canvasObj;
        this.setCanvasSize(options.width, options.height);
        return this.canvasObj;
    };
    CanvasRenderer.prototype.setCanvasSize = function (width, height) {
        var element = document.getElementById(this.rootId);
        var size = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(element) ? element.getBoundingClientRect() : null;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.width)) {
            this.canvasObj.setAttribute('width', width ? width.toString() : size.width.toString());
        }
        else {
            this.canvasObj.setAttribute('width', this.width.toString());
        }
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.height)) {
            this.canvasObj.setAttribute('height', height ? height.toString() : '450');
        }
        else {
            this.canvasObj.setAttribute('height', this.height.toString());
        }
    };
    CanvasRenderer.prototype.setAttributes = function (options) {
        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');
        var dashArray = this.getOptionValue(options, 'stroke-dasharray');
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(dashArray)) {
            var dashArrayString = dashArray.split(',');
            this.ctx.setLineDash([parseInt(dashArrayString[0], 10), parseInt(dashArrayString[1], 10)]);
        }
        this.ctx.strokeStyle = this.getOptionValue(options, 'stroke');
    };
    CanvasRenderer.prototype.drawLine = function (options) {
        this.ctx.save();
        this.ctx.beginPath();
        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');
        this.ctx.strokeStyle = options.stroke;
        this.ctx.moveTo(options.x1, options.y1);
        this.ctx.lineTo(options.x2, options.y2);
        this.ctx.stroke();
        this.ctx.restore();
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawRectangle = function (options) {
        var canvasCtx = this.ctx;
        var cornerRadius = options.rx;
        this.ctx.save();
        this.ctx.beginPath();
        this.ctx.globalAlpha = this.getOptionValue(options, 'opacity');
        this.setAttributes(options);
        this.ctx.rect(options.x, options.y, options.width, options.height);
        if (cornerRadius !== null && cornerRadius >= 0) {
            this.drawCornerRadius(options);
        }
        else {
            if (options.fill === 'none') {
                options.fill = 'transparent';
            }
            this.ctx.fillStyle = options.fill;
            this.ctx.fillRect(options.x, options.y, options.width, options.height);
            this.ctx.stroke();
        }
        this.ctx.restore();
        this.ctx = canvasCtx;
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawCornerRadius = function (options) {
        var cornerRadius = options.rx;
        var x = options.x;
        var y = options.y;
        var width = options.width;
        var height = options.height;
        if (options.fill === 'none') {
            options.fill = 'transparent';
        }
        this.ctx.fillStyle = options.fill;
        if (width < 2 * cornerRadius) {
            cornerRadius = width / 2;
        }
        if (height < 2 * cornerRadius) {
            cornerRadius = height / 2;
        }
        this.ctx.beginPath();
        this.ctx.moveTo(x + width - cornerRadius, y);
        this.ctx.arcTo(x + width, y, x + width, y + height, cornerRadius);
        this.ctx.arcTo(x + width, y + height, x, y + height, cornerRadius);
        this.ctx.arcTo(x, y + height, x, y, cornerRadius);
        this.ctx.arcTo(x, y, x + width, y, cornerRadius);
        this.ctx.closePath();
        this.ctx.fill();
        this.ctx.stroke();
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawPath = function (options, canvasTranslate) {
        var path = options.d;
        var dataSplit = path.split(' ');
        var borderWidth = this.getOptionValue(options, 'stroke-width');
        var canvasCtx = this.ctx;
        var flag = true;
        this.ctx.save();
        this.ctx.beginPath();
        if (canvasTranslate) {
            this.ctx.translate(canvasTranslate[0], canvasTranslate[1]);
        }
        this.ctx.globalAlpha = options.opacity ? options.opacity : this.getOptionValue(options, 'fill-opacity');
        this.setAttributes(options);
        for (var i = 0; i < dataSplit.length; i = i + 3) {
            var x1 = parseFloat(dataSplit[i + 1]);
            var y1 = parseFloat(dataSplit[i + 2]);
            switch (dataSplit[i]) {
                case 'M':
                    if (!options.innerR && !options.cx) {
                        this.ctx.moveTo(x1, y1);
                    }
                    break;
                case 'L':
                    if (!options.innerR) {
                        this.ctx.lineTo(x1, y1);
                    }
                    break;
                case 'C':
                    var c1 = parseFloat(dataSplit[i + 3]);
                    var c2 = parseFloat(dataSplit[i + 4]);
                    var c3 = parseFloat(dataSplit[i + 5]);
                    var c4 = parseFloat(dataSplit[i + 6]);
                    this.ctx.bezierCurveTo(x1, y1, c1, c2, c3, c4);
                    i = i + 4;
                    break;
                case 'A':
                    if (!options.innerR) {
                        if (options.cx) {
                            this.ctx.arc(options.cx, options.cy, options.radius, 0, 2 * Math.PI, options.counterClockWise);
                        }
                        else {
                            this.ctx.moveTo(options.x, options.y);
                            this.ctx.arc(options.x, options.y, options.radius, options.start, options.end, options.counterClockWise);
                            this.ctx.lineTo(options.x, options.y);
                        }
                    }
                    else if (flag) {
                        this.ctx.arc(options.x, options.y, options.radius, options.start, options.end, options.counterClockWise);
                        this.ctx.arc(options.x, options.y, options.innerR, options.end, options.start, !options.counterClockWise);
                        flag = false;
                    }
                    i = i + 5;
                    break;
                case 'z':
                    this.ctx.closePath();
                    break;
            }
        }
        if (options.fill !== 'none' && options.fill !== undefined) {
            this.ctx.fillStyle = options.fill;
            this.ctx.fill();
        }
        if (borderWidth > 0) {
            this.ctx.stroke();
        }
        this.ctx.restore();
        this.ctx = canvasCtx;
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawText = function (options, label) {
        var fontWeight = this.getOptionValue(options, 'font-weight');
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(fontWeight) && fontWeight.toLowerCase() === 'regular') {
            fontWeight = 'normal';
        }
        var fontSize = this.getOptionValue(options, 'font-size');
        var fontFamily = this.getOptionValue(options, 'font-family');
        var fontStyle = this.getOptionValue(options, 'font-style').toLowerCase();
        var font = (fontStyle + ' ' + fontWeight + ' ' + fontSize + ' ' + fontFamily);
        var anchor = this.getOptionValue(options, 'text-anchor');
        var opacity = options.opacity !== undefined ? options.opacity : 1;
        if (anchor === 'middle') {
            anchor = 'center';
        }
        this.ctx.save();
        this.ctx.fillStyle = options.fill;
        this.ctx.font = font;
        this.ctx.textAlign = anchor;
        this.ctx.globalAlpha = opacity;
        if (options.baseline) {
            this.ctx.textBaseline = options.baseline;
        }
        var txtlngth = 0;
        this.ctx.translate(options.x + (txtlngth / 2), options.y);
        this.ctx.rotate(options.labelRotation * Math.PI / 180);
        this.ctx.fillText(label, 0, 0);
        this.ctx.restore();
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawCircle = function (options) {
        var canvasCtx = this.ctx;
        this.ctx.save();
        this.ctx.beginPath();
        this.ctx.arc(options.cx, options.cy, options.r, 0, 2 * Math.PI);
        this.ctx.fillStyle = options.fill;
        this.ctx.globalAlpha = options.opacity;
        this.ctx.fill();
        this.setAttributes(options);
        this.ctx.stroke();
        this.ctx.restore();
        this.ctx = canvasCtx;
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawPolyline = function (options) {
        this.ctx.save();
        this.ctx.beginPath();
        var points = options.points.split(' ');
        for (var i = 0; i < points.length - 1; i++) {
            var point = points[i].split(',');
            var x = parseFloat(point[0]);
            var y = parseFloat(point[1]);
            if (i === 0) {
                this.ctx.moveTo(x, y);
            }
            else {
                this.ctx.lineTo(x, y);
            }
        }
        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');
        this.ctx.strokeStyle = options.stroke;
        this.ctx.stroke();
        this.ctx.restore();
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawEllipse = function (options) {
        var canvasCtx = this.ctx;
        var circumference = Math.max(options.rx, options.ry);
        var scaleX = options.rx / circumference;
        var scaleY = options.ry / circumference;
        this.ctx.save();
        this.ctx.beginPath();
        this.ctx.translate(options.cx, options.cy);
        this.ctx.save();
        this.ctx.scale(scaleX, scaleY);
        this.ctx.arc(0, 0, circumference, 0, 2 * Math.PI, false);
        this.ctx.fillStyle = options.fill;
        this.ctx.fill();
        this.ctx.restore();
        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');
        this.ctx.strokeStyle = options.stroke;
        this.ctx.stroke();
        this.ctx.restore();
        this.ctx = canvasCtx;
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.drawImage = function (options) {
        this.ctx.save();
        var imageObj = new Image();
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(options.href)) {
            imageObj.src = options.href;
            this.ctx.drawImage(imageObj, options.x, options.y, options.width, options.height);
        }
        this.ctx.restore();
        this.dataUrl = this.canvasObj.toDataURL();
    };
    CanvasRenderer.prototype.createLinearGradient = function (colors) {
        var myGradient;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(colors[0].colorStop)) {
            myGradient = this.ctx.createLinearGradient(0, 0, 0, this.canvasObj.height);
        }
        var color = this.setGradientValues(colors, myGradient);
        return color;
    };
    CanvasRenderer.prototype.createRadialGradient = function (colors) {
        var myGradient;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(colors[0].colorStop)) {
            myGradient = this.ctx.createRadialGradient(0, 0, 0, 0, 0, this.canvasObj.height);
        }
        var colorName = this.setGradientValues(colors, myGradient);
        return colorName;
    };
    CanvasRenderer.prototype.setGradientValues = function (colors, myGradient) {
        var colorName;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(colors[0].colorStop)) {
            for (var i = 0; i <= colors.length - 1; i++) {
                var color = colors[i].color;
                var newColorStop = (colors[i].colorStop).slice(0, -1);
                var stopColor = parseInt(newColorStop, 10) / 100;
                myGradient.addColorStop(stopColor, color);
            }
            colorName = myGradient.toString();
        }
        else {
            colorName = colors[0].color.toString();
        }
        this.dataUrl = this.canvasObj.toDataURL();
        return colorName;
    };
    CanvasRenderer.prototype.setElementAttributes = function (options, element) {
        var keys = Object.keys(options);
        var values = Object.keys(options).map(function (key) { return options[key]; });
        for (var i = 0; i < keys.length; i++) {
            element.setAttribute(keys[i], values[i]);
        }
        return element;
    };
    CanvasRenderer.prototype.updateCanvasAttributes = function (options) {
        this.setElementAttributes(options, this.canvasObj);
        var ctx = this.ctx;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.dataUrl)) {
            var img_1 = new Image;
            img_1.onload = function () {
                ctx.drawImage(img_1, 0, 0);
            };
            img_1.src = this.dataUrl;
        }
    };
    return CanvasRenderer;
}());



/***/ }),

/***/ 79:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Component; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__module_loader__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__base__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__observer__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__child_property__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__notify_property_change__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__internationalization__ = __webpack_require__(24);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};







var Component = (function (_super) {
    __extends(Component, _super);
    function Component(options, selector) {
        var _this = _super.call(this, options, selector) || this;
        _this.needsID = false;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(_this.enableRtl)) {
            _this.setProperties({ 'enableRtl': __WEBPACK_IMPORTED_MODULE_6__internationalization__["b" /* rightToLeft */] }, true);
        }
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(_this.locale)) {
            _this.setProperties({ 'locale': __WEBPACK_IMPORTED_MODULE_6__internationalization__["d" /* defaultCulture */] }, true);
        }
        _this.moduleLoader = new __WEBPACK_IMPORTED_MODULE_1__module_loader__["a" /* ModuleLoader */](_this);
        _this.localObserver = new __WEBPACK_IMPORTED_MODULE_3__observer__["a" /* Observer */](_this);
        _this.detectFunction = new Function('args', 'var prop = Object.keys(args); if(prop.length){this[prop[0]] = args[prop[0]];}');
        __WEBPACK_IMPORTED_MODULE_6__internationalization__["a" /* onIntlChange */].on('notifyExternalChange', _this.detectFunction, _this);
        if (_this.enablePersistence) {
            window.addEventListener('unload', _this.setPersistData.bind(_this));
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(selector)) {
            _this.appendTo();
        }
        return _this;
    }
    Component.prototype.requiredModules = function () {
        return [];
    };
    ;
    Component.prototype.destroy = function () {
        if (this.isDestroyed) {
            return;
        }
        this.localObserver.destroy();
        if (this.refreshing) {
            return;
        }
        this.trigger('destroyed', { cancel: false });
        _super.prototype.destroy.call(this);
        this.moduleLoader.clean();
        __WEBPACK_IMPORTED_MODULE_6__internationalization__["a" /* onIntlChange */].off('notifyExternalChange', this.detectFunction);
        if (this.enablePersistence) {
            this.setPersistData();
        }
    };
    Component.prototype.refresh = function () {
        this.refreshing = true;
        this.destroy();
        this.clearChanges();
        this.localObserver = new __WEBPACK_IMPORTED_MODULE_3__observer__["a" /* Observer */](this);
        this.preRender();
        this.injectModules();
        this.render();
        this.refreshing = false;
    };
    Component.prototype.appendTo = function (selector) {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(selector) && typeof (selector) === 'string') {
            this.element = document.querySelector(selector);
        }
        else if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(selector)) {
            this.element = selector;
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.element)) {
            if (this.needsID && !this.element.id) {
                this.element.id = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["l" /* getUniqueID */])(this.getModuleName());
            }
            this.isProtectedOnChange = false;
            var inst = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('ej2_instances', this.element);
            if (!inst || inst.indexOf(this) === -1) {
                _super.prototype.addInstance.call(this);
            }
            this.preRender();
            if (this.enablePersistence) {
                this.mergePersistData();
            }
            this.injectModules();
            this.render();
            this.trigger('created');
        }
    };
    Component.prototype.dataBind = function () {
        this.injectModules();
        _super.prototype.dataBind.call(this);
    };
    ;
    Component.prototype.on = function (event, handler, context) {
        if (typeof event === 'string') {
            this.localObserver.on(event, handler, context);
        }
        else {
            for (var _i = 0, event_1 = event; _i < event_1.length; _i++) {
                var arg = event_1[_i];
                this.localObserver.on(arg.event, arg.handler, arg.context);
            }
        }
    };
    Component.prototype.off = function (event, handler) {
        if (typeof event === 'string') {
            this.localObserver.off(event, handler);
        }
        else {
            for (var _i = 0, event_2 = event; _i < event_2.length; _i++) {
                var arg = event_2[_i];
                this.localObserver.off(arg.event, arg.handler);
            }
        }
    };
    Component.prototype.notify = function (property, argument) {
        if (this.isDestroyed !== true) {
            this.localObserver.notify(property, argument);
        }
    };
    Component.prototype.getInjectedModules = function () {
        return this.injectedModules;
    };
    ;
    Component.Inject = function () {
        var moduleList = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            moduleList[_i] = arguments[_i];
        }
        if (!this.prototype.injectedModules) {
            this.prototype.injectedModules = [];
        }
        for (var i = 0; i < moduleList.length; i++) {
            if (this.prototype.injectedModules.indexOf(moduleList[i]) === -1) {
                this.prototype.injectedModules.push(moduleList[i]);
            }
        }
    };
    Component.prototype.injectModules = function () {
        if (this.injectedModules && this.injectedModules.length) {
            this.moduleLoader.inject(this.requiredModules(), this.injectedModules);
        }
    };
    Component.prototype.mergePersistData = function () {
        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);
        if (!(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(data) || (data === ''))) {
            this.setProperties(JSON.parse(data), true);
        }
    };
    Component.prototype.setPersistData = function () {
        window.localStorage.setItem(this.getModuleName() + this.element.id, this.getPersistData());
    };
    Component.prototype.clearTemplate = function (templateName) {
    };
    Component.prototype.addOnPersist = function (options) {
        var _this = this;
        var persistObj = {};
        for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {
            var key = options_1[_i];
            var objValue = void 0;
            objValue = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])(key, this);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(objValue)) {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["d" /* setValue */])(key, this.getActualProperties(objValue), persistObj);
            }
        }
        return JSON.stringify(persistObj, function (key, value) {
            return _this.getActualProperties(value);
        });
    };
    Component.prototype.getActualProperties = function (obj) {
        if (obj instanceof __WEBPACK_IMPORTED_MODULE_4__child_property__["a" /* ChildProperty */]) {
            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["c" /* getValue */])('properties', obj);
        }
        else {
            return obj;
        }
    };
    Component.prototype.ignoreOnPersist = function (options) {
        return JSON.stringify(this.iterateJsonProperties(this.properties, options));
    };
    Component.prototype.iterateJsonProperties = function (obj, ignoreList) {
        var newObj = {};
        var _loop_1 = function (key) {
            if (ignoreList.indexOf(key) === -1) {
                var value = obj[key];
                if (typeof value === 'object' && !(value instanceof Array)) {
                    var newList = ignoreList.filter(function (str) {
                        return new RegExp(key + '.').test(str);
                    }).map(function (str) {
                        return str.replace(key + '.', '');
                    });
                    newObj[key] = this_1.iterateJsonProperties(this_1.getActualProperties(value), newList);
                }
                else {
                    newObj[key] = value;
                }
            }
        };
        var this_1 = this;
        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {
            var key = _a[_i];
            _loop_1(key);
        }
        return newObj;
    };
    return Component;
}(__WEBPACK_IMPORTED_MODULE_2__base__["a" /* Base */]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__notify_property_change__["a" /* Property */])(false)
], Component.prototype, "enablePersistence", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__notify_property_change__["a" /* Property */])()
], Component.prototype, "enableRtl", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__notify_property_change__["a" /* Property */])()
], Component.prototype, "locale", void 0);
Component = __decorate([
    __WEBPACK_IMPORTED_MODULE_5__notify_property_change__["g" /* NotifyPropertyChanges */]
], Component);



/***/ }),

/***/ 8:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Base; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dom__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__observer__ = __webpack_require__(30);



var Base = (function () {
    function Base(options, element) {
        this.isProtectedOnChange = true;
        this.properties = {};
        this.changedProperties = {};
        this.oldProperties = {};
        this.refreshing = false;
        this.finalUpdate = function () { };
        this.childChangedProperties = {};
        this.modelObserver = new __WEBPACK_IMPORTED_MODULE_2__observer__["a" /* Observer */](this);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(element)) {
            if ('string' === typeof (element)) {
                this.element = document.querySelector(element);
            }
            else {
                this.element = element;
            }
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.element)) {
                this.isProtectedOnChange = false;
                this.addInstance();
            }
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["k" /* isUndefined */])(options)) {
            this.setProperties(options, true);
        }
        this.isDestroyed = false;
    }
    Base.prototype.setProperties = function (prop, muteOnChange) {
        var prevDetection = this.isProtectedOnChange;
        this.isProtectedOnChange = !!muteOnChange;
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["h" /* merge */])(this, prop);
        if (muteOnChange !== true) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["h" /* merge */])(this.changedProperties, prop);
            this.dataBind();
        }
        this.finalUpdate();
        this.changedProperties = {};
        this.oldProperties = {};
        this.isProtectedOnChange = prevDetection;
    };
    ;
    Base.callChildDataBind = function (obj, parent) {
        var keys = Object.keys(obj);
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var key = keys_1[_i];
            if (parent[key] instanceof Array) {
                for (var _a = 0, _b = parent[key]; _a < _b.length; _a++) {
                    var obj_1 = _b[_a];
                    if (obj_1.dataBind !== undefined) {
                        obj_1.dataBind();
                    }
                }
            }
            else {
                parent[key].dataBind();
            }
        }
    };
    Base.prototype.clearChanges = function () {
        this.finalUpdate();
        this.changedProperties = {};
        this.oldProperties = {};
        this.childChangedProperties = {};
    };
    Base.prototype.dataBind = function () {
        Base.callChildDataBind(this.childChangedProperties, this);
        if (Object.getOwnPropertyNames(this.changedProperties).length) {
            var prevDetection = this.isProtectedOnChange;
            var newChanges = this.changedProperties;
            var oldChanges = this.oldProperties;
            this.clearChanges();
            this.isProtectedOnChange = true;
            this.onPropertyChanged(newChanges, oldChanges);
            this.isProtectedOnChange = prevDetection;
        }
    };
    ;
    Base.prototype.saveChanges = function (key, newValue, oldValue) {
        if (this.isProtectedOnChange) {
            return;
        }
        this.oldProperties[key] = oldValue;
        this.changedProperties[key] = newValue;
        this.finalUpdate();
        this.finalUpdate = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["b" /* setImmediate */])(this.dataBind.bind(this));
    };
    ;
    Base.prototype.addEventListener = function (eventName, handler) {
        this.modelObserver.on(eventName, handler);
    };
    Base.prototype.removeEventListener = function (eventName, handler) {
        this.modelObserver.off(eventName, handler);
    };
    Base.prototype.trigger = function (eventName, eventProp) {
        if (this.isDestroyed !== true) {
            var prevDetection = this.isProtectedOnChange;
            this.isProtectedOnChange = false;
            this.modelObserver.notify(eventName, eventProp);
            this.isProtectedOnChange = prevDetection;
        }
    };
    Base.prototype.addInstance = function () {
        var moduleClass = 'e-' + this.getModuleName().toLowerCase();
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__dom__["b" /* addClass */])([this.element], ['e-control', moduleClass]);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.element.ej2_instances)) {
            this.element.ej2_instances.push(this);
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["d" /* setValue */])('ej2_instances', [this], this.element);
        }
    };
    Base.prototype.destroy = function () {
        var _this = this;
        this.element.ej2_instances =
            this.element.ej2_instances.filter(function (i) { return i !== _this; });
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__dom__["c" /* removeClass */])([this.element], ['e-' + this.getModuleName()]);
        if (this.element.ej2_instances.length === 0) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__dom__["c" /* removeClass */])([this.element], ['e-control']);
        }
        this.clearChanges();
        this.modelObserver.destroy();
        this.isDestroyed = true;
    };
    return Base;
}());



/***/ }),

/***/ 80:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Position; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Draggable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__browser__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dom__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__notify_property_change__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__event_handler__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__child_property__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util__ = __webpack_require__(1);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};








var defaultPosition = { left: 0, top: 0, bottom: 0, right: 0 };
var positionProp = ['offsetLeft', 'offsetTop'];
var axisMapper = ['x', 'y'];
var axisValueMapper = ['left', 'top'];
var Position = (function (_super) {
    __extends(Position, _super);
    function Position() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Position;
}(__WEBPACK_IMPORTED_MODULE_5__child_property__["a" /* ChildProperty */]));

__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])(0)
], Position.prototype, "left", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])(0)
], Position.prototype, "top", void 0);
var Draggable = Draggable_1 = (function (_super) {
    __extends(Draggable, _super);
    function Draggable(element, options) {
        var _this = _super.call(this, options, element) || this;
        _this.dragLimit = Draggable_1.getDefaultPosition();
        _this.borderWidth = Draggable_1.getDefaultPosition();
        _this.padding = Draggable_1.getDefaultPosition();
        _this.diffX = 0;
        _this.diffY = 0;
        _this.droppables = {};
        _this.bind();
        return _this;
    }
    Draggable.prototype.bind = function () {
        this.toggleEvents();
        if (__WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].isIE) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["b" /* addClass */])([this.element], 'e-block-touch');
        }
        this.droppables[this.scope] = {};
    };
    Draggable.getDefaultPosition = function () {
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["i" /* extend */])({}, defaultPosition);
    };
    Draggable.prototype.toggleEvents = function (isUnWire) {
        var ele;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["k" /* isUndefined */])(this.handle)) {
            ele = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["j" /* select */])(this.handle, this.element);
        }
        if (isUnWire) {
            __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(ele || this.element, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchStartEvent, this.initialize);
        }
        else {
            __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].add(ele || this.element, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchStartEvent, this.initialize, this);
        }
    };
    Draggable.prototype.initialize = function (evt) {
        this.target = evt.currentTarget;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["k" /* isUndefined */])(evt.changedTouches)) {
            evt.preventDefault();
        }
        if (this.abort) {
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["j" /* isNullOrUndefined */])(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["l" /* closest */])(evt.target, this.abort))) {
                return;
            }
        }
        this.element.setAttribute('aria-grabbed', 'true');
        var intCoord = this.getCoordinates(evt);
        this.initialPosition = { x: intCoord.pageX, y: intCoord.pageY };
        if (!this.clone) {
            var pos = this.element.getBoundingClientRect();
            this.relativeXPosition = intCoord.pageX - pos.left;
            this.relativeYPosition = intCoord.pageY - pos.top;
        }
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].add(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchMoveEvent, this.intDragStart, this);
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].add(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchEndEvent, this.intDestroy, this);
        this.toggleEvents(true);
        document.body.classList.add('e-prevent-select');
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].trigger(document.documentElement, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchStartEvent, evt);
    };
    Draggable.prototype.intDragStart = function (evt) {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["k" /* isUndefined */])(evt.changedTouches) && (evt.changedTouches.length !== 1)) {
            return;
        }
        var intCordinate = this.getCoordinates(evt);
        var pos;
        var styleProp = getComputedStyle(this.element);
        this.margin = {
            left: parseInt(styleProp.marginLeft, 10),
            top: parseInt(styleProp.marginTop, 10),
            right: parseInt(styleProp.marginRight, 10),
            bottom: parseInt(styleProp.marginBottom, 10),
        };
        var element = this.element;
        if (this.clone && this.dragTarget) {
            var intClosest = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["l" /* closest */])(evt.target, this.dragTarget);
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["j" /* isNullOrUndefined */])(intClosest)) {
                element = intClosest;
            }
        }
        this.offset = this.calculateParentPosition(element);
        this.position = this.getMousePosition(evt);
        var x = this.initialPosition.x - intCordinate.pageX;
        var y = this.initialPosition.y - intCordinate.pageY;
        var distance = Math.sqrt((x * x) + (y * y));
        if (distance >= this.distance) {
            var ele = this.getHelperElement(evt);
            if (!ele || __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["j" /* isNullOrUndefined */])(ele)) {
                return;
            }
            var dragTargetElement = this.helperElement = ele;
            this.parentClientRect = this.calculateParentPosition(dragTargetElement.offsetParent);
            if (this.dragStart) {
                var curTarget = this.getProperTargetElement(evt);
                this.trigger('dragStart', { event: evt, element: element, target: curTarget });
            }
            if (this.dragArea) {
                this.setDragArea();
            }
            else {
                this.dragLimit = { left: 0, right: 0, bottom: 0, top: 0 };
                this.borderWidth = { top: 0, left: 0 };
            }
            pos = { left: this.position.left - this.parentClientRect.left, top: this.position.top - this.parentClientRect.top };
            if (this.clone && !this.enableTailMode) {
                this.diffX = this.position.left - this.offset.left;
                this.diffY = this.position.top - this.offset.top;
            }
            var posValue = this.getProcessedPositionValue({ top: (pos.top - this.diffY) + 'px',
                left: (pos.left - this.diffX) + 'px' });
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["o" /* setStyleAttribute */])(dragTargetElement, {
                position: 'absolute', top: posValue.top, left: posValue.left
            });
            __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchMoveEvent, this.intDragStart);
            __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchEndEvent, this.intDestroy);
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["d" /* isVisible */])(dragTargetElement)) {
                __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].add(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchMoveEvent, this.intDrag, this);
                __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].add(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchEndEvent, this.intDragStop, this);
                this.setGlobalDroppables(false, this.element, dragTargetElement);
            }
            else {
                document.body.classList.remove('e-prevent-select');
            }
        }
    };
    Draggable.prototype.getProcessedPositionValue = function (value) {
        if (this.axis) {
            if (this.axis === 'x') {
                value.top = '0px';
            }
            else if (this.axis === 'y') {
                value.left = '0px';
            }
        }
        if (this.queryPositionInfo) {
            return this.queryPositionInfo(value);
        }
        return value;
    };
    Draggable.prototype.calculateParentPosition = function (ele) {
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["j" /* isNullOrUndefined */])(ele)) {
            return { left: 0, top: 0 };
        }
        var rect = ele.getBoundingClientRect();
        var style = getComputedStyle(ele);
        return {
            left: (rect.left + window.pageXOffset) - parseInt(style.marginLeft, 10),
            top: (rect.top + window.pageYOffset) - parseInt(style.marginTop, 10)
        };
    };
    Draggable.prototype.intDrag = function (evt) {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["k" /* isUndefined */])(evt.changedTouches) && (evt.changedTouches.length !== 1)) {
            return;
        }
        var left;
        var top;
        this.position = this.getMousePosition(evt);
        var docHeight = this.getDocumentWidthHeight('Height');
        if (docHeight < this.position.top) {
            this.position.top = docHeight;
        }
        var docWidth = this.getDocumentWidthHeight('Width');
        if (docWidth < this.position.left) {
            this.position.left = docWidth;
        }
        if (this.drag) {
            var curTarget = this.getProperTargetElement(evt);
            this.trigger('drag', { event: evt, element: this.element, target: curTarget });
        }
        var eleObj = this.checkTargetElement(evt);
        if (eleObj.target && eleObj.instance) {
            eleObj.instance.intOver(evt, eleObj.target);
            eleObj.instance.dragData[this.scope] = this.droppables[this.scope];
            this.hoverObject = eleObj;
        }
        else if (this.hoverObject) {
            this.hoverObject.instance.intOut(evt, eleObj.target);
            this.hoverObject.instance.dragData[this.scope] = null;
            this.hoverObject = null;
        }
        var helperElement = this.droppables[this.scope].helper;
        this.parentClientRect = this.calculateParentPosition(this.helperElement.offsetParent);
        var tLeft = this.parentClientRect.left;
        var tTop = this.parentClientRect.top;
        var intCoord = this.getCoordinates(evt);
        var pagex = intCoord.pageX;
        var pagey = intCoord.pageY;
        var dLeft = this.position.left - this.diffX;
        var dTop = this.position.top - this.diffY;
        if (this.dragArea) {
            var styles = getComputedStyle(helperElement);
            if (this.pageX !== pagex || this.skipDistanceCheck) {
                var helperWidth = helperElement.offsetWidth + (parseFloat(styles.marginLeft)
                    + parseFloat(styles.marginRight));
                if (this.dragLimit.left > dLeft) {
                    left = this.dragLimit.left;
                }
                else if (this.dragLimit.right < dLeft + helperWidth) {
                    left = this.dragLimit.right - helperWidth;
                }
                else {
                    left = dLeft;
                }
            }
            if (this.pageY !== pagey || this.skipDistanceCheck) {
                var helperHeight = helperElement.offsetHeight + (parseFloat(styles.marginTop)
                    + parseFloat(styles.marginBottom));
                if (this.dragLimit.top > dTop) {
                    top = this.dragLimit.top;
                }
                else if (this.dragLimit.bottom < dTop + helperHeight) {
                    top = this.dragLimit.bottom - helperHeight;
                }
                else {
                    top = dTop;
                }
            }
        }
        else {
            left = dLeft;
            top = dTop;
        }
        var iTop = tTop + this.borderWidth.top;
        var iLeft = tLeft + this.borderWidth.left;
        var dragValue = this.getProcessedPositionValue({ top: (top - iTop) + 'px', left: (left - iLeft) + 'px' });
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["o" /* setStyleAttribute */])(helperElement, { left: dragValue.left, top: dragValue.top });
        this.position.left = left;
        this.position.top = top;
        this.pageX = pagex;
        this.pageY = pagey;
    };
    Draggable.prototype.getDocumentWidthHeight = function (str) {
        var docBody = document.body;
        var docEle = document.documentElement;
        var returnValue = Math.max(docBody['scroll' + str], docEle['scroll' + str], docBody['offset' + str], docEle['offset' + str], docEle['client' + str]);
        return returnValue;
    };
    Draggable.prototype.intDragStop = function (evt) {
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["k" /* isUndefined */])(evt.changedTouches) && (evt.changedTouches.length !== 1)) {
            return;
        }
        var type = ['touchend', 'pointerup', 'mouseup'];
        if (type.indexOf(evt.type) !== -1) {
            if (this.dragStop) {
                var curTarget = this.getProperTargetElement(evt);
                this.trigger('dragStop', { event: evt, element: this.element, target: curTarget, helper: this.helperElement });
            }
            this.intDestroy(evt);
        }
        else {
            this.element.setAttribute('aria-grabbed', 'false');
        }
        var eleObj = this.checkTargetElement(evt);
        if (eleObj.target && eleObj.instance) {
            eleObj.instance.dragStopCalled = true;
            eleObj.instance.dragData[this.scope] = this.droppables[this.scope];
            eleObj.instance.intDrop(evt, eleObj.target);
        }
        this.setGlobalDroppables(true);
        document.body.classList.remove('e-prevent-select');
    };
    Draggable.prototype.intDestroy = function (evt) {
        this.toggleEvents();
        document.body.classList.remove('e-prevent-select');
        this.element.setAttribute('aria-grabbed', 'false');
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchMoveEvent, this.intDragStart);
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchEndEvent, this.intDragStop);
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchEndEvent, this.intDestroy);
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(document, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchMoveEvent, this.intDrag);
    };
    Draggable.prototype.onPropertyChanged = function (newProp, oldProp) {
    };
    Draggable.prototype.getModuleName = function () {
        return 'draggable';
    };
    Draggable.prototype.setDragArea = function () {
        var eleWidthBound;
        var eleHeightBound;
        var top = 0;
        var left = 0;
        var ele;
        var type = typeof this.dragArea;
        if (type === 'string') {
            ele = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["j" /* select */])(this.dragArea);
        }
        else {
            ele = this.dragArea;
        }
        if (ele) {
            var elementArea = ele.getBoundingClientRect();
            eleWidthBound = elementArea.width ? elementArea.width : elementArea.right - elementArea.left;
            eleHeightBound = elementArea.height ? elementArea.height : elementArea.bottom - elementArea.top;
            var keys = ['Top', 'Left', 'Bottom', 'Right'];
            var styles = getComputedStyle(ele);
            for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                var tborder = styles['border' + key + 'Width'];
                var tpadding = styles['padding' + key];
                var lowerKey = key.toLowerCase();
                this.borderWidth[lowerKey] = isNaN(parseFloat(tborder)) ? 0 : parseFloat(tborder);
                this.padding[lowerKey] = isNaN(parseFloat(tpadding)) ? 0 : parseFloat(tpadding);
            }
            top = elementArea.top;
            left = elementArea.left;
            this.dragLimit.left = left + this.borderWidth.left + this.padding.left;
            this.dragLimit.top = top + this.borderWidth.top + this.padding.top;
            this.dragLimit.right = left + eleWidthBound - (this.borderWidth.right + this.padding.right);
            this.dragLimit.bottom = top + eleHeightBound - (this.borderWidth.bottom + this.padding.bottom);
        }
    };
    Draggable.prototype.getProperTargetElement = function (evt) {
        var intCoord = this.getCoordinates(evt);
        var ele;
        var prevStyle = this.helperElement.style.display || '';
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["p" /* compareElementParent */])(evt.target, this.helperElement) || evt.type.indexOf('touch') !== -1) {
            this.helperElement.style.display = 'none';
            ele = document.elementFromPoint(intCoord.clientX, intCoord.clientY);
            this.helperElement.style.display = prevStyle;
        }
        else {
            ele = evt.target;
        }
        return ele;
    };
    Draggable.prototype.getMousePosition = function (evt) {
        var intCoord = this.getCoordinates(evt);
        var pageX = this.clone ? intCoord.pageX : intCoord.pageX - this.relativeXPosition;
        var pageY = this.clone ? intCoord.pageY : intCoord.pageY - this.relativeYPosition;
        return {
            left: pageX - (this.margin.left + this.cursorAt.left),
            top: pageY - (this.margin.top + this.cursorAt.top)
        };
    };
    Draggable.prototype.getCoordinates = function (evt) {
        if (evt.type.indexOf('touch') > -1) {
            return evt.changedTouches[0];
        }
        return evt;
    };
    Draggable.prototype.getHelperElement = function (evt) {
        var element;
        if (this.clone) {
            if (this.helper) {
                element = this.helper({ sender: evt, element: this.target });
            }
            else {
                element = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["a" /* createElement */])('div', { className: 'e-drag-helper e-block-touch', innerHTML: 'Draggable' });
                document.body.appendChild(element);
            }
        }
        else {
            element = this.element;
        }
        return element;
    };
    Draggable.prototype.setGlobalDroppables = function (reset, drag, helper) {
        this.droppables[this.scope] = reset ? null : {
            draggable: drag,
            helper: helper,
            draggedElement: this.element
        };
    };
    Draggable.prototype.checkTargetElement = function (evt) {
        var target = this.getProperTargetElement(evt);
        var dropIns = this.getDropInstance(target);
        if (!dropIns && target && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util__["j" /* isNullOrUndefined */])(target.parentNode)) {
            var parent_1 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["l" /* closest */])(target.parentNode, '.e-droppable') || target.parentElement;
            if (parent_1) {
                dropIns = this.getDropInstance(parent_1);
            }
        }
        return { target: target, instance: dropIns };
    };
    Draggable.prototype.getDropInstance = function (ele) {
        var name = 'getModuleName';
        var drop;
        var eleInst = ele && ele.ej2_instances;
        if (eleInst) {
            for (var _i = 0, eleInst_1 = eleInst; _i < eleInst_1.length; _i++) {
                var inst = eleInst_1[_i];
                if (inst[name]() === 'droppable') {
                    drop = inst;
                    break;
                }
            }
        }
        return drop;
    };
    Draggable.prototype.destroy = function () {
        this.toggleEvents(true);
        _super.prototype.destroy.call(this);
    };
    return Draggable;
}(__WEBPACK_IMPORTED_MODULE_0__base__["a" /* Base */]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["b" /* Complex */])({}, Position)
], Draggable.prototype, "cursorAt", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])(true)
], Draggable.prototype, "clone", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])()
], Draggable.prototype, "dragArea", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["f" /* Event */])()
], Draggable.prototype, "drag", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["f" /* Event */])()
], Draggable.prototype, "dragStart", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["f" /* Event */])()
], Draggable.prototype, "dragStop", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])(1)
], Draggable.prototype, "distance", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])()
], Draggable.prototype, "handle", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])()
], Draggable.prototype, "abort", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])()
], Draggable.prototype, "helper", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])('default')
], Draggable.prototype, "scope", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])('')
], Draggable.prototype, "dragTarget", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])()
], Draggable.prototype, "axis", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])()
], Draggable.prototype, "queryPositionInfo", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])(false)
], Draggable.prototype, "enableTailMode", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])(false)
], Draggable.prototype, "skipDistanceCheck", void 0);
Draggable = Draggable_1 = __decorate([
    __WEBPACK_IMPORTED_MODULE_3__notify_property_change__["g" /* NotifyPropertyChanges */]
], Draggable);

var Draggable_1;


/***/ }),

/***/ 81:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Droppable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__browser__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dom__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__notify_property_change__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__event_handler__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util__ = __webpack_require__(1);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






var Droppable = (function (_super) {
    __extends(Droppable, _super);
    function Droppable(element, options) {
        var _this = _super.call(this, options, element) || this;
        _this.mouseOver = false;
        _this.dragData = {};
        _this.dragStopCalled = false;
        _this.bind();
        return _this;
    }
    Droppable.prototype.bind = function () {
        this.wireEvents();
    };
    Droppable.prototype.wireEvents = function () {
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].add(this.element, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchEndEvent, this.intDrop, this);
    };
    Droppable.prototype.onPropertyChanged = function (newProp, oldProp) {
    };
    Droppable.prototype.getModuleName = function () {
        return 'droppable';
    };
    Droppable.prototype.intOver = function (event, element) {
        if (!this.mouseOver) {
            this.trigger('over', { event: event, target: element });
            this.mouseOver = true;
        }
    };
    Droppable.prototype.intOut = function (event, element) {
        if (this.mouseOver) {
            this.trigger('out', { evt: event, target: element });
            this.mouseOver = false;
        }
    };
    Droppable.prototype.intDrop = function (evt, element) {
        if (!this.dragStopCalled) {
            return;
        }
        else {
            this.dragStopCalled = false;
        }
        var accept = true;
        var drag = this.dragData[this.scope];
        var isDrag = drag ? (drag.helper && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["d" /* isVisible */])(drag.helper)) : false;
        var area;
        if (isDrag) {
            area = this.isDropArea(evt, drag.helper, element);
            if (this.accept) {
                accept = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__dom__["q" /* matches */])(drag.helper, this.accept);
            }
        }
        if (isDrag && this.drop && area.canDrop && accept) {
            this.trigger('drop', { event: evt, target: area.target, droppedElement: drag.helper, dragData: drag });
        }
    };
    Droppable.prototype.isDropArea = function (evt, helper, element) {
        var area = { canDrop: true, target: element || evt.target };
        var isTouch = evt.type === 'touchend';
        if (isTouch || area.target === helper) {
            helper.style.display = 'none';
            var coord = isTouch ? (evt.changedTouches[0]) : evt;
            var ele = document.elementFromPoint(coord.clientX, coord.clientY);
            area.canDrop = false;
            area.canDrop = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util__["p" /* compareElementParent */])(ele, this.element);
            if (area.canDrop) {
                area.target = ele;
            }
            helper.style.display = '';
        }
        return area;
    };
    Droppable.prototype.destroy = function () {
        __WEBPACK_IMPORTED_MODULE_4__event_handler__["a" /* EventHandler */].remove(this.element, __WEBPACK_IMPORTED_MODULE_1__browser__["a" /* Browser */].touchEndEvent, this.intDrop);
        _super.prototype.destroy.call(this);
    };
    return Droppable;
}(__WEBPACK_IMPORTED_MODULE_0__base__["a" /* Base */]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])()
], Droppable.prototype, "accept", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["a" /* Property */])('default')
], Droppable.prototype, "scope", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["f" /* Event */])()
], Droppable.prototype, "drop", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["f" /* Event */])()
], Droppable.prototype, "over", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__notify_property_change__["f" /* Event */])()
], Droppable.prototype, "out", void 0);
Droppable = __decorate([
    __WEBPACK_IMPORTED_MODULE_3__notify_property_change__["g" /* NotifyPropertyChanges */]
], Droppable);



/***/ }),

/***/ 82:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DateParser; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__intl_base__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parser_base__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util__ = __webpack_require__(1);



var number = 'numbers';
var defNoSystem = 'defaultNumberingSystem';
var noSystem = 'numberingSystem';
var standalone = 'stand-alone';
var curWeekDay = 'curWeekDay';
var latnRegex = /^[0-9]*$/;
var abbreviateRegex = /\/MMMMM|MMMM|MMM|a|LLL|EEEEE|EEEE|E|ccc/;
var timeSetter = {
    minute: 'setMinutes',
    hour: 'setHours',
    second: 'setSeconds',
    day: 'setDate',
    month: 'setMonth'
};
var month = 'months';
var datePartMatcher = {
    'M': 'month',
    'd': 'day',
    'E': 'weekday',
    'c': 'weekday',
    'y': 'year',
    'm': 'minute',
    'h': 'hour',
    'H': 'hour',
    's': 'second',
    'L': 'month',
    'a': 'designator',
    'z': 'timeZone',
    'Z': 'timeZone',
    'G': 'era'
};
var DateParser = (function () {
    function DateParser() {
    }
    DateParser.dateParser = function (culture, option, cldr) {
        var _this = this;
        var dependable = __WEBPACK_IMPORTED_MODULE_0__intl_base__["a" /* IntlBase */].getDependables(cldr, culture);
        var numOptions = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getCurrentNumericOptions(dependable.parserObject, __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getNumberingSystem(cldr));
        var parseOptions = {};
        var resPattern = option.format || __WEBPACK_IMPORTED_MODULE_0__intl_base__["a" /* IntlBase */].getResultantPattern(option.skeleton, dependable.dateObject, option.type);
        var regexString = '';
        var hourOnly;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(resPattern)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["q" /* throwError */])('Format options or type given must be invalid');
        }
        else {
            parseOptions = { pattern: resPattern, evalposition: {} };
            var patternMatch = resPattern.match(__WEBPACK_IMPORTED_MODULE_0__intl_base__["a" /* IntlBase */].dateParseRegex) || [];
            var length_1 = patternMatch.length;
            var nRegx = numOptions.numericRegex;
            for (var i = 0; i < length_1; i++) {
                var str = patternMatch[i];
                var len = str.length;
                var char = (str[0] === 'K') ? 'h' : str[0];
                var isNumber = void 0;
                var canUpdate = void 0;
                var charKey = datePartMatcher[char];
                var optional = (len === 2) ? '' : '?';
                switch (char) {
                    case 'E':
                    case 'c':
                        var weekObject = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].reverseObject(dependable.dateObject[__WEBPACK_IMPORTED_MODULE_0__intl_base__["a" /* IntlBase */].days][standalone][__WEBPACK_IMPORTED_MODULE_0__intl_base__["a" /* IntlBase */].monthIndex[len]]);
                        regexString += '(' + Object.keys(weekObject).join('|') + ')';
                        break;
                    case 'M':
                    case 'L':
                    case 'd':
                    case 'm':
                    case 's':
                    case 'h':
                    case 'H':
                        canUpdate = true;
                        if ((char === 'M' || char === 'L') && len > 2) {
                            parseOptions[charKey] = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].reverseObject(dependable.dateObject[month][standalone][__WEBPACK_IMPORTED_MODULE_0__intl_base__["a" /* IntlBase */].monthIndex[len]]);
                            regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';
                        }
                        else {
                            isNumber = true;
                            regexString += '(' + nRegx + nRegx + optional + ')';
                        }
                        if (char === 'h') {
                            parseOptions.hour12 = true;
                        }
                        break;
                    case 'y':
                        canUpdate = isNumber = true;
                        if (len === 2) {
                            regexString += '(' + nRegx + nRegx + ')';
                        }
                        else {
                            regexString += '(' + nRegx + '{' + len + ',})';
                        }
                        break;
                    case 'a':
                        canUpdate = true;
                        parseOptions[charKey] = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].reverseObject(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["c" /* getValue */])('dayPeriods.format.wide', dependable.dateObject));
                        regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';
                        break;
                    case 'G':
                        canUpdate = true;
                        var eText = (len <= 3) ? 'eraAbbr' : (len === 4) ? 'eraNames' : 'eraNarrow';
                        parseOptions[charKey] = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].reverseObject(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["c" /* getValue */])('eras.' + eText, dependable.dateObject));
                        regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + '?)';
                        break;
                    case 'z':
                        var tval = new Date().getTimezoneOffset();
                        canUpdate = (tval !== 0);
                        parseOptions[charKey] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["c" /* getValue */])('dates.timeZoneNames', dependable.parserObject);
                        var tzone = parseOptions[charKey];
                        hourOnly = (len < 4);
                        var hpattern = hourOnly ? '+H;-H' : tzone.hourFormat;
                        regexString += '(' + this.parseTimeZoneRegx(hpattern, tzone, nRegx) + ')?';
                        break;
                    case '\'':
                        var iString = str.replace(/\'/g, '');
                        regexString += '(' + iString + ')?';
                        break;
                    default:
                        regexString += '(.)?';
                        break;
                }
                if (canUpdate) {
                    parseOptions.evalposition[charKey] = { isNumber: isNumber, pos: i + 1, hourOnly: hourOnly };
                }
                if (i === length_1 - 1 && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["j" /* isNullOrUndefined */])(regexString)) {
                    parseOptions.parserRegex = new RegExp('^' + regexString + '$');
                }
            }
        }
        return function (value) {
            var parsedDateParts = _this.internalDateParse(value, parseOptions, numOptions);
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["j" /* isNullOrUndefined */])(parsedDateParts) || !Object.keys(parsedDateParts).length) {
                return null;
            }
            return _this.getDateObject(parsedDateParts);
        };
    };
    DateParser.getDateObject = function (options, value) {
        var res = value || new Date();
        res.setMilliseconds(0);
        var tKeys = ['hour', 'minute', 'second', 'month', 'day'];
        var y = options.year;
        var desig = options.designator;
        var tzone = options.timeZone;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(y)) {
            var len = (y + '').length;
            if (len <= 2) {
                var century = Math.floor(res.getFullYear() / 100) * 100;
                y += century;
            }
            res.setFullYear(y);
        }
        for (var _i = 0, tKeys_1 = tKeys; _i < tKeys_1.length; _i++) {
            var key = tKeys_1[_i];
            var tValue = options[key];
            if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(tValue)) {
                if (key === 'month') {
                    tValue -= 1;
                    if (tValue < 0 || tValue > 11) {
                        return new Date('invalid');
                    }
                    var pDate = res.getDate();
                    res.setDate(1);
                    res[timeSetter[key]](tValue);
                    var lDate = new Date(res.getFullYear(), tValue + 1, 0).getDate();
                    res.setDate(pDate < lDate ? pDate : lDate);
                }
                else {
                    if (key === 'day') {
                        var lastDay = new Date(res.getFullYear(), res.getMonth() + 1, 0).getDate();
                        if ((tValue < 1 || tValue > lastDay)) {
                            return null;
                        }
                    }
                    res[timeSetter[key]](tValue);
                }
            }
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(desig)) {
            var hour = res.getHours();
            if (desig === 'pm') {
                res.setHours(hour + (hour === 12 ? 0 : 12));
            }
            else if (hour === 12) {
                res.setHours(0);
            }
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(tzone)) {
            var tzValue = tzone - res.getTimezoneOffset();
            if (tzValue !== 0) {
                res.setMinutes(res.getMinutes() + tzValue);
            }
        }
        return res;
    };
    DateParser.internalDateParse = function (value, parseOptions, num) {
        var matches = value.match(parseOptions.parserRegex);
        var retOptions = { 'hour': 0, 'minute': 0, 'second': 0 };
        var nRegx = num.numericRegex;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["j" /* isNullOrUndefined */])(matches)) {
            return null;
        }
        else {
            var props = Object.keys(parseOptions.evalposition);
            for (var _i = 0, props_1 = props; _i < props_1.length; _i++) {
                var prop = props_1[_i];
                var curObject = parseOptions.evalposition[prop];
                var matchString = matches[curObject.pos];
                if (curObject.isNumber) {
                    retOptions[prop] = this.internalNumberParser(matchString, num);
                }
                else {
                    if (prop === 'timeZone' && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(matchString)) {
                        var pos = curObject.pos;
                        var val = void 0;
                        var tmatch = matches[pos + 1];
                        var flag = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["k" /* isUndefined */])(tmatch);
                        if (curObject.hourOnly) {
                            val = this.getZoneValue(flag, tmatch, matches[pos + 4], num) * 60;
                        }
                        else {
                            val = this.getZoneValue(flag, tmatch, matches[pos + 7], num) * 60;
                            val += this.getZoneValue(flag, matches[pos + 4], matches[pos + 10], num);
                        }
                        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util__["j" /* isNullOrUndefined */])(val)) {
                            retOptions[prop] = val;
                        }
                    }
                    else {
                        retOptions[prop] = parseOptions[prop][matchString];
                    }
                }
            }
            if (parseOptions.hour12) {
                retOptions.hour12 = true;
            }
        }
        return retOptions;
    };
    DateParser.internalNumberParser = function (value, option) {
        value = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].convertValueParts(value, option.numberParseRegex, option.numericPair);
        if (latnRegex.test(value)) {
            return +value;
        }
        return null;
    };
    DateParser.parseTimeZoneRegx = function (hourFormat, tZone, nRegex) {
        var pattern = tZone.gmtFormat;
        var ret;
        var result;
        var cRegex = '(' + nRegex + ')' + '(' + nRegex + ')';
        var splitStr;
        ret = hourFormat.replace('+', '\\+');
        if (hourFormat.indexOf('HH') !== -1) {
            ret = ret.replace(/HH|mm/g, '(' + cRegex + ')');
        }
        else {
            ret = ret.replace(/H|m/g, '(' + cRegex + '?)');
        }
        splitStr = (ret.split(';').map(function (str) {
            return pattern.replace('{0}', str);
        }));
        ret = splitStr.join('|') + '|' + tZone.gmtZeroFormat;
        return ret;
    };
    DateParser.getZoneValue = function (flag, val1, val2, num) {
        var value = this.internalNumberParser(flag ? val1 : val2, num);
        if (flag) {
            return -value;
        }
        return value;
    };
    return DateParser;
}());



/***/ }),

/***/ 83:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NumberParser; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parser_base__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__intl_base__ = __webpack_require__(20);



var formatRegex = /(^[ncpa]{1})([0-1]?[0-9]|20)?$/i;
var parseRegex = /^([^0-9]*)(([0-9,]*[0-9]+)(\.[0-9]+)?)([Ee][+-]?[0-9]+)?([^0-9]*)$/;
var groupRegex = /,/g;
var latnDecimalRegex = /^[0-9]*(\.[0-9]+)?$/;
var keys = ['minusSign', 'infinity'];
var NumberParser = (function () {
    function NumberParser() {
    }
    NumberParser.numberParser = function (culture, option, cldr) {
        var _this = this;
        var dependable = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getDependables(cldr, culture, true);
        var parseOptions = { custom: true };
        var numOptions;
        if ((__WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].formatRegex.test(option.format)) || !(option.format)) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(parseOptions, __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getProperNumericSkeleton(option.format || 'N'));
            parseOptions.custom = false;
        }
        else {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(parseOptions, __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].customFormat(option.format, null, null));
        }
        numOptions = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getCurrentNumericOptions(dependable.parserObject, __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getNumberingSystem(cldr), true);
        parseOptions.symbolRegex = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].getSymbolRegex(Object.keys(numOptions.symbolMatch));
        parseOptions.infinity = numOptions.symbolNumberSystem[keys[1]];
        var symbolpattern = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getSymbolPattern(parseOptions.type, numOptions.numberSystem, dependable.numericObject, parseOptions.isAccount);
        if (symbolpattern) {
            symbolpattern = symbolpattern.replace(/\u00A4/g, __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].defaultCurrency);
            var split = symbolpattern.split(';');
            parseOptions.nData = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getFormatData(split[1] || '-' + split[0], true, '');
            parseOptions.pData = __WEBPACK_IMPORTED_MODULE_2__intl_base__["a" /* IntlBase */].getFormatData(split[0], true, '');
        }
        return function (value) {
            return _this.getParsedNumber(value, parseOptions, numOptions);
        };
    };
    NumberParser.getParsedNumber = function (value, options, numOptions) {
        var isNegative;
        var isPercent;
        var tempValue;
        var lead;
        var end;
        var ret;
        if (value.indexOf(options.infinity) !== -1) {
            return Infinity;
        }
        else {
            value = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].convertValueParts(value, options.symbolRegex, numOptions.symbolMatch);
            value = __WEBPACK_IMPORTED_MODULE_1__parser_base__["a" /* ParserBase */].convertValueParts(value, numOptions.numberParseRegex, numOptions.numericPair);
            if (value.indexOf('.') === 0) {
                value = '0' + value;
            }
            var matches = value.match(parseRegex);
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(matches)) {
                return NaN;
            }
            lead = matches[1];
            tempValue = matches[2];
            var exponent = matches[5];
            end = matches[6];
            isNegative = options.custom ? ((lead === options.nData.nlead) && (end === options.nData.nend)) :
                ((lead.indexOf(options.nData.nlead) !== -1) && (end.indexOf(options.nData.nend) !== -1));
            isPercent = isNegative ?
                options.nData.isPercent :
                options.pData.isPercent;
            tempValue = tempValue.replace(groupRegex, '');
            if (exponent) {
                tempValue += exponent;
            }
            ret = +tempValue;
            if (options.type === 'percent' || isPercent) {
                ret = ret / 100;
            }
            if (options.custom || options.fractionDigits) {
                ret = parseFloat(ret.toFixed(options.custom ?
                    (isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits) : options.fractionDigits));
            }
            if (isNegative) {
                ret *= -1;
            }
            return ret;
        }
    };
    return NumberParser;
}());



/***/ }),

/***/ 84:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return KeyboardEvents; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__notify_property_change__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base__ = __webpack_require__(8);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var keyCode = {
    'backspace': 8,
    'tab': 9,
    'enter': 13,
    'shift': 16,
    'control': 17,
    'alt': 18,
    'pause': 19,
    'capslock': 20,
    'space': 32,
    'escape': 27,
    'pageup': 33,
    'pagedown': 34,
    'end': 35,
    'home': 36,
    'leftarrow': 37,
    'uparrow': 38,
    'rightarrow': 39,
    'downarrow': 40,
    'insert': 45,
    'delete': 46,
    'f1': 112,
    'f2': 113,
    'f3': 114,
    'f4': 115,
    'f5': 116,
    'f6': 117,
    'f7': 118,
    'f8': 119,
    'f9': 120,
    'f10': 121,
    'f11': 122,
    'f12': 123,
    'semicolon': 186,
    'plus': 187,
    'comma': 188,
    'minus': 189,
    'dot': 190,
    'forwardslash': 191,
    'graveaccent': 192,
    'openbracket': 219,
    'backslash': 220,
    'closebracket': 221,
    'singlequote': 222
};
var KeyboardEvents = KeyboardEvents_1 = (function (_super) {
    __extends(KeyboardEvents, _super);
    function KeyboardEvents(element, options) {
        var _this = _super.call(this, options, element) || this;
        _this.keyPressHandler = function (e) {
            var isAltKey = e.altKey;
            var isCtrlKey = e.ctrlKey;
            var isShiftKey = e.shiftKey;
            var curkeyCode = e.which;
            var keys = Object.keys(_this.keyConfigs);
            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                var key = keys_1[_i];
                var configCollection = _this.keyConfigs[key].split(',');
                for (var _a = 0, configCollection_1 = configCollection; _a < configCollection_1.length; _a++) {
                    var rconfig = configCollection_1[_a];
                    var rKeyObj = KeyboardEvents_1.getKeyConfigData(rconfig.trim());
                    if (isAltKey === rKeyObj.altKey && isCtrlKey === rKeyObj.ctrlKey &&
                        isShiftKey === rKeyObj.shiftKey && curkeyCode === rKeyObj.keyCode) {
                        e.action = key;
                        if (_this.keyAction) {
                            _this.keyAction(e);
                        }
                    }
                }
            }
        };
        _this.bind();
        return _this;
    }
    KeyboardEvents.prototype.destroy = function () {
        this.unwireEvents();
        _super.prototype.destroy.call(this);
    };
    KeyboardEvents.prototype.onPropertyChanged = function (newProp, oldProp) {
    };
    ;
    KeyboardEvents.prototype.bind = function () {
        this.wireEvents();
    };
    KeyboardEvents.prototype.getModuleName = function () {
        return 'keyboard';
    };
    KeyboardEvents.prototype.wireEvents = function () {
        this.element.addEventListener(this.eventName, this.keyPressHandler);
    };
    KeyboardEvents.prototype.unwireEvents = function () {
        this.element.removeEventListener(this.eventName, this.keyPressHandler);
    };
    KeyboardEvents.getKeyConfigData = function (config) {
        if (config in this.configCache) {
            return this.configCache[config];
        }
        var keys = config.toLowerCase().split('+');
        var keyData = {
            altKey: (keys.indexOf('alt') !== -1 ? true : false),
            ctrlKey: (keys.indexOf('ctrl') !== -1 ? true : false),
            shiftKey: (keys.indexOf('shift') !== -1 ? true : false),
            keyCode: null
        };
        if (keys[keys.length - 1].length > 1 && !!Number(keys[keys.length - 1])) {
            keyData.keyCode = Number(keys[keys.length - 1]);
        }
        else {
            keyData.keyCode = KeyboardEvents_1.getKeyCode(keys[keys.length - 1]);
        }
        KeyboardEvents_1.configCache[config] = keyData;
        return keyData;
    };
    KeyboardEvents.getKeyCode = function (keyVal) {
        return keyCode[keyVal] || keyVal.toUpperCase().charCodeAt(0);
    };
    return KeyboardEvents;
}(__WEBPACK_IMPORTED_MODULE_1__base__["a" /* Base */]));
KeyboardEvents.configCache = {};
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__notify_property_change__["a" /* Property */])({})
], KeyboardEvents.prototype, "keyConfigs", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__notify_property_change__["a" /* Property */])('keyup')
], KeyboardEvents.prototype, "eventName", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__notify_property_change__["f" /* Event */])()
], KeyboardEvents.prototype, "keyAction", void 0);
KeyboardEvents = KeyboardEvents_1 = __decorate([
    __WEBPACK_IMPORTED_MODULE_0__notify_property_change__["g" /* NotifyPropertyChanges */]
], KeyboardEvents);

var KeyboardEvents_1;


/***/ }),

/***/ 85:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return L10n; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__internationalization__ = __webpack_require__(24);


var L10n = (function () {
    function L10n(controlName, localeStrings, locale) {
        this.controlName = controlName;
        this.localeStrings = localeStrings;
        this.setLocale(locale || __WEBPACK_IMPORTED_MODULE_1__internationalization__["d" /* defaultCulture */]);
    }
    L10n.prototype.setLocale = function (locale) {
        var intLocale = this.intGetControlConstant(L10n.locale, locale);
        if (!intLocale) {
            if (locale !== 'en-US') {
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["q" /* throwError */])('The specified locale or controlname not found in the locale object');
            }
            else {
                this.currentLocale = this.localeStrings;
            }
        }
        else {
            this.currentLocale = intLocale;
        }
    };
    L10n.load = function (localeObject) {
        this.locale = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(this.locale, localeObject, {}, true);
    };
    L10n.prototype.getConstant = function (prop) {
        return this.currentLocale[prop] || this.localeStrings[prop] || '';
    };
    L10n.prototype.intGetControlConstant = function (curObject, locale) {
        if (curObject[locale]) {
            return curObject[locale][this.controlName];
        }
        return null;
    };
    return L10n;
}());

L10n.locale = {};


/***/ }),

/***/ 86:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SvgRenderer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);

var SvgRenderer = (function () {
    function SvgRenderer(rootID) {
        this.svgLink = 'http://www.w3.org/2000/svg';
        this.rootId = rootID;
    }
    SvgRenderer.prototype.getOptionValue = function (options, key) {
        return options[key];
    };
    SvgRenderer.prototype.createSvg = function (options) {
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(options.id)) {
            options.id = this.rootId + '_svg';
        }
        this.svgObj = document.getElementById(options.id);
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(document.getElementById(options.id))) {
            this.svgObj = document.createElementNS(this.svgLink, 'svg');
        }
        this.svgObj = this.setElementAttributes(options, this.svgObj);
        this.setSVGSize(options.width, options.height);
        return this.svgObj;
    };
    SvgRenderer.prototype.setSVGSize = function (width, height) {
        var element = document.getElementById(this.rootId);
        var size = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(element) ? element.getBoundingClientRect() : null;
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.width) || this.width <= 0) {
            this.svgObj.setAttribute('width', width ? width.toString() : size.width.toString());
        }
        else {
            this.svgObj.setAttribute('width', this.width.toString());
        }
        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.height) || this.height <= 0) {
            this.svgObj.setAttribute('height', height ? height.toString() : '450');
        }
        else {
            this.svgObj.setAttribute('height', this.height.toString());
        }
    };
    SvgRenderer.prototype.drawPath = function (options) {
        var path = document.getElementById(options.id);
        if (path === null) {
            path = document.createElementNS(this.svgLink, 'path');
        }
        path = this.setElementAttributes(options, path);
        return path;
    };
    SvgRenderer.prototype.drawLine = function (options) {
        var line = document.getElementById(options.id);
        if (line === null) {
            line = document.createElementNS(this.svgLink, 'line');
        }
        line = this.setElementAttributes(options, line);
        return line;
    };
    SvgRenderer.prototype.drawRectangle = function (options) {
        var rectangle = document.getElementById(options.id);
        if (rectangle === null) {
            rectangle = document.createElementNS(this.svgLink, 'rect');
        }
        rectangle = this.setElementAttributes(options, rectangle);
        return rectangle;
    };
    SvgRenderer.prototype.drawCircle = function (options) {
        var circle = document.getElementById(options.id);
        if (circle === null) {
            circle = document.createElementNS(this.svgLink, 'circle');
        }
        circle = this.setElementAttributes(options, circle);
        return circle;
    };
    SvgRenderer.prototype.drawPolyline = function (options) {
        var polyline = document.getElementById(options.id);
        if (polyline === null) {
            polyline = document.createElementNS(this.svgLink, 'polyline');
        }
        polyline = this.setElementAttributes(options, polyline);
        return polyline;
    };
    SvgRenderer.prototype.drawEllipse = function (options) {
        var ellipse = document.getElementById(options.id);
        if (ellipse === null) {
            ellipse = document.createElementNS(this.svgLink, 'ellipse');
        }
        ellipse = this.setElementAttributes(options, ellipse);
        return ellipse;
    };
    SvgRenderer.prototype.drawPolygon = function (options) {
        var polygon = document.getElementById(options.id);
        if (polygon === null) {
            polygon = document.createElementNS(this.svgLink, 'polygon');
        }
        polygon = this.setElementAttributes(options, polygon);
        return polygon;
    };
    SvgRenderer.prototype.drawImage = function (options) {
        var img = document.createElementNS(this.svgLink, 'image');
        img.setAttributeNS(null, 'height', options.height.toString());
        img.setAttributeNS(null, 'width', options.width.toString());
        img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', options.href);
        img.setAttributeNS(null, 'x', options.x.toString());
        img.setAttributeNS(null, 'y', options.y.toString());
        img.setAttributeNS(null, 'id', options.id);
        img.setAttributeNS(null, 'visibility', options.visibility);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(this.getOptionValue(options, 'clip-path'))) {
            img.setAttributeNS(null, 'clip-path', this.getOptionValue(options, 'clip-path'));
        }
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(options.preserveAspectRatio)) {
            img.setAttributeNS(null, 'preserveAspectRatio', options.preserveAspectRatio);
        }
        return img;
    };
    SvgRenderer.prototype.createText = function (options, label) {
        var text = document.createElementNS(this.svgLink, 'text');
        text = this.setElementAttributes(options, text);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(label)) {
            text.textContent = label;
        }
        return text;
    };
    SvgRenderer.prototype.createTSpan = function (options, label) {
        var tSpan = document.createElementNS(this.svgLink, 'tspan');
        tSpan = this.setElementAttributes(options, tSpan);
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(label)) {
            tSpan.textContent = label;
        }
        return tSpan;
    };
    SvgRenderer.prototype.createTitle = function (text) {
        var title = document.createElementNS(this.svgLink, 'title');
        title.textContent = text;
        return title;
    };
    SvgRenderer.prototype.createDefs = function () {
        var defs = document.createElementNS(this.svgLink, 'defs');
        return defs;
    };
    SvgRenderer.prototype.createClipPath = function (options) {
        var clipPath = document.createElementNS(this.svgLink, 'clipPath');
        clipPath = this.setElementAttributes(options, clipPath);
        return clipPath;
    };
    SvgRenderer.prototype.createForeignObject = function (options) {
        var foreignObject = document.createElementNS(this.svgLink, 'foreignObject');
        foreignObject = this.setElementAttributes(options, foreignObject);
        return foreignObject;
    };
    SvgRenderer.prototype.createGroup = function (options) {
        var group = document.createElementNS(this.svgLink, 'g');
        group = this.setElementAttributes(options, group);
        return group;
    };
    SvgRenderer.prototype.createPattern = function (options, element) {
        var pattern = document.createElementNS(this.svgLink, element);
        pattern = this.setElementAttributes(options, pattern);
        return pattern;
    };
    SvgRenderer.prototype.createRadialGradient = function (colors, name, options) {
        var colorName;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(colors[0].colorStop)) {
            var newOptions = {
                'id': this.rootId + '_' + name + 'radialGradient',
                'cx': options.cx + '%',
                'cy': options.cy + '%',
                'r': options.r + '%',
                'fx': options.fx + '%',
                'fy': options.fy + '%'
            };
            this.drawGradient('radialGradient', newOptions, colors);
            colorName = 'url(#' + this.rootId + '_' + name + 'radialGradient)';
        }
        else {
            colorName = colors[0].color.toString();
        }
        return colorName;
    };
    SvgRenderer.prototype.createLinearGradient = function (colors, name, options) {
        var colorName;
        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(colors[0].colorStop)) {
            var newOptions = {
                'id': this.rootId + '_' + name + 'linearGradient',
                'x1': options.x1 + '%',
                'y1': options.y1 + '%',
                'x2': options.x2 + '%',
                'y2': options.y2 + '%'
            };
            this.drawGradient('linearGradient', newOptions, colors);
            colorName = 'url(#' + this.rootId + '_' + name + 'linearGradient)';
        }
        else {
            colorName = colors[0].color.toString();
        }
        return colorName;
    };
    SvgRenderer.prototype.drawGradient = function (gradientType, options, colors) {
        var defs = this.createDefs();
        var gradient = document.createElementNS(this.svgLink, gradientType);
        gradient = this.setElementAttributes(options, gradient);
        for (var i = 0; i < colors.length; i++) {
            var stop_1 = document.createElementNS(this.svgLink, 'stop');
            stop_1.setAttribute('offset', colors[i].colorStop);
            stop_1.setAttribute('stop-color', colors[i].color);
            stop_1.setAttribute('stop-opacity', '1');
            gradient.appendChild(stop_1);
        }
        defs.appendChild(gradient);
        return defs;
    };
    SvgRenderer.prototype.drawClipPath = function (options) {
        var defs = this.createDefs();
        var clipPath = this.createClipPath({ 'id': options.id });
        var rect = this.drawRectangle(options);
        clipPath.appendChild(rect);
        defs.appendChild(clipPath);
        return defs;
    };
    SvgRenderer.prototype.drawCircularClipPath = function (options) {
        var defs = this.createDefs();
        var clipPath = this.createClipPath({ 'id': options.id });
        var circle = this.drawCircle(options);
        clipPath.appendChild(circle);
        defs.appendChild(clipPath);
        return defs;
    };
    SvgRenderer.prototype.setElementAttributes = function (options, element) {
        var keys = Object.keys(options);
        for (var i = 0; i < keys.length; i++) {
            element.setAttribute(keys[i], options[keys[i]]);
        }
        return element;
    };
    return SvgRenderer;
}());



/***/ }),

/***/ 87:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = compile;
/* harmony export (immutable) */ __webpack_exports__["b"] = setTemplateEngine;
/* harmony export (immutable) */ __webpack_exports__["c"] = getTemplateEngine;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__template__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dom__ = __webpack_require__(11);


var HAS_ROW = /^[\n\r.]+\<tr|^\<tr/;
function compile(templateString, helper) {
    var compiler = engineObj.compile(templateString, helper);
    return function (data) {
        var result = compiler(data);
        if (typeof result === 'string') {
            var ele = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__dom__["a" /* createElement */])((HAS_ROW.test(result) ? 'table' : 'div'), { innerHTML: result });
            return ele.childNodes;
        }
        else {
            return result;
        }
    };
}
function setTemplateEngine(classObj) {
    engineObj.compile = classObj.compile;
}
function getTemplateEngine() {
    return engineObj.compile;
}
var Engine = (function () {
    function Engine() {
    }
    Engine.prototype.compile = function (templateString, helper) {
        if (helper === void 0) { helper = {}; }
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__template__["a" /* compile */])(templateString, helper);
    };
    return Engine;
}());
var engineObj = { compile: new Engine().compile };


/***/ }),

/***/ 88:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export expression */
/* harmony export (immutable) */ __webpack_exports__["a"] = compile;
var LINES = new RegExp('\\n|\\r|\\s\\s+', 'g');
var QUOTES = new RegExp(/'|"/g);
var IF_STMT = new RegExp('if ?\\(');
var ELSE_STMT = new RegExp('else');
var FOR_STMT = new RegExp('for ?\\(');
var IF_OR_FOR = new RegExp('(\/if|\/for)');
var CALL_FUNCTION = new RegExp('\\((.*)\\)', '');
var NOT_NUMBER = new RegExp('^[0-9]+$', 'g');
var WORD = new RegExp('[\\w"\'.\\s+]+', 'g');
var DBL_QUOTED_STR = new RegExp('"(.*?)"', 'g');
var exp = new RegExp('\\${([^}]*)}', 'g');
function expression(value) {
    if (value) {
        exp = value;
    }
    return exp;
}
function compile(template, helper) {
    var argName = 'data';
    var evalExpResult = evalExp(template, argName, helper);
    var fnCode = "var str=\"" + evalExpResult + "\"; return str;";
    var fn = new Function(argName, fnCode);
    return fn.bind(helper);
}
function evalExp(str, nameSpace, helper) {
    var localKeys = [];
    return str.replace(LINES, '').replace(DBL_QUOTED_STR, '\'$1\'').replace(exp, function (match, cnt, offset, matchStr) {
        var matches = cnt.match(CALL_FUNCTION);
        if (matches) {
            var rlStr = matches[1];
            if (IF_STMT.test(cnt)) {
                cnt = '"; ' + cnt.replace(matches[1], rlStr.replace(WORD, function (str) {
                    str = str.trim();
                    return addNameSpace(str, !(QUOTES.test(str)) && (localKeys.indexOf(str) === -1), nameSpace, localKeys);
                })) + '{ \n str = str + "';
            }
            else if (FOR_STMT.test(cnt)) {
                var rlStr_1 = matches[1].split(' of ');
                cnt = '"; ' + cnt.replace(matches[1], function (mtc) {
                    localKeys.push(rlStr_1[0]);
                    localKeys.push(rlStr_1[0] + 'Index');
                    return 'var i=0; i < ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys) + '.length; i++';
                }) + '{ \n ' + rlStr_1[0] + '= ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys)
                    + '[i]; \n var ' + rlStr_1[0] + 'Index=i; \n str = str + "';
            }
            else {
                var fnStr = cnt.split('(');
                var fNameSpace = (helper && helper.hasOwnProperty(fnStr[0]) ? 'this.' : 'global');
                fNameSpace = (/\./.test(fnStr[0]) ? '' : fNameSpace);
                cnt = '" + ' + (fNameSpace === 'global' ? '' : fNameSpace) +
                    cnt.replace(rlStr, addNameSpace(matches[1].replace(',', nameSpace + '.'), (fNameSpace === 'global' ? false : true), nameSpace, localKeys)) +
                    '+"';
            }
        }
        else if (ELSE_STMT.test(cnt)) {
            cnt = '"; ' + cnt.replace(ELSE_STMT, '} else { \n str = str + "');
        }
        else if (!!cnt.match(IF_OR_FOR)) {
            cnt = cnt.replace(IF_OR_FOR, '"; \n } \n str = str + "');
        }
        else {
            cnt = '"+' + addNameSpace(cnt, (localKeys.indexOf(cnt) === -1), nameSpace, localKeys) + '+"';
        }
        return cnt;
    });
}
function addNameSpace(str, addNS, nameSpace, ignoreList) {
    return ((addNS && !(NOT_NUMBER.test(str)) && ignoreList.indexOf(str.split('.')[0]) === -1) ? nameSpace + '.' + str : str);
}


/***/ }),

/***/ 89:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SwipeSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Touch; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__notify_property_change__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__browser__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__base__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__child_property__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__event_handler__ = __webpack_require__(16);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






var SwipeSettings = (function (_super) {
    __extends(SwipeSettings, _super);
    function SwipeSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SwipeSettings;
}(__WEBPACK_IMPORTED_MODULE_4__child_property__["a" /* ChildProperty */]));

__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["a" /* Property */])(50)
], SwipeSettings.prototype, "swipeThresholdDistance", void 0);
var swipeRegex = /(Up|Down)/;
var Touch = (function (_super) {
    __extends(Touch, _super);
    function Touch(element, options) {
        var _this = _super.call(this, options, element) || this;
        _this.startEvent = function (evt) {
            var point = (evt.changedTouches ? evt.changedTouches[0] : evt);
            _this.isTouchMoved = false;
            _this.movedDirection = '';
            _this.startPoint = _this.lastMovedPoint = { clientX: point.clientX, clientY: point.clientY };
            _this.startEventData = point;
            _this.hScrollLocked = _this.vScrollLocked = false;
            _this.tStampStart = Date.now();
            _this.timeOutTapHold = setTimeout(function () { _this.tapHoldEvent(evt); }, _this.tapHoldThreshold);
            __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].add(_this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchMoveEvent, _this.moveEvent, _this);
            __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].add(_this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchEndEvent, _this.endEvent, _this);
        };
        _this.moveEvent = function (evt) {
            var point = evt.changedTouches ? evt.changedTouches[0] : evt;
            _this.movedPoint = point;
            _this.isTouchMoved = !(point.clientX === _this.startPoint.clientX && point.clientY === _this.startPoint.clientY);
            var eScrollArgs = {};
            if (_this.isTouchMoved) {
                clearTimeout(_this.timeOutTapHold);
                _this.calcScrollPoints(evt);
                var scrollArg = {
                    startEvents: _this.startEventData,
                    originalEvent: evt, startX: _this.startPoint.clientX,
                    startY: _this.startPoint.clientY, distanceX: _this.distanceX,
                    distanceY: _this.distanceY, scrollDirection: _this.scrollDirection,
                    velocity: _this.getVelocity(point)
                };
                eScrollArgs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(eScrollArgs, {}, scrollArg);
                _this.trigger('scroll', eScrollArgs);
                _this.lastMovedPoint = { clientX: point.clientX, clientY: point.clientY };
            }
        };
        _this.endEvent = function (evt) {
            clearTimeout(_this.timeOutTapHold);
            var point = evt;
            if (evt.changedTouches) {
                point = evt.changedTouches[0];
            }
            _this.isTouchMoved = !(point.clientX === _this.startPoint.clientX && point.clientY === _this.startPoint.clientY);
            _this.endPoint = point;
            var dblTapTriggred = false;
            var eDblTapArgs;
            var eTapArgs;
            var eSwipeArgs;
            var tDistance = _this.swipeSettings.swipeThresholdDistance;
            _this.calcPoints(evt);
            var swipeArgs = {
                originalEvent: evt,
                startEvents: _this.startEventData,
                startX: _this.startPoint.clientX,
                startY: _this.startPoint.clientY,
                distanceX: _this.distanceX, distanceY: _this.distanceY, swipeDirection: _this.movedDirection,
                velocity: _this.getVelocity(point)
            };
            if (!_this.isTouchMoved) {
                eDblTapArgs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(eDblTapArgs, _this.defaultArgs, {});
                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["j" /* isNullOrUndefined */])(_this.lastTapTime) && (new Date().getTime() - _this.lastTapTime) < _this.doubleTapThreshold) {
                    clearTimeout(_this.timeOutTap);
                    dblTapTriggred = true;
                    _this.trigger('doubleTap', eDblTapArgs);
                }
                if (!dblTapTriggred) {
                    eTapArgs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(eTapArgs, _this.defaultArgs, {});
                    _this.timeOutTap = setTimeout(function () {
                        _this.trigger('tap', eTapArgs);
                    }, (typeof _this.doubleTap !== 'function' ? 0 : _this.doubleTapThreshold));
                }
            }
            else {
                eSwipeArgs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util__["i" /* extend */])(eSwipeArgs, _this.defaultArgs, swipeArgs);
                var canTrigger = false;
                var ele = _this.element;
                var scrollBool = _this.isScrollable(ele);
                var moved = swipeRegex.test(_this.movedDirection);
                if ((tDistance < _this.distanceX && !moved) || (tDistance < _this.distanceY && moved)) {
                    if (!scrollBool) {
                        canTrigger = true;
                    }
                    else {
                        canTrigger = _this.checkSwipe(ele, moved);
                    }
                }
                if (canTrigger) {
                    _this.trigger('swipe', eSwipeArgs);
                }
            }
            _this.lastTapTime = new Date().getTime();
            __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].remove(_this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchMoveEvent, _this.moveEvent);
            __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].remove(_this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchEndEvent, _this.endEvent);
        };
        _this.bind();
        return _this;
    }
    Touch.prototype.onPropertyChanged = function (newProp, oldProp) {
    };
    Touch.prototype.bind = function () {
        this.wireEvents();
        if (__WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].isIE) {
            this.element.classList.add('e-block-touch');
        }
    };
    Touch.prototype.destroy = function () {
        this.unwireEvents();
        _super.prototype.destroy.call(this);
    };
    Touch.prototype.wireEvents = function () {
        __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].add(this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchStartEvent, this.startEvent, this);
    };
    Touch.prototype.unwireEvents = function () {
        __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].remove(this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchStartEvent, this.startEvent);
    };
    Touch.prototype.getModuleName = function () {
        return 'touch';
    };
    Touch.prototype.isScrollable = function (element) {
        var eleStyle = getComputedStyle(element);
        var style = eleStyle.overflow + eleStyle.overflowX + eleStyle.overflowY;
        if ((/(auto|scroll)/).test(style)) {
            return true;
        }
        return false;
    };
    Touch.prototype.tapHoldEvent = function (evt) {
        var eTapArgs;
        __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].remove(this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchMoveEvent, this.moveEvent);
        __WEBPACK_IMPORTED_MODULE_5__event_handler__["a" /* EventHandler */].remove(this.element, __WEBPACK_IMPORTED_MODULE_2__browser__["a" /* Browser */].touchEndEvent, this.endEvent);
        eTapArgs = { originalEvent: evt };
        this.trigger('tapHold', eTapArgs);
    };
    Touch.prototype.calcPoints = function (evt) {
        var point = evt.changedTouches ? evt.changedTouches[0] : evt;
        this.defaultArgs = { originalEvent: evt };
        this.distanceX = Math.abs((Math.abs(point.clientX) - Math.abs(this.startPoint.clientX)));
        this.distanceY = Math.abs((Math.abs(point.clientY) - Math.abs(this.startPoint.clientY)));
        if (this.distanceX > this.distanceY) {
            this.movedDirection = (point.clientX > this.startPoint.clientX) ? 'Right' : 'Left';
        }
        else {
            this.movedDirection = (point.clientY < this.startPoint.clientY) ? 'Up' : 'Down';
        }
    };
    Touch.prototype.calcScrollPoints = function (evt) {
        var point = evt.changedTouches ? evt.changedTouches[0] : evt;
        this.defaultArgs = { originalEvent: evt };
        this.distanceX = Math.abs((Math.abs(point.clientX) - Math.abs(this.lastMovedPoint.clientX)));
        this.distanceY = Math.abs((Math.abs(point.clientY) - Math.abs(this.lastMovedPoint.clientY)));
        if ((this.distanceX > this.distanceY || this.hScrollLocked === true) && this.vScrollLocked === false) {
            this.scrollDirection = (point.clientX > this.lastMovedPoint.clientX) ? 'Right' : 'Left';
            this.hScrollLocked = true;
        }
        else {
            this.scrollDirection = (point.clientY < this.lastMovedPoint.clientY) ? 'Up' : 'Down';
            this.vScrollLocked = true;
        }
    };
    Touch.prototype.getVelocity = function (pnt) {
        var newX = pnt.clientX;
        var newY = pnt.clientY;
        var newT = Date.now();
        var xDist = newX - this.startPoint.clientX;
        var yDist = newY - this.startPoint.clientX;
        var interval = newT - this.tStampStart;
        return Math.sqrt(xDist * xDist + yDist * yDist) / interval;
    };
    Touch.prototype.checkSwipe = function (ele, flag) {
        var keys = ['scroll', 'offset'];
        var temp = flag ? ['Height', 'Top'] : ['Width', 'Left'];
        if ((ele[keys[0] + temp[0]] <= ele[keys[1] + temp[0]])) {
            return true;
        }
        return (ele[keys[0] + temp[1]] === 0) ||
            (ele[keys[1] + temp[0]] + ele[keys[0] + temp[1]] >= ele[keys[0] + temp[0]]);
    };
    return Touch;
}(__WEBPACK_IMPORTED_MODULE_3__base__["a" /* Base */]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["f" /* Event */])()
], Touch.prototype, "tap", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["f" /* Event */])()
], Touch.prototype, "doubleTap", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["f" /* Event */])()
], Touch.prototype, "tapHold", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["f" /* Event */])()
], Touch.prototype, "swipe", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["f" /* Event */])()
], Touch.prototype, "scroll", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["a" /* Property */])(500)
], Touch.prototype, "doubleTapThreshold", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["a" /* Property */])(750)
], Touch.prototype, "tapHoldThreshold", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__notify_property_change__["b" /* Complex */])({}, SwipeSettings)
], Touch.prototype, "swipeSettings", void 0);
Touch = __decorate([
    __WEBPACK_IMPORTED_MODULE_1__notify_property_change__["g" /* NotifyPropertyChanges */]
], Touch);



/***/ })

/******/ });